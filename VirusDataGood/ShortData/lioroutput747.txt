12886 20:31:20.803821 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
12886 20:31:20.803843 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 8
12886 20:31:20.803858 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7da48) = -1 ENOTTY (Inappropriate ioctl for device)
12886 20:31:20.803870 _llseek(8, 0, [0], SEEK_CUR) = 0
12886 20:31:20.803887 read(8, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
12886 20:31:20.804342 stat64("/etc/perl/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804361 stat64("/etc/perl/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804375 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804388 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804403 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804416 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804431 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804443 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804456 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804469 stat64("/usr/share/perl5/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804482 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804495 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbfc7d78c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804509 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbfc7d87c) = -1 ENOENT (No such file or directory)
12886 20:31:20.804523 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
12886 20:31:20.804549 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
12886 20:31:20.804565 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7d598) = -1 ENOTTY (Inappropriate ioctl for device)
12886 20:31:20.804576 _llseek(10, 0, [0], SEEK_CUR) = 0
12886 20:31:20.804596 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
12886 20:31:20.805051 brk(0x82de000)    = 0x82de000
12886 20:31:20.805454 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
12886 20:31:20.806683 _llseek(10, 6916, [6916], SEEK_SET) = 0
12886 20:31:20.806715 _llseek(10, 0, [6916], SEEK_CUR) = 0
12886 20:31:20.806740 close(10)         = 0
12886 20:31:20.807062 _llseek(8, 1334, [1334], SEEK_SET) = 0
12886 20:31:20.807092 _llseek(8, 0, [1334], SEEK_CUR) = 0
12886 20:31:20.807103 close(8)          = 0
12886 20:31:20.808178 brk(0x82ff000)    = 0x82ff000
12886 20:31:20.808339 _llseek(6, 2689, [2689], SEEK_SET) = 0
12886 20:31:20.808356 _llseek(6, 0, [2689], SEEK_CUR) = 0
12886 20:31:20.808367 close(6)          = 0
12886 20:31:20.808525 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d20908) = 12887
12887 20:31:20.891723 getppid()         = 12886
12887 20:31:20.892282 open("/etc/nsswitch.conf", O_RDONLY) = 6
12887 20:31:20.892309 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
12887 20:31:20.892329 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee6000
12887 20:31:20.892344 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
12887 20:31:20.892394 read(6, "", 4096) = 0
12887 20:31:20.892404 close(6)          = 0
12887 20:31:20.892415 munmap(0xb7ee6000, 4096) = 0
12887 20:31:20.892445 open("/etc/ld.so.cache", O_RDONLY) = 6
12887 20:31:20.892459 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12887 20:31:20.892476 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7ced000
12887 20:31:20.892487 close(6)          = 0
12887 20:31:20.892498 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12887 20:31:20.892516 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892530 stat64("/lib/tls/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892544 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892558 stat64("/lib/tls/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892569 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892582 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.892614 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892669 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.892687 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892707 stat64("/lib/tls/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892719 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892731 stat64("/lib/tls/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892756 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892768 stat64("/lib/tls/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892779 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892791 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.892807 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892820 stat64("/lib/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892831 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892843 stat64("/lib/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892854 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892866 stat64("/lib/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892877 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892889 stat64("/lib/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892900 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892912 stat64("/lib/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892923 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892934 stat64("/lib/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892945 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892957 stat64("/lib/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.892967 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.892978 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.892995 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893008 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893020 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893033 stat64("/usr/lib/tls/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893044 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893057 stat64("/usr/lib/tls/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893068 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893081 stat64("/usr/lib/tls/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893102 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893144 stat64("/usr/lib/tls/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893183 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893197 stat64("/usr/lib/tls/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893208 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893221 stat64("/usr/lib/tls/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893232 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893244 stat64("/usr/lib/tls", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893259 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893273 stat64("/usr/lib/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893284 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893296 stat64("/usr/lib/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893308 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893321 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.893338 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893351 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.893367 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893380 stat64("/usr/lib/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893391 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893403 stat64("/usr/lib/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893414 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893426 stat64("/usr/lib/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893437 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893449 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
12887 20:31:20.893465 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893479 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893492 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893505 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893517 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893530 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893543 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893555 stat64("/lib/i486-linux-gnu/tls/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893567 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893635 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893648 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893678 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893707 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893719 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893731 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893744 stat64("/lib/i486-linux-gnu/tls", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893756 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893769 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893781 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893794 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893809 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893823 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893835 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893847 stat64("/lib/i486-linux-gnu/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893859 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893872 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893884 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893896 stat64("/lib/i486-linux-gnu/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893908 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893921 stat64("/lib/i486-linux-gnu/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893932 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893945 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.893962 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.893976 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.893989 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894003 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894016 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894029 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894042 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894055 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894067 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894091 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894131 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894145 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894190 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894204 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894216 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894229 stat64("/usr/lib/i486-linux-gnu/tls", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894241 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894254 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894267 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894280 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894293 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894306 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894321 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894354 stat64("/usr/lib/i486-linux-gnu/i686", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894381 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894395 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894407 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894421 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894433 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894460 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbfc7e11c) = -1 ENOENT (No such file or directory)
12887 20:31:20.894472 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12887 20:31:20.894485 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12887 20:31:20.894542 munmap(0xb7ced000, 29913) = 0
12887 20:31:20.894564 open("/etc/ld.so.cache", O_RDONLY) = 6
12887 20:31:20.894626 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12887 20:31:20.894644 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7ced000
12887 20:31:20.894685 close(6)          = 0
12887 20:31:20.894697 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12887 20:31:20.894712 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
12887 20:31:20.894728 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
12887 20:31:20.894860 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
12887 20:31:20.894903 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7ce2000
12887 20:31:20.894916 mmap2(0xb7ceb000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7ceb000
12887 20:31:20.894935 close(6)          = 0
12887 20:31:20.894976 munmap(0xb7ced000, 29913) = 0
12887 20:31:20.894993 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12887 20:31:20.895010 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
12887 20:31:20.895045 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12887 20:31:20.895110 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7cf4000
12887 20:31:20.895141 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12887 20:31:20.895365 close(6)          = 0
12887 20:31:20.895377 munmap(0xb7cf4000, 4096) = 0
12887 20:31:20.895396 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12887 20:31:20.895411 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12887 20:31:20.895427 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7cf4000
12887 20:31:20.895438 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12887 20:31:20.895697 close(6)          = 0
12887 20:31:20.895709 munmap(0xb7cf4000, 4096) = 0
12887 20:31:20.895763 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
12887 20:31:20.895787 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7e628) = -1 EINVAL (Invalid argument)
12887 20:31:20.895802 _llseek(6, 0, 0xbfc7e670, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12887 20:31:20.895815 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc7e628) = -1 EINVAL (Invalid argument)
12887 20:31:20.895826 _llseek(6, 0, 0xbfc7e670, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12887 20:31:20.895836 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
12887 20:31:20.895897 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
12887 20:31:20.895937 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
12887 20:31:20.895963 listen(6, 5)      = 0
12887 20:31:20.896023 accept(6,  <unfinished ...>
12886 20:31:20.896373 exit_group(0)     = ?
12884 20:31:21.012788 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12886
12884 20:31:21.012816 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12884 20:31:21.012830 --- SIGCHLD (Child exited) @ 0 (0) ---
12884 20:31:21.012855 waitpid(-1, 0xbf908478, WNOHANG) = -1 ECHILD (No child processes)
12884 20:31:21.012868 sigreturn()       = ? (mask now [])
12884 20:31:21.012885 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12884 20:31:21.012933 exit_group(0)     = ?
4519  20:31:21.012981 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12884
4519  20:31:21.012994 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:31:21.013008 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:31:21.013019 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:31:21.013029 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:31:21.013048 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:31:21.013113 time(NULL)        = 1495672281
4519  20:31:21.013125 time(NULL)        = 1495672281
4519  20:31:21.013184 gettimeofday({1495672281, 13188}, NULL) = 0
4519  20:31:21.013198 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:31:21.013228 clock_gettime(CLOCK_MONOTONIC, {49090, 830241474}) = 0
4519  20:31:21.013241 gettimeofday({1495672281, 13245}, NULL) = 0
4519  20:31:21.013252 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 2 (in [4 7], left {1, 0})
4519  20:31:21.013292 clock_gettime(CLOCK_MONOTONIC, {49090, 830305162}) = 0
4519  20:31:21.013304 recv(7, "PRIVMSG  #testit1 ABCDEFGHIJKLMNOPQRSTUVWXYZ\nPRIVMSG  #testit1 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 116
4519  20:31:21.013332 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013341 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013342 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013353 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013367 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013380 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013394 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013407 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013421 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013434 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013448 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013461 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013475 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013488 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013501 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013517 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013531 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013544 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013564 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013579 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013593 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013607 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013621 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013647 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013690 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013705 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013752 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013765 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013779 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013792 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013805 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013819 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013832 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013846 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013859 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013872 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013886 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013900 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013916 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013930 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013946 recv(4, "PRIVMSG  #testit0 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\nPRIVMSG  #testit0 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 114
4519  20:31:21.013967 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013981 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.013995 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014009 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014022 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014036 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014050 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014063 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014077 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014090 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014104 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014117 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014140 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014156 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014198 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014230 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014246 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014261 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014275 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014291 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014305 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014334 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014386 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014437 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014469 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014519 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014549 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014599 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014677 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014727 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014760 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014803 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014817 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014831 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014846 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014860 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:31:21.014874 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
