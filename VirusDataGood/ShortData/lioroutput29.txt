9925  20:01:19.087985 stat64("/usr/lib/perl/5.8/File/stat.pmc", 0xbf90e9bc) = -1 ENOENT (No such file or directory)
9925  20:01:19.087999 stat64("/usr/lib/perl/5.8/File/stat.pm", 0xbf90e8cc) = -1 ENOENT (No such file or directory)
9925  20:01:19.088013 stat64("/usr/share/perl/5.8/File/stat.pmc", 0xbf90e9bc) = -1 ENOENT (No such file or directory)
9925  20:01:19.088027 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
9925  20:01:19.088049 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 8
9925  20:01:19.088064 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90e6d8) = -1 ENOTTY (Inappropriate ioctl for device)
9925  20:01:19.088076 _llseek(8, 0, [0], SEEK_CUR) = 0
9925  20:01:19.088094 read(8, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
9925  20:01:19.088510 stat64("/etc/perl/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088529 stat64("/etc/perl/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088544 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088557 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088572 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088585 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088604 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088616 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088630 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088643 stat64("/usr/share/perl5/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088657 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088671 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbf90e41c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088685 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbf90e50c) = -1 ENOENT (No such file or directory)
9925  20:01:19.088708 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
9925  20:01:19.088731 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
9925  20:01:19.088746 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90e228) = -1 ENOTTY (Inappropriate ioctl for device)
9925  20:01:19.088758 _llseek(10, 0, [0], SEEK_CUR) = 0
9925  20:01:19.088777 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
9925  20:01:19.089168 brk(0x82de000)    = 0x82de000
9925  20:01:19.089568 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
9925  20:01:19.096369 _llseek(10, 6916, [6916], SEEK_SET) = 0
9925  20:01:19.096389 _llseek(10, 0, [6916], SEEK_CUR) = 0
9925  20:01:19.096400 close(10)         = 0
9925  20:01:19.096584 _llseek(8, 1334, [1334], SEEK_SET) = 0
9925  20:01:19.096600 _llseek(8, 0, [1334], SEEK_CUR) = 0
9925  20:01:19.096611 close(8)          = 0
9925  20:01:19.097219 brk(0x82ff000)    = 0x82ff000
9925  20:01:19.097368 _llseek(6, 2689, [2689], SEEK_SET) = 0
9925  20:01:19.097384 _llseek(6, 0, [2689], SEEK_CUR) = 0
9925  20:01:19.097395 close(6)          = 0
9925  20:01:19.097552 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d4f908) = 9926
9926  20:01:19.125794 getppid()         = 9925
9926  20:01:19.126338 open("/etc/nsswitch.conf", O_RDONLY) = 6
9926  20:01:19.126363 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
9926  20:01:19.126397 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f15000
9926  20:01:19.126412 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
9926  20:01:19.126462 read(6, "", 4096) = 0
9926  20:01:19.126472 close(6)          = 0
9926  20:01:19.126482 munmap(0xb7f15000, 4096) = 0
9926  20:01:19.126509 open("/etc/ld.so.cache", O_RDONLY) = 6
9926  20:01:19.126522 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
9926  20:01:19.126539 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d1c000
9926  20:01:19.126550 close(6)          = 0
9926  20:01:19.126561 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9926  20:01:19.126579 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126599 stat64("/lib/tls/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126613 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126627 stat64("/lib/tls/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126639 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126652 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.126669 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126692 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.126710 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126722 stat64("/lib/tls/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126733 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126745 stat64("/lib/tls/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126756 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126768 stat64("/lib/tls/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126779 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126792 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.126808 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126820 stat64("/lib/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126832 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126844 stat64("/lib/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126855 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126867 stat64("/lib/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126878 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126890 stat64("/lib/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126901 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126913 stat64("/lib/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126924 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126935 stat64("/lib/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126946 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126958 stat64("/lib/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.126968 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.126980 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.126996 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127009 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127021 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127034 stat64("/usr/lib/tls/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127045 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127058 stat64("/usr/lib/tls/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127069 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127081 stat64("/usr/lib/tls/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127096 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127109 stat64("/usr/lib/tls/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127120 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127133 stat64("/usr/lib/tls/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127144 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127156 stat64("/usr/lib/tls/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127167 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127206 stat64("/usr/lib/tls", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127218 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127260 stat64("/usr/lib/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127272 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127284 stat64("/usr/lib/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127295 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127308 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.127325 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127337 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.127354 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127366 stat64("/usr/lib/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127378 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127390 stat64("/usr/lib/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127401 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127412 stat64("/usr/lib/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127423 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127435 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
9926  20:01:19.127452 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127465 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127478 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127491 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127503 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127517 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127529 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127542 stat64("/lib/i486-linux-gnu/tls/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127554 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127567 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127579 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127592 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127604 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127619 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127631 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127644 stat64("/lib/i486-linux-gnu/tls", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127655 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127669 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127681 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127694 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127757 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127801 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127814 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127827 stat64("/lib/i486-linux-gnu/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127840 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127866 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127878 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127890 stat64("/lib/i486-linux-gnu/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127902 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127915 stat64("/lib/i486-linux-gnu/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127927 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127939 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.127956 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127970 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.127983 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.127997 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128010 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128023 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128036 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128049 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128061 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128075 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128087 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128100 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128113 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128126 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128138 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128154 stat64("/usr/lib/i486-linux-gnu/tls", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128166 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128180 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128198 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128235 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128264 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128292 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128305 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128318 stat64("/usr/lib/i486-linux-gnu/i686", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128331 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128344 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128370 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128383 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128395 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128408 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbf90edac) = -1 ENOENT (No such file or directory)
9926  20:01:19.128420 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
9926  20:01:19.128432 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9926  20:01:19.128451 munmap(0xb7d1c000, 29913) = 0
9926  20:01:19.128472 open("/etc/ld.so.cache", O_RDONLY) = 6
9926  20:01:19.128484 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
9926  20:01:19.128501 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d1c000
9926  20:01:19.128511 close(6)          = 0
9926  20:01:19.128522 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9926  20:01:19.128537 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
9926  20:01:19.128552 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
9926  20:01:19.128644 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
9926  20:01:19.128665 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7d11000
9926  20:01:19.128677 mmap2(0xb7d1a000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7d1a000
9926  20:01:19.128723 close(6)          = 0
9926  20:01:19.128749 munmap(0xb7d1c000, 29913) = 0
9926  20:01:19.128782 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
9926  20:01:19.128799 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
9926  20:01:19.128814 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
9926  20:01:19.128831 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d23000
9926  20:01:19.128842 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
9926  20:01:19.129027 close(6)          = 0
9926  20:01:19.129037 munmap(0xb7d23000, 4096) = 0
9926  20:01:19.129055 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
9926  20:01:19.129069 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
9926  20:01:19.129085 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d23000
9926  20:01:19.129096 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
9926  20:01:19.129350 close(6)          = 0
9926  20:01:19.129361 munmap(0xb7d23000, 4096) = 0
9926  20:01:19.129391 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
9926  20:01:19.129412 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90f2b8) = -1 EINVAL (Invalid argument)
9926  20:01:19.129427 _llseek(6, 0, 0xbf90f300, SEEK_CUR) = -1 ESPIPE (Illegal seek)
9926  20:01:19.129438 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90f2b8) = -1 EINVAL (Invalid argument)
9926  20:01:19.129449 _llseek(6, 0, 0xbf90f300, SEEK_CUR) = -1 ESPIPE (Illegal seek)
9926  20:01:19.129459 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
9926  20:01:19.129513 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
9926  20:01:19.129548 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
9926  20:01:19.129574 listen(6, 5)      = 0
9926  20:01:19.129626 accept(6,  <unfinished ...>
9925  20:01:19.129910 exit_group(0)     = ?
9923  20:01:19.130011 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 9925
9923  20:01:19.130027 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
9923  20:01:19.130038 --- SIGCHLD (Child exited) @ 0 (0) ---
9923  20:01:19.130046 waitpid(-1, 0xbfa425b8, WNOHANG) = -1 ECHILD (No child processes)
9923  20:01:19.130056 sigreturn()       = ? (mask now [])
9923  20:01:19.130072 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
9923  20:01:19.130116 exit_group(0)     = ?
4519  20:01:19.130153 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 9923
4519  20:01:19.130198 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:01:19.130230 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:01:19.130258 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:01:19.130268 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:01:19.130286 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:01:19.130356 time(NULL)        = 1495670479
4519  20:01:19.130367 time(NULL)        = 1495670479
4519  20:01:19.130427 gettimeofday({1495670479, 130431}, NULL) = 0
4519  20:01:19.130440 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:01:19.130471 clock_gettime(CLOCK_MONOTONIC, {47288, 947483964}) = 0
4519  20:01:19.130483 gettimeofday({1495670479, 130487}, NULL) = 0
4519  20:01:19.130494 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [4], left {1, 0})
4519  20:01:19.130534 clock_gettime(CLOCK_MONOTONIC, {47288, 947546940}) = 0
4519  20:01:19.130546 recv(4, "PRIVMSG  #testit0 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZ\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 175
4519  20:01:19.130576 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130593 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130607 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130621 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130644 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130658 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130672 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130685 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130698 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130712 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130725 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130738 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130752 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130765 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130778 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130792 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130805 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130818 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130831 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130846 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130860 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130873 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130892 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130907 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130920 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130934 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130947 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130961 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130974 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.130988 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131001 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131014 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131032 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131046 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131059 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131072 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131085 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131099 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131112 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131125 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131138 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131152 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131198 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131227 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131244 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131259 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131273 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131288 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131302 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131329 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131343 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131356 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131369 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131382 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131395 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131409 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131422 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131435 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131448 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131462 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131475 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131488 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131501 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131515 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131528 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131541 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 110000}, ...}) = 0
4519  20:01:19.131557 gettimeofday({1495670479, 131561}, NULL) = 0
4519  20:01:19.131568 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [4], left {0, 980000})
4519  20:01:19.146902 clock_gettime(CLOCK_MONOTONIC, {47288, 963920910}) = 0
4519  20:01:19.146921 recv(4, "CPRIVMSG botnick\n", 8192, 0) = 17
4519  20:01:19.146958 send(4, ":irc.Metasploitable.LAN 421 bla0 CPRIVMSG :Unknown command\r\n", 60, 0) = 60
4519  20:01:19.146977 time(NULL)        = 1495670479
4519  20:01:19.146987 time(NULL)        = 1495670479
4519  20:01:19.146997 gettimeofday({1495670479, 147001}, NULL) = 0
4519  20:01:19.147008 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:01:19.147036 clock_gettime(CLOCK_MONOTONIC, {47288, 964054758}) = 0
4519  20:01:19.147052 gettimeofday({1495670479, 147056}, NULL) = 0
4519  20:01:19.147063 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [5], left {0, 990000})
4519  20:01:19.156131 clock_gettime(CLOCK_MONOTONIC, {47288, 973139871}) = 0
4519  20:01:19.156131 recv(5, 0x80b7ec0, 8192, 0) = -1 ECONNRESET (Connection reset by peer)
4519  20:01:19.156131 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  20:01:19.156131 send(5, "ERROR :Closing Link: [10.0.2.4] (Connection reset by peer)\r\n", 60, 0) = -1 EPIPE (Broken pipe)
4519  20:01:19.156132 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  20:01:19.156132 close(5)          = 0
4519  20:01:19.156132 gettimeofday({1495670479, 156132}, NULL) = 0
4519  20:01:19.156132 select(1024, [2 3 4 7 9], [], NULL, {1, 0} <unfinished ...>
9926  20:01:19.166842 <... accept resumed> {sa_family=AF_INET, sin_port=htons(44127), sin_addr=inet_addr("10.0.2.4")}, [16]) = 8
9926  20:01:19.166889 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90e2a8) = -1 EINVAL (Invalid argument)
9926  20:01:19.166907 _llseek(8, 0, 0xbf90e2f0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
9926  20:01:19.166919 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90e2a8) = -1 EINVAL (Invalid argument)
9926  20:01:19.166930 _llseek(8, 0, 0xbf90e2f0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
9926  20:01:19.166940 fcntl64(8, F_SETFD, FD_CLOEXEC) = 0
9926  20:01:19.166981 close(6)          = 0
9926  20:01:19.167051 dup(8)            = 6
9926  20:01:19.167064 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf90f148) = -1 EINVAL (Invalid argument)
