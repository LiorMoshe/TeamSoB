11259 20:14:58.457208 read(8, "gmess  @_ }\n\n1;\n", 4096) = 16
11259 20:14:58.457250 read(8, "", 4096) = 0
11259 20:14:58.457272 close(8)          = 0
11259 20:14:58.457294 stat64("/etc/perl/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457308 stat64("/etc/perl/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457321 stat64("/usr/local/lib/perl/5.8.8/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457334 stat64("/usr/local/lib/perl/5.8.8/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457348 stat64("/usr/local/share/perl/5.8.8/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457361 stat64("/usr/local/share/perl/5.8.8/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457374 stat64("/usr/lib/perl5/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457386 stat64("/usr/lib/perl5/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457399 stat64("/usr/share/perl5/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457411 stat64("/usr/share/perl5/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457425 stat64("/usr/lib/perl/5.8/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457437 stat64("/usr/lib/perl/5.8/Exporter.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457451 stat64("/usr/share/perl/5.8/Exporter.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.457463 stat64("/usr/share/perl/5.8/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
11259 20:14:58.457489 open("/usr/share/perl/5.8/Exporter.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.457513 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.457552 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.457587 read(8, "package Exporter;\n\nrequire 5.006;\n\n# Be lean.\n#use strict;\n#no strict \'refs\';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = \'5.58\';\nour (%Cache);\n$Carp::Internal{Exporter} = 1;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my($exports, $fail) = (\\@{\"$pkg\\::EXPORT\"}, \\@{\"$pkg\\::EXPORT_FAIL\"});\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  local $_;\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 4096) = 2218
11259 20:14:58.458108 _llseek(8, 2217, [2217], SEEK_SET) = 0
11259 20:14:58.458125 _llseek(8, 0, [2217], SEEK_CUR) = 0
11259 20:14:58.458136 close(8)          = 0
11259 20:14:58.458210 stat64("/etc/perl/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458226 stat64("/etc/perl/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458240 stat64("/usr/local/lib/perl/5.8.8/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458253 stat64("/usr/local/lib/perl/5.8.8/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458266 stat64("/usr/local/share/perl/5.8.8/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458279 stat64("/usr/local/share/perl/5.8.8/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458293 stat64("/usr/lib/perl5/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458304 stat64("/usr/lib/perl5/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458318 stat64("/usr/share/perl5/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458329 stat64("/usr/share/perl5/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458343 stat64("/usr/lib/perl/5.8/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458360 stat64("/usr/lib/perl/5.8/strict.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458373 stat64("/usr/share/perl/5.8/strict.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458385 stat64("/usr/share/perl/5.8/strict.pm", {st_mode=S_IFREG|0644, st_size=599, ...}) = 0
11259 20:14:58.458407 open("/usr/share/perl/5.8/strict.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.458421 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.458432 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.458451 read(8, "package strict;\n\n$strict::VERSION = \"1.03\";\n\nmy %bitmask = (\nrefs => 0x00000002,\nsubs => 0x00000200,\nvars => 0x00000400\n);\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n\tpush @wrong, $s unless exists $bitmask{$s};\n        $bits |= $bitmask{$s} || 0;\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown \'strict\' tag(s) \'@wrong\'\");\n    }\n    $bits;\n}\n\nmy $default_bits = bits(qw(refs subs vars));\n\nsub import {\n    shift;\n    $^H |= @_ ? bits(@_) : $default_bits;\n}\n\nsub unimport {\n    shift;\n    $^H &= ~ (@_ ? bits(@_) : $default_bits);\n}\n\n1;\n__END__\n\n", 4096) = 599
11259 20:14:58.458663 _llseek(8, 598, [598], SEEK_SET) = 0
11259 20:14:58.458678 _llseek(8, 0, [598], SEEK_CUR) = 0
11259 20:14:58.458688 close(8)          = 0
11259 20:14:58.458726 stat64("/etc/perl/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458740 stat64("/etc/perl/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458754 stat64("/usr/local/lib/perl/5.8.8/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458766 stat64("/usr/local/lib/perl/5.8.8/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458780 stat64("/usr/local/share/perl/5.8.8/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458793 stat64("/usr/local/share/perl/5.8.8/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458807 stat64("/usr/lib/perl5/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458819 stat64("/usr/lib/perl5/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458832 stat64("/usr/share/perl5/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458844 stat64("/usr/share/perl5/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458857 stat64("/usr/lib/perl/5.8/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458870 stat64("/usr/lib/perl/5.8/warnings.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458883 stat64("/usr/share/perl/5.8/warnings.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.458896 stat64("/usr/share/perl/5.8/warnings.pm", {st_mode=S_IFREG|0644, st_size=13018, ...}) = 0
11259 20:14:58.458917 open("/usr/share/perl/5.8/warnings.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.458931 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.458942 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.458960 read(8, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file was created by warnings.pl\n# Any changes made here will be lost.\n#\n\npackage warnings;\n\nour $VERSION = \'1.05\';\n\nuse Carp ();\n\nour %Offsets = (\n\n    # Warnings Categories added in Perl 5.008\n\n    \'all\'\t\t=> 0,\n    \'closure\'\t\t=> 2,\n    \'deprecated\'\t=> 4,\n    \'exiting\'\t\t=> 6,\n    \'glob\'\t\t=> 8,\n    \'io\'\t\t=> 10,\n    \'closed\'\t\t=> 12,\n    \'exec\'\t\t=> 14,\n    \'layer\'\t\t=> 16,\n    \'newline\'\t\t=> 18,\n    \'pipe\'\t\t=> 20,\n    \'unopened\'\t\t=> 22,\n    \'misc\'\t\t=> 24,\n    \'numeric\'\t\t=> 26,\n    \'once\'\t\t=> 28,\n    \'overflow\'\t\t=> 30,\n    \'pack\'\t\t=> 32,\n    \'portable\'\t\t=> 34,\n    \'recursion\'\t\t=> 36,\n    \'redefine\'\t\t=> 38,\n    \'regexp\'\t\t=> 40,\n    \'severe\'\t\t=> 42,\n    \'debugging\'\t\t=> 44,\n    \'inplace\'\t\t=> 46,\n    \'internal\'\t\t=> 48,\n    \'malloc\'\t\t=> 50,\n    \'signal\'\t\t=> 52,\n    \'substr\'\t\t=> 54,\n    \'syntax\'\t\t=> 56,\n    \'ambiguous\'\t\t=> 58,\n    \'bareword\'\t\t=> 60,\n    \'digit\'\t\t=> 62,\n    \'parenthesis\'\t=> 64,\n    \'precedence\'\t=> 66,\n    \'printf\'\t\t=> 68,\n    \'prototype\'\t\t=> 70,\n    \'qw\'\t\t=> 72,\n    \'reserved\'\t\t=> 74,\n    \'semicolon\'\t\t=> 76,\n    \'taint\'\t\t=> 78,\n    \'threads\'\t\t=> 80,\n    \'uninitialized\'\t=> 82,\n    \'unpack\'\t\t=> 84,\n    \'untie\'\t\t=> 86,\n    \'utf8\'\t\t=> 88,\n    \'void\'\t\t=> 90,\n    \'y2k\'\t\t=> 92,\n  );\n\nour %Bits = (\n    \'all\'\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x15\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\x54\\x55\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40", 4096) = 4096
11259 20:14:58.459372 brk(0x81b6000)    = 0x81b6000
11259 20:14:58.459388 brk(0x81b5000)    = 0x81b5000
11259 20:14:58.459467 read(8, "\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\", # [46]\n  );\n\nour %DeadBits = (\n    \'all\'\t\t=> \"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\x2a\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xaa\\xaa\\x2a\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\", 4096) = 4096
11259 20:14:58.459944 read(8, "x00\\x20\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\", # [46]\n  );\n\n$NONE     = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n$LAST_BIT = 94 ;\n$BYTES    = 12 ;\n\n$All = \"\" ; vec($All, $Offsets{\'all\'}, 2) = 3 ;\n\nsub Croaker\n{\n    local $Carp::CarpInternal{\'warnings\'};\n    delete $Carp::CarpInternal{\'warnings\'};\n    Carp::croak(@_);\n}\n\nsub bits\n{\n    # called from B::Deparse.pm\n\n    push @_, \'all\' unless @_;\n\n    my $mask;\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    return $mask ;\n}\n\nsub import \n{\n    shift;\n\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n    \n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nsub unimport \n{\n    shift;\n\n    my $catmask ;\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n\n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    next; \n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask &= ~($catmask | $DeadBits{$word} | $All);\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n\t    $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category \'$category\'\")\n\t    unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package \'$category\' not registered for warnings\")\n\t    unless defined $offset ;\n    }\n\n    my $this_pkg = (caller(1))[0] ;\n    my $i = 2 ;\n    my $pkg ;\n\n    if ($isobj) {\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n\t$i -= 2 ;\n    }\n    else {\n        for ($i = 2 ; $pkg = (caller($i))[0] ; ++ $i) {\n            last if $pkg ne $this_pkg ;\n        }\n        $i = 2\n            if !$pkg || $pkg eq $this_pkg ;\n    }\n\n    my $callers_bitmask = (caller($i))[9] ;\n    return ($callers_bitmask, $offset, $i) ;\n}\n\nsub enabled\n{\n    Croaker(\"Usage: warnings::enabled([category])\")\n\tunless @_ == 1 || @_ == 0 ;\n\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return 0 unless defined $callers_bitmask ;\n    return vec($callers_bitmask, $offset, 1) ||\n           vec($callers_bitmask, $Offsets{\'all\'}, 1) ;\n}\n\nsub warn\n{\n    Croaker(\"Usage: warnings::warn([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $me", 4096) = 4096
11259 20:14:58.460721 read(8, "ssage = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n    Carp::carp($message) ;\n}\n\nsub warnif\n{\n    Croaker(\"Usage: warnings::warnif([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $message = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return\n        unless defined $callers_bitmask &&\n            \t(vec($callers_bitmask, $offset, 1) ||\n            \tvec($callers_bitmask, $Offsets{\'all\'}, 1)) ;\n\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n\n    Carp::carp($message) ;\n}\n\n1;\n# ex: set ro:\n", 4096) = 730
11259 20:14:58.460969 read(8, "", 4096) = 0
11259 20:14:58.460993 close(8)          = 0
11259 20:14:58.461186 _llseek(6, 412, [412], SEEK_SET) = 0
11259 20:14:58.461202 _llseek(6, 0, [412], SEEK_CUR) = 0
11259 20:14:58.461212 close(6)          = 0
11259 20:14:58.461253 stat64("/usr/lib/perl/5.8/auto/IO/IO.so", {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
11259 20:14:58.461277 stat64("/usr/lib/perl/5.8/auto/IO/IO.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
11259 20:14:58.461304 futex(0xb7f47070, 0x81 /* FUTEX_??? */, 2147483647) = 0
11259 20:14:58.461319 open("/usr/lib/perl/5.8/auto/IO/IO.so", O_RDONLY) = 6
11259 20:14:58.461333 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\22\0\0004\0\0\0\0349\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\2006\0\0\5\0\0\0\0\20\0\0\1\0\0\0\2006\0\0\200F\0\0\200F\0\0\360\1\0\0\364\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\2246\0\0\224F\0\0\224F\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0C\0\0\0E\0\0\0\0\0\0\0\t\0\0\0\3\0\0\0D\0\0\0\"\0\0\0009\0\0\0\0\0\0\0#\0\0\0\0\0\0\0%\0\0\0:\0\0\0\4\0\0\0001\0\0\0\37\0\0\0;\0\0\0\30\0\0\0+\0\0\0\23\0\0\0\n
11259 20:14:58.461424 fstat64(6, {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
11259 20:14:58.461450 mmap2(NULL, 18548, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f4b000
11259 20:14:58.461462 mmap2(0xb7f4f000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x3) = 0xb7f4f000
11259 20:14:58.461489 close(6)          = 0
11259 20:14:58.461673 stat64("/etc/perl/IO/Handle.pmc",  <unfinished ...>
11257 20:14:58.461694 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
11257 20:14:58.461717 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
11257 20:14:58.461732 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
11257 20:14:58.461742 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
11257 20:14:58.461755 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
11257 20:14:58.461769 waitpid(-1,  <unfinished ...>
11259 20:14:58.461802 <... stat64 resumed> 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513185 stat64("/etc/perl/IO/Handle.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513274 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513294 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513309 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513321 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513336 stat64("/usr/lib/perl5/IO/Handle.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513348 stat64("/usr/lib/perl5/IO/Handle.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513361 stat64("/usr/share/perl5/IO/Handle.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513373 stat64("/usr/share/perl5/IO/Handle.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513386 stat64("/usr/lib/perl/5.8/IO/Handle.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.513400 stat64("/usr/lib/perl/5.8/IO/Handle.pm", {st_mode=S_IFREG|0644, st_size=7592, ...}) = 0
11259 20:14:58.513424 open("/usr/lib/perl/5.8/IO/Handle.pm", O_RDONLY|O_LARGEFILE) = 6
11259 20:14:58.513441 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff659d8) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.513453 _llseek(6, 0, [0], SEEK_CUR) = 0
11259 20:14:58.513476 read(6, "package IO::Handle;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO ();\t# Load the XS module\n\nrequire Exporter;\n@ISA = qw(Exporter);\n\n$VERSION = \"1.25\";\n$VERSION = eval $VERSION;\n\n@EXPORT_OK = qw(\n    autoflush\n    output_field_separator\n    output_record_separator\n    input_record_separator\n    input_line_number\n    format_page_number\n    format_lines_per_page\n    format_lines_left\n    format_name\n    format_top_name\n    format_line_break_characters\n    format_formfeed\n    format_write\n\n    print\n    printf\n    getline\n    getlines\n\n    printflush\n    flush\n\n    SEEK_SET\n    SEEK_CUR\n    SEEK_END\n    _IOFBF\n    _IOLBF\n    _IONBF\n);\n\n################################################\n## Constructors, destructors.\n##\n\nsub new {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 1 or croak \"usage: new $class\";\n    my $io = gensym;\n    bless $io, $class;\n}\n\nsub new_from_fd {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 3 or croak \"usage: new_from_fd $class FD, MODE\";\n    my $io = gensym;\n    shift;\n    IO::Handle::fdopen($io, @_)\n\tor return undef;\n    bless $io, $class;\n}\n\n#\n# There is no need for DESTROY to do anything, because when the\n# last reference to an IO object is gone, Perl automatically\n# closes its associated files (if any).  However, to avoid any\n# attempts to autoload DESTROY, we here define it to do nothing.\n#\nsub DESTROY {}\n\n################################################\n## Open and close.\n##\n\nsub _open_mode_string {\n    my ($mode) = @_;\n    $mode =~ /^\\+?(<|>>?)$/\n      or $mode =~ s/^r(\\+?)$/$1</\n      or $mode =~ s/^w(\\+?)$/$1>/\n      or $mode =~ s/^a(\\+?)$/$1>>/\n      or croak \"IO::Handle: bad open mode: $mode\";\n    $mode;\n}\n\nsub fdopen {\n    @_ == 3 or croak \'usage: $io->fdopen(FD, MODE)\';\n    my ($io, $fd, $mode) = @_;\n    local(*GLOB);\n\n    if (ref($fd) && \"\".$fd =~ /GLOB\\(/o) {\n\t# It\'s a glob reference; Alias it as we cannot get name of anon GLOBs\n\tmy $n = qualify(*GLOB);\n\t*GLOB = *{*$fd};\n\t$fd =  $n;\n    } elsif ($fd =~ m#^\\d+$#) {\n\t# It\'s an FD number; prefix with \"=\".\n\t$fd = \"=$fd\";\n    }\n\n    open($io, _open_mode_string($mode) . \'&\' . $fd)\n\t? $io : undef;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $io->close()\';\n    my($io) = @_;\n\n    close($io);\n}\n\n################################################\n## Normal I/O functions.\n##\n\n# flock\n# select\n\nsub opened {\n    @_ == 1 or croak \'usage: $io->opened()\';\n    defined fileno($_[0]);\n}\n\nsub fileno {\n    @_ == 1 or croak \'usage: $io->fileno()\';\n    fileno($_[0]);\n}\n\nsub getc {\n    @_ == 1 or croak \'usage: $io->getc()\';\n    getc($_[0]);\n}\n\nsub eof {\n    @_ == 1 or croak \'usage: $io->eof()\';\n    eof($_[0]);\n}\n\nsub print {\n    @_ or croak \'usage: $io->print(ARGS)\';\n    my $this = shift;\n    print $this @_;\n}\n\nsub printf {\n    @_ >= 2 or croak \'usage: $io->printf(FMT,[ARGS])\';\n    my $this = shift;\n    printf $this @_;\n}\n\nsub getline {\n    @_ == 1 or croak \'usage: $io->getline()\';\n    my $this = shift;\n    return scalar <$this>;\n} \n\n*gets = \\&getline;  # deprecated\n\nsub getlines {\n    @_ == 1 or croak \'usage: $io->getlines()\';\n    wantarray or\n\tcroak \'Can\\\'t call $io->getlines in a scalar context, use $io->getline\';\n    my $this = shift;\n    return <$this>;\n}\n\nsub truncate {\n    @_ == 2 or croak \'usage: $io->truncate(LEN)\';\n    truncate($_[0], $_[1]);\n}\n\nsub read {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->read(BUF, LEN [, OFFSET])\';\n    read($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub sysread {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->sysread(BUF, LEN [, OFFSET])\';\n    sysread($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub write {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->write(BUF [, LEN [, OFFSET]])\';\n    local($\\) = \"\";\n    $_[2] = length($_[1]) unless defined $_[2];\n    print { $_[0] } substr($_[1], $_[3] || 0, $_[2]);\n}\n\nsub syswrite {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->syswrite(BUF [, LEN [, OFFSET]])\';\n    if (defined($_[2])) {\n\tsyswrite($_[0], $_[1], $_[2], $_[3] || 0);\n    } else {\n\tsyswrite($_[0], $_[1]);\n    }\n}\n\nsub stat {\n    @_ == 1 or croak \'u", 4096) = 4096
11259 20:14:58.513923 stat64("/etc/perl/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.513941 stat64("/etc/perl/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.513954 stat64("/usr/local/lib/perl/5.8.8/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.513967 stat64("/usr/local/lib/perl/5.8.8/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.513980 stat64("/usr/local/share/perl/5.8.8/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.513993 stat64("/usr/local/share/perl/5.8.8/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514007 stat64("/usr/lib/perl5/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514019 stat64("/usr/lib/perl5/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514032 stat64("/usr/share/perl5/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514048 stat64("/usr/share/perl5/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514061 stat64("/usr/lib/perl/5.8/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514074 stat64("/usr/lib/perl/5.8/Symbol.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514087 stat64("/usr/share/perl/5.8/Symbol.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514100 stat64("/usr/share/perl/5.8/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2099, ...}) = 0
11259 20:14:58.514121 open("/usr/share/perl/5.8/Symbol.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.514146 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.514185 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.514219 read(8, "package Symbol;\n\nBEGIN { require 5.005; }\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(gensym ungensym qualify qualify_to_ref);\n@EXPORT_OK = qw(delete_package geniosym);\n\n$VERSION = \'1.06\';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn\'t work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, \'::\') == -1 && index($name, \"\'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/\'qq(\\c\'.$1.\')\'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= \'::\'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 4096) = 2099
11259 20:14:58.514643 read(8, "", 4096) = 0
11259 20:14:58.514688 close(8)          = 0
11259 20:14:58.514785 stat64("/etc/perl/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514802 stat64("/etc/perl/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514816 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514829 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514843 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514856 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514870 stat64("/usr/lib/perl5/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514882 stat64("/usr/lib/perl5/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514900 stat64("/usr/share/perl5/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514912 stat64("/usr/share/perl5/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514926 stat64("/usr/lib/perl/5.8/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514939 stat64("/usr/lib/perl/5.8/SelectSaver.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514953 stat64("/usr/share/perl/5.8/SelectSaver.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.514966 stat64("/usr/share/perl/5.8/SelectSaver.pm", {st_mode=S_IFREG|0644, st_size=340, ...}) = 0
11259 20:14:58.514987 open("/usr/share/perl/5.8/SelectSaver.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.515002 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.515013 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.515032 read(8, "package SelectSaver;\n\nour $VERSION = \'1.01\';\n\nrequire 5.000;\nuse Carp;\nuse Symbol;\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new SelectSaver [FILEHANDLE]\';\n    my $fh = select;\n    my $self = bless \\$fh, $_[0];\n    select qualify($_[1], caller) if @_ > 1;\n    $self;\n}\n\nsub DESTROY {\n    my $self = $_[0];\n    select $$self;\n}\n\n1;\n", 4096) = 340
11259 20:14:58.515196 brk(0x81d6000)    = 0x81d6000
11259 20:14:58.515244 read(8, "", 4096) = 0
11259 20:14:58.515257 close(8)          = 0
11259 20:14:58.515693 read(6, "sage: $io->stat()\';\n    stat($_[0]);\n}\n\n################################################\n## State modification functions.\n##\n\nsub autoflush {\n    my $old = new SelectSaver qualify($_[0], caller);\n    my $prev = $|;\n    $| = @_ > 1 ? $_[1] : 1;\n    $prev;\n}\n\nsub output_field_separator {\n    carp \"output_field_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $,;\n    $, = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub output_record_separator {\n    carp \"output_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $\\;\n    $\\ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_record_separator {\n    carp \"input_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $/;\n    $/ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_line_number {\n    local $.;\n    () = tell qualify($_[0], caller) if ref($_[0]);\n    my $prev = $.;\n    $. = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_page_number {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $%;\n    $% = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_per_page {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $=;\n    $= = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_left {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $-;\n    $- = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $~;\n    $~ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_top_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $^;\n    $^ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_line_break_characters {\n    carp \"format_line_break_characters is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $:;\n    $: = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_formfeed {\n    carp \"format_formfeed is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $^L;\n    $^L = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub formline {\n    my $io = shift;\n    my $picture = shift;\n    local($^A) = $^A;\n    local($\\) = \"\";\n    formline($picture, @_);\n    print $io $^A;\n}\n\nsub format_write {\n    @_ < 3 || croak \'usage: $io->write( [FORMAT_NAME] )\';\n    if (@_ == 2) {\n\tmy ($io, $fmt) = @_;\n\tmy $oldfmt = $io->format_name($fmt);\n\tCORE::write($io);\n\t$io->format_name($oldfmt);\n    } else {\n\tCORE::write($_[0]);\n    }\n}\n\n# XXX undocumented\nsub fcntl {\n    @_ == 3 || croak \'usage: $io->fcntl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return fcntl($io, $op, $_[2]);\n}\n\n# XXX undocumented\nsub ioctl {\n    @_ == 3 || croak \'usage: $io->ioctl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return ioctl($io, $op, $_[2]);\n}\n\n# this sub is for compatability with older releases of IO that used\n# a sub called constant to detemine if a constant existed -- GMB\n#\n# The SEEK_* and _IO?BF constants were the only constants at that time\n# any new code should just chech defined(&CONSTANT_NAME)\n\nsub constant {\n    no strict \'refs\';\n    my $name = shift;\n    (($name =~ /^(SEEK_(SET|CUR|END)|_IO[FLN]BF)$/) && defined &{$name})\n\t? &{$name}() : undef;\n}\n\n# so that flush.pl can be deprecated\n\nsub printflush {\n    my $io = shift;\n    my $old;\n    $old = new SelectSaver qualify($io, caller) if ref($io);\n    local $| = 1;\n    if(ref($io)) {\n        print $io @_;\n    }\n    else {\n\tprint @_;\n    }\n}\n\n1;\n", 4096) = 3496
11259 20:14:58.516435 read(6, "", 4096) = 0
11259 20:14:58.516465 close(6)          = 0
11259 20:14:58.522468 stat64("/etc/perl/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522468 stat64("/etc/perl/IO/Seekable.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522468 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522468 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522469 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522469 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522469 stat64("/usr/lib/perl5/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522469 stat64("/usr/lib/perl5/IO/Seekable.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522470 stat64("/usr/share/perl5/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522470 stat64("/usr/share/perl5/IO/Seekable.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522479 stat64("/usr/lib/perl/5.8/IO/Seekable.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.522493 stat64("/usr/lib/perl/5.8/IO/Seekable.pm", {st_mode=S_IFREG|0644, st_size=686, ...}) = 0
11259 20:14:58.522515 open("/usr/lib/perl/5.8/IO/Seekable.pm", O_RDONLY|O_LARGEFILE) = 6
11259 20:14:58.522530 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff659d8) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.522541 _llseek(6, 0, [0], SEEK_CUR) = 0
11259 20:14:58.522560 read(6, "#\n\npackage IO::Seekable;\n\nuse 5.006_001;\nuse Carp;\nuse strict;\nour($VERSION, @EXPORT, @ISA);\nuse IO::Handle ();\n# XXX we can\'t get these from IO::Handle or we\'ll get prototype\n# mismatch warnings on C<use POSIX; use IO::File;> :-(\nuse Fcntl qw(SEEK_SET SEEK_CUR SEEK_END);\nrequire Exporter;\n\n@EXPORT = qw(SEEK_SET SEEK_CUR SEEK_END);\n@ISA = qw(Exporter);\n\n$VERSION = \"1.10\";\n$VERSION = eval $VERSION;\n\nsub seek {\n    @_ == 3 or croak \'usage: $io->seek(POS, WHENCE)\';\n    seek($_[0], $_[1], $_[2]);\n}\n\nsub sysseek {\n    @_ == 3 or croak \'usage: $io->sysseek(POS, WHENCE)\';\n    sysseek($_[0], $_[1], $_[2]);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $io->tell()\';\n    tell($_[0]);\n}\n\n1;\n", 4096) = 686
11259 20:14:58.522780 stat64("/etc/perl/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522796 stat64("/etc/perl/Fcntl.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522809 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522826 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522840 stat64("/usr/local/share/perl/5.8.8/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522853 stat64("/usr/local/share/perl/5.8.8/Fcntl.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522867 stat64("/usr/lib/perl5/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522878 stat64("/usr/lib/perl5/Fcntl.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522891 stat64("/usr/share/perl5/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522903 stat64("/usr/share/perl5/Fcntl.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522916 stat64("/usr/lib/perl/5.8/Fcntl.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.522928 stat64("/usr/lib/perl/5.8/Fcntl.pm", {st_mode=S_IFREG|0644, st_size=3458, ...}) = 0
11259 20:14:58.522949 open("/usr/lib/perl/5.8/Fcntl.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.522963 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.522974 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.522993 read(8, "package Fcntl;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $AUTOLOAD);\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n$VERSION = \"1.05\";\n# Items to export into callers namespace by default\n# (move infrequently used names to @EXPORT_OK below)\n@EXPORT =\n  qw(\n\tFD_CLOEXEC\n\tF_ALLOCSP\n\tF_ALLOCSP64\n\tF_COMPAT\n\tF_DUP2FD\n\tF_DUPFD\n\tF_EXLCK\n\tF_FREESP\n\tF_FREESP64\n\tF_FSYNC\n\tF_FSYNC64\n\tF_GETFD\n\tF_GETFL\n\tF_GETLK\n\tF_GETLK64\n\tF_GETOWN\n\tF_NODNY\n\tF_POSIX\n\tF_RDACC\n\tF_RDDNY\n\tF_RDLCK\n\tF_RWACC\n\tF_RWDNY\n\tF_SETFD\n\tF_SETFL\n\tF_SETLK\n\tF_SETLK64\n\tF_SETLKW\n\tF_SETLKW64\n\tF_SETOWN\n\tF_SHARE\n\tF_SHLCK\n\tF_UNLCK\n\tF_UNSHARE\n\tF_WRACC\n\tF_WRDNY\n\tF_WRLCK\n\tO_ACCMODE\n\tO_ALIAS\n\tO_APPEND\n\tO_ASYNC\n\tO_BINARY\n\tO_CREAT\n\tO_DEFER\n\tO_DIRECT\n\tO_DIRECTORY\n\tO_DSYNC\n\tO_EXCL\n\tO_EXLOCK\n\tO_LARGEFILE\n\tO_NDELAY\n\tO_NOCTTY\n\tO_NOFOLLOW\n\tO_NOINHERIT\n\tO_NONBLOCK\n\tO_RANDOM\n\tO_RAW\n\tO_RDONLY\n\tO_RDWR\n\tO_RSRC\n\tO_RSYNC\n\tO_SEQUENTIAL\n\tO_SHLOCK\n\tO_SYNC\n\tO_TEMPORARY\n\tO_TEXT\n\tO_TRUNC\n\tO_WRONLY\n     );\n\n# Other items we are prepared to export if requested\n@EXPORT_OK = qw(\n\tDN_ACCESS\n\tDN_ATTRIB\n\tDN_CREATE\n\tDN_DELETE\n\tDN_MODIFY\n\tDN_MULTISHOT\n\tDN_RENAME\n\tFAPPEND\n\tFASYNC\n\tFCREAT\n\tFDEFER\n\tFDSYNC\n\tFEXCL\n\tFLARGEFILE\n\tFNDELAY\n\tFNONBLOCK\n\tFRSYNC\n\tFSYNC\n\tFTRUNC\n\tF_GETLEASE\n\tF_GETSIG\n\tF_NOTIFY\n\tF_SETLEASE\n\tF_SETSIG\n\tLOCK_EX\n\tLOCK_MAND\n\tLOCK_NB\n\tLOCK_READ\n\tLOCK_RW\n\tLOCK_SH\n\tLOCK_UN\n\tLOCK_WRITE\n\tO_IGNORE_CTTY\n\tO_NOATIME\n\tO_NOLINK\n\tO_NOTRANS\n\tSEEK_CUR\n\tSEEK_END\n\tSEEK_SET\n\tS_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\tS_IREAD S_IWRITE S_IEXEC\n\tS_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\tS_IROTH S_IWOTH S_IXOTH S_IRWXO\n\tS_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\tS_ISUID S_ISGID S_ISVTX S_ISTXT\n\t_S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t&S_ISREG &S_ISDIR &S_ISLNK &S_ISSOCK &S_ISBLK &S_ISCHR &S_ISFIFO\n\t&S_ISWHT &S_ISENFMT &S_IFMT &S_IMODE\n);\n# Named groups of exports\n%EXPORT_TAGS = (\n    \'flock\'   => [qw(LOCK_SH LOCK_EX LOCK_NB LOCK_UN)],\n    \'Fcompat\' => [qw(FAPPEND FASYNC FCREAT FDEFER FDSYNC FEXCL FLARGEFILE\n\t\t     FNDELAY FNONBLOCK FRSYNC FSYNC FTRUNC)],\n    \'seek\'    => [qw(SEEK_SET SEEK_CUR SEEK_END)],\n    \'mode\'    => [qw(S_ISUID S_ISGID S_ISVTX S_ISTXT\n\t\t     _S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t\t     S_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\t\t     S_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\t\t     S_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\t\t     S_IROTH S_IWOTH S_IXOTH S_IRWXO\n\t\t     S_IREAD S_IWRITE S_IEXEC\n\t\t     S_ISREG S_ISDIR S_ISLNK S_ISSOCK\n\t\t     S_ISBLK S_ISCHR S_ISFIFO\n\t\t     S_ISWHT S_ISENFMT\t\t\n\t\t     S_IFMT S_IMODE\n                  )],\n);\n\nsub S_IFMT  { @_ ? ( $_[0] & _S_IFMT() ) : _S_IFMT()  }\nsub S_IMODE { $_[0] & 07777 }\n\nsub S_ISREG    { ( $_[0] & _S_IFMT() ) == S_IFREG()   }\nsub S_ISDIR    { ( $_[0] & _S_IFMT() ) == S_IFDIR()   }\nsub S_ISLNK    { ( $_[0] & _S_IFMT() ) == S_IFLNK()   }\nsub S_ISSOCK   { ( $_[0] & _S_IFMT() ) == S_IFSOCK()  }\nsub S_ISBLK    { ( $_[0] & _S_IFMT() ) == S_IFBLK()   }\nsub S_ISCHR    { ( $_[0] & _S_IFMT() ) == S_IFCHR()   }\nsub S_ISFIFO   { ( $_[0] & _S_IFMT() ) == S_IFIFO()   }\nsub S_ISWHT    { ( $_[0] & _S_IFMT() ) == S_IFWHT()   }\nsub S_ISENFMT  { ( $_[0] & _S_IFMT() ) == S_IFENFMT() }\n\nsub AUTOLOAD {\n    (my $constname = $AUTOLOAD) =~ s/.*:://;\n    die \"&Fcntl::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n        my (undef,$file,$line) = caller;\n        die \"$error at $file line $line.\\n\";\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Fcntl\', $VERSION;\n\n1;\n", 4096) = 3458
11259 20:14:58.523388 brk(0x81f7000)    = 0x81f7000
11259 20:14:58.523570 read(8, "", 4096) = 0
11259 20:14:58.523585 close(8)          = 0
11259 20:14:58.523711 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
11259 20:14:58.523752 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
11259 20:14:58.523782 open("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", O_RDONLY) = 8
11259 20:14:58.523796 read(8, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0 \10\0\0004\0\0\0\274,\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274*\0\0\274*\0\0\5\0\0\0\0\20\0\0\1\0\0\0\274*\0\0\274:\0\0\274:\0\0T\1\0\0X\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320*\0\0\320:\0\0\320:\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\21\0\0\0\36\0\0\0\0\0\0\0\25\0\0\0\32\0\0\0\24\0\0\0\5\0\0\0\t\0\0\0\0\0\0\0\23\0\0\0\21\0\0\0\34\0\0\0\4\0\0\0\26\0\0\0\0\0\0\0\30\0\0\0\17\0\0\0\27\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\6\0\0\0\35\0\0\0\7\0\0\0\0\0\0\0\22\0\0\0\31\0\0\0\33\0\0\0\20\0\0\0\16\0\0\0\n\0\0\0\0\0\0\0\f\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\27\0\0\0\2\0\0\0\6\0\0\0\210\0 \1\0\304H\t\27\0\0\0\32\0\0\0\35\0\0\0\356TU\220\272\343\222|CE\325\354.6bx\330qX\34\271\215\361\16\353\323\357\16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0j\1\0\0\0\0\0\0\0\0\0\0\20\0\0\0\337\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0u\0\0\0\0\0\0\0", 512) = 512
11259 20:14:58.523885 fstat64(8, {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
11259 20:14:58.523903 mmap2(NULL, 15380, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 8, 0) = 0xb7d5f000
11259 20:14:58.523917 mmap2(0xb7d62000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 8, 0x2) = 0xb7d62000
11259 20:14:58.523932 close(8)          = 0
11259 20:14:58.524196 read(6, "", 4096) = 0
11259 20:14:58.524212 close(6)          = 0
11259 20:14:58.524246 stat64("/etc/perl/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524295 stat64("/etc/perl/IO/File.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524326 stat64("/usr/local/lib/perl/5.8.8/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524358 stat64("/usr/local/lib/perl/5.8.8/IO/File.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524408 stat64("/usr/local/share/perl/5.8.8/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524456 stat64("/usr/local/share/perl/5.8.8/IO/File.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524487 stat64("/usr/lib/perl5/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524518 stat64("/usr/lib/perl5/IO/File.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524567 stat64("/usr/share/perl5/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524629 stat64("/usr/share/perl5/IO/File.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524659 stat64("/usr/lib/perl/5.8/IO/File.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.524674 stat64("/usr/lib/perl/5.8/IO/File.pm", {st_mode=S_IFREG|0644, st_size=1784, ...}) = 0
11259 20:14:58.524696 open("/usr/lib/perl/5.8/IO/File.pm", O_RDONLY|O_LARGEFILE) = 6
11259 20:14:58.524711 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff659d8) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.524723 _llseek(6, 0, [0], SEEK_CUR) = 0
11259 20:14:58.524755 read(6, "#\n\npackage IO::File;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO::Seekable;\nuse File::Spec;\n\nrequire Exporter;\n\n@ISA = qw(IO::Handle IO::Seekable Exporter);\n\n$VERSION = \"1.13\";\n\n@EXPORT = @IO::Seekable::EXPORT;\n\neval {\n    # Make all Fcntl O_XXX constants available for importing\n    require Fcntl;\n    my @O = grep /^O_/, @Fcntl::EXPORT;\n    Fcntl->import(@O);  # first we import what we want to export\n    push(@EXPORT, @O);\n};\n\n################################################\n## Constructor\n##\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::File\";\n    @_ >= 0 && @_ <= 3\n\tor croak \"usage: new $class [FILENAME [,MODE [,PERMS]]]\";\n    my $fh = $class->SUPER::new();\n    if (@_) {\n\t$fh->open(@_)\n\t    or return undef;\n    }\n    $fh;\n}\n\n################################################\n## Open\n##\n\nsub open {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $fh->open(FILENAME [,MODE [,PERMS]])\';\n    my ($fh, $file) = @_;\n    if (@_ > 2) {\n\tmy ($mode, $perms) = @_[2, 3];\n\tif ($mode =~ /^\\d+$/) {\n\t    defined $perms or $perms = 0666;\n\t    return sysopen($fh, $file, $mode, $perms);\n\t} elsif ($mode =~ /:/) {\n\t    return open($fh, $mode, $file) if @_ == 3;\n\t    croak \'usage: $fh->open(FILENAME, IOLAYERS)\';\n\t}\n\tif (defined($file) && length($file)\n\t    && ! File::Spec->file_name_is_absolute($file))\n\t{\n\t    $file = File::Spec->rel2abs($file);\n\t}\n\t$file = IO::Handle::_open_mode_string($mode) . \" $file\\0\";\n    }\n    open($fh, $file);\n}\n\n################################################\n## Binmode\n##\n\nsub binmode {\n    ( @_ == 1 or @_ == 2 ) or croak \'usage $fh->binmode([LAYER])\';\n\n    my($fh, $layer) = @_;\n\n    return binmode $$fh unless $layer;\n    return binmode $$fh, $layer;\n}\n\n1;\n", 4096) = 1784
11259 20:14:58.524992 stat64("/etc/perl/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525008 stat64("/etc/perl/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525022 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525034 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525048 stat64("/usr/local/share/perl/5.8.8/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525061 stat64("/usr/local/share/perl/5.8.8/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525075 stat64("/usr/lib/perl5/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525087 stat64("/usr/lib/perl5/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525111 stat64("/usr/share/perl5/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525150 stat64("/usr/share/perl5/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525180 stat64("/usr/lib/perl/5.8/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525193 stat64("/usr/lib/perl/5.8/File/Spec.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525207 stat64("/usr/share/perl/5.8/File/Spec.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525224 stat64("/usr/share/perl/5.8/File/Spec.pm", {st_mode=S_IFREG|0644, st_size=595, ...}) = 0
11259 20:14:58.525245 open("/usr/share/perl/5.8/File/Spec.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.525260 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.525271 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.525289 read(8, "package File::Spec;\n\nuse strict;\nuse vars qw(@ISA $VERSION);\n\n$VERSION = \'3.12\';\n$VERSION = eval $VERSION;\n\nmy %module = (MacOS   => \'Mac\',\n\t      MSWin32 => \'Win32\',\n\t      os2     => \'OS2\',\n\t      VMS     => \'VMS\',\n\t      epoc    => \'Epoc\',\n\t      NetWare => \'Win32\', # Yes, File::Spec::Win32 works on NetWare.\n\t      symbian => \'Win32\', # Yes, File::Spec::Win32 works on symbian.\n\t      dos     => \'OS2\',   # Yes, File::Spec::OS2 works on DJGPP.\n\t      cygwin  => \'Cygwin\');\n\nmy $module = $module{$^O} || \'Unix\';\n\nrequire \"File/Spec/$module.pm\";\n@ISA = (\"File::Spec::$module\");\n\n1;\n\n__END__\n\n", 4096) = 595
11259 20:14:58.525363 stat64("/etc/perl/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525377 stat64("/etc/perl/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525390 stat64("/usr/local/lib/perl/5.8.8/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525402 stat64("/usr/local/lib/perl/5.8.8/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525415 stat64("/usr/local/share/perl/5.8.8/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525428 stat64("/usr/local/share/perl/5.8.8/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525442 stat64("/usr/lib/perl5/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525454 stat64("/usr/lib/perl5/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525467 stat64("/usr/share/perl5/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525479 stat64("/usr/share/perl5/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525492 stat64("/usr/lib/perl/5.8/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525504 stat64("/usr/lib/perl/5.8/vars.pm", 0xbff6526c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525517 stat64("/usr/share/perl/5.8/vars.pmc", 0xbff6535c) = -1 ENOENT (No such file or directory)
11259 20:14:58.525529 stat64("/usr/share/perl/5.8/vars.pm", {st_mode=S_IFREG|0644, st_size=1149, ...}) = 0
11259 20:14:58.525549 open("/usr/share/perl/5.8/vars.pm", O_RDONLY|O_LARGEFILE) = 10
11259 20:14:58.525563 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65078) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.525574 _llseek(10, 0, [0], SEEK_CUR) = 0
11259 20:14:58.525600 read(10, "package vars;\n\nuse 5.006;\n\nour $VERSION = \'1.01\';\n\nuse warnings::register;\nuse strict qw(vars subs);\n\nsub import {\n    my $callpack = caller;\n    my ($pack, @imports) = @_;\n    my ($sym, $ch);\n    foreach (@imports) {\n        if (($ch, $sym) = /^([\\$\\@\\%\\*\\&])(.+)/) {\n\t    if ($sym =~ /\\W/) {\n\t\t# time for a more-detailed check-up\n\t\tif ($sym =~ /^\\w+[[{].*[]}]$/) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"Can\'t declare individual elements of hash or array\");\n\t\t} elsif (warnings::enabled() and length($sym) == 1 and $sym !~ tr/a-zA-Z//) {\n\t\t    warnings::warn(\"No need to declare built-in vars\");\n\t\t} elsif  (($^H &= strict::bits(\'vars\'))) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"\'$_\' is not a valid variable name under strict vars\");\n\t\t}\n\t    }\n\t    $sym = \"${callpack}::$sym\" unless $sym =~ /::/;\n\t    *$sym =\n\t\t(  $ch eq \"\\$\" ? \\$$sym\n\t\t : $ch eq \"\\@\" ? \\@$sym\n\t\t : $ch eq \"\\%\" ? \\%$sym\n\t\t : $ch eq \"\\*\" ? \\*$sym\n\t\t : $ch eq \"\\&\" ? \\&$sym \n\t\t : do {\n\t\t     require Carp;\n\t\t     Carp::croak(\"\'$_\' is not a valid variable name\");\n\t\t });\n\t} else {\n\t    require Carp;\n\t    Carp::croak(\"\'$_\' is not a valid variable name\");\n\t}\n    }\n};\n\n1;\n__END__\n\n", 4096) = 1149
11259 20:14:58.525803 stat64("/etc/perl/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525819 stat64("/etc/perl/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525833 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525846 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525860 stat64("/usr/local/share/perl/5.8.8/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525873 stat64("/usr/local/share/perl/5.8.8/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525888 stat64("/usr/lib/perl5/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525900 stat64("/usr/lib/perl5/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525913 stat64("/usr/share/perl5/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525926 stat64("/usr/share/perl5/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525939 stat64("/usr/lib/perl/5.8/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525952 stat64("/usr/lib/perl/5.8/warnings/register.pm", 0xbff64dbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.525966 stat64("/usr/share/perl/5.8/warnings/register.pmc", 0xbff64eac) = -1 ENOENT (No such file or directory)
11259 20:14:58.525980 stat64("/usr/share/perl/5.8/warnings/register.pm", {st_mode=S_IFREG|0644, st_size=732, ...}) = 0
11259 20:14:58.526002 open("/usr/share/perl/5.8/warnings/register.pm", O_RDONLY|O_LARGEFILE) = 11
11259 20:14:58.526016 ioctl(11, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff64bc8) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.526027 _llseek(11, 0, [0], SEEK_CUR) = 0
11259 20:14:58.526045 read(11, "package warnings::register;\n\nour $VERSION = \'1.01\';\n\nrequire warnings;\n\nsub mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub import\n{\n    shift;\n    my $package = (caller(0))[0];\n    if (! defined $warnings::Bits{$package}) {\n        $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);\n        vec($warnings::Bits{\'all\'}, $warnings::LAST_BIT, 1) = 1;\n        $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;\n\tforeach my $k (keys %warnings::Bits) {\n\t    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;\n\t}\n        $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);\n        vec($warnings::DeadBits{\'all\'}, $warnings::LAST_BIT++, 1) = 1;\n    }\n}\n\n1;\n", 4096) = 732
11259 20:14:58.526247 read(11, "", 4096) = 0
11259 20:14:58.526261 close(11)         = 0
11259 20:14:58.526456 _llseek(10, 1148, [1148], SEEK_SET) = 0
11259 20:14:58.526472 _llseek(10, 0, [1148], SEEK_CUR) = 0
11259 20:14:58.526483 close(10)         = 0
11259 20:14:58.526550 _llseek(8, 594, [594], SEEK_SET) = 0
11259 20:14:58.526564 _llseek(8, 0, [594], SEEK_CUR) = 0
11259 20:14:58.526574 close(8)          = 0
11259 20:14:58.526607 stat64("/etc/perl/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526622 stat64("/etc/perl/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526636 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526660 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526704 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526717 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526755 stat64("/usr/lib/perl5/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526767 stat64("/usr/lib/perl5/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526781 stat64("/usr/share/perl5/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526793 stat64("/usr/share/perl5/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526807 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526820 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pm", 0xbff6571c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526834 stat64("/usr/share/perl/5.8/File/Spec/Unix.pmc", 0xbff6580c) = -1 ENOENT (No such file or directory)
11259 20:14:58.526847 stat64("/usr/share/perl/5.8/File/Spec/Unix.pm", {st_mode=S_IFREG|0644, st_size=7038, ...}) = 0
11259 20:14:58.526869 open("/usr/share/perl/5.8/File/Spec/Unix.pm", O_RDONLY|O_LARGEFILE) = 8
11259 20:14:58.526884 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbff65528) = -1 ENOTTY (Inappropriate ioctl for device)
11259 20:14:58.526896 _llseek(8, 0, [0], SEEK_CUR) = 0
11259 20:14:58.526914 read(8, "package File::Spec::Unix;\n\nuse strict;\nuse vars qw($VERSION);\n\n$VERSION = \'1.5\';\n\nsub canonpath {\n    my ($self,$path) = @_;\n    \n    # Handle POSIX-style node names beginning with double slash (qnx, nto)\n    # Handle network path names beginning with double slash (cygwin)\n    # (POSIX says: \"a pathname that begins with two successive slashes\n    # may be interpreted in an implementation-defined manner, although\n    # more than two leading slashes shall be treated as a single slash.\")\n    my $node = \'\';\n    if ( $^O =~ m/^(?:qnx|nto|cygwin)$/ && $path =~ s:^(//[^/]+)(/|\\z):/:s ) {\n      $node = $1;\n    }\n    # This used to be\n    # $path =~ s|/+|/|g unless($^O eq \'cygwin\');\n    # but that made tests 29, 30, 35, 46, and 213 (as of #13272) to fail\n    # (Mainly because trailing \"\" directories didn\'t get stripped).\n    # Why would cygwin avoid collapsing multiple slashes into one? --jhi\n    $path =~ s|/+|/|g;                             # xx////xx  -> xx/xx\n    $path =~ s@(/\\.)+(/|\\Z(?!\\n))@/@g;             # xx/././xx -> xx/xx\n    $path =~ s|^(\\./)+||s unless $path eq \"./\";    # ./xx      -> xx\n    $path =~ s|^/(\\.\\./)+|/|;                      # /../../xx -> xx\n    $path =~ s|^/\\.\\.$|/|;                         # /..       -> /\n    $path =~ s|/\\Z(?!\\n)|| unless $path eq \"/\";          # xx/       -> xx\n    return \"$node$path\";\n}\n\nsub catdir {\n    my $self = shift;\n\n    $self->canonpath(join(\'/\', @_, \'\')); # \'\' because need a trailing \'/\'\n}\n\nsub catfile {\n    my $self = shift;\n    my $file = $self->canonpath(pop @_);\n    return $file unless @_;\n    my $dir = $self->catdir(@_);\n    $dir .= \"/\" unless substr($dir,-1) eq \"/\";\n    return $dir.$file;\n}\n\nsub curdir () { \'.\' }\n\nsub devnull () { \'/dev/null\' }\n\nsub rootdir () { \'/\' }\n\nmy $tmpdir;\nsub _tmpdir {\n    return $tmpdir if defined $tmpdir;\n    my $self = shift;\n    my @dirlist = @_;\n    {\n\tno strict \'refs\';\n\tif (${\"\\cTAINT\"}) { # Check for taint mode on perl >= 5.8.0\n            require Scalar::Util;\n\t    @dirlist = grep { ! Scalar::Util::tainted($_) } @dirlist;\n\t}\n    }\n    foreach (@dirlist) {\n\tnext unless defined && -d && -w _;\n\t$tmpdir = $_;\n\tlast;\n    }\n    $tmpdir = $self->curdir unless defined $tmpdir;\n    $tmpdir = defined $tmpdir && $self->canonpath($tmpdir);\n    return $tmpdir;\n}\n\nsub tmpdir {\n    return $tmpdir if defined $tmpdir;\n    $tmpdir = $_[0]->_tmpdir( $ENV{TMPDIR}, \"/tmp\" );\n}\n\nsub updir () { \'..\' }\n\nsub no_upwards {\n    my $self = shift;\n    return grep(!/^\\.{1,2}\\Z(?!\\n)/s, @_);\n}\n\nsub case_tolerant () { 0 }\n\nsub file_name_is_absolute {\n    my ($self,$file) = @_;\n    return scalar($file =~ m:^/:s);\n}\n\nsub path {\n    return () unless exists $ENV{PATH};\n    my @path = split(\':\', $ENV{PATH});\n    foreach (@path) { $_ = \'.\' if $_ eq \'\' }\n    return @path;\n}\n\nsub join {\n    my $self = shift;\n    return $self->catfile(@_);\n}\n\nsub splitpath {\n    my ($self,$path, $nofile) = @_;\n\n    my ($volume,$directory,$file) = (\'\',\'\',\'\');\n\n    if ( $nofile ) {\n        $directory = $path;\n    }\n    else {\n        $path =~ m|^ ( (?: .* / (?: \\.\\.?\\Z(?!\\n) )? )? ) ([^/]*) |xs;\n        $directory = $1;\n        $file      = $2;\n    }\n\n    return ($volume,$directory,$file);\n}\n\nsub splitdir {\n    return split m|/|, $_[1], -1;  # Preserve trailing fields\n}\n\nsub catpath {\n    my ($self,$volume,$directory,$file) = @_;\n\n    if ( $directory ne \'\'                && \n         $file ne \'\'                     && \n         substr( $directory, -1 ) ne \'/\' && \n         substr( $file, 0, 1 ) ne \'/\' \n    ) {\n        $directory .= \"/$file\" ;\n    }\n    else {\n        $directory .= $file ;\n    }\n\n    return $directory ;\n}\n\nsub abs2rel {\n    my($self,$path,$base) = @_;\n\n    # Figure out the effective $base and clean it up.\n    if ( !defined( $base ) || $base eq \'\' ) {\n        $base = $self->_cwd();\n    }\n    elsif ( ! $self->file_name_is_absolute( $base ) ) {\n\tif ( ! $self->file_name_is_absolute( $path ) ) {\n\t    # optimisation where both paths are relative: save 2 x cwd\n\t    $base = $self->canonpath( \"/$base\" );\n\t    $path = \"/$path\";\n\t}\n\telse {\n\t    $base = $self->rel2abs( $base ) ;\n\t}\n    }\n  ", 4096) = 4096
11259 20:14:58.527575 brk(0x8218000)    = 0x8218000
11259 20:14:58.527780 read(8, "  else {\n        $base = $self->canonpath( $base ) ;\n    }\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        $path = $self->rel2abs( $path ) ;\n    }\n    else {\n        $path = $self->canonpath( $path ) ;\n    }\n\n    # Now, remove all leading components that are the same\n    my @pathchunks = $self->splitdir( $path);\n    my @basechunks = $self->splitdir( $base);\n\n    while (@pathchunks && @basechunks && $pathchunks[0] eq $basechunks[0]) {\n        shift @pathchunks ;\n        shift @basechunks ;\n    }\n\n    $path = CORE::join( \'/\', @pathchunks );\n    $base = CORE::join( \'/\', @basechunks );\n\n    # $base now contains the directories the resulting relative path \n    # must ascend out of before it can descend to $path_directory.  So, \n    # replace all names with $parentDir\n    $base =~ s|[^/]+|..|g ;\n\n    # Glue the two together, using a separator if necessary, and preventing an\n    # empty result.\n    if ( $path ne \'\' && $base ne \'\' ) {\n        $path = \"$base/$path\" ;\n    } else {\n        $path = \"$base$path\" ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\nsub rel2abs {\n    my ($self,$path,$base ) = @_;\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        # Figure out the effective $base and clean it up.\n        if ( !defined( $base ) || $base eq \'\' ) {\n\t    $base = $self->_cwd();\n        }\n        elsif ( ! $self->file_name_is_absolute( $base ) ) {\n            $base = $self->rel2abs( $base ) ;\n        }\n        else {\n            $base = $self->canonpath( $base ) ;\n        }\n\n        # Glom them together\n        $path = $self->catdir( $base, $path ) ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\n# Internal routine to File::Spec, no point in making this public since\n# it is the standard Cwd interface.  Most of the platform-specific\n# File::Spec subclasses use this.\nsub _cwd {\n    require Cwd;\n    Cwd::cwd();\n}\n\n# Internal method to reduce xx\\..\\yy -> yy\nsub _collapse {\n    my($fs, $path) = @_;\n\n    my $updir  = $fs->updir;\n    my $curdir = $fs->curdir;\n\n    my($vol, $dirs, $file) = $fs->splitpath($path);\n    my @dirs = $fs->splitdir($dirs);\n\n    my @collapsed;\n    foreach my $dir (@dirs) {\n        if( $dir eq $updir              and   # if we have an updir\n            @collapsed                  and   # and something to collapse\n            length $collapsed[-1]       and   # and its not the rootdir\n            $collapsed[-1] ne $updir    and   # nor another updir\n            $collapsed[-1] ne $curdir         # nor the curdir\n          ) \n        {                                     # then\n            pop @collapsed;                   # collapse\n        }\n        else {                                # else\n            push @collapsed, $dir;            # just hang onto it\n        }\n    }\n\n    return $fs->catpath($vol,\n                        $fs->catdir(@collapsed),\n                        $file\n                       );\n}\n\n1;\n", 4096) = 2942
11259 20:14:58.528161 read(8, "", 4096) = 0
11259 20:14:58.528206 close(8)          = 0
11259 20:14:58.528428 read(6, "", 4096) = 0
11259 20:14:58.528442 close(6)          = 0
11259 20:14:58.528605 stat64("/etc/perl/IO/Pipe.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.528621 stat64("/etc/perl/IO/Pipe.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.528635 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.528687 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
11259 20:14:58.528702 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pmc", 0xbff65cbc) = -1 ENOENT (No such file or directory)
11259 20:14:58.528715 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pm", 0xbff65bcc) = -1 ENOENT (No such file or directory)
