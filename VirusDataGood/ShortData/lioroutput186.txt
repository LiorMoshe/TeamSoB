10482 20:07:03.779073 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
10482 20:07:03.779095 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 8
10482 20:07:03.779110 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd3aaf8) = -1 ENOTTY (Inappropriate ioctl for device)
10482 20:07:03.779122 _llseek(8, 0, [0], SEEK_CUR) = 0
10482 20:07:03.779139 read(8, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
10482 20:07:03.779603 stat64("/etc/perl/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779622 stat64("/etc/perl/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779637 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779650 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779665 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779678 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779693 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779705 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779719 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779731 stat64("/usr/share/perl5/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779745 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779758 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbfd3a83c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779772 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbfd3a92c) = -1 ENOENT (No such file or directory)
10482 20:07:03.779786 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
10482 20:07:03.779808 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
10482 20:07:03.779823 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd3a648) = -1 ENOTTY (Inappropriate ioctl for device)
10482 20:07:03.779835 _llseek(10, 0, [0], SEEK_CUR) = 0
10482 20:07:03.779854 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
10482 20:07:03.780286 brk(0x82de000)    = 0x82de000
10482 20:07:03.780826 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
10482 20:07:03.781621 _llseek(10, 6916, [6916], SEEK_SET) = 0
10482 20:07:03.781639 _llseek(10, 0, [6916], SEEK_CUR) = 0
10482 20:07:03.781650 close(10)         = 0
10482 20:07:03.781835 _llseek(8, 1334, [1334], SEEK_SET) = 0
10482 20:07:03.781851 _llseek(8, 0, [1334], SEEK_CUR) = 0
10482 20:07:03.781862 close(8)          = 0
10482 20:07:03.782643 brk(0x82ff000)    = 0x82ff000
10482 20:07:03.782791 _llseek(6, 2689, [2689], SEEK_SET) = 0
10482 20:07:03.782807 _llseek(6, 0, [2689], SEEK_CUR) = 0
10482 20:07:03.782818 close(6)          = 0
10482 20:07:03.782978 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d3f908) = 10483
10483 20:07:03.946669 getppid()         = 10482
10483 20:07:03.947231 open("/etc/nsswitch.conf", O_RDONLY) = 6
10483 20:07:03.947261 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
10483 20:07:03.947288 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f05000
10483 20:07:03.947304 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
10483 20:07:03.947355 read(6, "", 4096) = 0
10483 20:07:03.947365 close(6)          = 0
10483 20:07:03.947376 munmap(0xb7f05000, 4096) = 0
10483 20:07:03.947404 open("/etc/ld.so.cache", O_RDONLY) = 6
10483 20:07:03.947418 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10483 20:07:03.947435 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d0c000
10483 20:07:03.947447 close(6)          = 0
10483 20:07:03.947458 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10483 20:07:03.947476 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947492 stat64("/lib/tls/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947539 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947570 stat64("/lib/tls/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947582 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947596 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.947615 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947628 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.947659 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947672 stat64("/lib/tls/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947684 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947696 stat64("/lib/tls/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947707 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947719 stat64("/lib/tls/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947732 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947744 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.947761 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947774 stat64("/lib/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947785 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947797 stat64("/lib/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947809 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947821 stat64("/lib/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947832 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947844 stat64("/lib/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947855 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947867 stat64("/lib/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947878 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947890 stat64("/lib/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947905 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947917 stat64("/lib/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947928 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947940 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.947957 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947970 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.947982 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.947995 stat64("/usr/lib/tls/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948017 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948057 stat64("/usr/lib/tls/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948084 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948096 stat64("/usr/lib/tls/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948108 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948122 stat64("/usr/lib/tls/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948134 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948160 stat64("/usr/lib/tls/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948172 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948184 stat64("/usr/lib/tls/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948195 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948207 stat64("/usr/lib/tls", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948219 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948232 stat64("/usr/lib/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948243 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948256 stat64("/usr/lib/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948268 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948281 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.948298 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948311 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.948328 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948340 stat64("/usr/lib/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948352 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948364 stat64("/usr/lib/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948375 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948388 stat64("/usr/lib/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948399 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948411 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
10483 20:07:03.948428 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948442 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948458 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948472 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948484 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948504 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948519 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948560 stat64("/lib/i486-linux-gnu/tls/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948589 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948603 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948615 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948628 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948641 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948654 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948666 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948678 stat64("/lib/i486-linux-gnu/tls", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948690 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948704 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948716 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948730 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948742 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948755 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948767 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948780 stat64("/lib/i486-linux-gnu/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948792 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948805 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948818 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948830 stat64("/lib/i486-linux-gnu/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948842 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948855 stat64("/lib/i486-linux-gnu/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948867 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948880 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.948898 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948912 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948925 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948939 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948952 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.948969 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.948982 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949001 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949016 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949057 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949070 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949098 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949110 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949123 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949136 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949149 stat64("/usr/lib/i486-linux-gnu/tls", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949161 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949175 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949187 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949201 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949213 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949227 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949239 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949252 stat64("/usr/lib/i486-linux-gnu/i686", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949264 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949278 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949291 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949304 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949316 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949329 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbfd3b1cc) = -1 ENOENT (No such file or directory)
10483 20:07:03.949341 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10483 20:07:03.949354 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10483 20:07:03.949375 munmap(0xb7d0c000, 29913) = 0
10483 20:07:03.949397 open("/etc/ld.so.cache", O_RDONLY) = 6
10483 20:07:03.949410 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10483 20:07:03.949426 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d0c000
10483 20:07:03.949437 close(6)          = 0
10483 20:07:03.949448 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10483 20:07:03.949463 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
10483 20:07:03.949478 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
10483 20:07:03.949627 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
10483 20:07:03.949650 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7d01000
10483 20:07:03.949663 mmap2(0xb7d0a000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7d0a000
10483 20:07:03.949680 close(6)          = 0
10483 20:07:03.949707 munmap(0xb7d0c000, 29913) = 0
10483 20:07:03.949724 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
10483 20:07:03.949740 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
10483 20:07:03.949756 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
10483 20:07:03.949774 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d13000
10483 20:07:03.949785 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
10483 20:07:03.949975 close(6)          = 0
10483 20:07:03.949986 munmap(0xb7d13000, 4096) = 0
10483 20:07:03.950003 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
10483 20:07:03.950039 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
10483 20:07:03.950075 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d13000
10483 20:07:03.950104 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
10483 20:07:03.950554 close(6)          = 0
10483 20:07:03.950566 munmap(0xb7d13000, 4096) = 0
10483 20:07:03.950609 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
10483 20:07:03.950651 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd3b6d8) = -1 EINVAL (Invalid argument)
10483 20:07:03.950680 _llseek(6, 0, 0xbfd3b720, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10483 20:07:03.950728 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfd3b6d8) = -1 EINVAL (Invalid argument)
10483 20:07:03.950759 _llseek(6, 0, 0xbfd3b720, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10483 20:07:03.950787 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
10483 20:07:03.950881 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10483 20:07:03.950919 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
10483 20:07:03.950981 listen(6, 5)      = 0
10483 20:07:03.951077 accept(6,  <unfinished ...>
10482 20:07:04.176944 exit_group(0)     = ?
10480 20:07:04.177057 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 10482
10480 20:07:04.177081 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
10480 20:07:04.177108 --- SIGCHLD (Child exited) @ 0 (0) ---
10480 20:07:04.177117 waitpid(-1, 0xbf8f3c68, WNOHANG) = -1 ECHILD (No child processes)
10480 20:07:04.177152 sigreturn()       = ? (mask now [])
10480 20:07:04.177186 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
10480 20:07:04.177231 exit_group(0)     = ?
4519  20:07:04.177269 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 10480
4519  20:07:04.177282 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:07:04.177296 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:07:04.177308 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:07:04.177317 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:07:04.177336 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:07:04.177404 time(NULL)        = 1495670824
4519  20:07:04.177438 time(NULL)        = 1495670824
4519  20:07:04.177475 gettimeofday({1495670824, 177479}, NULL) = 0
4519  20:07:04.177489 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:07:04.177520 clock_gettime(CLOCK_MONOTONIC, {47633, 994533083}) = 0
4519  20:07:04.177532 gettimeofday({1495670824, 177536}, NULL) = 0
4519  20:07:04.177544 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 3 (in [4 7 9], left {1, 0})
4519  20:07:04.177586 clock_gettime(CLOCK_MONOTONIC, {47633, 994610933}) = 0
4519  20:07:04.177611 recv(9, "CPRIVMSG botnick\n", 8192, 0) = 17
4519  20:07:04.177657 send(9, ":irc.Metasploitable.LAN 421 bla4 CPRIVMSG :Unknown command\r\n", 60, 0) = 60
4519  20:07:04.177697 recv(7, "PRIVMSG  #testit1 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
4519  20:07:04.177719 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177736 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177751 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177765 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177779 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177793 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177807 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177821 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177834 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177848 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177861 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177875 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177889 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177902 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177916 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177930 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177943 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177957 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177970 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.177992 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.178007 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.178021 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.178039 recv(4, "PRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZ\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\nSETNAME bla0\n", 8192, 0) = 129
4519  20:07:04.178062 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.178077 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185979 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185979 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185979 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185980 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185980 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185980 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185984 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.185999 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186012 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186026 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186040 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186054 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186067 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186081 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186095 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186108 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186122 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186136 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186150 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186164 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186182 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186196 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186210 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186224 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186238 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186252 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186266 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186290 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186332 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186361 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186375 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186389 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186403 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186417 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186448 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186462 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186476 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186490 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186503 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186517 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186531 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186545 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.186569 send(4, ":irc.Metasploitable.LAN NOTICE bla0 :Your \"real name\" is now set to be bla0 - you have to set it manually to undo it\r\n", 118, 0) = 118
4519  20:07:04.186596 gettimeofday({1495670824, 186600}, NULL) = 0
4519  20:07:04.186608 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [5], left {0, 910000})
4519  20:07:04.275909 clock_gettime(CLOCK_MONOTONIC, {47634, 92929975}) = 0
4519  20:07:04.275932 recv(5, 0x80b7ec0, 8192, 0) = -1 ECONNRESET (Connection reset by peer)
4519  20:07:04.275947 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  20:07:04.275969 send(5, "ERROR :Closing Link: [10.0.2.4] (Connection reset by peer)\r\n", 60, 0) = -1 EPIPE (Broken pipe)
4519  20:07:04.275986 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  20:07:04.276029 close(5)          = 0
4519  20:07:04.276042 time(NULL)        = 1495670824
4519  20:07:04.276052 time(NULL)        = 1495670824
4519  20:07:04.276063 gettimeofday({1495670824, 276067}, NULL) = 0
4519  20:07:04.276075 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:07:04.276105 clock_gettime(CLOCK_MONOTONIC, {47634, 93117916}) = 0
4519  20:07:04.276116 gettimeofday({1495670824, 276119}, NULL) = 0
4519  20:07:04.276126 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 1 (in [7], left {0, 950000})
4519  20:07:04.326758 clock_gettime(CLOCK_MONOTONIC, {47634, 143797806}) = 0
4519  20:07:04.326833 recv(7, "PRIVMSG  #testit1 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 59
4519  20:07:04.326874 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:07:04.326911 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
