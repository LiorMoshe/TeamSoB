12814 20:30:36.947480 stat64("/usr/local/lib/perl/5.8.8/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947493 stat64("/usr/local/lib/perl/5.8.8/File/stat.pm", 0xbf8f10ac) = -1 ENOENT (No such file or directory)
12814 20:30:36.947507 stat64("/usr/local/share/perl/5.8.8/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947527 stat64("/usr/local/share/perl/5.8.8/File/stat.pm", 0xbf8f10ac) = -1 ENOENT (No such file or directory)
12814 20:30:36.947544 stat64("/usr/lib/perl5/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947560 stat64("/usr/lib/perl5/File/stat.pm", 0xbf8f10ac) = -1 ENOENT (No such file or directory)
12814 20:30:36.947573 stat64("/usr/share/perl5/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947586 stat64("/usr/share/perl5/File/stat.pm", 0xbf8f10ac) = -1 ENOENT (No such file or directory)
12814 20:30:36.947599 stat64("/usr/lib/perl/5.8/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947612 stat64("/usr/lib/perl/5.8/File/stat.pm", 0xbf8f10ac) = -1 ENOENT (No such file or directory)
12814 20:30:36.947626 stat64("/usr/share/perl/5.8/File/stat.pmc", 0xbf8f119c) = -1 ENOENT (No such file or directory)
12814 20:30:36.947639 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
12814 20:30:36.947661 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 8
12814 20:30:36.947676 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f0eb8) = -1 ENOTTY (Inappropriate ioctl for device)
12814 20:30:36.947687 _llseek(8, 0, [0], SEEK_CUR) = 0
12814 20:30:36.947705 read(8, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
12814 20:30:36.948124 stat64("/etc/perl/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948144 stat64("/etc/perl/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948158 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948171 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948185 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948198 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948212 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948224 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948238 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948250 stat64("/usr/share/perl5/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948264 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948276 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbf8f0bfc) = -1 ENOENT (No such file or directory)
12814 20:30:36.948290 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbf8f0cec) = -1 ENOENT (No such file or directory)
12814 20:30:36.948304 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
12814 20:30:36.948325 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
12814 20:30:36.948340 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f0a08) = -1 ENOTTY (Inappropriate ioctl for device)
12814 20:30:36.948352 _llseek(10, 0, [0], SEEK_CUR) = 0
12814 20:30:36.948371 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
12814 20:30:36.948776 brk(0x82de000)    = 0x82de000
12814 20:30:36.949133 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
12814 20:30:36.949740 _llseek(10, 6916, [6916], SEEK_SET) = 0
12814 20:30:36.949758 _llseek(10, 0, [6916], SEEK_CUR) = 0
12814 20:30:36.949768 close(10)         = 0
12814 20:30:36.949950 _llseek(8, 1334, [1334], SEEK_SET) = 0
12814 20:30:36.949966 _llseek(8, 0, [1334], SEEK_CUR) = 0
12814 20:30:36.949976 close(8)          = 0
12814 20:30:36.950648 brk(0x82ff000)    = 0x82ff000
12814 20:30:36.950795 _llseek(6, 2689, [2689], SEEK_SET) = 0
12814 20:30:36.950811 _llseek(6, 0, [2689], SEEK_CUR) = 0
12814 20:30:36.950821 close(6)          = 0
12814 20:30:36.951042 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7da4908) = 12815
12815 20:30:37.183122 getppid()         = 12814
12815 20:30:37.183747 open("/etc/nsswitch.conf", O_RDONLY) = 6
12815 20:30:37.193667 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
12815 20:30:37.194002 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6a000
12815 20:30:37.194107 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
12815 20:30:37.194215 read(6, "", 4096) = 0
12815 20:30:37.194245 close(6)          = 0
12815 20:30:37.194269 munmap(0xb7f6a000, 4096) = 0
12815 20:30:37.194307 open("/etc/ld.so.cache", O_RDONLY) = 6
12815 20:30:37.194321 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12815 20:30:37.194338 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d71000
12815 20:30:37.194350 close(6)          = 0
12815 20:30:37.194361 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12815 20:30:37.194379 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194394 stat64("/lib/tls/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194408 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194421 stat64("/lib/tls/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194433 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194446 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.194464 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194477 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.194494 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194506 stat64("/lib/tls/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194529 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194569 stat64("/lib/tls/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194594 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194606 stat64("/lib/tls/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194617 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194629 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.194646 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194659 stat64("/lib/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194670 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194682 stat64("/lib/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194693 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194705 stat64("/lib/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194716 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194727 stat64("/lib/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194738 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194750 stat64("/lib/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194761 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194773 stat64("/lib/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194788 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194799 stat64("/lib/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194810 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194821 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.194838 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194851 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194863 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194876 stat64("/usr/lib/tls/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194887 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194900 stat64("/usr/lib/tls/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194911 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194923 stat64("/usr/lib/tls/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194935 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194947 stat64("/usr/lib/tls/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194958 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194971 stat64("/usr/lib/tls/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.194982 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.194994 stat64("/usr/lib/tls/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195005 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195024 stat64("/usr/lib/tls", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195035 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195048 stat64("/usr/lib/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195060 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195072 stat64("/usr/lib/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195084 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195097 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.195127 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195139 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.195156 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195168 stat64("/usr/lib/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195179 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195196 stat64("/usr/lib/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195207 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195219 stat64("/usr/lib/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195229 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195241 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
12815 20:30:37.195257 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195271 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195289 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195302 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195314 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195327 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195339 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195351 stat64("/lib/i486-linux-gnu/tls/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195363 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195376 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195387 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195400 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195411 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195424 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195435 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195447 stat64("/lib/i486-linux-gnu/tls", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195459 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195472 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195484 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195496 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195538 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195552 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195578 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195590 stat64("/lib/i486-linux-gnu/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195601 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195614 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195626 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195638 stat64("/lib/i486-linux-gnu/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195649 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195662 stat64("/lib/i486-linux-gnu/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195673 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195685 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.195702 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195716 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195728 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195741 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195757 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195770 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195782 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195795 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195807 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195820 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195832 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195845 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195857 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195869 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195881 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195894 stat64("/usr/lib/i486-linux-gnu/tls", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195905 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195918 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195930 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195943 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195955 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195968 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.195980 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.195993 stat64("/usr/lib/i486-linux-gnu/i686", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.196029 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.196045 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.196057 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.196084 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.196095 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.196108 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbf8f158c) = -1 ENOENT (No such file or directory)
12815 20:30:37.196120 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12815 20:30:37.196132 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12815 20:30:37.196151 munmap(0xb7d71000, 29913) = 0
12815 20:30:37.196172 open("/etc/ld.so.cache", O_RDONLY) = 6
12815 20:30:37.196184 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12815 20:30:37.196200 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d71000
12815 20:30:37.196210 close(6)          = 0
12815 20:30:37.196220 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12815 20:30:37.196235 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
12815 20:30:37.196249 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
12815 20:30:37.196341 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
12815 20:30:37.196363 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7d66000
12815 20:30:37.196374 mmap2(0xb7d6f000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7d6f000
12815 20:30:37.196391 close(6)          = 0
12815 20:30:37.196415 munmap(0xb7d71000, 29913) = 0
12815 20:30:37.196431 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12815 20:30:37.196447 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
12815 20:30:37.196462 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12815 20:30:37.196479 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d78000
12815 20:30:37.196490 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12815 20:30:37.196719 close(6)          = 0
12815 20:30:37.196730 munmap(0xb7d78000, 4096) = 0
12815 20:30:37.196748 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12815 20:30:37.196762 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12815 20:30:37.196778 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d78000
12815 20:30:37.196788 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12815 20:30:37.196961 close(6)          = 0
12815 20:30:37.196970 munmap(0xb7d78000, 4096) = 0
12815 20:30:37.196997 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
12815 20:30:37.197078 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f1a98) = -1 EINVAL (Invalid argument)
12815 20:30:37.197107 _llseek(6, 0, 0xbf8f1ae0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.197119 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f1a98) = -1 EINVAL (Invalid argument)
12815 20:30:37.197130 _llseek(6, 0, 0xbf8f1ae0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.197156 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
12815 20:30:37.197211 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
12815 20:30:37.197246 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
12815 20:30:37.197271 listen(6, 5)      = 0
12815 20:30:37.197327 accept(6,  <unfinished ...>
12814 20:30:37.197691 exit_group(0)     = ?
12812 20:30:37.197782 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12814
12812 20:30:37.197798 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12812 20:30:37.197809 --- SIGCHLD (Child exited) @ 0 (0) ---
12812 20:30:37.197816 waitpid(-1, 0xbfab0628, WNOHANG) = -1 ECHILD (No child processes)
12812 20:30:37.197827 sigreturn()       = ? (mask now [])
12812 20:30:37.197842 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12812 20:30:37.197885 exit_group(0)     = ?
4519  20:30:37.197921 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12812
4519  20:30:37.197932 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:30:37.197946 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:30:37.197957 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:30:37.197966 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:30:37.197984 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:30:37.198165 time(NULL)        = 1495672237
4519  20:30:37.198199 time(NULL)        = 1495672237
4519  20:30:37.198265 gettimeofday({1495672237, 198270}, NULL) = 0
4519  20:30:37.198299 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:30:37.198380 clock_gettime(CLOCK_MONOTONIC, {49047, 15393512}) = 0
4519  20:30:37.198393 gettimeofday({1495672237, 198397}, NULL) = 0
4519  20:30:37.198404 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [7], left {1, 0})
4519  20:30:37.198458 clock_gettime(CLOCK_MONOTONIC, {49047, 15470822}) = 0
4519  20:30:37.198476 recv(7, "PRIVMSG  #testit1 ABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 45
4519  20:30:37.198500 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198517 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198531 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198545 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198558 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198572 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198585 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198598 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198611 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198624 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198637 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198650 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198663 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198676 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198689 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198703 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198715 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198729 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198742 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198756 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198770 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198788 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.198805 gettimeofday({1495672237, 198809}, NULL) = 0
4519  20:30:37.198817 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [5], left {0, 790000})
4519  20:30:37.403114 clock_gettime(CLOCK_MONOTONIC, {49047, 220134756}) = 0
4519  20:30:37.403137 recv(5, 0x80b7ec0, 8192, 0) = -1 ECONNRESET (Connection reset by peer)
4519  20:30:37.403151 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  20:30:37.403174 send(5, "ERROR :Closing Link: [10.0.2.4] (Connection reset by peer)\r\n", 60, 0) = -1 EPIPE (Broken pipe)
4519  20:30:37.403192 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  20:30:37.403231 close(5)          = 0
4519  20:30:37.403245 time(NULL)        = 1495672237
4519  20:30:37.403255 time(NULL)        = 1495672237
4519  20:30:37.403266 gettimeofday({1495672237, 403270}, NULL) = 0
4519  20:30:37.403278 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:30:37.403307 clock_gettime(CLOCK_MONOTONIC, {49047, 220320159}) = 0
4519  20:30:37.403318 gettimeofday({1495672237, 403321}, NULL) = 0
4519  20:30:37.403328 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 1 (in [7], left {0, 940000})
4519  20:30:37.463225 clock_gettime(CLOCK_MONOTONIC, {49047, 280233709}) = 0
4519  20:30:37.463225 recv(7, "PRIVMSG  #testit1 ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 71
4519  20:30:37.463225 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463225 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463225 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463226 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463226 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463226 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463226 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463227 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463227 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463227 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463231 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463245 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463258 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463272 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463298 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463313 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463326 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463340 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463353 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463368 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463381 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463395 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.463412 gettimeofday({1495672237, 463415}, NULL) = 0
4519  20:30:37.463423 select(1024, [2 3 4 7 9], [], NULL, {1, 0} <unfinished ...>
12815 20:30:37.522910 <... accept resumed> {sa_family=AF_INET, sin_port=htons(35249), sin_addr=inet_addr("10.0.2.4")}, [16]) = 8
12815 20:30:37.522949 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f0a88) = -1 EINVAL (Invalid argument)
12815 20:30:37.522965 _llseek(8, 0, 0xbf8f0ad0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.522986 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f0a88) = -1 EINVAL (Invalid argument)
12815 20:30:37.522997 _llseek(8, 0, 0xbf8f0ad0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.523007 fcntl64(8, F_SETFD, FD_CLOEXEC) = 0
12815 20:30:37.523049 close(6)          = 0
12815 20:30:37.523128 dup(8)            = 6
12815 20:30:37.523142 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f1928) = -1 EINVAL (Invalid argument)
12815 20:30:37.523153 _llseek(6, 0, 0xbf8f1970, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.523164 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
12815 20:30:37.523184 dup2(6, 1)        = 1
12815 20:30:37.523196 close(6)          = 0
12815 20:30:37.523206 fcntl64(1, F_SETFD, 0) = 0
12815 20:30:37.523217 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f18f8) = -1 EINVAL (Invalid argument)
12815 20:30:37.523227 _llseek(1, 0, 0xbf8f1940, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.523257 dup(8)            = 6
12815 20:30:37.523269 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf8f1928) = -1 EINVAL (Invalid argument)
12815 20:30:37.523280 _llseek(6, 0, 0xbf8f1970, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12815 20:30:37.523290 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
12815 20:30:37.523293 dup2(6, 0)        = 0
12815 20:30:37.523293 close(6)          = 0
12815 20:30:37.523293 fcntl64(0, F_SETFD, 0) = 0
12815 20:30:37.523293 fcntl64(0, F_SETFD, 0) = 0
12815 20:30:37.523294 read(0,  <unfinished ...>
4519  20:30:37.562980 <... select resumed> ) = 1 (in [9], left {0, 900000})
4519  20:30:37.562980 clock_gettime(CLOCK_MONOTONIC, {49047, 379989526}) = 0
4519  20:30:37.562981 recv(9, "PRIVMSG  #testit2 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
4519  20:30:37.562984 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.563002 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.563016 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.563030 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.563043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583042 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583042 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:30:37.583043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
