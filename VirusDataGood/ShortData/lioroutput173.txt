10422 20:06:27.239406 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88c1a8) = -1 ENOTTY (Inappropriate ioctl for device)
10422 20:06:27.239418 _llseek(10, 0, [0], SEEK_CUR) = 0
10422 20:06:27.239437 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
10422 20:06:27.239898 brk(0x82de000)    = 0x82de000
10422 20:06:27.240240 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
10422 20:06:27.240533 _llseek(10, 6916, [6916], SEEK_SET) = 0
10422 20:06:27.240551 _llseek(10, 0, [6916], SEEK_CUR) = 0
10422 20:06:27.240562 close(10)         = 0
10422 20:06:27.240737 _llseek(8, 1334, [1334], SEEK_SET) = 0
10422 20:06:27.240753 _llseek(8, 0, [1334], SEEK_CUR) = 0
10422 20:06:27.240763 close(8)          = 0
10422 20:06:27.241459 brk(0x82ff000)    = 0x82ff000
10422 20:06:27.488695 _llseek(6, 2689, [2689], SEEK_SET) = 0
10422 20:06:27.488696 _llseek(6, 0, [2689], SEEK_CUR) = 0
10422 20:06:27.488696 close(6)          = 0
10422 20:06:27.488941 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dfc908) = 10423
10423 20:06:27.719493 getppid()         = 10422
10423 20:06:27.720135 open("/etc/nsswitch.conf", O_RDONLY) = 6
10423 20:06:27.720163 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
10423 20:06:27.720184 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc2000
10423 20:06:27.720199 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
10423 20:06:27.720256 read(6, "", 4096) = 0
10423 20:06:27.720267 close(6)          = 0
10423 20:06:27.720278 munmap(0xb7fc2000, 4096) = 0
10423 20:06:27.720305 open("/etc/ld.so.cache", O_RDONLY) = 6
10423 20:06:27.720318 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10423 20:06:27.720335 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7dc9000
10423 20:06:27.720357 close(6)          = 0
10423 20:06:27.720369 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10423 20:06:27.720415 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720465 stat64("/lib/tls/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720479 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720493 stat64("/lib/tls/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720504 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720518 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.720536 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720549 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.720566 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720579 stat64("/lib/tls/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720590 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720602 stat64("/lib/tls/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720613 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720625 stat64("/lib/tls/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720636 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720648 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.720665 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720678 stat64("/lib/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720689 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720701 stat64("/lib/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720712 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720724 stat64("/lib/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720735 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720747 stat64("/lib/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720758 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720770 stat64("/lib/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720781 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720793 stat64("/lib/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720803 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720815 stat64("/lib/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720830 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720851 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.720870 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720910 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720939 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720951 stat64("/usr/lib/tls/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720963 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720975 stat64("/usr/lib/tls/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.720987 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.720999 stat64("/usr/lib/tls/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721010 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721023 stat64("/usr/lib/tls/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721034 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721047 stat64("/usr/lib/tls/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721058 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721070 stat64("/usr/lib/tls/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721081 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721093 stat64("/usr/lib/tls", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721104 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721117 stat64("/usr/lib/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721129 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721141 stat64("/usr/lib/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721152 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721165 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.721182 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721195 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.721212 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721224 stat64("/usr/lib/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721236 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721248 stat64("/usr/lib/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721259 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721271 stat64("/usr/lib/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721282 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721294 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
10423 20:06:27.721311 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721325 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721344 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721360 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721416 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721430 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721443 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721456 stat64("/lib/i486-linux-gnu/tls/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721468 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721482 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721495 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721508 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721520 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721547 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721559 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721572 stat64("/lib/i486-linux-gnu/tls", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721583 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721597 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721609 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721622 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721634 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721647 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721659 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721672 stat64("/lib/i486-linux-gnu/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721684 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721697 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721709 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721722 stat64("/lib/i486-linux-gnu/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721733 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721746 stat64("/lib/i486-linux-gnu/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721758 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721770 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.721788 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721802 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721815 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721829 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721849 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721891 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721921 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721965 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.721978 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.721992 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722004 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722017 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722030 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722043 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722055 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722068 stat64("/usr/lib/i486-linux-gnu/tls", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722080 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722094 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722106 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722120 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722132 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722146 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722158 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722171 stat64("/usr/lib/i486-linux-gnu/i686", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722183 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722197 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722209 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722222 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722234 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722247 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbf88cd2c) = -1 ENOENT (No such file or directory)
10423 20:06:27.722259 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
10423 20:06:27.722272 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10423 20:06:27.722291 munmap(0xb7dc9000, 29913) = 0
10423 20:06:27.722312 open("/etc/ld.so.cache", O_RDONLY) = 6
10423 20:06:27.722325 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10423 20:06:27.722350 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7dc9000
10423 20:06:27.722388 close(6)          = 0
10423 20:06:27.722400 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10423 20:06:27.722433 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
10423 20:06:27.722466 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
10423 20:06:27.722560 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
10423 20:06:27.722582 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7dbe000
10423 20:06:27.722595 mmap2(0xb7dc7000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7dc7000
10423 20:06:27.722613 close(6)          = 0
10423 20:06:27.722637 munmap(0xb7dc9000, 29913) = 0
10423 20:06:27.722653 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
10423 20:06:27.722670 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
10423 20:06:27.722686 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
10423 20:06:27.722704 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dd0000
10423 20:06:27.722715 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
10423 20:06:27.722960 close(6)          = 0
10423 20:06:27.722971 munmap(0xb7dd0000, 4096) = 0
10423 20:06:27.722990 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
10423 20:06:27.723004 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
10423 20:06:27.723021 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dd0000
10423 20:06:27.723032 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
10423 20:06:27.723210 close(6)          = 0
10423 20:06:27.723219 munmap(0xb7dd0000, 4096) = 0
10423 20:06:27.723246 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
10423 20:06:27.723269 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88d238) = -1 EINVAL (Invalid argument)
10423 20:06:27.723283 _llseek(6, 0, 0xbf88d280, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.723295 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88d238) = -1 EINVAL (Invalid argument)
10423 20:06:27.723305 _llseek(6, 0, 0xbf88d280, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.723315 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
10423 20:06:27.723446 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10423 20:06:27.723483 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
10423 20:06:27.723512 listen(6, 5)      = 0
10423 20:06:27.723565 accept(6, {sa_family=AF_INET, sin_port=htons(36933), sin_addr=inet_addr("10.0.2.4")}, [16]) = 8
10423 20:06:27.828575 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88c228) = -1 EINVAL (Invalid argument)
10423 20:06:27.828650 _llseek(8, 0, 0xbf88c270, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.828677 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88c228) = -1 EINVAL (Invalid argument)
10423 20:06:27.828707 _llseek(8, 0, 0xbf88c270, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.828750 fcntl64(8, F_SETFD, FD_CLOEXEC) = 0
10423 20:06:27.828861 close(6)          = 0
10423 20:06:27.829081 dup(8)            = 6
10423 20:06:27.829131 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88d0c8) = -1 EINVAL (Invalid argument)
10423 20:06:27.829162 _llseek(6, 0, 0xbf88d110, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.829186 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
10423 20:06:27.829239 dup2(6, 1)        = 1
10423 20:06:27.829250 close(6)          = 0
10423 20:06:27.829262 fcntl64(1, F_SETFD, 0) = 0
10423 20:06:27.829272 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88d098) = -1 EINVAL (Invalid argument)
10423 20:06:27.829283 _llseek(1, 0, 0xbf88d0e0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.829311 dup(8)            = 6
10423 20:06:27.829324 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf88d0c8) = -1 EINVAL (Invalid argument)
10423 20:06:27.829334 _llseek(6, 0, 0xbf88d110, SEEK_CUR) = -1 ESPIPE (Illegal seek)
10423 20:06:27.829344 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
10423 20:06:27.829361 dup2(6, 0)        = 0
10423 20:06:27.829371 close(6)          = 0
10423 20:06:27.829391 fcntl64(0, F_SETFD, 0) = 0
10423 20:06:27.829432 fcntl64(0, F_SETFD, 0) = 0
10423 20:06:27.829448 read(0,  <unfinished ...>
10422 20:06:27.829754 exit_group(0)     = ?
10420 20:06:27.829852 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 10422
10420 20:06:27.829868 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
10420 20:06:27.829918 --- SIGCHLD (Child exited) @ 0 (0) ---
10420 20:06:27.829927 waitpid(-1, 0xbfc1e798, WNOHANG) = -1 ECHILD (No child processes)
10420 20:06:27.829939 sigreturn()       = ? (mask now [])
10420 20:06:27.829956 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
10420 20:06:27.830028 exit_group(0)     = ?
4519  20:06:27.830090 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 10420
4519  20:06:27.830104 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:06:27.830157 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:06:27.830168 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:06:27.830178 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:06:27.830196 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = -1 ECONNRESET (Connection reset by peer)
4519  20:06:27.830220 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  20:06:27.830238 close(5)          = 0
4519  20:06:27.830253 gettimeofday({1495670787, 830258}, NULL) = 0
4519  20:06:27.830267 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 2 (in [4 7], left {1, 0})
4519  20:06:27.830310 clock_gettime(CLOCK_MONOTONIC, {47597, 647323653}) = 0
4519  20:06:27.830323 recv(4, "PRIVMSG  #testit0 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\nPRIVMSG  #testit0 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\nPRIVMSG  #testit0 ABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 159
4519  20:06:27.830367 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830433 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830448 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830463 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830492 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830506 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830526 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830540 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830554 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830567 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830581 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830594 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830608 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830621 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830634 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830648 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830661 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830675 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830688 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830703 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830717 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830731 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830750 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830764 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830778 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830792 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830805 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830819 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830832 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830855 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830894 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830908 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830936 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830950 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830963 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830976 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.830990 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831003 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831017 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831030 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831043 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831057 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831071 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831084 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831100 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831114 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831128 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831145 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831158 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831172 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831185 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831199 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831212 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831226 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831239 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831253 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831266 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831279 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831293 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831306 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831319 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831333 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831354 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831396 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
4519  20:06:27.831410 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 120000}, ...}) = 0
