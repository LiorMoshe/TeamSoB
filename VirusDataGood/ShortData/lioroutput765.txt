12962 20:32:07.705662 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
12962 20:32:07.705677 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf958268) = -1 ENOTTY (Inappropriate ioctl for device)
12962 20:32:07.705689 _llseek(10, 0, [0], SEEK_CUR) = 0
12962 20:32:07.705712 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
12962 20:32:07.706111 brk(0x82de000)    = 0x82de000
12962 20:32:07.706466 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
12962 20:32:07.707028 _llseek(10, 6916, [6916], SEEK_SET) = 0
12962 20:32:07.707046 _llseek(10, 0, [6916], SEEK_CUR) = 0
12962 20:32:07.707057 close(10)         = 0
12962 20:32:07.707245 _llseek(8, 1334, [1334], SEEK_SET) = 0
12962 20:32:07.707263 _llseek(8, 0, [1334], SEEK_CUR) = 0
12962 20:32:07.707273 close(8)          = 0
12962 20:32:07.707909 brk(0x82ff000)    = 0x82ff000
12962 20:32:07.708055 _llseek(6, 2689, [2689], SEEK_SET) = 0
12962 20:32:07.708071 _llseek(6, 0, [2689], SEEK_CUR) = 0
12962 20:32:07.708082 close(6)          = 0
12962 20:32:07.708237 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e04908) = 12963
12963 20:32:08.041292 getppid()         = 12962
12963 20:32:08.041837 open("/etc/nsswitch.conf", O_RDONLY) = 6
12963 20:32:08.041865 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
12963 20:32:08.041886 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
12963 20:32:08.041901 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
12963 20:32:08.041952 read(6, "", 4096) = 0
12963 20:32:08.041962 close(6)          = 0
12963 20:32:08.041973 munmap(0xb7fca000, 4096) = 0
12963 20:32:08.041999 open("/etc/ld.so.cache", O_RDONLY) = 6
12963 20:32:08.042013 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12963 20:32:08.042037 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7dd1000
12963 20:32:08.042048 close(6)          = 0
12963 20:32:08.042059 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12963 20:32:08.042078 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042092 stat64("/lib/tls/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042106 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042120 stat64("/lib/tls/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042131 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042144 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042162 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042206 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042224 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042251 stat64("/lib/tls/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042263 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042275 stat64("/lib/tls/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042286 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042298 stat64("/lib/tls/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042309 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042321 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042338 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042350 stat64("/lib/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042362 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042374 stat64("/lib/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042385 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042397 stat64("/lib/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042408 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042420 stat64("/lib/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042431 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042443 stat64("/lib/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042453 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042465 stat64("/lib/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042476 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042488 stat64("/lib/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042498 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042510 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042526 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042540 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042552 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042564 stat64("/usr/lib/tls/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042576 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042592 stat64("/usr/lib/tls/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042604 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042617 stat64("/usr/lib/tls/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042628 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042640 stat64("/usr/lib/tls/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042652 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042669 stat64("/usr/lib/tls/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042702 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042752 stat64("/usr/lib/tls/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042778 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042790 stat64("/usr/lib/tls", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042802 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042815 stat64("/usr/lib/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042840 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042853 stat64("/usr/lib/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042864 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042877 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042894 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042907 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.042924 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042936 stat64("/usr/lib/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042947 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042959 stat64("/usr/lib/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042970 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.042983 stat64("/usr/lib/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.042994 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043005 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
12963 20:32:08.043022 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043036 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043049 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043062 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043074 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043088 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043100 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043113 stat64("/lib/i486-linux-gnu/tls/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043125 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043138 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043153 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043172 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043205 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043219 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043231 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043258 stat64("/lib/i486-linux-gnu/tls", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043269 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043283 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043295 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043308 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043321 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043334 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043346 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043358 stat64("/lib/i486-linux-gnu/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043370 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043383 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043395 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043408 stat64("/lib/i486-linux-gnu/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043420 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043433 stat64("/lib/i486-linux-gnu/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043444 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043457 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.043474 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043488 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043501 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043515 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043528 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043556 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043569 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043582 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043595 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043609 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043622 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043635 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.043651 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.043972 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044059 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044107 stat64("/usr/lib/i486-linux-gnu/tls", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044139 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044166 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044189 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044204 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044217 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044231 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044244 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044257 stat64("/usr/lib/i486-linux-gnu/i686", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044269 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044283 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044296 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044309 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044322 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044335 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbf958dec) = -1 ENOENT (No such file or directory)
12963 20:32:08.044348 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
12963 20:32:08.044362 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12963 20:32:08.044381 munmap(0xb7dd1000, 29913) = 0
12963 20:32:08.044403 open("/etc/ld.so.cache", O_RDONLY) = 6
12963 20:32:08.044416 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12963 20:32:08.044433 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7dd1000
12963 20:32:08.044444 close(6)          = 0
12963 20:32:08.044455 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12963 20:32:08.044471 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
12963 20:32:08.044486 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
12963 20:32:08.044631 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
12963 20:32:08.044654 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7dc6000
12963 20:32:08.044667 mmap2(0xb7dcf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7dcf000
12963 20:32:08.044685 close(6)          = 0
12963 20:32:08.044710 munmap(0xb7dd1000, 29913) = 0
12963 20:32:08.044727 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12963 20:32:08.044744 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
12963 20:32:08.044760 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12963 20:32:08.044778 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dd8000
12963 20:32:08.044790 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12963 20:32:08.044981 close(6)          = 0
12963 20:32:08.044992 munmap(0xb7dd8000, 4096) = 0
12963 20:32:08.045010 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
12963 20:32:08.045034 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
12963 20:32:08.045051 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dd8000
12963 20:32:08.045062 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
12963 20:32:08.045246 close(6)          = 0
12963 20:32:08.045256 munmap(0xb7dd8000, 4096) = 0
12963 20:32:08.045286 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
12963 20:32:08.045309 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf9592f8) = -1 EINVAL (Invalid argument)
12963 20:32:08.045323 _llseek(6, 0, 0xbf959340, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.045336 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf9592f8) = -1 EINVAL (Invalid argument)
12963 20:32:08.045347 _llseek(6, 0, 0xbf959340, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.045357 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
12963 20:32:08.045415 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
12963 20:32:08.045453 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
12963 20:32:08.045479 listen(6, 5)      = 0
12963 20:32:08.045570 accept(6, {sa_family=AF_INET, sin_port=htons(39883), sin_addr=inet_addr("10.0.2.4")}, [16]) = 8
12963 20:32:08.101287 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf9582e8) = -1 EINVAL (Invalid argument)
12963 20:32:08.101292 _llseek(8, 0, 0xbf958330, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.101305 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf9582e8) = -1 EINVAL (Invalid argument)
12963 20:32:08.101316 _llseek(8, 0, 0xbf958330, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.101327 fcntl64(8, F_SETFD, FD_CLOEXEC) = 0
12963 20:32:08.101370 close(6)          = 0
12963 20:32:08.101442 dup(8)            = 6
12963 20:32:08.101462 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf959188) = -1 EINVAL (Invalid argument)
12963 20:32:08.101473 _llseek(6, 0, 0xbf9591d0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.101484 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
12963 20:32:08.101504 dup2(6, 1)        = 1
12963 20:32:08.101516 close(6)          = 0
12963 20:32:08.101527 fcntl64(1, F_SETFD, 0) = 0
12963 20:32:08.101538 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf959158) = -1 EINVAL (Invalid argument)
12963 20:32:08.101549 _llseek(1, 0, 0xbf9591a0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.101581 dup(8)            = 6
12963 20:32:08.101594 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbf959188) = -1 EINVAL (Invalid argument)
12963 20:32:08.101605 _llseek(6, 0, 0xbf9591d0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
12963 20:32:08.101615 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
12963 20:32:08.101632 dup2(6, 0)        = 0
12963 20:32:08.101643 close(6)          = 0
12963 20:32:08.101653 fcntl64(0, F_SETFD, 0) = 0
12963 20:32:08.101666 fcntl64(0, F_SETFD, 0) = 0
12963 20:32:08.101681 read(0,  <unfinished ...>
12962 20:32:08.481636 exit_group(0)     = ?
12960 20:32:08.481733 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12962
12960 20:32:08.481751 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12960 20:32:08.481773 --- SIGCHLD (Child exited) @ 0 (0) ---
12960 20:32:08.501513 waitpid(-1, 0xbfaf9678, WNOHANG) = -1 ECHILD (No child processes)
12960 20:32:08.502803 sigreturn()       = ? (mask now [])
12960 20:32:08.502840 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12960 20:32:08.502885 exit_group(0)     = ?
4519  20:32:08.531671 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 12960
4519  20:32:08.531671 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  20:32:08.531671 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  20:32:08.531671 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  20:32:08.531678 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  20:32:08.531698 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  20:32:08.531762 time(NULL)        = 1495672328
4519  20:32:08.531777 time(NULL)        = 1495672328
4519  20:32:08.531800 gettimeofday({1495672328, 531805}, NULL) = 0
4519  20:32:08.531815 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  20:32:08.531846 clock_gettime(CLOCK_MONOTONIC, {49138, 348859189}) = 0
4519  20:32:08.531859 gettimeofday({1495672328, 531863}, NULL) = 0
4519  20:32:08.531870 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 4 (in [4 5 7 9], left {1, 0})
4519  20:32:08.531912 clock_gettime(CLOCK_MONOTONIC, {49138, 348967480}) = 0
4519  20:32:08.531970 recv(9, "PRIVMSG  #testit2 BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\nPRIVMSG  #testit2 ABCDEFGHIJKLMNOPQRSTUVWXYZ\n", 8192, 0) = 104
4519  20:32:08.532008 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532028 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532042 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532057 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532070 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532085 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532098 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532112 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532126 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532140 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532154 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532168 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532189 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532203 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532217 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532231 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532245 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532258 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532272 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532288 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532302 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532316 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532336 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532351 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532365 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532379 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532393 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532407 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532421 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532435 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532449 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532462 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532476 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532490 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532510 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532525 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532539 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532553 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532566 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532580 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532594 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532609 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532622 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532636 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532652 recv(7, "PRIVMSG  #testit1 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
4519  20:32:08.532669 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532684 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532698 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532713 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532727 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532741 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532755 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532769 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532787 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532801 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532815 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532828 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532842 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532856 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532870 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532884 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532897 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532911 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532925 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532939 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532953 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532967 getrusage(RUSAGE_SELF, {ru_utime={0, 160000}, ru_stime={3, 160000}, ...}) = 0
4519  20:32:08.532983 recv(5, "", 8192, 0) = 0
4519  20:32:08.532995 getsockopt(5, SOL_SOCKET, SO_ERROR, [32], [4]) = 0
4519  20:32:08.533023 send(5, "ERROR :Closing Link: [10.0.2.4] (Broken pipe)\r\n", 47, 0) = -1 EPIPE (Broken pipe)
4519  20:32:08.533085 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  20:32:08.533121 close(5)          = 0
4519  20:32:08.533135 recv(4, "PRIVMSG  #testit0 Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n", 8192, 0) = 55
