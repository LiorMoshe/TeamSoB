25679 15:42:49.766857 close(7)          = 0
25679 15:42:49.766960 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25679 15:42:49.766985 statfs64("/selinux", 84, 0xbfa1b4ac) = -1 ENOENT (No such file or directory)
25679 15:42:49.766998 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
25679 15:42:49.767025 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
25679 15:42:49.767042 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa4000
25679 15:42:49.767053 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
25679 15:42:49.767141 read(7, "", 1024) = 0
25679 15:42:49.767151 close(7)          = 0
25679 15:42:49.767161 munmap(0xb7fa4000, 4096) = 0
25679 15:42:49.767176 munmap(0xb7dd3000, 29913) = 0
25679 15:42:49.767189 read(6, "", 4096) = 0
25679 15:42:49.767200 close(6)          = 0
25679 15:42:49.767209 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.767220 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.767240 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.767253 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25679 15:42:49.767269 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.767279 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25679 15:42:49.767319 read(6, "", 4096) = 0
25679 15:42:49.767329 close(6)          = 0
25679 15:42:49.767338 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.767348 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.767366 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.767379 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25679 15:42:49.767395 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.767405 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25679 15:42:49.767443 read(6, "", 4096) = 0
25679 15:42:49.767452 close(6)          = 0
25679 15:42:49.767461 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.767471 read(5, "", 4096) = 0
25679 15:42:49.767480 close(5)          = 0
25679 15:42:49.767489 munmap(0xb7fab000, 4096) = 0
25679 15:42:49.767499 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25679 15:42:49.767512 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25679 15:42:49.767528 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fab000
25679 15:42:49.767538 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25679 15:42:49.767583 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.767601 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.767630 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25679 15:42:49.767647 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.767658 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25679 15:42:49.767720 read(6, "", 4096) = 0
25679 15:42:49.767729 close(6)          = 0
25679 15:42:49.767739 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.767750 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.767768 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.767780 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25679 15:42:49.767796 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.767806 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25679 15:42:49.767845 read(6, "", 4096) = 0
25679 15:42:49.767855 close(6)          = 0
25679 15:42:49.767864 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.767874 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.767892 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.767904 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25679 15:42:49.767920 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.767930 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25679 15:42:49.768045 read(6, "", 4096) = 0
25679 15:42:49.768055 close(6)          = 0
25679 15:42:49.768064 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.768074 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25679 15:42:49.768092 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25679 15:42:49.768105 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25679 15:42:49.768120 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25679 15:42:49.768130 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25679 15:42:49.768168 read(6, "", 4096) = 0
25679 15:42:49.768177 close(6)          = 0
25679 15:42:49.768189 munmap(0xb7fa5000, 4096) = 0
25679 15:42:49.768199 read(5, "", 4096) = 0
25679 15:42:49.768208 close(5)          = 0
25679 15:42:49.768217 munmap(0xb7fab000, 4096) = 0
25679 15:42:49.768230 time(NULL)        = 1495654969
25679 15:42:49.768241 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25679 15:42:49.768278 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25679 15:42:49.768292 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25679 15:42:49.768307 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fab000
25679 15:42:49.768318 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25679 15:42:49.768339 read(5, "", 4096) = 0
25679 15:42:49.768349 close(5)          = 0
25679 15:42:49.768358 munmap(0xb7fab000, 4096) = 0
25679 15:42:49.768374 getuid32()        = 0
25679 15:42:49.768391 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.768405 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.768416 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25679 15:42:49.768432 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.768443 _llseek(5, 1624, [1624], SEEK_SET) = 0
25679 15:42:49.768462 munmap(0xb7fab000, 1624) = 0
25679 15:42:49.768473 close(5)          = 0
25679 15:42:49.768497 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.768514 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.768525 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25679 15:42:49.768540 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.768551 _llseek(5, 1233, [1233], SEEK_SET) = 0
25679 15:42:49.768590 munmap(0xb7fab000, 1233) = 0
25679 15:42:49.768601 close(5)          = 0
25679 15:42:49.768620 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.768634 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.768644 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25679 15:42:49.768661 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.768671 _llseek(5, 1624, [1624], SEEK_SET) = 0
25679 15:42:49.768688 munmap(0xb7fab000, 1624) = 0
25679 15:42:49.768697 close(5)          = 0
25679 15:42:49.768710 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.768723 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.768733 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25679 15:42:49.768749 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.768760 _llseek(5, 1233, [1233], SEEK_SET) = 0
25679 15:42:49.768777 munmap(0xb7fab000, 1233) = 0
25679 15:42:49.768786 close(5)          = 0
25679 15:42:49.769025 getuid32()        = 0
25679 15:42:49.769036 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.769048 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.769059 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25679 15:42:49.769075 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.769085 _llseek(5, 1624, [1624], SEEK_SET) = 0
25679 15:42:49.769101 munmap(0xb7fab000, 1624) = 0
25679 15:42:49.769111 close(5)          = 0
25679 15:42:49.769123 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.769136 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.769146 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25679 15:42:49.769162 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.769173 _llseek(5, 1233, [1233], SEEK_SET) = 0
25679 15:42:49.769189 munmap(0xb7fab000, 1233) = 0
25679 15:42:49.769199 close(5)          = 0
25679 15:42:49.769210 time(NULL)        = 1495654969
25679 15:42:49.769226 munmap(0xb7fa8000, 12164) = 0
25679 15:42:49.769239 munmap(0xb7fa6000, 7136) = 0
25679 15:42:49.769253 munmap(0xb7ddb000, 95428) = 0
25679 15:42:49.769264 munmap(0xb7da1000, 201052) = 0
25679 15:42:49.769275 munmap(0xb7d88000, 101180) = 0
25679 15:42:49.769291 gettimeofday({1495654969, 769295}, NULL) = 0
25679 15:42:49.769307 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa1d384) = -1 ENOENT (No such file or directory)
25679 15:42:49.769323 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25679 15:42:49.769349 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa1d4d4) = 0
25679 15:42:49.769366 write(3, "Wed May 24 15:42:49 2017 [pid 25679] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25679 15:42:49.769383 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa1d4dc) = 0
25679 15:42:49.769396 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25679 15:42:49.769410 write(4, "\1", 1 <unfinished ...>
25680 15:42:49.769420 <... read resumed> "\1", 1) = 1
25679 15:42:49.769425 <... write resumed> ) = 1
25680 15:42:49.769432 exit_group(0)     = ?
25679 15:42:49.769469 --- SIGCHLD (Child exited) @ 0 (0) ---
25679 15:42:49.769476 sigreturn()       = ? (mask now [])
25679 15:42:49.769496 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25680
25679 15:42:49.769509 close(4)          = 0
25679 15:42:49.769523 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25679 15:42:49.769542 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25679 15:42:49.769565 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25679 15:42:49.769580 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e116f8) = 25681
25681 15:42:49.769635 prctl(0x1, 0x9, 0, 0, 0) = 0
25681 15:42:49.769649 close(4)          = 0
25681 15:42:49.769676 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25681 15:42:49.769693 _llseek(4, 0, [0], SEEK_CUR) = 0
25681 15:42:49.769709 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25681 15:42:49.769728 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
25681 15:42:49.769740 _llseek(4, 1624, [1624], SEEK_SET) = 0
25681 15:42:49.769763 munmap(0xb7fab000, 1624) = 0
25681 15:42:49.769774 close(4)          = 0
25681 15:42:49.769788 getuid32()        = 0
25681 15:42:49.769798 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25681 15:42:49.769811 _llseek(4, 0, [0], SEEK_CUR) = 0
25681 15:42:49.769821 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25681 15:42:49.769838 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
25681 15:42:49.769848 _llseek(4, 1624, [1624], SEEK_SET) = 0
25681 15:42:49.769864 munmap(0xb7fab000, 1624) = 0
25681 15:42:49.769874 close(4)          = 0
25681 15:42:49.769901 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25681 15:42:49.769922 read(4, "65536\n", 31) = 6
25681 15:42:49.769934 close(4)          = 0
25681 15:42:49.769949 socket(PF_FILE, SOCK_STREAM, 0) = 4
25681 15:42:49.769961 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25681 15:42:49.769972 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25681 15:42:49.769994 close(4)          = 0
25681 15:42:49.770006 socket(PF_FILE, SOCK_STREAM, 0) = 4
25681 15:42:49.770016 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25681 15:42:49.770026 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25681 15:42:49.770045 close(4)          = 0
25681 15:42:49.770069 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25681 15:42:49.770085 _llseek(4, 0, [0], SEEK_CUR) = 0
25681 15:42:49.770097 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25681 15:42:49.770114 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
25681 15:42:49.770125 _llseek(4, 886, [886], SEEK_SET) = 0
25681 15:42:49.770150 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25681 15:42:49.770167 munmap(0xb7fab000, 886) = 0
25681 15:42:49.770177 close(4)          = 0
25681 15:42:49.770187 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25681 15:42:49.770204 geteuid32()       = 0
25681 15:42:49.770216 getegid32()       = 0
25681 15:42:49.770226 setregid32(-1, 1000) = 0
25681 15:42:49.770237 setreuid32(-1, 1000) = 0
25681 15:42:49.770253 chdir("/home/msfadmin") = 0
25681 15:42:49.770266 setreuid32(-1, 0) = 0
25681 15:42:49.770275 setregid32(-1, 0) = 0
25681 15:42:49.770286 setgid32(1000)    = 0
25681 15:42:49.770296 setuid32(1000)    = 0
25681 15:42:49.770306 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25681 15:42:49.770320 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa9000
25681 15:42:49.770332 mprotect(0xb7fab000, 4096, PROT_NONE) = 0
25681 15:42:49.770343 mprotect(0xb7fa9000, 4096, PROT_NONE) = 0
25681 15:42:49.770354 getcwd("/home/msfadmin", 4096) = 15
25681 15:42:49.770368 umask(022)        = 077
25681 15:42:49.770378 getcwd("/home/msfadmin", 4096) = 15
25681 15:42:49.770391 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25681 15:42:49.770414 write(0, "230 Login successful.\r\n", 23) = 23
25681 15:42:49.770525 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.770543 alarm(300)        = 0
25681 15:42:49.770555 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa6000
25681 15:42:49.770566 mprotect(0xb7fa8000, 4096, PROT_NONE) = 0
25681 15:42:49.770578 mprotect(0xb7fa6000, 4096, PROT_NONE) = 0
25681 15:42:49.770591 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
25681 15:42:49.770604 read(0, "TYPE I\r\n", 8) = 8
25681 15:42:49.770622 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
25681 15:42:49.770664 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.770679 alarm(300)        = 300
25681 15:42:49.770690 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
25681 15:42:49.770702 read(0, "PASV\r\n", 6) = 6
25681 15:42:49.770714 write(5, "\n", 1) = 1
25681 15:42:49.770725 read(5,  <unfinished ...>
25679 15:42:49.770739 close(5)          = 0
25679 15:42:49.770752 getuid32()        = 0
25679 15:42:49.770767 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25679 15:42:49.770782 _llseek(5, 0, [0], SEEK_CUR) = 0
25679 15:42:49.770795 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25679 15:42:49.770813 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
25679 15:42:49.770824 _llseek(5, 1624, [1624], SEEK_SET) = 0
25679 15:42:49.770842 munmap(0xb7fab000, 1624) = 0
25679 15:42:49.770854 close(5)          = 0
25679 15:42:49.770870 setgroups32(0, []) = 0
25679 15:42:49.770882 chdir("/usr/share/empty") = 0
25679 15:42:49.770895 chroot(".")       = 0
25679 15:42:49.770906 capset(NULL, NULL) = -1 EFAULT (Bad address)
25679 15:42:49.770921 prctl(0x8, 0, 0xbfa1d4b8, 0x80549a6, 0xbfa1d4a0) = 0
25679 15:42:49.770932 prctl(0x8, 0x1, 0xbfa1d4b8, 0x8054a49, 0xbfa1d4a0) = 0
25679 15:42:49.770942 setgid32(65534)   = 0
25679 15:42:49.770952 setuid32(65534)   = 0
25679 15:42:49.770962 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25679 15:42:49.770977 read(4, "\n", 1)  = 1
25679 15:42:49.770990 write(4, "\1", 1) = 1
25681 15:42:49.771002 <... read resumed> "\1", 1) = 1
25681 15:42:49.771009 write(5, "\f", 1) = 1
25681 15:42:49.771020 read(5,  <unfinished ...>
25679 15:42:49.771026 read(4, "\f", 1)  = 1
25679 15:42:49.771046 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
25679 15:42:49.771066 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
25679 15:42:49.771083 gettimeofday({1495654969, 771087}, NULL) = 0
25679 15:42:49.771101 bind(5, {sa_family=AF_INET, sin_port=htons(18636), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
25679 15:42:49.771119 listen(5, 1)      = 0
25679 15:42:49.771134 write(4, "\314H\0\0", 4) = 4
25681 15:42:49.771145 <... read resumed> "\314H\0\0", 4) = 4
25681 15:42:49.771160 write(0, "227 Entering Passive Mode (127,0,0,1,72,204).\r\n", 47) = 47
25681 15:42:49.771286 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.771304 alarm(300)        = 300
25681 15:42:49.771316 recv(0, "STOR myfile1\r\n", 4096, MSG_PEEK) = 14
25681 15:42:49.771329 read(0, "STOR myfile1\r\n", 14) = 14
25681 15:42:49.771344 write(5, "\v", 1) = 1
25681 15:42:49.771355 read(5,  <unfinished ...>
25679 15:42:49.771363 read(4, "\v", 1)  = 1
25679 15:42:49.771385 write(4, "\1\0\0\0", 4) = 4
25681 15:42:49.771396 <... read resumed> "\1\0\0\0", 4) = 4
25681 15:42:49.771405 gettimeofday({1495654969, 771409}, NULL) = 0
25681 15:42:49.771416 getcwd("/home/msfadmin", 4096) = 15
25681 15:42:49.771429 open("myfile1", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
25681 15:42:49.771443 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
25681 15:42:49.771595 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
25681 15:42:49.771608 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
25681 15:42:49.771618 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa1d404) = 0
25681 15:42:49.771636 ftruncate64(4, 0) = 0
25681 15:42:49.771658 _llseek(4, 0, [0], SEEK_SET) = 0
25681 15:42:49.771669 write(5, "\v", 1) = 1
25681 15:42:49.771680 read(5,  <unfinished ...>
25679 15:42:49.771688 read(4, "\v", 1)  = 1
25679 15:42:49.771699 write(4, "\1\0\0\0", 4) = 4
25681 15:42:49.771710 <... read resumed> "\1\0\0\0", 4) = 4
25681 15:42:49.771717 write(5, "\v", 1) = 1
25681 15:42:49.771727 read(5,  <unfinished ...>
25679 15:42:49.771734 read(4, "\v", 1)  = 1
25679 15:42:49.771745 write(4, "\1\0\0\0", 4) = 4
25681 15:42:49.771755 <... read resumed> "\1\0\0\0", 4) = 4
25681 15:42:49.771773 write(5, "\r", 1) = 1
25681 15:42:49.771786 read(5,  <unfinished ...>
25679 15:42:49.771793 read(4, "\r", 1)  = 1
25679 15:42:49.771808 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
25679 15:42:49.771827 accept(5, {sa_family=AF_INET, sin_port=htons(54510), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
25679 15:42:49.771861 write(4, "\1", 1) = 1
25681 15:42:49.771872 <... read resumed> "\1", 1) = 1
25681 15:42:49.771882 recvmsg(5,  <unfinished ...>
25679 15:42:49.771892 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25681 15:42:49.771910 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25681 15:42:49.771924 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
25681 15:42:49.771936 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
25681 15:42:49.771948 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
25681 15:42:49.771960 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.771973 alarm(300)        = 300
25681 15:42:49.771987 write(0, "150 Ok to send data.\r\n", 22) = 22
25681 15:42:49.772071 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7de0000
25681 15:42:49.772085 mprotect(0xb7df2000, 4096, PROT_NONE) = 0
25681 15:42:49.772098 mprotect(0xb7de0000, 4096, PROT_NONE) = 0
25681 15:42:49.772119 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
25681 15:42:49.772134 write(4, "assasaaa\na\na\na\na\n", 17) = 17
25681 15:42:49.772152 read(6, "", 65536) = 0
25681 15:42:49.772162 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.772176 alarm(300)        = 300
25681 15:42:49.772186 close(6)          = 0
25681 15:42:49.772195 alarm(0)          = 300
25681 15:42:49.772205 gettimeofday({1495654969, 772209}, NULL) = 0
25681 15:42:49.772225 getpid()          = 25681
25681 15:42:49.772237 gettimeofday({1495654969, 772241}, NULL) = 0
25681 15:42:49.772256 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa1d3a4) = 0
25681 15:42:49.772272 write(3, "Wed May 24 15:42:49 2017 [pid 25681] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile1\", 17 bytes, 19.95Kbyte/sec\n", 130) = 130
25681 15:42:49.772293 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa1d3ac) = 0
25681 15:42:49.772308 write(0, "226 Transfer complete.\r\n", 24) = 24
25681 15:42:49.772355 write(5, "\n", 1) = 1
25681 15:42:49.772367 read(5,  <unfinished ...>
25679 15:42:49.772374 close(6)          = 0
25679 15:42:49.772393 read(4, "\n", 1)  = 1
25679 15:42:49.772405 close(5)          = 0
25679 15:42:49.772420 write(4, "\1", 1) = 1
25681 15:42:49.772431 <... read resumed> "\1", 1) = 1
25681 15:42:49.772438 close(4)          = 0
25681 15:42:49.772449 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25681 15:42:49.772462 alarm(300)        = 0
25681 15:42:49.772474 recv(0,  <unfinished ...>
