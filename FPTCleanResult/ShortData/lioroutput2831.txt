24990 15:30:13.583142 close(7)          = 0
24990 15:30:13.583259 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
24990 15:30:13.583288 statfs64("/selinux", 84, 0xbfc43edc) = -1 ENOENT (No such file or directory)
24990 15:30:13.583310 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
24990 15:30:13.583336 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
24990 15:30:13.583352 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f31000
24990 15:30:13.583364 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
24990 15:30:13.583450 read(7, "", 1024) = 0
24990 15:30:13.583460 close(7)          = 0
24990 15:30:13.583470 munmap(0xb7f31000, 4096) = 0
24990 15:30:13.583486 munmap(0xb7d60000, 29913) = 0
24990 15:30:13.583500 read(6, "", 4096) = 0
24990 15:30:13.583511 close(6)          = 0
24990 15:30:13.583520 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.583531 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.583551 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.583564 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
24990 15:30:13.583580 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.583591 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
24990 15:30:13.583631 read(6, "", 4096) = 0
24990 15:30:13.583641 close(6)          = 0
24990 15:30:13.583650 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.583661 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.583679 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.583692 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
24990 15:30:13.583707 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.583718 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
24990 15:30:13.583778 read(6, "", 4096) = 0
24990 15:30:13.583799 close(6)          = 0
24990 15:30:13.583808 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.583818 read(5, "", 4096) = 0
24990 15:30:13.583828 close(5)          = 0
24990 15:30:13.583836 munmap(0xb7f38000, 4096) = 0
24990 15:30:13.583847 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
24990 15:30:13.583860 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
24990 15:30:13.583876 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f38000
24990 15:30:13.583886 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
24990 15:30:13.583931 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.583949 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.583961 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
24990 15:30:13.583977 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.583987 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
24990 15:30:13.584036 read(6, "", 4096) = 0
24990 15:30:13.584046 close(6)          = 0
24990 15:30:13.584055 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.584066 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.584085 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.584097 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
24990 15:30:13.584113 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.584123 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
24990 15:30:13.584161 read(6, "", 4096) = 0
24990 15:30:13.584171 close(6)          = 0
24990 15:30:13.584180 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.584190 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.584209 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.584221 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
24990 15:30:13.584257 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.584269 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
24990 15:30:13.584396 read(6, "", 4096) = 0
24990 15:30:13.584406 close(6)          = 0
24990 15:30:13.584415 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.584426 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
24990 15:30:13.584444 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
24990 15:30:13.584457 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
24990 15:30:13.584473 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
24990 15:30:13.584483 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
24990 15:30:13.584521 read(6, "", 4096) = 0
24990 15:30:13.584530 close(6)          = 0
24990 15:30:13.584543 munmap(0xb7f32000, 4096) = 0
24990 15:30:13.584553 read(5, "", 4096) = 0
24990 15:30:13.584562 close(5)          = 0
24990 15:30:13.584571 munmap(0xb7f38000, 4096) = 0
24990 15:30:13.584583 time(NULL)        = 1495654213
24990 15:30:13.584595 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
24990 15:30:13.584613 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
24990 15:30:13.584625 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
24990 15:30:13.584640 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f38000
24990 15:30:13.584651 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
24990 15:30:13.584671 read(5, "", 4096) = 0
24990 15:30:13.584681 close(5)          = 0
24990 15:30:13.584689 munmap(0xb7f38000, 4096) = 0
24990 15:30:13.584704 getuid32()        = 0
24990 15:30:13.584721 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.585356 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.585368 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24990 15:30:13.585385 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.585396 _llseek(5, 1624, [1624], SEEK_SET) = 0
24990 15:30:13.585415 munmap(0xb7f38000, 1624) = 0
24990 15:30:13.585426 close(5)          = 0
24990 15:30:13.585452 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.585469 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.585480 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
24990 15:30:13.585495 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.585506 _llseek(5, 1233, [1233], SEEK_SET) = 0
24990 15:30:13.585526 munmap(0xb7f38000, 1233) = 0
24990 15:30:13.585536 close(5)          = 0
24990 15:30:13.585555 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.585568 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.585578 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24990 15:30:13.585593 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.585604 _llseek(5, 1624, [1624], SEEK_SET) = 0
24990 15:30:13.585620 munmap(0xb7f38000, 1624) = 0
24990 15:30:13.585629 close(5)          = 0
24990 15:30:13.585642 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.585654 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.585664 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
24990 15:30:13.585680 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.585690 _llseek(5, 1233, [1233], SEEK_SET) = 0
24990 15:30:13.585707 munmap(0xb7f38000, 1233) = 0
24990 15:30:13.585716 close(5)          = 0
24990 15:30:13.585981 getuid32()        = 0
24990 15:30:13.585995 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.586008 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.586018 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24990 15:30:13.586034 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.586045 _llseek(5, 1624, [1624], SEEK_SET) = 0
24990 15:30:13.586060 munmap(0xb7f38000, 1624) = 0
24990 15:30:13.586070 close(5)          = 0
24990 15:30:13.586083 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.586095 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.586105 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
24990 15:30:13.586121 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.586131 _llseek(5, 1233, [1233], SEEK_SET) = 0
24990 15:30:13.586148 munmap(0xb7f38000, 1233) = 0
24990 15:30:13.586157 close(5)          = 0
24990 15:30:13.586169 time(NULL)        = 1495654213
24990 15:30:13.586184 munmap(0xb7f35000, 12164) = 0
24990 15:30:13.586197 munmap(0xb7f33000, 7136) = 0
24990 15:30:13.586211 munmap(0xb7d68000, 95428) = 0
24990 15:30:13.586222 munmap(0xb7d2e000, 201052) = 0
24990 15:30:13.586232 munmap(0xb7d15000, 101180) = 0
24990 15:30:13.586248 gettimeofday({1495654213, 586252}, NULL) = 0
24990 15:30:13.586263 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfc45db4) = -1 ENOENT (No such file or directory)
24990 15:30:13.586301 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
24990 15:30:13.586337 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc45f04) = 0
24990 15:30:13.586353 write(3, "Wed May 24 15:30:13 2017 [pid 24990] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
24990 15:30:13.586369 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc45f0c) = 0
24990 15:30:13.586382 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24990 15:30:13.586396 write(4, "\1", 1 <unfinished ...>
24991 15:30:13.586405 <... read resumed> "\1", 1) = 1
24990 15:30:13.586411 <... write resumed> ) = 1
24991 15:30:13.586418 exit_group(0)     = ?
24990 15:30:13.586446 --- SIGCHLD (Child exited) @ 0 (0) ---
24990 15:30:13.586454 sigreturn()       = ? (mask now [])
24990 15:30:13.586473 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 24991
24990 15:30:13.586485 close(4)          = 0
24990 15:30:13.586497 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
24990 15:30:13.586511 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24990 15:30:13.586524 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24990 15:30:13.586538 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d9e6f8) = 24992
24992 15:30:13.586588 prctl(0x1, 0x9, 0, 0, 0) = 0
24992 15:30:13.586601 close(4)          = 0
24992 15:30:13.586629 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
24992 15:30:13.586646 _llseek(4, 0, [0], SEEK_CUR) = 0
24992 15:30:13.586660 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24992 15:30:13.586678 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
24992 15:30:13.586690 _llseek(4, 1624, [1624], SEEK_SET) = 0
24992 15:30:13.586712 munmap(0xb7f38000, 1624) = 0
24992 15:30:13.586724 close(4)          = 0
24992 15:30:13.586737 getuid32()        = 0
24992 15:30:13.586747 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
24992 15:30:13.586759 _llseek(4, 0, [0], SEEK_CUR) = 0
24992 15:30:13.586791 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24992 15:30:13.586809 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
24992 15:30:13.586831 _llseek(4, 1624, [1624], SEEK_SET) = 0
24992 15:30:13.586848 munmap(0xb7f38000, 1624) = 0
24992 15:30:13.586858 close(4)          = 0
24992 15:30:13.586883 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
24992 15:30:13.586905 read(4, "65536\n", 31) = 6
24992 15:30:13.586917 close(4)          = 0
24992 15:30:13.586930 socket(PF_FILE, SOCK_STREAM, 0) = 4
24992 15:30:13.586942 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
24992 15:30:13.586953 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
24992 15:30:13.586973 close(4)          = 0
24992 15:30:13.586984 socket(PF_FILE, SOCK_STREAM, 0) = 4
24992 15:30:13.586994 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
24992 15:30:13.587004 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
24992 15:30:13.587022 close(4)          = 0
24992 15:30:13.587045 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
24992 15:30:13.587059 _llseek(4, 0, [0], SEEK_CUR) = 0
24992 15:30:13.587070 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
24992 15:30:13.587086 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
24992 15:30:13.587097 _llseek(4, 886, [886], SEEK_SET) = 0
24992 15:30:13.587122 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
24992 15:30:13.587139 munmap(0xb7f38000, 886) = 0
24992 15:30:13.587149 close(4)          = 0
24992 15:30:13.587158 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
24992 15:30:13.587174 geteuid32()       = 0
24992 15:30:13.587185 getegid32()       = 0
24992 15:30:13.587195 setregid32(-1, 1000) = 0
24992 15:30:13.587205 setreuid32(-1, 1000) = 0
24992 15:30:13.587219 chdir("/home/msfadmin") = 0
24992 15:30:13.587231 setreuid32(-1, 0) = 0
24992 15:30:13.587240 setregid32(-1, 0) = 0
24992 15:30:13.587250 setgid32(1000)    = 0
24992 15:30:13.587277 setuid32(1000)    = 0
24992 15:30:13.587290 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
24992 15:30:13.587317 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f36000
24992 15:30:13.587328 mprotect(0xb7f38000, 4096, PROT_NONE) = 0
24992 15:30:13.587339 mprotect(0xb7f36000, 4096, PROT_NONE) = 0
24992 15:30:13.587350 getcwd("/home/msfadmin", 4096) = 15
24992 15:30:13.587364 umask(022)        = 077
24992 15:30:13.587374 getcwd("/home/msfadmin", 4096) = 15
24992 15:30:13.587387 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
24992 15:30:13.587409 write(0, "230 Login successful.\r\n", 23) = 23
24992 15:30:13.587490 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.587506 alarm(300)        = 0
24992 15:30:13.587517 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f33000
24992 15:30:13.587529 mprotect(0xb7f35000, 4096, PROT_NONE) = 0
24992 15:30:13.587540 mprotect(0xb7f33000, 4096, PROT_NONE) = 0
24992 15:30:13.587552 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
24992 15:30:13.587565 read(0, "TYPE I\r\n", 8) = 8
24992 15:30:13.587581 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
24992 15:30:13.587620 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.587635 alarm(300)        = 300
24992 15:30:13.587646 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
24992 15:30:13.587657 read(0, "PASV\r\n", 6) = 6
24992 15:30:13.587668 write(5, "\n", 1) = 1
24992 15:30:13.587679 read(5,  <unfinished ...>
24990 15:30:13.587691 close(5)          = 0
24990 15:30:13.587705 getuid32()        = 0
24990 15:30:13.587719 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
24990 15:30:13.587733 _llseek(5, 0, [0], SEEK_CUR) = 0
24990 15:30:13.587746 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
24990 15:30:13.587782 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
24990 15:30:13.587805 _llseek(5, 1624, [1624], SEEK_SET) = 0
24990 15:30:13.587822 munmap(0xb7f38000, 1624) = 0
24990 15:30:13.587834 close(5)          = 0
24990 15:30:13.587849 setgroups32(0, []) = 0
24990 15:30:13.587861 chdir("/usr/share/empty") = 0
24990 15:30:13.587873 chroot(".")       = 0
24990 15:30:13.587883 capset(NULL, NULL) = -1 EFAULT (Bad address)
24990 15:30:13.587896 prctl(0x8, 0, 0xbfc45ee8, 0x80549a6, 0xbfc45ed0) = 0
24990 15:30:13.587907 prctl(0x8, 0x1, 0xbfc45ee8, 0x8054a49, 0xbfc45ed0) = 0
24990 15:30:13.587917 setgid32(65534)   = 0
24990 15:30:13.587927 setuid32(65534)   = 0
24990 15:30:13.587936 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
24990 15:30:13.587949 read(4, "\n", 1)  = 1
24990 15:30:13.587963 write(4, "\1", 1) = 1
24992 15:30:13.587973 <... read resumed> "\1", 1) = 1
24992 15:30:13.587981 write(5, "\f", 1) = 1
24992 15:30:13.587991 read(5,  <unfinished ...>
24990 15:30:13.587997 read(4, "\f", 1)  = 1
24990 15:30:13.588009 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
24990 15:30:13.588022 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
24990 15:30:13.588034 gettimeofday({1495654213, 588037}, NULL) = 0
24990 15:30:13.588049 bind(5, {sa_family=AF_INET, sin_port=htons(64472), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
24990 15:30:13.588065 listen(5, 1)      = 0
24990 15:30:13.588077 write(4, "\330\373\0\0", 4) = 4
24992 15:30:13.588088 <... read resumed> "\330\373\0\0", 4) = 4
24992 15:30:13.588101 write(0, "227 Entering Passive Mode (127,0,0,1,251,216).\r\n", 48) = 48
24992 15:30:13.588195 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.588212 alarm(300)        = 300
24992 15:30:13.588223 recv(0, "STOR myfile5\r\n", 4096, MSG_PEEK) = 14
24992 15:30:13.588235 read(0, "STOR myfile5\r\n", 14) = 14
24992 15:30:13.588267 write(5, "\v", 1) = 1
24992 15:30:13.588281 read(5,  <unfinished ...>
24990 15:30:13.588289 read(4, "\v", 1)  = 1
24990 15:30:13.588314 write(4, "\1\0\0\0", 4) = 4
24992 15:30:13.588324 <... read resumed> "\1\0\0\0", 4) = 4
24992 15:30:13.588333 gettimeofday({1495654213, 588336}, NULL) = 0
24992 15:30:13.588343 getcwd("/home/msfadmin", 4096) = 15
24992 15:30:13.588356 open("myfile5", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
24992 15:30:13.588369 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
24992 15:30:13.588386 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
24992 15:30:13.588396 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
24992 15:30:13.588406 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc45e34) = 0
24992 15:30:13.588421 ftruncate64(4, 0) = 0
24992 15:30:13.588439 _llseek(4, 0, [0], SEEK_SET) = 0
24992 15:30:13.588450 write(5, "\v", 1) = 1
24992 15:30:13.588460 read(5,  <unfinished ...>
24990 15:30:13.588467 read(4, "\v", 1)  = 1
24990 15:30:13.588477 write(4, "\1\0\0\0", 4) = 4
24992 15:30:13.588488 <... read resumed> "\1\0\0\0", 4) = 4
24992 15:30:13.588495 write(5, "\v", 1) = 1
24992 15:30:13.588505 read(5,  <unfinished ...>
24990 15:30:13.588511 read(4, "\v", 1)  = 1
24990 15:30:13.588521 write(4, "\1\0\0\0", 4) = 4
24992 15:30:13.588531 <... read resumed> "\1\0\0\0", 4) = 4
24992 15:30:13.588538 write(5, "\r", 1) = 1
24992 15:30:13.588548 read(5,  <unfinished ...>
24990 15:30:13.588554 read(4, "\r", 1)  = 1
24990 15:30:13.588566 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
24990 15:30:13.588592 accept(5, {sa_family=AF_INET, sin_port=htons(38188), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
24990 15:30:13.588614 write(4, "\1", 1) = 1
24992 15:30:13.588624 <... read resumed> "\1", 1) = 1
24992 15:30:13.588634 recvmsg(5,  <unfinished ...>
24990 15:30:13.588643 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
24992 15:30:13.588661 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
24992 15:30:13.588674 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
24992 15:30:13.588686 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
24992 15:30:13.588698 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
24992 15:30:13.588710 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.588723 alarm(300)        = 300
24992 15:30:13.588736 write(0, "150 Ok to send data.\r\n", 22) = 22
24992 15:30:13.588828 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d6d000
24992 15:30:13.588843 mprotect(0xb7d7f000, 4096, PROT_NONE) = 0
24992 15:30:13.588855 mprotect(0xb7d6d000, 4096, PROT_NONE) = 0
24992 15:30:13.588866 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
24992 15:30:13.588879 write(4, "assasaaa\na\na\na\na\n", 17) = 17
24992 15:30:13.588895 read(6, "", 65536) = 0
24992 15:30:13.588906 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.588920 alarm(300)        = 300
24992 15:30:13.588930 close(6)          = 0
24992 15:30:13.588939 alarm(0)          = 300
24992 15:30:13.588948 gettimeofday({1495654213, 588952}, NULL) = 0
24992 15:30:13.588966 getpid()          = 24992
24992 15:30:13.588978 gettimeofday({1495654213, 588982}, NULL) = 0
24992 15:30:13.588996 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc45dd4) = 0
24992 15:30:13.589010 write(3, "Wed May 24 15:30:13 2017 [pid 24992] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile5\", 17 bytes, 25.70Kbyte/sec\n", 130) = 130
24992 15:30:13.589030 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc45ddc) = 0
24992 15:30:13.589045 write(0, "226 Transfer complete.\r\n", 24) = 24
24992 15:30:13.589086 write(5, "\n", 1) = 1
24992 15:30:13.589098 read(5,  <unfinished ...>
24990 15:30:13.589105 close(6)          = 0
24990 15:30:13.589124 read(4, "\n", 1)  = 1
24990 15:30:13.589135 close(5)          = 0
24990 15:30:13.589150 write(4, "\1", 1) = 1
24992 15:30:13.589161 <... read resumed> "\1", 1) = 1
24992 15:30:13.589168 close(4)          = 0
24992 15:30:13.589179 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
24992 15:30:13.589192 alarm(300)        = 0
24992 15:30:13.589204 recv(0,  <unfinished ...>
