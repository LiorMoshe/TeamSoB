25321 15:36:17.905073 munmap(0xb7f94000, 4096) = 0
25321 15:36:17.905083 read(5, "", 4096) = 0
25321 15:36:17.905092 close(5)          = 0
25321 15:36:17.905101 munmap(0xb7f9a000, 4096) = 0
25321 15:36:17.905111 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25321 15:36:17.905124 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25321 15:36:17.905139 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9a000
25321 15:36:17.905149 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25321 15:36:17.905194 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25321 15:36:17.905212 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25321 15:36:17.905224 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25321 15:36:17.905240 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
25321 15:36:17.905250 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25321 15:36:17.905298 read(6, "", 4096) = 0
25321 15:36:17.905308 close(6)          = 0
25321 15:36:17.905317 munmap(0xb7f94000, 4096) = 0
25321 15:36:17.905328 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25321 15:36:17.905346 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25321 15:36:17.905358 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25321 15:36:17.905374 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
25321 15:36:17.905407 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25321 15:36:17.905458 read(6, "", 4096) = 0
25321 15:36:17.905468 close(6)          = 0
25321 15:36:17.905477 munmap(0xb7f94000, 4096) = 0
25321 15:36:17.905488 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25321 15:36:17.905506 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25321 15:36:17.905519 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25321 15:36:17.905535 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
25321 15:36:17.905545 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25321 15:36:17.905660 read(6, "", 4096) = 0
25321 15:36:17.905669 close(6)          = 0
25321 15:36:17.905678 munmap(0xb7f94000, 4096) = 0
25321 15:36:17.905689 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25321 15:36:17.905706 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25321 15:36:17.905719 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25321 15:36:17.905734 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
25321 15:36:17.905744 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25321 15:36:17.905781 read(6, "", 4096) = 0
25321 15:36:17.905791 close(6)          = 0
25321 15:36:17.905803 munmap(0xb7f94000, 4096) = 0
25321 15:36:17.905814 read(5, "", 4096) = 0
25321 15:36:17.905823 close(5)          = 0
25321 15:36:17.905832 munmap(0xb7f9a000, 4096) = 0
25321 15:36:17.905844 time(NULL)        = 1495654577
25321 15:36:17.905856 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25321 15:36:17.905874 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25321 15:36:17.905885 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25321 15:36:17.905896 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9a000
25321 15:36:17.905897 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25321 15:36:17.905897 read(5, "", 4096) = 0
25321 15:36:17.905897 close(5)          = 0
25321 15:36:17.905897 munmap(0xb7f9a000, 4096) = 0
25321 15:36:17.905898 getuid32()        = 0
25321 15:36:17.905898 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.905898 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.905898 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25321 15:36:17.905898 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.905899 _llseek(5, 1624, [1624], SEEK_SET) = 0
25321 15:36:17.905914 munmap(0xb7f9a000, 1624) = 0
25321 15:36:17.905925 close(5)          = 0
25321 15:36:17.905949 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.905966 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.905976 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25321 15:36:17.905992 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.906002 _llseek(5, 1233, [1233], SEEK_SET) = 0
25321 15:36:17.906021 munmap(0xb7f9a000, 1233) = 0
25321 15:36:17.906031 close(5)          = 0
25321 15:36:17.906049 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.906062 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.906072 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25321 15:36:17.906112 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.906134 _llseek(5, 1624, [1624], SEEK_SET) = 0
25321 15:36:17.906150 munmap(0xb7f9a000, 1624) = 0
25321 15:36:17.906160 close(5)          = 0
25321 15:36:17.906172 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.906185 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.906195 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25321 15:36:17.906211 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.906221 _llseek(5, 1233, [1233], SEEK_SET) = 0
25321 15:36:17.906237 munmap(0xb7f9a000, 1233) = 0
25321 15:36:17.906246 close(5)          = 0
25321 15:36:17.906479 getuid32()        = 0
25321 15:36:17.906489 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.906501 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.906511 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25321 15:36:17.906527 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.906537 _llseek(5, 1624, [1624], SEEK_SET) = 0
25321 15:36:17.906552 munmap(0xb7f9a000, 1624) = 0
25321 15:36:17.906561 close(5)          = 0
25321 15:36:17.906574 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.906586 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.906596 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25321 15:36:17.906612 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.906622 _llseek(5, 1233, [1233], SEEK_SET) = 0
25321 15:36:17.906638 munmap(0xb7f9a000, 1233) = 0
25321 15:36:17.906655 close(5)          = 0
25321 15:36:17.906666 time(NULL)        = 1495654577
25321 15:36:17.906680 munmap(0xb7f97000, 12164) = 0
25321 15:36:17.906693 munmap(0xb7f95000, 7136) = 0
25321 15:36:17.906706 munmap(0xb7dca000, 95428) = 0
25321 15:36:17.906717 munmap(0xb7d90000, 201052) = 0
25321 15:36:17.906727 munmap(0xb7d77000, 101180) = 0
25321 15:36:17.906742 gettimeofday({1495654577, 906746}, NULL) = 0
25321 15:36:17.906757 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa35ba4) = -1 ENOENT (No such file or directory)
25321 15:36:17.906772 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25321 15:36:17.906796 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa35cf4) = 0
25321 15:36:17.906811 write(3, "Wed May 24 15:36:17 2017 [pid 25321] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25321 15:36:17.906827 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa35cfc) = 0
25321 15:36:17.906839 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25321 15:36:17.906853 write(4, "\1", 1 <unfinished ...>
25322 15:36:17.906862 <... read resumed> "\1", 1) = 1
25321 15:36:17.906867 <... write resumed> ) = 1
25322 15:36:17.906874 exit_group(0)     = ?
25321 15:36:17.906901 --- SIGCHLD (Child exited) @ 0 (0) ---
25321 15:36:17.906908 sigreturn()       = ? (mask now [])
25321 15:36:17.906926 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25322
25321 15:36:17.906938 close(4)          = 0
25321 15:36:17.906950 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25321 15:36:17.906962 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25321 15:36:17.906976 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25321 15:36:17.906989 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e006f8) = 25323
25323 15:36:17.907036 prctl(0x1, 0x9, 0, 0, 0) = 0
25323 15:36:17.907050 close(4)          = 0
25323 15:36:17.907139 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25323 15:36:17.907156 _llseek(4, 0, [0], SEEK_CUR) = 0
25323 15:36:17.907171 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25323 15:36:17.907189 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
25323 15:36:17.907200 _llseek(4, 1624, [1624], SEEK_SET) = 0
25323 15:36:17.907222 munmap(0xb7f9a000, 1624) = 0
25323 15:36:17.907233 close(4)          = 0
25323 15:36:17.907245 getuid32()        = 0
25323 15:36:17.907255 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25323 15:36:17.907267 _llseek(4, 0, [0], SEEK_CUR) = 0
25323 15:36:17.907277 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25323 15:36:17.907292 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
25323 15:36:17.907302 _llseek(4, 1624, [1624], SEEK_SET) = 0
25323 15:36:17.907317 munmap(0xb7f9a000, 1624) = 0
25323 15:36:17.907326 close(4)          = 0
25323 15:36:17.907350 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25323 15:36:17.907370 read(4, "65536\n", 31) = 6
25323 15:36:17.907382 close(4)          = 0
25323 15:36:17.907395 socket(PF_FILE, SOCK_STREAM, 0) = 4
25323 15:36:17.907407 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25323 15:36:17.907418 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25323 15:36:17.907438 close(4)          = 0
25323 15:36:17.907449 socket(PF_FILE, SOCK_STREAM, 0) = 4
25323 15:36:17.907458 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25323 15:36:17.907468 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25323 15:36:17.907486 close(4)          = 0
25323 15:36:17.907509 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25323 15:36:17.907523 _llseek(4, 0, [0], SEEK_CUR) = 0
25323 15:36:17.907532 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25323 15:36:17.907548 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
25323 15:36:17.907558 _llseek(4, 886, [886], SEEK_SET) = 0
25323 15:36:17.907582 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25323 15:36:17.907598 munmap(0xb7f9a000, 886) = 0
25323 15:36:17.907608 close(4)          = 0
25323 15:36:17.907617 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25323 15:36:17.907632 geteuid32()       = 0
25323 15:36:17.907642 getegid32()       = 0
25323 15:36:17.907653 setregid32(-1, 1000) = 0
25323 15:36:17.907662 setreuid32(-1, 1000) = 0
25323 15:36:17.907676 chdir("/home/msfadmin") = 0
25323 15:36:17.907688 setreuid32(-1, 0) = 0
25323 15:36:17.907697 setregid32(-1, 0) = 0
25323 15:36:17.907707 setgid32(1000)    = 0
25323 15:36:17.907716 setuid32(1000)    = 0
25323 15:36:17.907726 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25323 15:36:17.907739 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f98000
25323 15:36:17.907749 mprotect(0xb7f9a000, 4096, PROT_NONE) = 0
25323 15:36:17.907760 mprotect(0xb7f98000, 4096, PROT_NONE) = 0
25323 15:36:17.907771 getcwd("/home/msfadmin", 4096) = 15
25323 15:36:17.907783 umask(022)        = 077
25323 15:36:17.907793 getcwd("/home/msfadmin", 4096) = 15
25323 15:36:17.907806 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25323 15:36:17.907827 write(0, "230 Login successful.\r\n", 23) = 23
25323 15:36:17.907904 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.907921 alarm(300)        = 0
25323 15:36:17.907931 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f95000
25323 15:36:17.907942 mprotect(0xb7f97000, 4096, PROT_NONE) = 0
25323 15:36:17.907953 mprotect(0xb7f95000, 4096, PROT_NONE) = 0
25323 15:36:17.907965 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
25323 15:36:17.907977 read(0, "TYPE I\r\n", 8) = 8
25323 15:36:17.907993 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
25323 15:36:17.908072 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.908097 alarm(300)        = 300
25323 15:36:17.908108 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
25323 15:36:17.908119 read(0, "PASV\r\n", 6) = 6
25323 15:36:17.908131 write(5, "\n", 1) = 1
25323 15:36:17.908141 read(5,  <unfinished ...>
25321 15:36:17.908153 close(5)          = 0
25321 15:36:17.908165 getuid32()        = 0
25321 15:36:17.908179 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25321 15:36:17.908193 _llseek(5, 0, [0], SEEK_CUR) = 0
25321 15:36:17.908205 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25321 15:36:17.908222 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
25321 15:36:17.908233 _llseek(5, 1624, [1624], SEEK_SET) = 0
25321 15:36:17.908249 munmap(0xb7f9a000, 1624) = 0
25321 15:36:17.908260 close(5)          = 0
25321 15:36:17.908276 setgroups32(0, []) = 0
25321 15:36:17.908287 chdir("/usr/share/empty") = 0
25321 15:36:17.908298 chroot(".")       = 0
25321 15:36:17.908308 capset(NULL, NULL) = -1 EFAULT (Bad address)
25321 15:36:17.908322 prctl(0x8, 0, 0xbfa35cd8, 0x80549a6, 0xbfa35cc0) = 0
25321 15:36:17.908332 prctl(0x8, 0x1, 0xbfa35cd8, 0x8054a49, 0xbfa35cc0) = 0
25321 15:36:17.908342 setgid32(65534)   = 0
25321 15:36:17.908351 setuid32(65534)   = 0
25321 15:36:17.908361 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25321 15:36:17.908374 read(4, "\n", 1)  = 1
25321 15:36:17.908386 write(4, "\1", 1) = 1
25323 15:36:17.908397 <... read resumed> "\1", 1) = 1
25323 15:36:17.908404 write(5, "\f", 1) = 1
25323 15:36:17.908414 read(5,  <unfinished ...>
25321 15:36:17.908421 read(4, "\f", 1)  = 1
25321 15:36:17.908433 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
25321 15:36:17.908445 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
25321 15:36:17.908456 gettimeofday({1495654577, 908460}, NULL) = 0
25321 15:36:17.908472 bind(5, {sa_family=AF_INET, sin_port=htons(45951), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
25321 15:36:17.908487 listen(5, 1)      = 0
25321 15:36:17.908499 write(4, "\177\263\0\0", 4) = 4
25323 15:36:17.908510 <... read resumed> "\177\263\0\0", 4) = 4
25323 15:36:17.908523 write(0, "227 Entering Passive Mode (127,0,0,1,179,127).\r\n", 48) = 48
25323 15:36:17.908546 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.908547 alarm(300)        = 300
25323 15:36:17.908547 recv(0, "STOR myfile40\r\n", 4096, MSG_PEEK) = 15
25323 15:36:17.908547 read(0, "STOR myfile40\r\n", 15) = 15
25323 15:36:17.908547 write(5, "\v", 1) = 1
25323 15:36:17.908547 read(5,  <unfinished ...>
25321 15:36:17.908548 read(4, "\v", 1)  = 1
25321 15:36:17.908548 write(4, "\1\0\0\0", 4) = 4
25323 15:36:17.908548 <... read resumed> "\1\0\0\0", 4) = 4
25323 15:36:17.908548 gettimeofday({1495654577, 908548}, NULL) = 0
25323 15:36:17.908549 getcwd("/home/msfadmin", 4096) = 15
25323 15:36:17.908549 open("myfile40", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
25323 15:36:17.908549 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
25323 15:36:17.908549 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
25323 15:36:17.908549 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
25323 15:36:17.908550 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa35c24) = 0
25323 15:36:17.908562 ftruncate64(4, 0) = 0
25323 15:36:17.908614 _llseek(4, 0, [0], SEEK_SET) = 0
25323 15:36:17.908629 write(5, "\v", 1) = 1
25323 15:36:17.908650 read(5,  <unfinished ...>
25321 15:36:17.908666 read(4, "\v", 1)  = 1
25321 15:36:17.908677 write(4, "\1\0\0\0", 4) = 4
25323 15:36:17.908687 <... read resumed> "\1\0\0\0", 4) = 4
25323 15:36:17.908694 write(5, "\v", 1) = 1
25323 15:36:17.908704 read(5,  <unfinished ...>
25321 15:36:17.908710 read(4, "\v", 1)  = 1
25321 15:36:17.908720 write(4, "\1\0\0\0", 4) = 4
25323 15:36:17.908730 <... read resumed> "\1\0\0\0", 4) = 4
25323 15:36:17.908737 write(5, "\r", 1) = 1
25323 15:36:17.908746 read(5,  <unfinished ...>
25321 15:36:17.908752 read(4, "\r", 1)  = 1
25321 15:36:17.908764 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
25321 15:36:17.908780 accept(5, {sa_family=AF_INET, sin_port=htons(36579), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
25321 15:36:17.908802 write(4, "\1", 1) = 1
25323 15:36:17.908812 <... read resumed> "\1", 1) = 1
25323 15:36:17.908821 recvmsg(5,  <unfinished ...>
25321 15:36:17.908830 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25323 15:36:17.908846 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25323 15:36:17.908859 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
25323 15:36:17.908870 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
25323 15:36:17.908882 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
25323 15:36:17.908892 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.908905 alarm(300)        = 300
25323 15:36:17.908917 write(0, "150 Ok to send data.\r\n", 22) = 22
25323 15:36:17.908979 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dcf000
25323 15:36:17.908993 mprotect(0xb7de1000, 4096, PROT_NONE) = 0
25323 15:36:17.909004 mprotect(0xb7dcf000, 4096, PROT_NONE) = 0
25323 15:36:17.909014 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
25323 15:36:17.909027 write(4, "assasaaa\na\na\na\na\n", 17) = 17
25323 15:36:17.909042 read(6, "", 65536) = 0
25323 15:36:17.909052 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.909065 alarm(300)        = 300
25323 15:36:17.909074 close(6)          = 0
25323 15:36:17.909083 alarm(0)          = 300
25323 15:36:17.909092 gettimeofday({1495654577, 909096}, NULL) = 0
25323 15:36:17.909109 getpid()          = 25323
25323 15:36:17.909120 gettimeofday({1495654577, 909124}, NULL) = 0
25323 15:36:17.909137 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa35bc4) = 0
25323 15:36:17.909151 write(3, "Wed May 24 15:36:17 2017 [pid 25323] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile40\", 17 bytes, 28.82Kbyte/sec\n", 131) = 131
25323 15:36:17.909170 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa35bcc) = 0
25323 15:36:17.909184 write(0, "226 Transfer complete.\r\n", 24) = 24
25323 15:36:17.909229 write(5, "\n", 1) = 1
25323 15:36:17.909241 read(5,  <unfinished ...>
25321 15:36:17.909248 close(6)          = 0
25321 15:36:17.909266 read(4, "\n", 1)  = 1
25321 15:36:17.909277 close(5)          = 0
25321 15:36:17.909291 write(4, "\1", 1) = 1
25323 15:36:17.909301 <... read resumed> "\1", 1) = 1
25323 15:36:17.909308 close(4)          = 0
25323 15:36:17.909318 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25323 15:36:17.909331 alarm(300)        = 0
25323 15:36:17.909341 recv(0,  <unfinished ...>
25321 15:36:17.909348 read(4,  <unfinished ...>
25323 15:36:18.426392 <... recv resumed> "QUIT\r\n", 4096, MSG_PEEK) = 6
25323 15:36:18.426509 read(0, "QUIT\r\n", 6) = 6
25323 15:36:18.426603 shutdown(0, 0 /* receive */) = 0
25323 15:36:18.426653 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
25323 15:36:18.426682 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25323 15:36:18.426705 write(0, "221 Goodbye.\r\n", 14) = 14
25323 15:36:18.426778 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
25323 15:36:18.426791 fcntl64(0, F_SETFL, O_RDWR) = 0
25323 15:36:18.426802 shutdown(0, 2 /* send and receive */) = 0
25323 15:36:18.426823 exit_group(0)     = ?
25321 15:36:18.426875 <... read resumed> 0xbfa35cd7, 1) = ? ERESTARTSYS (To be restarted)
25321 15:36:18.426883 --- SIGCHLD (Child exited) @ 0 (0) ---
25321 15:36:18.426895 alarm(1)          = 0
25321 15:36:18.426906 sigreturn()       = ? (mask now [])
25321 15:36:18.426923 alarm(0)          = 1
25321 15:36:18.426933 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25323
25321 15:36:18.426948 exit_group(0)     = ?
4380  15:36:18.426989 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:36:18.426996 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:36:18.427004 write(4, "\21", 1) = 1
4380  15:36:18.427019 sigreturn()       = ? (mask now [])
4380  15:36:18.427053 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:36:18.427071 ioctl(3, FIONREAD, [1]) = 0
4380  15:36:18.427085 read(3, "\21", 1) = 1
4380  15:36:18.427098 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 25321
4380  15:36:18.427115 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:36:18.427130 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:36:18.427142 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:36:18.947056 accept(5, {sa_family=AF_INET, sin_port=htons(49331), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:36:18.947132 time(NULL)        = 1495654578
4380  15:36:18.947171 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 25324
25324 15:36:18.947283 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
25324 15:36:18.947299 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
25324 15:36:18.947311 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
25324 15:36:18.947322 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
25324 15:36:18.947337 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
25324 15:36:18.947350 close(3)          = 0
25324 15:36:18.947360 close(4)          = 0
25324 15:36:18.947369 open("/dev/null", O_RDONLY) = 3
25324 15:36:18.947385 dup2(3, 0)        = 0
25324 15:36:18.947394 dup2(3, 1)        = 1
25324 15:36:18.947403 dup2(3, 2)        = 2
25324 15:36:18.947412 close(3)          = 0
25324 15:36:18.947423 setgid32(0)       = 0
25324 15:36:18.947436 setgroups32(0, []) = 0
25324 15:36:18.947447 setuid32(0)       = 0
25324 15:36:18.947459 getpriority(PRIO_PROCESS, 0) = 20
25324 15:36:18.947468 setpriority(PRIO_PROCESS, 0, 10) = 0
25324 15:36:18.947478 getpriority(PRIO_PROCESS, 0) = 10
25324 15:36:18.947514 getpeername(13, {sa_family=AF_INET, sin_port=htons(49331), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25324 15:36:18.947537 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25324 15:36:18.947566 open("/etc/hosts.allow", O_RDONLY) = 3
25324 15:36:18.947585 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
25324 15:36:18.947604 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
25324 15:36:18.947618 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
25324 15:36:18.947738 close(3)          = 0
25324 15:36:18.947750 munmap(0xb7fa1000, 4096) = 0
