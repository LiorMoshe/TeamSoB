26631 15:59:23.739439 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26631 15:59:23.739492 read(6, "", 4096) = 0
26631 15:59:23.739503 close(6)          = 0
26631 15:59:23.739513 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.739524 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26631 15:59:23.739544 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26631 15:59:23.739557 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26631 15:59:23.739574 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
26631 15:59:23.739585 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26631 15:59:23.739625 read(6, "", 4096) = 0
26631 15:59:23.739635 close(6)          = 0
26631 15:59:23.739644 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.739655 read(5, "", 4096) = 0
26631 15:59:23.739664 close(5)          = 0
26631 15:59:23.739673 munmap(0xb7f79000, 4096) = 0
26631 15:59:23.739684 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26631 15:59:23.739697 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26631 15:59:23.739714 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f79000
26631 15:59:23.739725 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26631 15:59:23.739771 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26631 15:59:23.739789 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26631 15:59:23.739802 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26631 15:59:23.739818 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
26631 15:59:23.739829 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26631 15:59:23.739880 read(6, "", 4096) = 0
26631 15:59:23.739890 close(6)          = 0
26631 15:59:23.739899 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.739910 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26631 15:59:23.739929 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26631 15:59:23.739942 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26631 15:59:23.739959 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
26631 15:59:23.739969 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26631 15:59:23.740009 read(6, "", 4096) = 0
26631 15:59:23.740019 close(6)          = 0
26631 15:59:23.740028 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.740039 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26631 15:59:23.740058 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26631 15:59:23.740071 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26631 15:59:23.740087 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
26631 15:59:23.740098 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26631 15:59:23.740216 read(6, "", 4096) = 0
26631 15:59:23.740226 close(6)          = 0
26631 15:59:23.740236 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.740247 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26631 15:59:23.740266 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26631 15:59:23.740279 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26631 15:59:23.740295 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
26631 15:59:23.740306 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26631 15:59:23.740344 read(6, "", 4096) = 0
26631 15:59:23.740354 close(6)          = 0
26631 15:59:23.740367 munmap(0xb7f73000, 4096) = 0
26631 15:59:23.740377 read(5, "", 4096) = 0
26631 15:59:23.740387 close(5)          = 0
26631 15:59:23.740396 munmap(0xb7f79000, 4096) = 0
26631 15:59:23.740408 time(NULL)        = 1495655963
26631 15:59:23.740420 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26631 15:59:23.740448 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26631 15:59:23.740461 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26631 15:59:23.740477 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f79000
26631 15:59:23.740488 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26631 15:59:23.740510 read(5, "", 4096) = 0
26631 15:59:23.740519 close(5)          = 0
26631 15:59:23.740529 munmap(0xb7f79000, 4096) = 0
26631 15:59:23.740545 getuid32()        = 0
26631 15:59:23.740562 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.740578 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.740589 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26631 15:59:23.740605 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.740617 _llseek(5, 1624, [1624], SEEK_SET) = 0
26631 15:59:23.740636 munmap(0xb7f79000, 1624) = 0
26631 15:59:23.740647 close(5)          = 0
26631 15:59:23.740673 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.740691 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.740701 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26631 15:59:23.740718 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.740729 _llseek(5, 1233, [1233], SEEK_SET) = 0
26631 15:59:23.740749 munmap(0xb7f79000, 1233) = 0
26631 15:59:23.740759 close(5)          = 0
26631 15:59:23.740778 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.740791 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.740802 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26631 15:59:23.740818 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.740829 _llseek(5, 1624, [1624], SEEK_SET) = 0
26631 15:59:23.740845 munmap(0xb7f79000, 1624) = 0
26631 15:59:23.740855 close(5)          = 0
26631 15:59:23.740868 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.740881 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.740891 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26631 15:59:23.740908 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.740918 _llseek(5, 1233, [1233], SEEK_SET) = 0
26631 15:59:23.740935 munmap(0xb7f79000, 1233) = 0
26631 15:59:23.740944 close(5)          = 0
26631 15:59:23.740977 getuid32()        = 0
26631 15:59:23.740996 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.741010 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.741021 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26631 15:59:23.741037 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.741048 _llseek(5, 1624, [1624], SEEK_SET) = 0
26631 15:59:23.741065 munmap(0xb7f79000, 1624) = 0
26631 15:59:23.741075 close(5)          = 0
26631 15:59:23.741089 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.741102 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.741112 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26631 15:59:23.741128 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.741139 _llseek(5, 1233, [1233], SEEK_SET) = 0
26631 15:59:23.741170 munmap(0xb7f79000, 1233) = 0
26631 15:59:23.741184 close(5)          = 0
26631 15:59:23.741197 time(NULL)        = 1495655963
26631 15:59:23.741212 munmap(0xb7f76000, 12164) = 0
26631 15:59:23.741226 munmap(0xb7f74000, 7136) = 0
26631 15:59:23.741240 munmap(0xb7da9000, 95428) = 0
26631 15:59:23.741251 munmap(0xb7d6f000, 201052) = 0
26631 15:59:23.741262 munmap(0xb7d56000, 101180) = 0
26631 15:59:23.741279 gettimeofday({1495655963, 741282}, NULL) = 0
26631 15:59:23.741294 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf82d9a4) = -1 ENOENT (No such file or directory)
26631 15:59:23.741310 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26631 15:59:23.741337 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf82daf4) = 0
26631 15:59:23.741353 write(3, "Wed May 24 15:59:23 2017 [pid 26631] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26631 15:59:23.741370 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf82dafc) = 0
26631 15:59:23.741383 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26631 15:59:23.741397 write(4, "\1", 1 <unfinished ...>
26632 15:59:23.741407 <... read resumed> "\1", 1) = 1
26631 15:59:23.741412 <... write resumed> ) = 1
26632 15:59:23.741420 exit_group(0)     = ?
26631 15:59:23.741449 --- SIGCHLD (Child exited) @ 0 (0) ---
26631 15:59:23.741457 sigreturn()       = ? (mask now [])
26631 15:59:23.741476 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26632
26631 15:59:23.741489 close(4)          = 0
26631 15:59:23.741501 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26631 15:59:23.741514 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26631 15:59:23.741528 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26631 15:59:23.741542 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7ddf6f8) = 26633
26633 15:59:23.741593 prctl(0x1, 0x9, 0, 0, 0) = 0
26633 15:59:23.741607 close(4)          = 0
26633 15:59:23.741634 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26633 15:59:23.741652 _llseek(4, 0, [0], SEEK_CUR) = 0
26633 15:59:23.741668 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26633 15:59:23.741687 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f79000
26633 15:59:23.741699 _llseek(4, 1624, [1624], SEEK_SET) = 0
26633 15:59:23.741722 munmap(0xb7f79000, 1624) = 0
26633 15:59:23.741733 close(4)          = 0
26633 15:59:23.741747 getuid32()        = 0
26633 15:59:23.741757 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26633 15:59:23.741770 _llseek(4, 0, [0], SEEK_CUR) = 0
26633 15:59:23.741781 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26633 15:59:23.741798 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f79000
26633 15:59:23.741809 _llseek(4, 1624, [1624], SEEK_SET) = 0
26633 15:59:23.741825 munmap(0xb7f79000, 1624) = 0
26633 15:59:23.741835 close(4)          = 0
26633 15:59:23.741861 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26633 15:59:23.741881 read(4, "65536\n", 31) = 6
26633 15:59:23.741894 close(4)          = 0
26633 15:59:23.741908 socket(PF_FILE, SOCK_STREAM, 0) = 4
26633 15:59:23.741920 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26633 15:59:23.741931 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26633 15:59:23.741952 close(4)          = 0
26633 15:59:23.741964 socket(PF_FILE, SOCK_STREAM, 0) = 4
26633 15:59:23.741974 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26633 15:59:23.741984 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26633 15:59:23.742002 close(4)          = 0
26633 15:59:23.742027 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26633 15:59:23.742042 _llseek(4, 0, [0], SEEK_CUR) = 0
26633 15:59:23.742052 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26633 15:59:23.742069 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f79000
26633 15:59:23.742080 _llseek(4, 886, [886], SEEK_SET) = 0
26633 15:59:23.742105 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26633 15:59:23.742122 munmap(0xb7f79000, 886) = 0
26633 15:59:23.742140 close(4)          = 0
26633 15:59:23.742153 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26633 15:59:23.742170 geteuid32()       = 0
26633 15:59:23.742182 getegid32()       = 0
26633 15:59:23.742192 setregid32(-1, 1000) = 0
26633 15:59:23.742203 setreuid32(-1, 1000) = 0
26633 15:59:23.742218 chdir("/home/msfadmin") = 0
26633 15:59:23.742230 setreuid32(-1, 0) = 0
26633 15:59:23.742240 setregid32(-1, 0) = 0
26633 15:59:23.742250 setgid32(1000)    = 0
26633 15:59:23.742260 setuid32(1000)    = 0
26633 15:59:23.742271 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26633 15:59:23.742284 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
26633 15:59:23.742296 mprotect(0xb7f79000, 4096, PROT_NONE) = 0
26633 15:59:23.742307 mprotect(0xb7f77000, 4096, PROT_NONE) = 0
26633 15:59:23.742319 getcwd("/home/msfadmin", 4096) = 15
26633 15:59:23.742332 umask(022)        = 077
26633 15:59:23.742342 getcwd("/home/msfadmin", 4096) = 15
26633 15:59:23.742356 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26633 15:59:23.742379 write(0, "230 Login successful.\r\n", 23) = 23
26633 15:59:23.742467 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.742484 alarm(300)        = 0
26633 15:59:23.742495 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
26633 15:59:23.742506 mprotect(0xb7f76000, 4096, PROT_NONE) = 0
26633 15:59:23.742517 mprotect(0xb7f74000, 4096, PROT_NONE) = 0
26633 15:59:23.742530 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26633 15:59:23.742543 read(0, "TYPE I\r\n", 8) = 8
26633 15:59:23.742560 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26633 15:59:23.742601 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.742616 alarm(300)        = 300
26633 15:59:23.742624 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26633 15:59:23.742625 read(0, "PASV\r\n", 6) = 6
26633 15:59:23.742625 write(5, "\n", 1) = 1
26633 15:59:23.742625 read(5,  <unfinished ...>
26631 15:59:23.742625 close(5)          = 0
26631 15:59:23.742625 getuid32()        = 0
26631 15:59:23.742626 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26631 15:59:23.742626 _llseek(5, 0, [0], SEEK_CUR) = 0
26631 15:59:23.742636 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26631 15:59:23.742655 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f79000
26631 15:59:23.742666 _llseek(5, 1624, [1624], SEEK_SET) = 0
26631 15:59:23.742685 munmap(0xb7f79000, 1624) = 0
26631 15:59:23.742697 close(5)          = 0
26631 15:59:23.742713 setgroups32(0, []) = 0
26631 15:59:23.742724 chdir("/usr/share/empty") = 0
26631 15:59:23.742737 chroot(".")       = 0
26631 15:59:23.742747 capset(NULL, NULL) = -1 EFAULT (Bad address)
26631 15:59:23.742761 prctl(0x8, 0, 0xbf82dad8, 0x80549a6, 0xbf82dac0) = 0
26631 15:59:23.742773 prctl(0x8, 0x1, 0xbf82dad8, 0x8054a49, 0xbf82dac0) = 0
26631 15:59:23.742783 setgid32(65534)   = 0
26631 15:59:23.742793 setuid32(65534)   = 0
26631 15:59:23.742802 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26631 15:59:23.742816 read(4, "\n", 1)  = 1
26631 15:59:23.742830 write(4, "\1", 1) = 1
26633 15:59:23.742840 <... read resumed> "\1", 1) = 1
26633 15:59:23.742848 write(5, "\f", 1) = 1
26633 15:59:23.742858 read(5,  <unfinished ...>
26631 15:59:23.742865 read(4, "\f", 1)  = 1
26631 15:59:23.742877 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26631 15:59:23.742891 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26631 15:59:23.743037 gettimeofday({1495655963, 743042}, NULL) = 0
26631 15:59:23.743056 bind(5, {sa_family=AF_INET, sin_port=htons(21723), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26631 15:59:23.743073 listen(5, 1)      = 0
26631 15:59:23.743086 write(4, "\333T\0\0", 4) = 4
26633 15:59:23.743098 <... read resumed> "\333T\0\0", 4) = 4
26633 15:59:23.743112 write(0, "227 Entering Passive Mode (127,0,0,1,84,219).\r\n", 47) = 47
26633 15:59:23.743223 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.743240 alarm(300)        = 300
26633 15:59:23.743252 recv(0, "STOR myfile40\r\n", 4096, MSG_PEEK) = 15
26633 15:59:23.743264 read(0, "STOR myfile40\r\n", 15) = 15
26633 15:59:23.743279 write(5, "\v", 1) = 1
26633 15:59:23.743290 read(5,  <unfinished ...>
26631 15:59:23.743297 read(4, "\v", 1)  = 1
26631 15:59:23.743313 write(4, "\1\0\0\0", 4) = 4
26633 15:59:23.743324 <... read resumed> "\1\0\0\0", 4) = 4
26633 15:59:23.743333 gettimeofday({1495655963, 743336}, NULL) = 0
26633 15:59:23.743344 getcwd("/home/msfadmin", 4096) = 15
26633 15:59:23.743356 open("myfile40", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26633 15:59:23.743370 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26633 15:59:23.743387 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26633 15:59:23.743398 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26633 15:59:23.743408 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf82da24) = 0
26633 15:59:23.743423 ftruncate64(4, 0) = 0
26633 15:59:23.743443 _llseek(4, 0, [0], SEEK_SET) = 0
26633 15:59:23.743454 write(5, "\v", 1) = 1
26633 15:59:23.743465 read(5,  <unfinished ...>
26631 15:59:23.743472 read(4, "\v", 1)  = 1
26631 15:59:23.743483 write(4, "\1\0\0\0", 4) = 4
26633 15:59:23.743493 <... read resumed> "\1\0\0\0", 4) = 4
26633 15:59:23.743501 write(5, "\v", 1) = 1
26633 15:59:23.743511 read(5,  <unfinished ...>
26631 15:59:23.743517 read(4, "\v", 1)  = 1
26631 15:59:23.743528 write(4, "\1\0\0\0", 4) = 4
26633 15:59:23.743538 <... read resumed> "\1\0\0\0", 4) = 4
26633 15:59:23.743545 write(5, "\r", 1) = 1
26633 15:59:23.743555 read(5,  <unfinished ...>
26631 15:59:23.743562 read(4, "\r", 1)  = 1
26631 15:59:23.743574 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26631 15:59:23.743592 accept(5, {sa_family=AF_INET, sin_port=htons(50104), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26631 15:59:23.743614 write(4, "\1", 1) = 1
26633 15:59:23.743624 <... read resumed> "\1", 1) = 1
26633 15:59:23.743634 recvmsg(5,  <unfinished ...>
26631 15:59:23.743643 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26633 15:59:23.743661 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26633 15:59:23.743674 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26633 15:59:23.743686 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26633 15:59:23.743698 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26633 15:59:23.743710 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.743723 alarm(300)        = 300
26633 15:59:23.743735 write(0, "150 Ok to send data.\r\n", 22) = 22
26633 15:59:23.743801 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dae000
26633 15:59:23.743815 mprotect(0xb7dc0000, 4096, PROT_NONE) = 0
26633 15:59:23.743827 mprotect(0xb7dae000, 4096, PROT_NONE) = 0
26633 15:59:23.743837 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26633 15:59:23.743851 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26633 15:59:23.743867 read(6, "", 65536) = 0
26633 15:59:23.743877 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.743891 alarm(300)        = 300
26633 15:59:23.743900 close(6)          = 0
26633 15:59:23.743910 alarm(0)          = 300
26633 15:59:23.743919 gettimeofday({1495655963, 743923}, NULL) = 0
26633 15:59:23.743937 getpid()          = 26633
26633 15:59:23.743949 gettimeofday({1495655963, 743953}, NULL) = 0
26633 15:59:23.743970 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf82d9c4) = 0
26633 15:59:23.743994 write(3, "Wed May 24 15:59:23 2017 [pid 26633] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile40\", 17 bytes, 26.91Kbyte/sec\n", 131) = 131
26633 15:59:23.744018 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf82d9cc) = 0
26633 15:59:23.744034 write(0, "226 Transfer complete.\r\n", 24) = 24
26633 15:59:23.744085 write(5, "\n", 1) = 1
26633 15:59:23.744097 read(5,  <unfinished ...>
26631 15:59:23.744104 close(6)          = 0
26631 15:59:23.744123 read(4, "\n", 1)  = 1
26631 15:59:23.744135 close(5)          = 0
26631 15:59:23.744150 write(4, "\1", 1) = 1
26633 15:59:23.744160 <... read resumed> "\1", 1) = 1
26633 15:59:23.744168 close(4)          = 0
26633 15:59:23.744178 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:23.744192 alarm(300)        = 0
26633 15:59:23.744203 recv(0,  <unfinished ...>
26631 15:59:23.744211 read(4,  <unfinished ...>
26633 15:59:24.272426 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
26633 15:59:24.272468 read(0, "TYPE I\r\n", 8) = 8
26633 15:59:24.272493 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26633 15:59:24.272544 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:24.272561 alarm(300)        = 299
26633 15:59:24.272574 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26633 15:59:24.272585 read(0, "PASV\r\n", 6) = 6
26633 15:59:24.272597 write(5, "\n", 1) = 1
26633 15:59:24.272609 read(5,  <unfinished ...>
26631 15:59:24.272618 <... read resumed> "\n", 1) = 1
26631 15:59:24.272626 write(4, "\1", 1) = 1
26633 15:59:24.272637 <... read resumed> "\1", 1) = 1
26633 15:59:24.272644 write(5, "\f", 1) = 1
26633 15:59:24.272653 read(5,  <unfinished ...>
26631 15:59:24.272660 read(4, "\f", 1)  = 1
26631 15:59:24.272672 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26631 15:59:24.272688 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26631 15:59:24.272702 bind(5, {sa_family=AF_INET, sin_port=htons(16715), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26631 15:59:24.272718 listen(5, 1)      = 0
26631 15:59:24.272731 write(4, "KA\0\0", 4) = 4
26633 15:59:24.272742 <... read resumed> "KA\0\0", 4) = 4
26633 15:59:24.272753 write(0, "227 Entering Passive Mode (127,0,0,1,65,75).\r\n", 46) = 46
26633 15:59:24.272866 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26633 15:59:24.272882 alarm(300)        = 300
26633 15:59:24.272894 recv(0, "STOR myfile0\r\n", 4096, MSG_PEEK) = 14
26633 15:59:24.272906 read(0, "STOR myfile0\r\n", 14) = 14
26633 15:59:24.272919 write(5, "\v", 1) = 1
26633 15:59:24.272929 read(5,  <unfinished ...>
26631 15:59:24.272936 read(4, "\v", 1)  = 1
26631 15:59:24.272947 write(4, "\1\0\0\0", 4) = 4
26633 15:59:24.272957 <... read resumed> "\1\0\0\0", 4) = 4
26633 15:59:24.272965 gettimeofday({1495655964, 272968}, NULL) = 0
26633 15:59:24.272975 getcwd("/home/msfadmin", 4096) = 15
26633 15:59:24.272988 open("myfile0", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26633 15:59:24.273002 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
