26103 15:50:23.723211 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
26103 15:50:23.723229 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d4e000
26103 15:50:23.723241 mmap2(0xb7d59000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d59000
26103 15:50:23.723256 mmap2(0xb7d5a000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d5a000
26103 15:50:23.723267 close(7)          = 0
26103 15:50:23.723280 open("/etc/ld.so.cache", O_RDONLY) = 7
26103 15:50:23.723293 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
26103 15:50:23.723309 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d46000
26103 15:50:23.723320 close(7)          = 0
26103 15:50:23.723331 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26103 15:50:23.723347 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
26103 15:50:23.723361 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
26103 15:50:23.723456 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
26103 15:50:23.723475 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d14000
26103 15:50:23.723487 mmap2(0xb7d1d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d1d000
26103 15:50:23.723503 mmap2(0xb7d1f000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d1f000
26103 15:50:23.723518 close(7)          = 0
26103 15:50:23.723531 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26103 15:50:23.723545 open("/lib/libselinux.so.1", O_RDONLY) = 7
26103 15:50:23.723558 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
26103 15:50:23.723648 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
26103 15:50:23.723665 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cfb000
26103 15:50:23.723677 mmap2(0xb7d12000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d12000
26103 15:50:23.723694 close(7)          = 0
26103 15:50:23.723795 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26103 15:50:23.723832 statfs64("/selinux", 84, 0xbfbda66c) = -1 ENOENT (No such file or directory)
26103 15:50:23.723848 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26103 15:50:23.723874 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26103 15:50:23.723891 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f17000
26103 15:50:23.723903 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26103 15:50:23.723993 read(7, "", 1024) = 0
26103 15:50:23.724004 close(7)          = 0
26103 15:50:23.724014 munmap(0xb7f17000, 4096) = 0
26103 15:50:23.724030 munmap(0xb7d46000, 29913) = 0
26103 15:50:23.724044 read(6, "", 4096) = 0
26103 15:50:23.724056 close(6)          = 0
26103 15:50:23.724065 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724076 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724096 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724110 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26103 15:50:23.724127 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724138 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26103 15:50:23.724179 read(6, "", 4096) = 0
26103 15:50:23.724189 close(6)          = 0
26103 15:50:23.724199 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724210 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724228 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724241 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26103 15:50:23.724258 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724269 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26103 15:50:23.724308 read(6, "", 4096) = 0
26103 15:50:23.724318 close(6)          = 0
26103 15:50:23.724327 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724338 read(5, "", 4096) = 0
26103 15:50:23.724347 close(5)          = 0
26103 15:50:23.724357 munmap(0xb7f1e000, 4096) = 0
26103 15:50:23.724367 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26103 15:50:23.724380 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26103 15:50:23.724397 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
26103 15:50:23.724407 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26103 15:50:23.724454 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724472 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724485 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26103 15:50:23.724501 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724512 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26103 15:50:23.724562 read(6, "", 4096) = 0
26103 15:50:23.724572 close(6)          = 0
26103 15:50:23.724582 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724593 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724612 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724624 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26103 15:50:23.724641 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724651 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26103 15:50:23.724691 read(6, "", 4096) = 0
26103 15:50:23.724701 close(6)          = 0
26103 15:50:23.724710 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724721 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724739 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724752 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26103 15:50:23.724769 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724779 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26103 15:50:23.724907 read(6, "", 4096) = 0
26103 15:50:23.724919 close(6)          = 0
26103 15:50:23.724928 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.724940 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26103 15:50:23.724959 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26103 15:50:23.724972 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26103 15:50:23.724988 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f18000
26103 15:50:23.724999 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26103 15:50:23.725038 read(6, "", 4096) = 0
26103 15:50:23.725048 close(6)          = 0
26103 15:50:23.725061 munmap(0xb7f18000, 4096) = 0
26103 15:50:23.725071 read(5, "", 4096) = 0
26103 15:50:23.725081 close(5)          = 0
26103 15:50:23.725090 munmap(0xb7f1e000, 4096) = 0
26103 15:50:23.725103 time(NULL)        = 1495655423
26103 15:50:23.725115 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26103 15:50:23.725134 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26103 15:50:23.725146 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26103 15:50:23.725162 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
26103 15:50:23.725173 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26103 15:50:23.725194 read(5, "", 4096) = 0
26103 15:50:23.725204 close(5)          = 0
26103 15:50:23.725213 munmap(0xb7f1e000, 4096) = 0
26103 15:50:23.725229 getuid32()        = 0
26103 15:50:23.725246 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725260 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.725272 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26103 15:50:23.725288 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.725299 _llseek(5, 1624, [1624], SEEK_SET) = 0
26103 15:50:23.725319 munmap(0xb7f1e000, 1624) = 0
26103 15:50:23.725330 close(5)          = 0
26103 15:50:23.725354 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725372 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.725383 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26103 15:50:23.725399 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.725410 _llseek(5, 1233, [1233], SEEK_SET) = 0
26103 15:50:23.725430 munmap(0xb7f1e000, 1233) = 0
26103 15:50:23.725440 close(5)          = 0
26103 15:50:23.725459 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725472 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.725482 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26103 15:50:23.725499 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.725509 _llseek(5, 1624, [1624], SEEK_SET) = 0
26103 15:50:23.725526 munmap(0xb7f1e000, 1624) = 0
26103 15:50:23.725536 close(5)          = 0
26103 15:50:23.725548 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725561 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.725571 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26103 15:50:23.725588 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.725598 _llseek(5, 1233, [1233], SEEK_SET) = 0
26103 15:50:23.725615 munmap(0xb7f1e000, 1233) = 0
26103 15:50:23.725625 close(5)          = 0
26103 15:50:23.725871 getuid32()        = 0
26103 15:50:23.725885 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725898 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.725909 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26103 15:50:23.725925 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.725936 _llseek(5, 1624, [1624], SEEK_SET) = 0
26103 15:50:23.725953 munmap(0xb7f1e000, 1624) = 0
26103 15:50:23.725963 close(5)          = 0
26103 15:50:23.725977 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.725989 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.726000 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26103 15:50:23.726016 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.726027 _llseek(5, 1233, [1233], SEEK_SET) = 0
26103 15:50:23.726043 munmap(0xb7f1e000, 1233) = 0
26103 15:50:23.726053 close(5)          = 0
26103 15:50:23.726065 time(NULL)        = 1495655423
26103 15:50:23.726081 munmap(0xb7f1b000, 12164) = 0
26103 15:50:23.726094 munmap(0xb7f19000, 7136) = 0
26103 15:50:23.726109 munmap(0xb7d4e000, 95428) = 0
26103 15:50:23.726120 munmap(0xb7d14000, 201052) = 0
26103 15:50:23.726131 munmap(0xb7cfb000, 101180) = 0
26103 15:50:23.726148 gettimeofday({1495655423, 726152}, NULL) = 0
26103 15:50:23.726163 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfbdc544) = -1 ENOENT (No such file or directory)
26103 15:50:23.726179 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26103 15:50:23.726204 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbdc694) = 0
26103 15:50:23.726220 write(3, "Wed May 24 15:50:23 2017 [pid 26103] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26103 15:50:23.726238 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbdc69c) = 0
26103 15:50:23.726244 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26103 15:50:23.726244 write(4, "\1", 1 <unfinished ...>
26104 15:50:23.726244 <... read resumed> "\1", 1) = 1
26103 15:50:23.726244 <... write resumed> ) = 1
26104 15:50:23.726244 exit_group(0)     = ?
26103 15:50:23.726244 --- SIGCHLD (Child exited) @ 0 (0) ---
26103 15:50:23.726245 sigreturn()       = ? (mask now [])
26103 15:50:23.726245 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26104
26103 15:50:23.726245 close(4)          = 0
26103 15:50:23.726248 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26103 15:50:23.726263 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26103 15:50:23.726278 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26103 15:50:23.726292 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d846f8) = 26105
26105 15:50:23.726343 prctl(0x1, 0x9, 0, 0, 0) = 0
26105 15:50:23.726357 close(4)          = 0
26105 15:50:23.726385 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26105 15:50:23.726403 _llseek(4, 0, [0], SEEK_CUR) = 0
26105 15:50:23.726418 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26105 15:50:23.726437 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f1e000
26105 15:50:23.726449 _llseek(4, 1624, [1624], SEEK_SET) = 0
26105 15:50:23.726472 munmap(0xb7f1e000, 1624) = 0
26105 15:50:23.726502 close(4)          = 0
26105 15:50:23.726518 getuid32()        = 0
26105 15:50:23.726529 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26105 15:50:23.726543 _llseek(4, 0, [0], SEEK_CUR) = 0
26105 15:50:23.726553 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26105 15:50:23.726571 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f1e000
26105 15:50:23.726582 _llseek(4, 1624, [1624], SEEK_SET) = 0
26105 15:50:23.726598 munmap(0xb7f1e000, 1624) = 0
26105 15:50:23.726609 close(4)          = 0
26105 15:50:23.726635 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26105 15:50:23.726656 read(4, "65536\n", 31) = 6
26105 15:50:23.726669 close(4)          = 0
26105 15:50:23.726683 socket(PF_FILE, SOCK_STREAM, 0) = 4
26105 15:50:23.726695 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26105 15:50:23.726706 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26105 15:50:23.726728 close(4)          = 0
26105 15:50:23.726739 socket(PF_FILE, SOCK_STREAM, 0) = 4
26105 15:50:23.726750 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26105 15:50:23.726761 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26105 15:50:23.726779 close(4)          = 0
26105 15:50:23.726803 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26105 15:50:23.726818 _llseek(4, 0, [0], SEEK_CUR) = 0
26105 15:50:23.726831 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26105 15:50:23.726849 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f1e000
26105 15:50:23.726860 _llseek(4, 886, [886], SEEK_SET) = 0
26105 15:50:23.726885 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26105 15:50:23.726903 munmap(0xb7f1e000, 886) = 0
26105 15:50:23.726913 close(4)          = 0
26105 15:50:23.726923 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26105 15:50:23.726940 geteuid32()       = 0
26105 15:50:23.726952 getegid32()       = 0
26105 15:50:23.726963 setregid32(-1, 1000) = 0
26105 15:50:23.726974 setreuid32(-1, 1000) = 0
26105 15:50:23.726986 chdir("/home/msfadmin") = 0
26105 15:50:23.726987 setreuid32(-1, 0) = 0
26105 15:50:23.726987 setregid32(-1, 0) = 0
26105 15:50:23.726987 setgid32(1000)    = 0
26105 15:50:23.726987 setuid32(1000)    = 0
26105 15:50:23.726991 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26105 15:50:23.727005 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26105 15:50:23.727017 mprotect(0xb7f1e000, 4096, PROT_NONE) = 0
26105 15:50:23.727029 mprotect(0xb7f1c000, 4096, PROT_NONE) = 0
26105 15:50:23.727040 getcwd("/home/msfadmin", 4096) = 15
26105 15:50:23.727054 umask(022)        = 077
26105 15:50:23.727064 getcwd("/home/msfadmin", 4096) = 15
26105 15:50:23.727078 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26105 15:50:23.727101 write(0, "230 Login successful.\r\n", 23) = 23
26105 15:50:23.727167 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26105 15:50:23.727185 alarm(300)        = 0
26105 15:50:23.727196 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f19000
26105 15:50:23.727208 mprotect(0xb7f1b000, 4096, PROT_NONE) = 0
26105 15:50:23.727220 mprotect(0xb7f19000, 4096, PROT_NONE) = 0
26105 15:50:23.727233 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
26105 15:50:23.727246 read(0, "QUIT\r\n", 6) = 6
26105 15:50:23.727261 shutdown(0, 0 /* receive */) = 0
26105 15:50:23.727273 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
26105 15:50:23.727284 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26105 15:50:23.727294 write(0, "221 Goodbye.\r\n", 14) = 14
26105 15:50:23.727369 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
26105 15:50:23.727382 fcntl64(0, F_SETFL, O_RDWR) = 0
26105 15:50:23.727393 shutdown(0, 2 /* send and receive */) = 0
26105 15:50:23.727413 exit_group(0)     = ?
26103 15:50:23.727441 --- SIGCHLD (Child exited) @ 0 (0) ---
26103 15:50:23.727455 alarm(1)          = 0
26103 15:50:23.727467 sigreturn()       = ? (mask now [])
26103 15:50:23.727488 close(5)          = 0
26103 15:50:23.727502 getuid32()        = 0
26103 15:50:23.727517 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26103 15:50:23.727532 _llseek(5, 0, [0], SEEK_CUR) = 0
26103 15:50:23.727545 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26103 15:50:23.727563 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f1e000
26103 15:50:23.727575 _llseek(5, 1624, [1624], SEEK_SET) = 0
26103 15:50:23.727592 munmap(0xb7f1e000, 1624) = 0
26103 15:50:23.727604 close(5)          = 0
26103 15:50:23.727616 setgroups32(0, []) = 0
26103 15:50:23.727628 chdir("/usr/share/empty") = 0
26103 15:50:23.727640 chroot(".")       = 0
26103 15:50:23.727651 capset(NULL, NULL) = -1 EFAULT (Bad address)
26103 15:50:23.727664 prctl(0x8, 0, 0xbfbdc678, 0x80549a6, 0xbfbdc660) = 0
26103 15:50:23.727674 prctl(0x8, 0x1, 0xbfbdc678, 0x8054a49, 0xbfbdc660) = 0
26103 15:50:23.727685 setgid32(65534)   = 0
26103 15:50:23.727695 setuid32(65534)   = 0
26103 15:50:23.727705 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26103 15:50:23.727719 read(4, "", 1)    = 0
26103 15:50:23.727729 alarm(0)          = 1
26103 15:50:23.727740 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26105
26103 15:50:23.727753 exit_group(0)     = ?
4380  15:50:23.727788 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:50:23.727795 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:50:23.727802 write(4, "\21", 1) = 1
4380  15:50:23.727817 sigreturn()       = ? (mask now [])
4380  15:50:23.727851 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:50:23.727868 ioctl(3, FIONREAD, [1]) = 0
4380  15:50:23.727883 read(3, "\21", 1) = 1
4380  15:50:23.727896 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 26103
4380  15:50:23.727911 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:50:23.727925 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:50:23.727937 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:50:24.256330 accept(5, {sa_family=AF_INET, sin_port=htons(59201), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:50:24.256396 time(NULL)        = 1495655424
4380  15:50:24.256411 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 26106
26106 15:50:24.256523 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
26106 15:50:24.256539 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
26106 15:50:24.256551 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
26106 15:50:24.256562 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
26106 15:50:24.256581 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
26106 15:50:24.256595 close(3)          = 0
26106 15:50:24.256605 close(4)          = 0
26106 15:50:24.256615 open("/dev/null", O_RDONLY) = 3
26106 15:50:24.256631 dup2(3, 0)        = 0
26106 15:50:24.256641 dup2(3, 1)        = 1
26106 15:50:24.256650 dup2(3, 2)        = 2
26106 15:50:24.256658 close(3)          = 0
26106 15:50:24.256670 setgid32(0)       = 0
26106 15:50:24.256683 setgroups32(0, []) = 0
26106 15:50:24.256694 setuid32(0)       = 0
26106 15:50:24.256706 getpriority(PRIO_PROCESS, 0) = 20
26106 15:50:24.256715 setpriority(PRIO_PROCESS, 0, 10) = 0
26106 15:50:24.256725 getpriority(PRIO_PROCESS, 0) = 10
