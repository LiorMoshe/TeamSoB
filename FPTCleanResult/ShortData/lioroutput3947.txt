27422 16:13:02.677620 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.677631 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27422 16:13:02.677671 read(6, "", 4096) = 0
27422 16:13:02.677681 close(6)          = 0
27422 16:13:02.677690 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.677701 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27422 16:13:02.677719 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27422 16:13:02.677732 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27422 16:13:02.677748 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.677758 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27422 16:13:02.677796 read(6, "", 4096) = 0
27422 16:13:02.677806 close(6)          = 0
27422 16:13:02.677815 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.677825 read(5, "", 4096) = 0
27422 16:13:02.677834 close(5)          = 0
27422 16:13:02.677843 munmap(0xb7f60000, 4096) = 0
27422 16:13:02.677853 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
27422 16:13:02.677866 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
27422 16:13:02.677882 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
27422 16:13:02.677892 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
27422 16:13:02.677937 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27422 16:13:02.677955 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
27422 16:13:02.677967 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
27422 16:13:02.677983 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.677993 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
27422 16:13:02.678042 read(6, "", 4096) = 0
27422 16:13:02.678052 close(6)          = 0
27422 16:13:02.678061 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.678072 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27422 16:13:02.678114 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27422 16:13:02.678129 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27422 16:13:02.678155 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.678166 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27422 16:13:02.678205 read(6, "", 4096) = 0
27422 16:13:02.678215 close(6)          = 0
27422 16:13:02.678224 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.678235 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27422 16:13:02.678253 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
27422 16:13:02.678266 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
27422 16:13:02.678282 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.678292 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
27422 16:13:02.678407 read(6, "", 4096) = 0
27422 16:13:02.678417 close(6)          = 0
27422 16:13:02.678426 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.678437 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27422 16:13:02.678454 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27422 16:13:02.678467 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27422 16:13:02.678483 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
27422 16:13:02.678493 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27422 16:13:02.678530 read(6, "", 4096) = 0
27422 16:13:02.678540 close(6)          = 0
27422 16:13:02.678552 munmap(0xb7f5a000, 4096) = 0
27422 16:13:02.678563 read(5, "", 4096) = 0
27422 16:13:02.678572 close(5)          = 0
27422 16:13:02.678581 munmap(0xb7f60000, 4096) = 0
27422 16:13:02.678593 time(NULL)        = 1495656782
27422 16:13:02.678605 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27422 16:13:02.678623 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
27422 16:13:02.678635 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27422 16:13:02.678651 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
27422 16:13:02.678661 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
27422 16:13:02.678682 read(5, "", 4096) = 0
27422 16:13:02.678691 close(5)          = 0
27422 16:13:02.678700 munmap(0xb7f60000, 4096) = 0
27422 16:13:02.678715 getuid32()        = 0
27422 16:13:02.678731 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.678745 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.678756 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27422 16:13:02.678772 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.678783 _llseek(5, 1624, [1624], SEEK_SET) = 0
27422 16:13:02.678802 munmap(0xb7f60000, 1624) = 0
27422 16:13:02.678812 close(5)          = 0
27422 16:13:02.678836 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.678853 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.678864 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27422 16:13:02.678880 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.678890 _llseek(5, 1233, [1233], SEEK_SET) = 0
27422 16:13:02.678910 munmap(0xb7f60000, 1233) = 0
27422 16:13:02.678919 close(5)          = 0
27422 16:13:02.678937 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.678950 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.678960 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27422 16:13:02.678976 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.678986 _llseek(5, 1624, [1624], SEEK_SET) = 0
27422 16:13:02.679002 munmap(0xb7f60000, 1624) = 0
27422 16:13:02.679011 close(5)          = 0
27422 16:13:02.679023 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.679035 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.679045 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27422 16:13:02.679133 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.679145 _llseek(5, 1233, [1233], SEEK_SET) = 0
27422 16:13:02.679173 munmap(0xb7f60000, 1233) = 0
27422 16:13:02.679183 close(5)          = 0
27422 16:13:02.679415 getuid32()        = 0
27422 16:13:02.679426 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.679439 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.679449 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27422 16:13:02.679465 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.679475 _llseek(5, 1624, [1624], SEEK_SET) = 0
27422 16:13:02.679491 munmap(0xb7f60000, 1624) = 0
27422 16:13:02.679500 close(5)          = 0
27422 16:13:02.679513 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.679525 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.679535 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27422 16:13:02.679551 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.679561 _llseek(5, 1233, [1233], SEEK_SET) = 0
27422 16:13:02.679577 munmap(0xb7f60000, 1233) = 0
27422 16:13:02.679587 close(5)          = 0
27422 16:13:02.679598 time(NULL)        = 1495656782
27422 16:13:02.679612 munmap(0xb7f5d000, 12164) = 0
27422 16:13:02.679619 munmap(0xb7f5b000, 7136) = 0
27422 16:13:02.679619 munmap(0xb7d90000, 95428) = 0
27422 16:13:02.679619 munmap(0xb7d56000, 201052) = 0
27422 16:13:02.679620 munmap(0xb7d3d000, 101180) = 0
27422 16:13:02.679620 gettimeofday({1495656782, 679620}, NULL) = 0
27422 16:13:02.679620 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfea4014) = -1 ENOENT (No such file or directory)
27422 16:13:02.679620 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
27422 16:13:02.679621 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfea4164) = 0
27422 16:13:02.679621 write(3, "Wed May 24 16:13:02 2017 [pid 27422] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
27422 16:13:02.679621 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfea416c) = 0
27422 16:13:02.679621 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27422 16:13:02.679621 write(4, "\1", 1 <unfinished ...>
27423 16:13:02.679622 <... read resumed> "\1", 1) = 1
27422 16:13:02.679622 <... write resumed> ) = 1
27423 16:13:02.679622 exit_group(0)     = ?
27422 16:13:02.679622 --- SIGCHLD (Child exited) @ 0 (0) ---
27422 16:13:02.679622 sigreturn()       = ? (mask now [])
27422 16:13:02.679622 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 27423
27422 16:13:02.679623 close(4)          = 0
27422 16:13:02.679623 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
27422 16:13:02.679623 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27422 16:13:02.679630 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27422 16:13:02.679643 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dc66f8) = 27424
27424 16:13:02.679695 prctl(0x1, 0x9, 0, 0, 0) = 0
27424 16:13:02.679708 close(4)          = 0
27424 16:13:02.679736 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27424 16:13:02.679753 _llseek(4, 0, [0], SEEK_CUR) = 0
27424 16:13:02.679768 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27424 16:13:02.679786 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f60000
27424 16:13:02.679798 _llseek(4, 1624, [1624], SEEK_SET) = 0
27424 16:13:02.679820 munmap(0xb7f60000, 1624) = 0
27424 16:13:02.679831 close(4)          = 0
27424 16:13:02.679844 getuid32()        = 0
27424 16:13:02.679854 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27424 16:13:02.679867 _llseek(4, 0, [0], SEEK_CUR) = 0
27424 16:13:02.679877 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27424 16:13:02.679893 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f60000
27424 16:13:02.679903 _llseek(4, 1624, [1624], SEEK_SET) = 0
27424 16:13:02.679919 munmap(0xb7f60000, 1624) = 0
27424 16:13:02.679928 close(4)          = 0
27424 16:13:02.679953 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
27424 16:13:02.679973 read(4, "65536\n", 31) = 6
27424 16:13:02.679985 close(4)          = 0
27424 16:13:02.679999 socket(PF_FILE, SOCK_STREAM, 0) = 4
27424 16:13:02.680011 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27424 16:13:02.680022 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27424 16:13:02.680043 close(4)          = 0
27424 16:13:02.680054 socket(PF_FILE, SOCK_STREAM, 0) = 4
27424 16:13:02.680064 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27424 16:13:02.680075 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27424 16:13:02.680093 close(4)          = 0
27424 16:13:02.680116 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
27424 16:13:02.680131 _llseek(4, 0, [0], SEEK_CUR) = 0
27424 16:13:02.680141 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27424 16:13:02.680157 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f60000
27424 16:13:02.680168 _llseek(4, 886, [886], SEEK_SET) = 0
27424 16:13:02.680192 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27424 16:13:02.680209 munmap(0xb7f60000, 886) = 0
27424 16:13:02.680219 close(4)          = 0
27424 16:13:02.680228 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
27424 16:13:02.680244 geteuid32()       = 0
27424 16:13:02.680255 getegid32()       = 0
27424 16:13:02.680265 setregid32(-1, 1000) = 0
27424 16:13:02.680275 setreuid32(-1, 1000) = 0
27424 16:13:02.680290 chdir("/home/msfadmin") = 0
27424 16:13:02.680301 setreuid32(-1, 0) = 0
27424 16:13:02.680310 setregid32(-1, 0) = 0
27424 16:13:02.680321 setgid32(1000)    = 0
27424 16:13:02.680330 setuid32(1000)    = 0
27424 16:13:02.680340 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
27424 16:13:02.680353 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5e000
27424 16:13:02.680364 mprotect(0xb7f60000, 4096, PROT_NONE) = 0
27424 16:13:02.680376 mprotect(0xb7f5e000, 4096, PROT_NONE) = 0
27424 16:13:02.680386 getcwd("/home/msfadmin", 4096) = 15
27424 16:13:02.680399 umask(022)        = 077
27424 16:13:02.680409 getcwd("/home/msfadmin", 4096) = 15
27424 16:13:02.680423 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27424 16:13:02.680444 write(0, "230 Login successful.\r\n", 23) = 23
27424 16:13:02.680547 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.680566 alarm(300)        = 0
27424 16:13:02.680587 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
27424 16:13:02.680598 mprotect(0xb7f5d000, 4096, PROT_NONE) = 0
27424 16:13:02.680610 mprotect(0xb7f5b000, 4096, PROT_NONE) = 0
27424 16:13:02.680622 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
27424 16:13:02.680635 read(0, "TYPE I\r\n", 8) = 8
27424 16:13:02.680652 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27424 16:13:02.680694 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.680709 alarm(300)        = 300
27424 16:13:02.680720 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27424 16:13:02.680731 read(0, "PASV\r\n", 6) = 6
27424 16:13:02.680743 write(5, "\n", 1) = 1
27424 16:13:02.680753 read(5,  <unfinished ...>
27422 16:13:02.680765 close(5)          = 0
27422 16:13:02.680778 getuid32()        = 0
27422 16:13:02.680793 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27422 16:13:02.680807 _llseek(5, 0, [0], SEEK_CUR) = 0
27422 16:13:02.680820 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27422 16:13:02.680837 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f60000
27422 16:13:02.680848 _llseek(5, 1624, [1624], SEEK_SET) = 0
27422 16:13:02.680865 munmap(0xb7f60000, 1624) = 0
27422 16:13:02.680877 close(5)          = 0
27422 16:13:02.680892 setgroups32(0, []) = 0
27422 16:13:02.680904 chdir("/usr/share/empty") = 0
27422 16:13:02.680915 chroot(".")       = 0
27422 16:13:02.680926 capset(NULL, NULL) = -1 EFAULT (Bad address)
27422 16:13:02.680939 prctl(0x8, 0, 0xbfea4148, 0x80549a6, 0xbfea4130) = 0
27422 16:13:02.680950 prctl(0x8, 0x1, 0xbfea4148, 0x8054a49, 0xbfea4130) = 0
27422 16:13:02.680960 setgid32(65534)   = 0
27422 16:13:02.680970 setuid32(65534)   = 0
27422 16:13:02.680979 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
27422 16:13:02.680992 read(4, "\n", 1)  = 1
27422 16:13:02.681005 write(4, "\1", 1) = 1
27424 16:13:02.681016 <... read resumed> "\1", 1) = 1
27424 16:13:02.681024 write(5, "\f", 1) = 1
27424 16:13:02.681033 read(5,  <unfinished ...>
27422 16:13:02.681618 read(4, "\f", 1)  = 1
27422 16:13:02.681757 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27422 16:13:02.681812 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27422 16:13:02.681844 gettimeofday({1495656782, 681853}, NULL) = 0
27422 16:13:02.681875 bind(5, {sa_family=AF_INET, sin_port=htons(56059), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27422 16:13:02.681901 listen(5, 1)      = 0
27422 16:13:02.681915 write(4, "\373\332\0\0", 4) = 4
27424 16:13:02.681926 <... read resumed> "\373\332\0\0", 4) = 4
27424 16:13:02.681940 write(0, "227 Entering Passive Mode (127,0,0,1,218,251).\r\n", 48) = 48
27424 16:13:02.682039 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.682057 alarm(300)        = 300
27424 16:13:02.682068 recv(0, "STOR myfile3\r\n", 4096, MSG_PEEK) = 14
27424 16:13:02.682080 read(0, "STOR myfile3\r\n", 14) = 14
27424 16:13:02.682095 write(5, "\v", 1) = 1
27424 16:13:02.682105 read(5,  <unfinished ...>
27422 16:13:02.682112 read(4, "\v", 1)  = 1
27422 16:13:02.682127 write(4, "\1\0\0\0", 4) = 4
27424 16:13:02.682138 <... read resumed> "\1\0\0\0", 4) = 4
27424 16:13:02.682146 gettimeofday({1495656782, 682150}, NULL) = 0
27424 16:13:02.682157 getcwd("/home/msfadmin", 4096) = 15
27424 16:13:02.682169 open("myfile3", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
27424 16:13:02.682182 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
27424 16:13:02.682199 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
27424 16:13:02.682240 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
27424 16:13:02.682250 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfea4094) = 0
27424 16:13:02.682275 ftruncate64(4, 0) = 0
27424 16:13:02.682295 _llseek(4, 0, [0], SEEK_SET) = 0
27424 16:13:02.682306 write(5, "\v", 1) = 1
27424 16:13:02.682317 read(5,  <unfinished ...>
27422 16:13:02.682324 read(4, "\v", 1)  = 1
27422 16:13:02.682336 write(4, "\1\0\0\0", 4) = 4
27424 16:13:02.682346 <... read resumed> "\1\0\0\0", 4) = 4
27424 16:13:02.682353 write(5, "\v", 1) = 1
27424 16:13:02.682363 read(5,  <unfinished ...>
27422 16:13:02.682370 read(4, "\v", 1)  = 1
27422 16:13:02.682380 write(4, "\1\0\0\0", 4) = 4
27424 16:13:02.682390 <... read resumed> "\1\0\0\0", 4) = 4
27424 16:13:02.682397 write(5, "\r", 1) = 1
27424 16:13:02.682407 read(5,  <unfinished ...>
27422 16:13:02.682414 read(4, "\r", 1)  = 1
27422 16:13:02.682426 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
27422 16:13:02.682442 accept(5, {sa_family=AF_INET, sin_port=htons(46693), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
27422 16:13:02.682465 write(4, "\1", 1) = 1
27424 16:13:02.682475 <... read resumed> "\1", 1) = 1
27424 16:13:02.682484 recvmsg(5,  <unfinished ...>
27422 16:13:02.682493 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27424 16:13:02.682510 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27424 16:13:02.682523 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
27424 16:13:02.682535 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
27424 16:13:02.682547 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
27424 16:13:02.682558 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.682571 alarm(300)        = 300
27424 16:13:02.682584 write(0, "150 Ok to send data.\r\n", 22) = 22
27424 16:13:02.682647 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d95000
27424 16:13:02.682661 mprotect(0xb7da7000, 4096, PROT_NONE) = 0
27424 16:13:02.682673 mprotect(0xb7d95000, 4096, PROT_NONE) = 0
27424 16:13:02.682683 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
27424 16:13:02.682696 write(4, "assasaaa\na\na\na\na\n", 17) = 17
27424 16:13:02.682711 read(6, "", 65536) = 0
27424 16:13:02.682721 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.682735 alarm(300)        = 300
27424 16:13:02.682744 close(6)          = 0
27424 16:13:02.682753 alarm(0)          = 300
27424 16:13:02.682762 gettimeofday({1495656782, 682766}, NULL) = 0
27424 16:13:02.682779 getpid()          = 27424
27424 16:13:02.682791 gettimeofday({1495656782, 682795}, NULL) = 0
27424 16:13:02.682808 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfea4034) = 0
27424 16:13:02.682823 write(3, "Wed May 24 16:13:02 2017 [pid 27424] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile3\", 17 bytes, 25.74Kbyte/sec\n", 130) = 130
27424 16:13:02.682842 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfea403c) = 0
27424 16:13:02.682857 write(0, "226 Transfer complete.\r\n", 24) = 24
27424 16:13:02.682897 write(5, "\n", 1) = 1
27424 16:13:02.682908 read(5,  <unfinished ...>
27422 16:13:02.682915 close(6)          = 0
27422 16:13:02.682933 read(4, "\n", 1)  = 1
27422 16:13:02.682945 close(5)          = 0
27422 16:13:02.682959 write(4, "\1", 1) = 1
27424 16:13:02.682970 <... read resumed> "\1", 1) = 1
27424 16:13:02.682977 close(4)          = 0
27424 16:13:02.682987 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:02.683000 alarm(300)        = 0
27424 16:13:02.683011 recv(0,  <unfinished ...>
27422 16:13:02.683019 read(4,  <unfinished ...>
27424 16:13:03.189346 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
27424 16:13:03.189378 read(0, "TYPE I\r\n", 8) = 8
27424 16:13:03.189399 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27424 16:13:03.189446 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:03.189463 alarm(300)        = 299
27424 16:13:03.189476 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27424 16:13:03.189488 read(0, "PASV\r\n", 6) = 6
27424 16:13:03.189500 write(5, "\n", 1) = 1
27424 16:13:03.189512 read(5,  <unfinished ...>
27422 16:13:03.189521 <... read resumed> "\n", 1) = 1
27422 16:13:03.189530 write(4, "\1", 1) = 1
27424 16:13:03.189541 <... read resumed> "\1", 1) = 1
27424 16:13:03.189548 write(5, "\f", 1) = 1
27424 16:13:03.189558 read(5,  <unfinished ...>
27422 16:13:03.189564 read(4, "\f", 1)  = 1
27422 16:13:03.189576 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27422 16:13:03.189592 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27422 16:13:03.189632 bind(5, {sa_family=AF_INET, sin_port=htons(19575), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27422 16:13:03.189666 listen(5, 1)      = 0
27422 16:13:03.189679 write(4, "wL\0\0", 4) = 4
27424 16:13:03.189691 <... read resumed> "wL\0\0", 4) = 4
27424 16:13:03.189703 write(0, "227 Entering Passive Mode (127,0,0,1,76,119).\r\n", 47) = 47
27424 16:13:03.189818 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27424 16:13:03.189835 alarm(300)        = 300
27424 16:13:03.189847 recv(0, "STOR myfile4\r\n", 4096, MSG_PEEK) = 14
27424 16:13:03.189859 read(0, "STOR myfile4\r\n", 14) = 14
27424 16:13:03.189872 write(5, "\v", 1) = 1
27424 16:13:03.189883 read(5,  <unfinished ...>
27422 16:13:03.189890 read(4, "\v", 1)  = 1
27422 16:13:03.189900 write(4, "\1\0\0\0", 4) = 4
27424 16:13:03.189911 <... read resumed> "\1\0\0\0", 4) = 4
27424 16:13:03.189918 gettimeofday({1495656783, 189922}, NULL) = 0
27424 16:13:03.189929 getcwd("/home/msfadmin", 4096) = 15
