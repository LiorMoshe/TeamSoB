26446 15:56:06.782444 close(7)          = 0
26446 15:56:06.782456 open("/etc/ld.so.cache", O_RDONLY) = 7
26446 15:56:06.782469 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
26446 15:56:06.782484 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7db1000
26446 15:56:06.782494 close(7)          = 0
26446 15:56:06.782505 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26446 15:56:06.782520 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
26446 15:56:06.782535 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
26446 15:56:06.782626 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
26446 15:56:06.782644 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d7f000
26446 15:56:06.782655 mmap2(0xb7d88000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d88000
26446 15:56:06.782670 mmap2(0xb7d8a000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d8a000
26446 15:56:06.782685 close(7)          = 0
26446 15:56:06.782698 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26446 15:56:06.782711 open("/lib/libselinux.so.1", O_RDONLY) = 7
26446 15:56:06.782724 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
26446 15:56:06.782810 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
26446 15:56:06.782827 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d66000
26446 15:56:06.782838 mmap2(0xb7d7d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d7d000
26446 15:56:06.782855 close(7)          = 0
26446 15:56:06.782955 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26446 15:56:06.782981 statfs64("/selinux", 84, 0xbfdb304c) = -1 ENOENT (No such file or directory)
26446 15:56:06.782994 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26446 15:56:06.783020 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26446 15:56:06.783050 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f82000
26446 15:56:06.783065 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26446 15:56:06.783163 read(7, "", 1024) = 0
26446 15:56:06.783173 close(7)          = 0
26446 15:56:06.783183 munmap(0xb7f82000, 4096) = 0
26446 15:56:06.783200 munmap(0xb7db1000, 29913) = 0
26446 15:56:06.783214 read(6, "", 4096) = 0
26446 15:56:06.783225 close(6)          = 0
26446 15:56:06.783234 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.783245 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.783265 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.783278 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26446 15:56:06.783294 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.783305 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26446 15:56:06.783346 read(6, "", 4096) = 0
26446 15:56:06.783356 close(6)          = 0
26446 15:56:06.783365 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.783375 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.783394 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.783407 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26446 15:56:06.783423 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.783433 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26446 15:56:06.783472 read(6, "", 4096) = 0
26446 15:56:06.783482 close(6)          = 0
26446 15:56:06.783491 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.783501 read(5, "", 4096) = 0
26446 15:56:06.783510 close(5)          = 0
26446 15:56:06.783519 munmap(0xb7f89000, 4096) = 0
26446 15:56:06.783529 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26446 15:56:06.783543 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26446 15:56:06.783559 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f89000
26446 15:56:06.783569 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26446 15:56:06.783621 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.783641 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.783654 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26446 15:56:06.783670 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.783680 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26446 15:56:06.783730 read(6, "", 4096) = 0
26446 15:56:06.783741 close(6)          = 0
26446 15:56:06.783750 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.783761 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.783779 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.783792 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26446 15:56:06.783808 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.783818 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26446 15:56:06.783857 read(6, "", 4096) = 0
26446 15:56:06.783867 close(6)          = 0
26446 15:56:06.783876 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.783886 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.783904 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.783917 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26446 15:56:06.783933 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.783943 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26446 15:56:06.784090 read(6, "", 4096) = 0
26446 15:56:06.784101 close(6)          = 0
26446 15:56:06.784110 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.784121 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26446 15:56:06.784140 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26446 15:56:06.784153 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26446 15:56:06.784169 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
26446 15:56:06.784180 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26446 15:56:06.784218 read(6, "", 4096) = 0
26446 15:56:06.784228 close(6)          = 0
26446 15:56:06.784240 munmap(0xb7f83000, 4096) = 0
26446 15:56:06.784251 read(5, "", 4096) = 0
26446 15:56:06.784260 close(5)          = 0
26446 15:56:06.784269 munmap(0xb7f89000, 4096) = 0
26446 15:56:06.784281 time(NULL)        = 1495655766
26446 15:56:06.784293 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26446 15:56:06.784312 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26446 15:56:06.784323 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26446 15:56:06.784339 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f89000
26446 15:56:06.784350 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26446 15:56:06.784371 read(5, "", 4096) = 0
26446 15:56:06.784380 close(5)          = 0
26446 15:56:06.784389 munmap(0xb7f89000, 4096) = 0
26446 15:56:06.784404 getuid32()        = 0
26446 15:56:06.784421 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.784436 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.784446 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26446 15:56:06.784462 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.784473 _llseek(5, 1624, [1624], SEEK_SET) = 0
26446 15:56:06.784492 munmap(0xb7f89000, 1624) = 0
26446 15:56:06.784503 close(5)          = 0
26446 15:56:06.784527 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.784544 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.784555 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26446 15:56:06.784570 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.784598 _llseek(5, 1233, [1233], SEEK_SET) = 0
26446 15:56:06.784621 munmap(0xb7f89000, 1233) = 0
26446 15:56:06.784631 close(5)          = 0
26446 15:56:06.784650 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.784664 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.784675 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26446 15:56:06.784691 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.784701 _llseek(5, 1624, [1624], SEEK_SET) = 0
26446 15:56:06.784717 munmap(0xb7f89000, 1624) = 0
26446 15:56:06.784726 close(5)          = 0
26446 15:56:06.784739 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.784752 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.784762 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26446 15:56:06.784777 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.784788 _llseek(5, 1233, [1233], SEEK_SET) = 0
26446 15:56:06.784804 munmap(0xb7f89000, 1233) = 0
26446 15:56:06.784813 close(5)          = 0
26446 15:56:06.785077 getuid32()        = 0
26446 15:56:06.785090 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.785104 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.785114 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26446 15:56:06.785130 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.785141 _llseek(5, 1624, [1624], SEEK_SET) = 0
26446 15:56:06.785156 munmap(0xb7f89000, 1624) = 0
26446 15:56:06.785166 close(5)          = 0
26446 15:56:06.785180 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.785192 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.785202 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26446 15:56:06.785218 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.785228 _llseek(5, 1233, [1233], SEEK_SET) = 0
26446 15:56:06.785245 munmap(0xb7f89000, 1233) = 0
26446 15:56:06.785254 close(5)          = 0
26446 15:56:06.785266 time(NULL)        = 1495655766
26446 15:56:06.785281 munmap(0xb7f86000, 12164) = 0
26446 15:56:06.785294 munmap(0xb7f84000, 7136) = 0
26446 15:56:06.785308 munmap(0xb7db9000, 95428) = 0
26446 15:56:06.785319 munmap(0xb7d7f000, 201052) = 0
26446 15:56:06.785330 munmap(0xb7d66000, 101180) = 0
26446 15:56:06.785347 gettimeofday({1495655766, 785351}, NULL) = 0
26446 15:56:06.785362 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfdb4f24) = -1 ENOENT (No such file or directory)
26446 15:56:06.785377 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26446 15:56:06.785403 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdb5074) = 0
26446 15:56:06.785419 write(3, "Wed May 24 15:56:06 2017 [pid 26446] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26446 15:56:06.785436 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdb507c) = 0
26446 15:56:06.785449 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26446 15:56:06.785463 write(4, "\1", 1 <unfinished ...>
26447 15:56:06.785473 <... read resumed> "\1", 1) = 1
26446 15:56:06.785478 <... write resumed> ) = 1
26447 15:56:06.785485 exit_group(0)     = ?
26446 15:56:06.785525 --- SIGCHLD (Child exited) @ 0 (0) ---
26446 15:56:06.785533 sigreturn()       = ? (mask now [])
26446 15:56:06.785553 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26447
26446 15:56:06.785566 close(4)          = 0
26446 15:56:06.785577 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26446 15:56:06.785591 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26446 15:56:06.785604 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26446 15:56:06.785618 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7def6f8) = 26448
26448 15:56:06.785669 prctl(0x1, 0x9, 0, 0, 0) = 0
26448 15:56:06.785682 close(4)          = 0
26448 15:56:06.785711 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26448 15:56:06.785728 _llseek(4, 0, [0], SEEK_CUR) = 0
26448 15:56:06.785743 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26448 15:56:06.785761 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
26448 15:56:06.785773 _llseek(4, 1624, [1624], SEEK_SET) = 0
26448 15:56:06.785795 munmap(0xb7f89000, 1624) = 0
26448 15:56:06.785806 close(4)          = 0
26448 15:56:06.785819 getuid32()        = 0
26448 15:56:06.785830 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26448 15:56:06.785842 _llseek(4, 0, [0], SEEK_CUR) = 0
26448 15:56:06.785852 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26448 15:56:06.785869 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
26448 15:56:06.785879 _llseek(4, 1624, [1624], SEEK_SET) = 0
26448 15:56:06.785895 munmap(0xb7f89000, 1624) = 0
26448 15:56:06.785904 close(4)          = 0
26448 15:56:06.785952 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26448 15:56:06.785975 read(4, "65536\n", 31) = 6
26448 15:56:06.785997 close(4)          = 0
26448 15:56:06.786011 socket(PF_FILE, SOCK_STREAM, 0) = 4
26448 15:56:06.786023 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26448 15:56:06.786033 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26448 15:56:06.786055 close(4)          = 0
26448 15:56:06.786066 socket(PF_FILE, SOCK_STREAM, 0) = 4
26448 15:56:06.786076 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26448 15:56:06.786086 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26448 15:56:06.786104 close(4)          = 0
26448 15:56:06.786128 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26448 15:56:06.786142 _llseek(4, 0, [0], SEEK_CUR) = 0
26448 15:56:06.786153 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26448 15:56:06.786169 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
26448 15:56:06.786180 _llseek(4, 886, [886], SEEK_SET) = 0
26448 15:56:06.786205 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26448 15:56:06.786222 munmap(0xb7f89000, 886) = 0
26448 15:56:06.786232 close(4)          = 0
26448 15:56:06.786242 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26448 15:56:06.786259 geteuid32()       = 0
26448 15:56:06.786270 getegid32()       = 0
26448 15:56:06.786280 setregid32(-1, 1000) = 0
26448 15:56:06.786290 setreuid32(-1, 1000) = 0
26448 15:56:06.786305 chdir("/home/msfadmin") = 0
26448 15:56:06.786317 setreuid32(-1, 0) = 0
26448 15:56:06.786326 setregid32(-1, 0) = 0
26448 15:56:06.786337 setgid32(1000)    = 0
26448 15:56:06.786346 setuid32(1000)    = 0
26448 15:56:06.786357 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26448 15:56:06.786370 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f87000
26448 15:56:06.786381 mprotect(0xb7f89000, 4096, PROT_NONE) = 0
26448 15:56:06.786392 mprotect(0xb7f87000, 4096, PROT_NONE) = 0
26448 15:56:06.786403 getcwd("/home/msfadmin", 4096) = 15
26448 15:56:06.786417 umask(022)        = 077
26448 15:56:06.786426 getcwd("/home/msfadmin", 4096) = 15
26448 15:56:06.786440 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26448 15:56:06.786462 write(0, "230 Login successful.\r\n", 23) = 23
26448 15:56:06.786552 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26448 15:56:06.786569 alarm(300)        = 0
26448 15:56:06.786580 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f84000
26448 15:56:06.786591 mprotect(0xb7f86000, 4096, PROT_NONE) = 0
26448 15:56:06.786602 mprotect(0xb7f84000, 4096, PROT_NONE) = 0
26448 15:56:06.786615 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26448 15:56:06.786627 read(0, "TYPE I\r\n", 8) = 8
26448 15:56:06.786644 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26448 15:56:06.786683 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26448 15:56:06.786698 alarm(300)        = 300
26448 15:56:06.786709 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26448 15:56:06.786720 read(0, "PASV\r\n", 6) = 6
26448 15:56:06.786732 write(5, "\n", 1) = 1
26448 15:56:06.786742 read(5,  <unfinished ...>
26446 15:56:06.786755 close(5)          = 0
26446 15:56:06.786768 getuid32()        = 0
26446 15:56:06.786783 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26446 15:56:06.786798 _llseek(5, 0, [0], SEEK_CUR) = 0
26446 15:56:06.786810 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26446 15:56:06.786827 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
26446 15:56:06.786839 _llseek(5, 1624, [1624], SEEK_SET) = 0
26446 15:56:06.786856 munmap(0xb7f89000, 1624) = 0
26446 15:56:06.786867 close(5)          = 0
26446 15:56:06.786883 setgroups32(0, []) = 0
26446 15:56:06.786895 chdir("/usr/share/empty") = 0
26446 15:56:06.786944 chroot(".")       = 0
26446 15:56:06.786965 capset(NULL, NULL) = -1 EFAULT (Bad address)
26446 15:56:06.786979 prctl(0x8, 0, 0xbfdb5058, 0x80549a6, 0xbfdb5040) = 0
26446 15:56:06.786990 prctl(0x8, 0x1, 0xbfdb5058, 0x8054a49, 0xbfdb5040) = 0
26446 15:56:06.787000 setgid32(65534)   = 0
26446 15:56:06.787010 setuid32(65534)   = 0
26446 15:56:06.787019 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26446 15:56:06.787033 read(4, "\n", 1)  = 1
26446 15:56:06.787046 write(4, "\1", 1) = 1
26448 15:56:06.787057 <... read resumed> "\1", 1) = 1
26448 15:56:06.787065 write(5, "\f", 1) = 1
26448 15:56:06.787074 read(5,  <unfinished ...>
26446 15:56:06.787081 read(4, "\f", 1)  = 1
26446 15:56:06.787093 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26446 15:56:06.787107 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26446 15:56:06.787118 gettimeofday({1495655766, 787122}, NULL) = 0
26446 15:56:06.787134 bind(5, {sa_family=AF_INET, sin_port=htons(46604), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26446 15:56:06.787150 listen(5, 1)      = 0
26446 15:56:06.787163 write(4, "\f\266\0\0", 4) = 4
26448 15:56:06.787174 <... read resumed> "\f\266\0\0", 4) = 4
26448 15:56:06.787187 write(0, "227 Entering Passive Mode (127,0,0,1,182,12).\r\n", 47) = 47
26448 15:56:06.787296 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26448 15:56:06.787314 alarm(300)        = 300
26448 15:56:06.787326 recv(0, "STOR myfile2\r\n", 4096, MSG_PEEK) = 14
26448 15:56:06.787338 read(0, "STOR myfile2\r\n", 14) = 14
26448 15:56:06.787353 write(5, "\v", 1) = 1
26448 15:56:06.787363 read(5,  <unfinished ...>
26446 15:56:06.787370 read(4, "\v", 1)  = 1
26446 15:56:06.787385 write(4, "\1\0\0\0", 4) = 4
26448 15:56:06.787396 <... read resumed> "\1\0\0\0", 4) = 4
26448 15:56:06.787415 gettimeofday({1495655766, 787418}, NULL) = 0
26448 15:56:06.787426 getcwd("/home/msfadmin", 4096) = 15
26448 15:56:06.787438 open("myfile2", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26448 15:56:06.787451 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26448 15:56:06.787468 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26448 15:56:06.787479 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26448 15:56:06.787489 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdb4fa4) = 0
26448 15:56:06.787504 ftruncate64(4, 0) = 0
26448 15:56:06.787522 _llseek(4, 0, [0], SEEK_SET) = 0
26448 15:56:06.787533 write(5, "\v", 1) = 1
26448 15:56:06.787544 read(5,  <unfinished ...>
26446 15:56:06.787551 read(4, "\v", 1)  = 1
26446 15:56:06.787562 write(4, "\1\0\0\0", 4) = 4
26448 15:56:06.787572 <... read resumed> "\1\0\0\0", 4) = 4
26448 15:56:06.787580 write(5, "\v", 1) = 1
26448 15:56:06.787589 read(5,  <unfinished ...>
26446 15:56:06.787596 read(4, "\v", 1)  = 1
26446 15:56:06.787606 write(4, "\1\0\0\0", 4) = 4
26448 15:56:06.787616 <... read resumed> "\1\0\0\0", 4) = 4
26448 15:56:06.787623 write(5, "\r", 1) = 1
26448 15:56:06.787633 read(5,  <unfinished ...>
26446 15:56:06.787639 read(4, "\r", 1)  = 1
26446 15:56:06.787652 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26446 15:56:06.787668 accept(5, {sa_family=AF_INET, sin_port=htons(37382), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26446 15:56:06.787690 write(4, "\1", 1) = 1
