26410 15:55:30.439624 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26410 15:55:30.439664 read(6, "", 4096) = 0
26410 15:55:30.439674 close(6)          = 0
26410 15:55:30.439683 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.439694 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26410 15:55:30.439712 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26410 15:55:30.439725 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26410 15:55:30.439741 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
26410 15:55:30.439751 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26410 15:55:30.439790 read(6, "", 4096) = 0
26410 15:55:30.439800 close(6)          = 0
26410 15:55:30.439809 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.439818 read(5, "", 4096) = 0
26410 15:55:30.439827 close(5)          = 0
26410 15:55:30.439836 munmap(0xb7f80000, 4096) = 0
26410 15:55:30.439846 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26410 15:55:30.439859 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26410 15:55:30.439875 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f80000
26410 15:55:30.439884 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26410 15:55:30.439929 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26410 15:55:30.439947 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26410 15:55:30.439960 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26410 15:55:30.439975 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
26410 15:55:30.439985 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26410 15:55:30.440035 read(6, "", 4096) = 0
26410 15:55:30.440044 close(6)          = 0
26410 15:55:30.440054 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.440067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26410 15:55:30.440087 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26410 15:55:30.440100 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26410 15:55:30.440116 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
26410 15:55:30.440126 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26410 15:55:30.440166 read(6, "", 4096) = 0
26410 15:55:30.440176 close(6)          = 0
26410 15:55:30.440185 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.440195 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26410 15:55:30.440213 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26410 15:55:30.440226 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26410 15:55:30.440242 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
26410 15:55:30.440283 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26410 15:55:30.440410 read(6, "", 4096) = 0
26410 15:55:30.440420 close(6)          = 0
26410 15:55:30.440429 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.440439 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26410 15:55:30.440458 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26410 15:55:30.440471 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26410 15:55:30.440487 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
26410 15:55:30.440497 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26410 15:55:30.440534 read(6, "", 4096) = 0
26410 15:55:30.440544 close(6)          = 0
26410 15:55:30.440557 munmap(0xb7f7a000, 4096) = 0
26410 15:55:30.440567 read(5, "", 4096) = 0
26410 15:55:30.440576 close(5)          = 0
26410 15:55:30.440585 munmap(0xb7f80000, 4096) = 0
26410 15:55:30.440597 time(NULL)        = 1495655730
26410 15:55:30.440609 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26410 15:55:30.440627 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26410 15:55:30.440639 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26410 15:55:30.440654 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f80000
26410 15:55:30.440665 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26410 15:55:30.440685 read(5, "", 4096) = 0
26410 15:55:30.440694 close(5)          = 0
26410 15:55:30.440703 munmap(0xb7f80000, 4096) = 0
26410 15:55:30.440718 getuid32()        = 0
26410 15:55:30.440734 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.440749 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.440759 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26410 15:55:30.440775 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.440786 _llseek(5, 1624, [1624], SEEK_SET) = 0
26410 15:55:30.440804 munmap(0xb7f80000, 1624) = 0
26410 15:55:30.440815 close(5)          = 0
26410 15:55:30.440839 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.440856 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.440866 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26410 15:55:30.440882 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.440892 _llseek(5, 1233, [1233], SEEK_SET) = 0
26410 15:55:30.440912 munmap(0xb7f80000, 1233) = 0
26410 15:55:30.440921 close(5)          = 0
26410 15:55:30.440939 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.440952 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.440962 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26410 15:55:30.440978 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.440988 _llseek(5, 1624, [1624], SEEK_SET) = 0
26410 15:55:30.441004 munmap(0xb7f80000, 1624) = 0
26410 15:55:30.441013 close(5)          = 0
26410 15:55:30.441026 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.441039 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.441048 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26410 15:55:30.441064 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.441074 _llseek(5, 1233, [1233], SEEK_SET) = 0
26410 15:55:30.441090 munmap(0xb7f80000, 1233) = 0
26410 15:55:30.441099 close(5)          = 0
26410 15:55:30.441382 getuid32()        = 0
26410 15:55:30.441396 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.441409 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.441420 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26410 15:55:30.441436 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.441446 _llseek(5, 1624, [1624], SEEK_SET) = 0
26410 15:55:30.441462 munmap(0xb7f80000, 1624) = 0
26410 15:55:30.441472 close(5)          = 0
26410 15:55:30.441485 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.441498 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.441508 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26410 15:55:30.441524 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.441534 _llseek(5, 1233, [1233], SEEK_SET) = 0
26410 15:55:30.441550 munmap(0xb7f80000, 1233) = 0
26410 15:55:30.441559 close(5)          = 0
26410 15:55:30.441570 time(NULL)        = 1495655730
26410 15:55:30.441585 munmap(0xb7f7d000, 12164) = 0
26410 15:55:30.441598 munmap(0xb7f7b000, 7136) = 0
26410 15:55:30.441612 munmap(0xb7db0000, 95428) = 0
26410 15:55:30.441622 munmap(0xb7d76000, 201052) = 0
26410 15:55:30.441633 munmap(0xb7d5d000, 101180) = 0
26410 15:55:30.441649 gettimeofday({1495655730, 441653}, NULL) = 0
26410 15:55:30.441664 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfd1ae84) = -1 ENOENT (No such file or directory)
26410 15:55:30.441679 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26410 15:55:30.441704 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd1afd4) = 0
26410 15:55:30.441720 write(3, "Wed May 24 15:55:30 2017 [pid 26410] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26410 15:55:30.441736 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd1afdc) = 0
26410 15:55:30.441749 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26410 15:55:30.441753 write(4, "\1", 1 <unfinished ...>
26411 15:55:30.441754 <... read resumed> "\1", 1) = 1
26410 15:55:30.441754 <... write resumed> ) = 1
26411 15:55:30.441754 exit_group(0)     = ?
26410 15:55:30.441754 --- SIGCHLD (Child exited) @ 0 (0) ---
26410 15:55:30.441754 sigreturn()       = ? (mask now [])
26410 15:55:30.441754 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26411
26410 15:55:30.441754 close(4)          = 0
26410 15:55:30.441755 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26410 15:55:30.441763 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26410 15:55:30.441777 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26410 15:55:30.441790 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7de66f8) = 26412
26412 15:55:30.441841 prctl(0x1, 0x9, 0, 0, 0) = 0
26412 15:55:30.441854 close(4)          = 0
26412 15:55:30.441880 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26412 15:55:30.441898 _llseek(4, 0, [0], SEEK_CUR) = 0
26412 15:55:30.441912 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26412 15:55:30.441931 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f80000
26412 15:55:30.441942 _llseek(4, 1624, [1624], SEEK_SET) = 0
26412 15:55:30.441964 munmap(0xb7f80000, 1624) = 0
26412 15:55:30.442008 close(4)          = 0
26412 15:55:30.442031 getuid32()        = 0
26412 15:55:30.442041 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26412 15:55:30.442055 _llseek(4, 0, [0], SEEK_CUR) = 0
26412 15:55:30.442065 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26412 15:55:30.442081 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f80000
26412 15:55:30.442092 _llseek(4, 1624, [1624], SEEK_SET) = 0
26412 15:55:30.442108 munmap(0xb7f80000, 1624) = 0
26412 15:55:30.442117 close(4)          = 0
26412 15:55:30.442142 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26412 15:55:30.442164 read(4, "65536\n", 31) = 6
26412 15:55:30.442176 close(4)          = 0
26412 15:55:30.442189 socket(PF_FILE, SOCK_STREAM, 0) = 4
26412 15:55:30.442201 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26412 15:55:30.442211 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26412 15:55:30.442231 close(4)          = 0
26412 15:55:30.442242 socket(PF_FILE, SOCK_STREAM, 0) = 4
26412 15:55:30.442252 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26412 15:55:30.442262 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26412 15:55:30.442280 close(4)          = 0
26412 15:55:30.442303 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26412 15:55:30.442317 _llseek(4, 0, [0], SEEK_CUR) = 0
26412 15:55:30.442327 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26412 15:55:30.442343 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f80000
26412 15:55:30.442354 _llseek(4, 886, [886], SEEK_SET) = 0
26412 15:55:30.442378 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26412 15:55:30.442395 munmap(0xb7f80000, 886) = 0
26412 15:55:30.442405 close(4)          = 0
26412 15:55:30.442415 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26412 15:55:30.442430 geteuid32()       = 0
26412 15:55:30.442441 getegid32()       = 0
26412 15:55:30.442451 setregid32(-1, 1000) = 0
26412 15:55:30.442461 setreuid32(-1, 1000) = 0
26412 15:55:30.442475 chdir("/home/msfadmin") = 0
26412 15:55:30.442487 setreuid32(-1, 0) = 0
26412 15:55:30.442496 setregid32(-1, 0) = 0
26412 15:55:30.442506 setgid32(1000)    = 0
26412 15:55:30.442515 setuid32(1000)    = 0
26412 15:55:30.442525 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26412 15:55:30.442538 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7e000
26412 15:55:30.442549 mprotect(0xb7f80000, 4096, PROT_NONE) = 0
26412 15:55:30.442560 mprotect(0xb7f7e000, 4096, PROT_NONE) = 0
26412 15:55:30.442571 getcwd("/home/msfadmin", 4096) = 15
26412 15:55:30.442584 umask(022)        = 077
26412 15:55:30.442594 getcwd("/home/msfadmin", 4096) = 15
26412 15:55:30.442607 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26412 15:55:30.442629 write(0, "230 Login successful.\r\n", 23) = 23
26412 15:55:30.442710 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.442726 alarm(300)        = 0
26412 15:55:30.442737 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7b000
26412 15:55:30.442748 mprotect(0xb7f7d000, 4096, PROT_NONE) = 0
26412 15:55:30.442759 mprotect(0xb7f7b000, 4096, PROT_NONE) = 0
26412 15:55:30.442771 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26412 15:55:30.442784 read(0, "TYPE I\r\n", 8) = 8
26412 15:55:30.442800 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26412 15:55:30.442839 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.442854 alarm(300)        = 300
26412 15:55:30.442865 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26412 15:55:30.442876 read(0, "PASV\r\n", 6) = 6
26412 15:55:30.442887 write(5, "\n", 1) = 1
26412 15:55:30.442898 read(5,  <unfinished ...>
26410 15:55:30.442911 close(5)          = 0
26410 15:55:30.442923 getuid32()        = 0
26410 15:55:30.442938 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26410 15:55:30.442978 _llseek(5, 0, [0], SEEK_CUR) = 0
26410 15:55:30.442991 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26410 15:55:30.443018 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f80000
26410 15:55:30.443029 _llseek(5, 1624, [1624], SEEK_SET) = 0
26410 15:55:30.443046 munmap(0xb7f80000, 1624) = 0
26410 15:55:30.443057 close(5)          = 0
26410 15:55:30.443072 setgroups32(0, []) = 0
26410 15:55:30.443084 chdir("/usr/share/empty") = 0
26410 15:55:30.443096 chroot(".")       = 0
26410 15:55:30.443106 capset(NULL, NULL) = -1 EFAULT (Bad address)
26410 15:55:30.443119 prctl(0x8, 0, 0xbfd1afb8, 0x80549a6, 0xbfd1afa0) = 0
26410 15:55:30.443130 prctl(0x8, 0x1, 0xbfd1afb8, 0x8054a49, 0xbfd1afa0) = 0
26410 15:55:30.443140 setgid32(65534)   = 0
26410 15:55:30.443149 setuid32(65534)   = 0
26410 15:55:30.443158 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26410 15:55:30.443172 read(4, "\n", 1)  = 1
26410 15:55:30.443185 write(4, "\1", 1) = 1
26412 15:55:30.443196 <... read resumed> "\1", 1) = 1
26412 15:55:30.443203 write(5, "\f", 1) = 1
26412 15:55:30.443213 read(5,  <unfinished ...>
26410 15:55:30.443219 read(4, "\f", 1)  = 1
26410 15:55:30.443231 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26410 15:55:30.443244 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26410 15:55:30.443255 gettimeofday({1495655730, 443259}, NULL) = 0
26410 15:55:30.443272 bind(5, {sa_family=AF_INET, sin_port=htons(6051), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26410 15:55:30.443287 listen(5, 1)      = 0
26410 15:55:30.443299 write(4, "\243\27\0\0", 4) = 4
26412 15:55:30.443310 <... read resumed> "\243\27\0\0", 4) = 4
26412 15:55:30.443324 write(0, "227 Entering Passive Mode (127,0,0,1,23,163).\r\n", 47) = 47
26412 15:55:30.443422 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.443440 alarm(300)        = 300
26412 15:55:30.443451 recv(0, "STOR myfile25\r\n", 4096, MSG_PEEK) = 15
26412 15:55:30.443463 read(0, "STOR myfile25\r\n", 15) = 15
26412 15:55:30.443478 write(5, "\v", 1) = 1
26412 15:55:30.443488 read(5,  <unfinished ...>
26410 15:55:30.443495 read(4, "\v", 1)  = 1
26410 15:55:30.443510 write(4, "\1\0\0\0", 4) = 4
26412 15:55:30.443521 <... read resumed> "\1\0\0\0", 4) = 4
26412 15:55:30.443529 gettimeofday({1495655730, 443533}, NULL) = 0
26412 15:55:30.443540 getcwd("/home/msfadmin", 4096) = 15
26412 15:55:30.443552 open("myfile25", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26412 15:55:30.443566 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26412 15:55:30.443583 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26412 15:55:30.443593 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26412 15:55:30.443603 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd1af04) = 0
26412 15:55:30.443618 ftruncate64(4, 0) = 0
26412 15:55:30.443636 _llseek(4, 0, [0], SEEK_SET) = 0
26412 15:55:30.443647 write(5, "\v", 1) = 1
26412 15:55:30.443657 read(5,  <unfinished ...>
26410 15:55:30.443664 read(4, "\v", 1)  = 1
26410 15:55:30.443674 write(4, "\1\0\0\0", 4) = 4
26412 15:55:30.443684 <... read resumed> "\1\0\0\0", 4) = 4
26412 15:55:30.443692 write(5, "\v", 1) = 1
26412 15:55:30.443701 read(5,  <unfinished ...>
26410 15:55:30.443708 read(4, "\v", 1)  = 1
26410 15:55:30.443718 write(4, "\1\0\0\0", 4) = 4
26412 15:55:30.443728 <... read resumed> "\1\0\0\0", 4) = 4
26412 15:55:30.443735 write(5, "\r", 1) = 1
26412 15:55:30.443745 read(5,  <unfinished ...>
26410 15:55:30.443751 read(4, "\r", 1)  = 1
26410 15:55:30.443763 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26410 15:55:30.443780 accept(5, {sa_family=AF_INET, sin_port=htons(57699), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26410 15:55:30.443801 write(4, "\1", 1) = 1
26412 15:55:30.443811 <... read resumed> "\1", 1) = 1
26412 15:55:30.443820 recvmsg(5,  <unfinished ...>
26410 15:55:30.443830 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26412 15:55:30.443846 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26412 15:55:30.443859 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26412 15:55:30.443871 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26412 15:55:30.443882 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26412 15:55:30.443893 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.443906 alarm(300)        = 300
26412 15:55:30.444060 write(0, "150 Ok to send data.\r\n", 22) = 22
26412 15:55:30.444134 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7db5000
26412 15:55:30.444148 mprotect(0xb7dc7000, 4096, PROT_NONE) = 0
26412 15:55:30.444159 mprotect(0xb7db5000, 4096, PROT_NONE) = 0
26412 15:55:30.444169 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26412 15:55:30.444182 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26412 15:55:30.444198 read(6, "", 65536) = 0
26412 15:55:30.444208 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.444221 alarm(300)        = 300
26412 15:55:30.444231 close(6)          = 0
26412 15:55:30.444240 alarm(0)          = 300
26412 15:55:30.444249 gettimeofday({1495655730, 444252}, NULL) = 0
26412 15:55:30.444266 getpid()          = 26412
26412 15:55:30.444277 gettimeofday({1495655730, 444281}, NULL) = 0
26412 15:55:30.444295 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd1aea4) = 0
26412 15:55:30.444310 write(3, "Wed May 24 15:55:30 2017 [pid 26412] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile25\", 17 bytes, 22.19Kbyte/sec\n", 131) = 131
26412 15:55:30.444329 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd1aeac) = 0
26412 15:55:30.444344 write(0, "226 Transfer complete.\r\n", 24) = 24
26412 15:55:30.444383 write(5, "\n", 1) = 1
26412 15:55:30.444395 read(5,  <unfinished ...>
26410 15:55:30.444402 close(6)          = 0
26410 15:55:30.444420 read(4, "\n", 1)  = 1
26410 15:55:30.444431 close(5)          = 0
26410 15:55:30.444445 write(4, "\1", 1) = 1
26412 15:55:30.444456 <... read resumed> "\1", 1) = 1
26412 15:55:30.444462 close(4)          = 0
26412 15:55:30.444473 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.444486 alarm(300)        = 0
26412 15:55:30.444497 recv(0,  <unfinished ...>
26410 15:55:30.444504 read(4,  <unfinished ...>
26412 15:55:30.981723 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
26412 15:55:30.981754 read(0, "TYPE I\r\n", 8) = 8
26412 15:55:30.981775 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26412 15:55:30.981823 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.981840 alarm(300)        = 299
26412 15:55:30.981853 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26412 15:55:30.981864 read(0, "PASV\r\n", 6) = 6
26412 15:55:30.981876 write(5, "\n", 1) = 1
26412 15:55:30.981889 read(5,  <unfinished ...>
26410 15:55:30.981897 <... read resumed> "\n", 1) = 1
26410 15:55:30.981906 write(4, "\1", 1) = 1
26412 15:55:30.981916 <... read resumed> "\1", 1) = 1
26412 15:55:30.981923 write(5, "\f", 1) = 1
26412 15:55:30.981933 read(5,  <unfinished ...>
26410 15:55:30.981940 read(4, "\f", 1)  = 1
26410 15:55:30.981952 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26410 15:55:30.981967 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26410 15:55:30.981982 bind(5, {sa_family=AF_INET, sin_port=htons(58937), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26410 15:55:30.981998 listen(5, 1)      = 0
26410 15:55:30.982012 write(4, "9\346\0\0", 4) = 4
26412 15:55:30.982193 <... read resumed> "9\346\0\0", 4) = 4
26412 15:55:30.982207 write(0, "227 Entering Passive Mode (127,0,0,1,230,57).\r\n", 47) = 47
26412 15:55:30.982325 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26412 15:55:30.982342 alarm(300)        = 300
26412 15:55:30.982353 recv(0, "STOR myfile26\r\n", 4096, MSG_PEEK) = 15
26412 15:55:30.982365 read(0, "STOR myfile26\r\n", 15) = 15
26412 15:55:30.982379 write(5, "\v", 1) = 1
26412 15:55:30.982389 read(5,  <unfinished ...>
26410 15:55:30.982396 read(4, "\v", 1)  = 1
26410 15:55:30.982407 write(4, "\1\0\0\0", 4) = 4
26412 15:55:30.982417 <... read resumed> "\1\0\0\0", 4) = 4
26412 15:55:30.982425 gettimeofday({1495655730, 982429}, NULL) = 0
26412 15:55:30.982436 getcwd("/home/msfadmin", 4096) = 15
26412 15:55:30.982449 open("myfile26", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26412 15:55:30.982463 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
