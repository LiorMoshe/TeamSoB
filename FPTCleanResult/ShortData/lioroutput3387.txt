26208 15:51:55.972774 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26208 15:51:55.972812 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
26208 15:51:55.972834 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26208 15:51:55.972921 read(7, "", 1024) = 0
26208 15:51:55.972931 close(7)          = 0
26208 15:51:55.972941 munmap(0xb7f1b000, 4096) = 0
26208 15:51:55.972957 munmap(0xb7d4a000, 29913) = 0
26208 15:51:55.972971 read(6, "", 4096) = 0
26208 15:51:55.972982 close(6)          = 0
26208 15:51:55.972991 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973002 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973022 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973035 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26208 15:51:55.973051 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973062 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26208 15:51:55.973102 read(6, "", 4096) = 0
26208 15:51:55.973112 close(6)          = 0
26208 15:51:55.973122 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973132 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973151 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973164 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26208 15:51:55.973179 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973190 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26208 15:51:55.973228 read(6, "", 4096) = 0
26208 15:51:55.973238 close(6)          = 0
26208 15:51:55.973247 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973257 read(5, "", 4096) = 0
26208 15:51:55.973296 close(5)          = 0
26208 15:51:55.973306 munmap(0xb7f22000, 4096) = 0
26208 15:51:55.973330 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26208 15:51:55.973343 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26208 15:51:55.973360 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f22000
26208 15:51:55.973370 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26208 15:51:55.973415 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973434 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973446 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26208 15:51:55.973462 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973472 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26208 15:51:55.973523 read(6, "", 4096) = 0
26208 15:51:55.973533 close(6)          = 0
26208 15:51:55.973542 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973553 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973571 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973584 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26208 15:51:55.973599 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973610 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26208 15:51:55.973648 read(6, "", 4096) = 0
26208 15:51:55.973658 close(6)          = 0
26208 15:51:55.973667 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973677 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973696 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973708 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26208 15:51:55.973724 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973734 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26208 15:51:55.973839 read(6, "", 4096) = 0
26208 15:51:55.973851 close(6)          = 0
26208 15:51:55.973861 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.973872 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26208 15:51:55.973891 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26208 15:51:55.973904 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26208 15:51:55.973920 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
26208 15:51:55.973931 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26208 15:51:55.973969 read(6, "", 4096) = 0
26208 15:51:55.973979 close(6)          = 0
26208 15:51:55.973992 munmap(0xb7f1c000, 4096) = 0
26208 15:51:55.974002 read(5, "", 4096) = 0
26208 15:51:55.974011 close(5)          = 0
26208 15:51:55.974020 munmap(0xb7f22000, 4096) = 0
26208 15:51:55.974033 time(NULL)        = 1495655515
26208 15:51:55.974044 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26208 15:51:55.974063 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26208 15:51:55.974075 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26208 15:51:55.974090 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f22000
26208 15:51:55.974101 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26208 15:51:55.974121 read(5, "", 4096) = 0
26208 15:51:55.974131 close(5)          = 0
26208 15:51:55.974140 munmap(0xb7f22000, 4096) = 0
26208 15:51:55.974155 getuid32()        = 0
26208 15:51:55.974171 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974195 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974226 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26208 15:51:55.974252 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.974264 _llseek(5, 1624, [1624], SEEK_SET) = 0
26208 15:51:55.974283 munmap(0xb7f22000, 1624) = 0
26208 15:51:55.974293 close(5)          = 0
26208 15:51:55.974318 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974335 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974346 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26208 15:51:55.974362 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.974373 _llseek(5, 1233, [1233], SEEK_SET) = 0
26208 15:51:55.974393 munmap(0xb7f22000, 1233) = 0
26208 15:51:55.974402 close(5)          = 0
26208 15:51:55.974420 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974433 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974443 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26208 15:51:55.974459 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.974470 _llseek(5, 1624, [1624], SEEK_SET) = 0
26208 15:51:55.974486 munmap(0xb7f22000, 1624) = 0
26208 15:51:55.974495 close(5)          = 0
26208 15:51:55.974507 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974519 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974529 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26208 15:51:55.974545 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.974556 _llseek(5, 1233, [1233], SEEK_SET) = 0
26208 15:51:55.974572 munmap(0xb7f22000, 1233) = 0
26208 15:51:55.974582 close(5)          = 0
26208 15:51:55.974851 getuid32()        = 0
26208 15:51:55.974864 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974877 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974888 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26208 15:51:55.974904 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.974915 _llseek(5, 1624, [1624], SEEK_SET) = 0
26208 15:51:55.974930 munmap(0xb7f22000, 1624) = 0
26208 15:51:55.974940 close(5)          = 0
26208 15:51:55.974953 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.974965 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.974975 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26208 15:51:55.974991 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.975001 _llseek(5, 1233, [1233], SEEK_SET) = 0
26208 15:51:55.975018 munmap(0xb7f22000, 1233) = 0
26208 15:51:55.975027 close(5)          = 0
26208 15:51:55.975038 time(NULL)        = 1495655515
26208 15:51:55.975053 munmap(0xb7f1f000, 12164) = 0
26208 15:51:55.975066 munmap(0xb7f1d000, 7136) = 0
26208 15:51:55.975079 munmap(0xb7d52000, 95428) = 0
26208 15:51:55.975090 munmap(0xb7d18000, 201052) = 0
26208 15:51:55.975101 munmap(0xb7cff000, 101180) = 0
26208 15:51:55.975117 gettimeofday({1495655515, 975121}, NULL) = 0
26208 15:51:55.975132 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8bd224) = -1 ENOENT (No such file or directory)
26208 15:51:55.975147 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26208 15:51:55.975172 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8bd374) = 0
26208 15:51:55.975335 write(3, "Wed May 24 15:51:55 2017 [pid 26208] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26208 15:51:55.975362 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8bd37c) = 0
26208 15:51:55.975375 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26208 15:51:55.975390 write(4, "\1", 1 <unfinished ...>
26209 15:51:55.975399 <... read resumed> "\1", 1) = 1
26208 15:51:55.975404 <... write resumed> ) = 1
26209 15:51:55.975412 exit_group(0)     = ?
26208 15:51:55.975440 --- SIGCHLD (Child exited) @ 0 (0) ---
26208 15:51:55.975448 sigreturn()       = ? (mask now [])
26208 15:51:55.975466 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26209
26208 15:51:55.975480 close(4)          = 0
26208 15:51:55.975491 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26208 15:51:55.975505 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26208 15:51:55.975518 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26208 15:51:55.975532 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d886f8) = 26210
26210 15:51:55.975580 prctl(0x1, 0x9, 0, 0, 0) = 0
26210 15:51:55.975593 close(4)          = 0
26210 15:51:55.975619 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26210 15:51:55.975636 _llseek(4, 0, [0], SEEK_CUR) = 0
26210 15:51:55.975651 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26210 15:51:55.975669 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f22000
26210 15:51:55.975681 _llseek(4, 1624, [1624], SEEK_SET) = 0
26210 15:51:55.975703 munmap(0xb7f22000, 1624) = 0
26210 15:51:55.975714 close(4)          = 0
26210 15:51:55.975727 getuid32()        = 0
26210 15:51:55.975737 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26210 15:51:55.975750 _llseek(4, 0, [0], SEEK_CUR) = 0
26210 15:51:55.975760 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26210 15:51:55.975776 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f22000
26210 15:51:55.975787 _llseek(4, 1624, [1624], SEEK_SET) = 0
26210 15:51:55.975833 munmap(0xb7f22000, 1624) = 0
26210 15:51:55.975853 close(4)          = 0
26210 15:51:55.975879 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26210 15:51:55.975900 read(4, "65536\n", 31) = 6
26210 15:51:55.975912 close(4)          = 0
26210 15:51:55.975926 socket(PF_FILE, SOCK_STREAM, 0) = 4
26210 15:51:55.975937 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26210 15:51:55.975948 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26210 15:51:55.975968 close(4)          = 0
26210 15:51:55.975980 socket(PF_FILE, SOCK_STREAM, 0) = 4
26210 15:51:55.975989 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26210 15:51:55.976000 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26210 15:51:55.976017 close(4)          = 0
26210 15:51:55.976042 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26210 15:51:55.976056 _llseek(4, 0, [0], SEEK_CUR) = 0
26210 15:51:55.976067 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26210 15:51:55.976083 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f22000
26210 15:51:55.976094 _llseek(4, 886, [886], SEEK_SET) = 0
26210 15:51:55.976119 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26210 15:51:55.976136 munmap(0xb7f22000, 886) = 0
26210 15:51:55.976146 close(4)          = 0
26210 15:51:55.976155 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26210 15:51:55.976172 geteuid32()       = 0
26210 15:51:55.976183 getegid32()       = 0
26210 15:51:55.976193 setregid32(-1, 1000) = 0
26210 15:51:55.976203 setreuid32(-1, 1000) = 0
26210 15:51:55.976218 chdir("/home/msfadmin") = 0
26210 15:51:55.976230 setreuid32(-1, 0) = 0
26210 15:51:55.976239 setregid32(-1, 0) = 0
26210 15:51:55.976249 setgid32(1000)    = 0
26210 15:51:55.976259 setuid32(1000)    = 0
26210 15:51:55.976268 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26210 15:51:55.976282 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f20000
26210 15:51:55.976322 mprotect(0xb7f22000, 4096, PROT_NONE) = 0
26210 15:51:55.976344 mprotect(0xb7f20000, 4096, PROT_NONE) = 0
26210 15:51:55.976355 getcwd("/home/msfadmin", 4096) = 15
26210 15:51:55.976368 umask(022)        = 077
26210 15:51:55.976378 getcwd("/home/msfadmin", 4096) = 15
26210 15:51:55.976392 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26210 15:51:55.976414 write(0, "230 Login successful.\r\n", 23) = 23
26210 15:51:55.976495 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.976512 alarm(300)        = 0
26210 15:51:55.976522 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1d000
26210 15:51:55.976534 mprotect(0xb7f1f000, 4096, PROT_NONE) = 0
26210 15:51:55.976545 mprotect(0xb7f1d000, 4096, PROT_NONE) = 0
26210 15:51:55.976558 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26210 15:51:55.976570 read(0, "TYPE I\r\n", 8) = 8
26210 15:51:55.976587 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26210 15:51:55.976626 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.976641 alarm(300)        = 300
26210 15:51:55.976652 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26210 15:51:55.976663 read(0, "PASV\r\n", 6) = 6
26210 15:51:55.976675 write(5, "\n", 1) = 1
26210 15:51:55.976686 read(5,  <unfinished ...>
26208 15:51:55.976699 close(5)          = 0
26208 15:51:55.976711 getuid32()        = 0
26208 15:51:55.976726 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26208 15:51:55.976740 _llseek(5, 0, [0], SEEK_CUR) = 0
26208 15:51:55.976752 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26208 15:51:55.976770 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f22000
26208 15:51:55.976811 _llseek(5, 1624, [1624], SEEK_SET) = 0
26208 15:51:55.976841 munmap(0xb7f22000, 1624) = 0
26208 15:51:55.976853 close(5)          = 0
26208 15:51:55.976868 setgroups32(0, []) = 0
26208 15:51:55.976880 chdir("/usr/share/empty") = 0
26208 15:51:55.976892 chroot(".")       = 0
26208 15:51:55.976902 capset(NULL, NULL) = -1 EFAULT (Bad address)
26208 15:51:55.976916 prctl(0x8, 0, 0xbf8bd358, 0x80549a6, 0xbf8bd340) = 0
26208 15:51:55.976927 prctl(0x8, 0x1, 0xbf8bd358, 0x8054a49, 0xbf8bd340) = 0
26208 15:51:55.976936 setgid32(65534)   = 0
26208 15:51:55.976946 setuid32(65534)   = 0
26208 15:51:55.976956 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26208 15:51:55.976969 read(4, "\n", 1)  = 1
26208 15:51:55.976983 write(4, "\1", 1) = 1
26210 15:51:55.976994 <... read resumed> "\1", 1) = 1
26210 15:51:55.977001 write(5, "\f", 1) = 1
26210 15:51:55.977011 read(5,  <unfinished ...>
26208 15:51:55.977018 read(4, "\f", 1)  = 1
26208 15:51:55.977030 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26208 15:51:55.977043 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26208 15:51:55.977055 gettimeofday({1495655515, 977058}, NULL) = 0
26208 15:51:55.977071 bind(5, {sa_family=AF_INET, sin_port=htons(28660), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26208 15:51:55.977087 listen(5, 1)      = 0
26208 15:51:55.977099 write(4, "\364o\0\0", 4) = 4
26210 15:51:55.977110 <... read resumed> "\364o\0\0", 4) = 4
26210 15:51:55.977123 write(0, "227 Entering Passive Mode (127,0,0,1,111,244).\r\n", 48) = 48
26210 15:51:55.977217 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.977234 alarm(300)        = 300
26210 15:51:55.977245 recv(0, "STOR myfile40\r\n", 4096, MSG_PEEK) = 15
26210 15:51:55.977257 read(0, "STOR myfile40\r\n", 15) = 15
26210 15:51:55.977282 write(5, "\v", 1) = 1
26210 15:51:55.977314 read(5,  <unfinished ...>
26208 15:51:55.977331 read(4, "\v", 1)  = 1
26208 15:51:55.977347 write(4, "\1\0\0\0", 4) = 4
26210 15:51:55.977358 <... read resumed> "\1\0\0\0", 4) = 4
26210 15:51:55.977366 gettimeofday({1495655515, 977370}, NULL) = 0
26210 15:51:55.977377 getcwd("/home/msfadmin", 4096) = 15
26210 15:51:55.977390 open("myfile40", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26210 15:51:55.977403 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26210 15:51:55.977420 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26210 15:51:55.977431 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26210 15:51:55.977440 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8bd2a4) = 0
26210 15:51:55.977455 ftruncate64(4, 0) = 0
26210 15:51:55.977474 _llseek(4, 0, [0], SEEK_SET) = 0
26210 15:51:55.977485 write(5, "\v", 1) = 1
26210 15:51:55.977495 read(5,  <unfinished ...>
26208 15:51:55.977502 read(4, "\v", 1)  = 1
26208 15:51:55.977513 write(4, "\1\0\0\0", 4) = 4
26210 15:51:55.977524 <... read resumed> "\1\0\0\0", 4) = 4
26210 15:51:55.977531 write(5, "\v", 1) = 1
26210 15:51:55.977541 read(5,  <unfinished ...>
26208 15:51:55.977547 read(4, "\v", 1)  = 1
26208 15:51:55.977557 write(4, "\1\0\0\0", 4) = 4
26210 15:51:55.977568 <... read resumed> "\1\0\0\0", 4) = 4
26210 15:51:55.977575 write(5, "\r", 1) = 1
26210 15:51:55.977585 read(5,  <unfinished ...>
26208 15:51:55.977591 read(4, "\r", 1)  = 1
26208 15:51:55.977603 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26208 15:51:55.977620 accept(5, {sa_family=AF_INET, sin_port=htons(57271), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26208 15:51:55.977642 write(4, "\1", 1) = 1
26210 15:51:55.977653 <... read resumed> "\1", 1) = 1
26210 15:51:55.977662 recvmsg(5,  <unfinished ...>
26208 15:51:55.977671 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26210 15:51:55.977688 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26210 15:51:55.977702 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26210 15:51:55.977714 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26210 15:51:55.977726 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26210 15:51:55.977737 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.977750 alarm(300)        = 300
26210 15:51:55.977763 write(0, "150 Ok to send data.\r\n", 22) = 22
26210 15:51:55.977867 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d57000
26210 15:51:55.977881 mprotect(0xb7d69000, 4096, PROT_NONE) = 0
26210 15:51:55.977893 mprotect(0xb7d57000, 4096, PROT_NONE) = 0
26210 15:51:55.977903 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26210 15:51:55.977916 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26210 15:51:55.977932 read(6, "", 65536) = 0
26210 15:51:55.977942 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.977956 alarm(300)        = 300
26210 15:51:55.977965 close(6)          = 0
26210 15:51:55.977974 alarm(0)          = 300
26210 15:51:55.977984 gettimeofday({1495655515, 977987}, NULL) = 0
26210 15:51:55.978001 getpid()          = 26210
26210 15:51:55.978012 gettimeofday({1495655515, 978016}, NULL) = 0
26210 15:51:55.978030 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8bd244) = 0
26210 15:51:55.978044 write(3, "Wed May 24 15:51:55 2017 [pid 26210] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile40\", 17 bytes, 25.70Kbyte/sec\n", 131) = 131
26210 15:51:55.978064 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8bd24c) = 0
26210 15:51:55.978078 write(0, "226 Transfer complete.\r\n", 24) = 24
26210 15:51:55.978125 write(5, "\n", 1) = 1
26210 15:51:55.978137 read(5,  <unfinished ...>
26208 15:51:55.978144 close(6)          = 0
26208 15:51:55.978163 read(4, "\n", 1)  = 1
26208 15:51:55.978175 close(5)          = 0
26208 15:51:55.978189 write(4, "\1", 1) = 1
26210 15:51:55.978200 <... read resumed> "\1", 1) = 1
26210 15:51:55.978207 close(4)          = 0
26210 15:51:55.978217 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:55.978231 alarm(300)        = 0
26210 15:51:55.978242 recv(0,  <unfinished ...>
26208 15:51:55.978249 read(4,  <unfinished ...>
26210 15:51:56.523895 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
26210 15:51:56.523926 read(0, "TYPE I\r\n", 8) = 8
26210 15:51:56.523948 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26210 15:51:56.523998 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26210 15:51:56.524017 alarm(300)        = 299
26210 15:51:56.524030 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26210 15:51:56.524041 read(0, "PASV\r\n", 6) = 6
