25740 15:44:03.622097 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25740 15:44:03.622122 statfs64("/selinux", 84, 0xbfaea57c) = -1 ENOENT (No such file or directory)
25740 15:44:03.622135 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
25740 15:44:03.622160 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
25740 15:44:03.622177 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f01000
25740 15:44:03.622188 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
25740 15:44:03.622276 read(7, "", 1024) = 0
25740 15:44:03.622286 close(7)          = 0
25740 15:44:03.622296 munmap(0xb7f01000, 4096) = 0
25740 15:44:03.622311 munmap(0xb7d30000, 29913) = 0
25740 15:44:03.622325 read(6, "", 4096) = 0
25740 15:44:03.622336 close(6)          = 0
25740 15:44:03.622345 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.622356 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.622376 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.622389 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25740 15:44:03.622405 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.622416 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25740 15:44:03.622456 read(6, "", 4096) = 0
25740 15:44:03.622466 close(6)          = 0
25740 15:44:03.622475 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.622493 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.622544 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.622572 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25740 15:44:03.622588 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.622599 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25740 15:44:03.622640 read(6, "", 4096) = 0
25740 15:44:03.622650 close(6)          = 0
25740 15:44:03.622659 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.622693 read(5, "", 4096) = 0
25740 15:44:03.622713 close(5)          = 0
25740 15:44:03.622722 munmap(0xb7f08000, 4096) = 0
25740 15:44:03.622733 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25740 15:44:03.622747 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25740 15:44:03.622764 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f08000
25740 15:44:03.622774 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25740 15:44:03.622819 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.622838 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.622850 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25740 15:44:03.622866 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.622877 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25740 15:44:03.622928 read(6, "", 4096) = 0
25740 15:44:03.622938 close(6)          = 0
25740 15:44:03.622947 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.622958 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.622976 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.622990 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25740 15:44:03.623006 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.623016 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25740 15:44:03.623055 read(6, "", 4096) = 0
25740 15:44:03.623065 close(6)          = 0
25740 15:44:03.623075 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.623085 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.623103 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.623116 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25740 15:44:03.623132 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.623143 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25740 15:44:03.623183 read(6, "", 4096) = 0
25740 15:44:03.623183 close(6)          = 0
25740 15:44:03.623184 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.623184 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25740 15:44:03.623184 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25740 15:44:03.623184 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25740 15:44:03.623185 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
25740 15:44:03.623196 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25740 15:44:03.623264 read(6, "", 4096) = 0
25740 15:44:03.623307 close(6)          = 0
25740 15:44:03.623331 munmap(0xb7f02000, 4096) = 0
25740 15:44:03.623342 read(5, "", 4096) = 0
25740 15:44:03.623351 close(5)          = 0
25740 15:44:03.623361 munmap(0xb7f08000, 4096) = 0
25740 15:44:03.623374 time(NULL)        = 1495655043
25740 15:44:03.623386 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25740 15:44:03.623404 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25740 15:44:03.623416 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25740 15:44:03.623433 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f08000
25740 15:44:03.623443 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25740 15:44:03.623464 read(5, "", 4096) = 0
25740 15:44:03.623474 close(5)          = 0
25740 15:44:03.623483 munmap(0xb7f08000, 4096) = 0
25740 15:44:03.623499 getuid32()        = 0
25740 15:44:03.623516 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.623530 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.623541 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25740 15:44:03.623557 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.623568 _llseek(5, 1624, [1624], SEEK_SET) = 0
25740 15:44:03.623587 munmap(0xb7f08000, 1624) = 0
25740 15:44:03.623598 close(5)          = 0
25740 15:44:03.623622 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.623639 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.623650 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25740 15:44:03.623666 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.623676 _llseek(5, 1233, [1233], SEEK_SET) = 0
25740 15:44:03.623696 munmap(0xb7f08000, 1233) = 0
25740 15:44:03.623706 close(5)          = 0
25740 15:44:03.623724 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.623737 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.623748 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25740 15:44:03.623764 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.623774 _llseek(5, 1624, [1624], SEEK_SET) = 0
25740 15:44:03.623789 munmap(0xb7f08000, 1624) = 0
25740 15:44:03.623799 close(5)          = 0
25740 15:44:03.623811 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.623825 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.623835 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25740 15:44:03.623851 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.623861 _llseek(5, 1233, [1233], SEEK_SET) = 0
25740 15:44:03.623877 munmap(0xb7f08000, 1233) = 0
25740 15:44:03.623886 close(5)          = 0
25740 15:44:03.624120 getuid32()        = 0
25740 15:44:03.624131 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.624144 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.624154 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25740 15:44:03.624170 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.624181 _llseek(5, 1624, [1624], SEEK_SET) = 0
25740 15:44:03.624223 munmap(0xb7f08000, 1624) = 0
25740 15:44:03.624235 close(5)          = 0
25740 15:44:03.624258 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.624271 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.624282 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25740 15:44:03.624298 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.624308 _llseek(5, 1233, [1233], SEEK_SET) = 0
25740 15:44:03.624325 munmap(0xb7f08000, 1233) = 0
25740 15:44:03.624334 close(5)          = 0
25740 15:44:03.624345 time(NULL)        = 1495655043
25740 15:44:03.624362 munmap(0xb7f05000, 12164) = 0
25740 15:44:03.624376 munmap(0xb7f03000, 7136) = 0
25740 15:44:03.624392 munmap(0xb7d38000, 95428) = 0
25740 15:44:03.624404 munmap(0xb7cfe000, 201052) = 0
25740 15:44:03.624416 munmap(0xb7ce5000, 101180) = 0
25740 15:44:03.624433 gettimeofday({1495655043, 624437}, NULL) = 0
25740 15:44:03.624452 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfaec454) = -1 ENOENT (No such file or directory)
25740 15:44:03.624467 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25740 15:44:03.624521 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfaec5a4) = 0
25740 15:44:03.624549 write(3, "Wed May 24 15:44:03 2017 [pid 25740] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25740 15:44:03.624576 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfaec5ac) = 0
25740 15:44:03.624600 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25740 15:44:03.624624 write(4, "\1", 1 <unfinished ...>
25741 15:44:03.624636 <... read resumed> "\1", 1) = 1
25740 15:44:03.624641 <... write resumed> ) = 1
25741 15:44:03.624665 exit_group(0)     = ?
25740 15:44:03.624741 --- SIGCHLD (Child exited) @ 0 (0) ---
25740 15:44:03.624758 sigreturn()       = ? (mask now [])
25740 15:44:03.624796 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25741
25740 15:44:03.624830 close(4)          = 0
25740 15:44:03.624852 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25740 15:44:03.624887 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25740 15:44:03.624892 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25740 15:44:03.624892 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d6e6f8) = 25742
25742 15:44:03.624892 prctl(0x1, 0x9, 0, 0, 0) = 0
25742 15:44:03.624893 close(4)          = 0
25742 15:44:03.624893 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25742 15:44:03.624893 _llseek(4, 0, [0], SEEK_CUR) = 0
25742 15:44:03.624893 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25742 15:44:03.624893 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f08000
25742 15:44:03.624894 _llseek(4, 1624, [1624], SEEK_SET) = 0
25742 15:44:03.624914 munmap(0xb7f08000, 1624) = 0
25742 15:44:03.624935 close(4)          = 0
25742 15:44:03.624958 getuid32()        = 0
25742 15:44:03.624969 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25742 15:44:03.624982 _llseek(4, 0, [0], SEEK_CUR) = 0
25742 15:44:03.624993 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25742 15:44:03.625019 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f08000
25742 15:44:03.625040 _llseek(4, 1624, [1624], SEEK_SET) = 0
25742 15:44:03.625056 munmap(0xb7f08000, 1624) = 0
25742 15:44:03.625065 close(4)          = 0
25742 15:44:03.625093 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25742 15:44:03.625115 read(4, "65536\n", 31) = 6
25742 15:44:03.625127 close(4)          = 0
25742 15:44:03.625142 socket(PF_FILE, SOCK_STREAM, 0) = 4
25742 15:44:03.625154 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25742 15:44:03.625165 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25742 15:44:03.625188 close(4)          = 0
25742 15:44:03.625200 socket(PF_FILE, SOCK_STREAM, 0) = 4
25742 15:44:03.625210 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25742 15:44:03.625221 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25742 15:44:03.625239 close(4)          = 0
25742 15:44:03.625264 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25742 15:44:03.625281 _llseek(4, 0, [0], SEEK_CUR) = 0
25742 15:44:03.625293 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25742 15:44:03.625310 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f08000
25742 15:44:03.625321 _llseek(4, 886, [886], SEEK_SET) = 0
25742 15:44:03.625346 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25742 15:44:03.625364 munmap(0xb7f08000, 886) = 0
25742 15:44:03.625374 close(4)          = 0
25742 15:44:03.625384 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25742 15:44:03.625402 geteuid32()       = 0
25742 15:44:03.625413 getegid32()       = 0
25742 15:44:03.625424 setregid32(-1, 1000) = 0
25742 15:44:03.625434 setreuid32(-1, 1000) = 0
25742 15:44:03.625450 chdir("/home/msfadmin") = 0
25742 15:44:03.625472 setreuid32(-1, 0) = 0
25742 15:44:03.625481 setregid32(-1, 0) = 0
25742 15:44:03.625491 setgid32(1000)    = 0
25742 15:44:03.625501 setuid32(1000)    = 0
25742 15:44:03.625511 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25742 15:44:03.625525 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f06000
25742 15:44:03.625536 mprotect(0xb7f08000, 4096, PROT_NONE) = 0
25742 15:44:03.625548 mprotect(0xb7f06000, 4096, PROT_NONE) = 0
25742 15:44:03.625559 getcwd("/home/msfadmin", 4096) = 15
25742 15:44:03.625572 umask(022)        = 077
25742 15:44:03.625582 getcwd("/home/msfadmin", 4096) = 15
25742 15:44:03.625595 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25742 15:44:03.625753 write(0, "230 Login successful.\r\n", 23) = 23
25742 15:44:03.625866 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25742 15:44:03.625883 alarm(300)        = 0
25742 15:44:03.625895 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f03000
25742 15:44:03.625907 mprotect(0xb7f05000, 4096, PROT_NONE) = 0
25742 15:44:03.625918 mprotect(0xb7f03000, 4096, PROT_NONE) = 0
25742 15:44:03.625931 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
25742 15:44:03.625944 read(0, "QUIT\r\n", 6) = 6
25742 15:44:03.625960 shutdown(0, 0 /* receive */) = 0
25742 15:44:03.625972 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
25742 15:44:03.625983 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25742 15:44:03.625993 write(0, "221 Goodbye.\r\n", 14) = 14
25742 15:44:03.626044 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
25742 15:44:03.626056 fcntl64(0, F_SETFL, O_RDWR) = 0
25742 15:44:03.626067 shutdown(0, 2 /* send and receive */) = 0
25742 15:44:03.626085 exit_group(0)     = ?
25740 15:44:03.626113 --- SIGCHLD (Child exited) @ 0 (0) ---
25740 15:44:03.626126 alarm(1)          = 0
25740 15:44:03.626138 sigreturn()       = ? (mask now [])
25740 15:44:03.626158 close(5)          = 0
25740 15:44:03.626172 getuid32()        = 0
25740 15:44:03.626187 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25740 15:44:03.626202 _llseek(5, 0, [0], SEEK_CUR) = 0
25740 15:44:03.626215 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25740 15:44:03.626233 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f08000
25740 15:44:03.626245 _llseek(5, 1624, [1624], SEEK_SET) = 0
25740 15:44:03.626263 munmap(0xb7f08000, 1624) = 0
25740 15:44:03.626274 close(5)          = 0
25740 15:44:03.626287 setgroups32(0, []) = 0
25740 15:44:03.626298 chdir("/usr/share/empty") = 0
25740 15:44:03.626311 chroot(".")       = 0
25740 15:44:03.626322 capset(NULL, NULL) = -1 EFAULT (Bad address)
25740 15:44:03.626334 prctl(0x8, 0, 0xbfaec588, 0x80549a6, 0xbfaec570) = 0
25740 15:44:03.626345 prctl(0x8, 0x1, 0xbfaec588, 0x8054a49, 0xbfaec570) = 0
25740 15:44:03.626355 setgid32(65534)   = 0
25740 15:44:03.626374 setuid32(65534)   = 0
25740 15:44:03.626383 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25740 15:44:03.626397 read(4, "", 1)    = 0
25740 15:44:03.626417 alarm(0)          = 1
25740 15:44:03.626427 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25742
25740 15:44:03.626440 exit_group(0)     = ?
4380  15:44:03.626476 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:44:03.626484 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:44:03.626491 write(4, "\21", 1) = 1
4380  15:44:03.626506 sigreturn()       = ? (mask now [])
4380  15:44:03.626539 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:44:03.626557 ioctl(3, FIONREAD, [1]) = 0
4380  15:44:03.626571 read(3, "\21", 1) = 1
4380  15:44:03.626584 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 25740
4380  15:44:03.626600 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:44:03.626614 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:44:03.626625 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:44:04.135504 accept(5, {sa_family=AF_INET, sin_port=htons(39820), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:44:04.135637 time(NULL)        = 1495655044
4380  15:44:04.135671 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 25743
25743 15:44:04.135799 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
25743 15:44:04.135815 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
25743 15:44:04.135827 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
25743 15:44:04.135839 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
25743 15:44:04.135854 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
25743 15:44:04.135867 close(3)          = 0
25743 15:44:04.135877 close(4)          = 0
25743 15:44:04.135886 open("/dev/null", O_RDONLY) = 3
25743 15:44:04.135903 dup2(3, 0)        = 0
25743 15:44:04.135912 dup2(3, 1)        = 1
25743 15:44:04.135921 dup2(3, 2)        = 2
25743 15:44:04.135929 close(3)          = 0
25743 15:44:04.135941 setgid32(0)       = 0
25743 15:44:04.135954 setgroups32(0, []) = 0
25743 15:44:04.135965 setuid32(0)       = 0
25743 15:44:04.135976 getpriority(PRIO_PROCESS, 0) = 20
25743 15:44:04.135986 setpriority(PRIO_PROCESS, 0, 10) = 0
25743 15:44:04.135995 getpriority(PRIO_PROCESS, 0) = 10
25743 15:44:04.136031 getpeername(13, {sa_family=AF_INET, sin_port=htons(39820), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25743 15:44:04.136054 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25743 15:44:04.136082 open("/etc/hosts.allow", O_RDONLY) = 3
25743 15:44:04.136101 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
25743 15:44:04.136120 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
25743 15:44:04.136134 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
25743 15:44:04.136253 close(3)          = 0
25743 15:44:04.136265 munmap(0xb7fa1000, 4096) = 0
25743 15:44:04.136293 fcntl64(13, F_SETFD, 0) = 0
25743 15:44:04.136306 close(7)          = 0
25743 15:44:04.136316 dup2(13, 0)       = 0
25743 15:44:04.136325 dup2(13, 1)       = 1
25743 15:44:04.136334 dup2(13, 2)       = 2
25743 15:44:04.136343 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
25743 15:44:04.136355 close(13)         = 0
25743 15:44:04.136364 setsid()          = 25743
25743 15:44:04.136375 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
25743 15:44:04.136454 brk(0)            = 0x8064000
25743 15:44:04.136476 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25743 15:44:04.136493 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc4000
25743 15:44:04.136506 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
25743 15:44:04.136522 open("/etc/ld.so.cache", O_RDONLY) = 3
25743 15:44:04.136534 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
25743 15:44:04.136551 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7fbc000
25743 15:44:04.136561 close(3)          = 0
25743 15:44:04.136572 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25743 15:44:04.136587 open("/lib/libpam.so.0", O_RDONLY) = 3
25743 15:44:04.136600 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
25743 15:44:04.136693 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
25743 15:44:04.136711 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7fb2000
25743 15:44:04.136723 mmap2(0xb7fbb000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7fbb000
25743 15:44:04.136739 close(3)          = 0
25743 15:44:04.136750 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25743 15:44:04.136764 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 3
25743 15:44:04.136779 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
25743 15:44:04.136867 fstat64(3, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
25743 15:44:04.136884 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7fae000
25743 15:44:04.136895 mmap2(0xb7fb0000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7fb0000
25743 15:44:04.136911 close(3)          = 0
25743 15:44:04.136923 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25743 15:44:04.136936 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 3
25743 15:44:04.136950 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
25743 15:44:04.137038 fstat64(3, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
25743 15:44:04.137055 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fad000
25743 15:44:04.137067 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f95000
25743 15:44:04.137078 mmap2(0xb7fa9000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13) = 0xb7fa9000
25743 15:44:04.137093 mmap2(0xb7fab000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7fab000
25743 15:44:04.137108 close(3)          = 0
