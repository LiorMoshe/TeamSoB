25217 15:34:37.654761 mmap2(0xb7cf9000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7cf9000
25217 15:34:37.654776 mmap2(0xb7cfb000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7cfb000
25217 15:34:37.654791 close(7)          = 0
25217 15:34:37.654803 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25217 15:34:37.654817 open("/lib/libselinux.so.1", O_RDONLY) = 7
25217 15:34:37.654829 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
25217 15:34:37.654915 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
25217 15:34:37.654962 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cd7000
25217 15:34:37.654975 mmap2(0xb7cee000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7cee000
25217 15:34:37.655002 close(7)          = 0
25217 15:34:37.655106 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25217 15:34:37.655131 statfs64("/selinux", 84, 0xbfa3f4dc) = -1 ENOENT (No such file or directory)
25217 15:34:37.655143 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
25217 15:34:37.655169 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
25217 15:34:37.655186 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef3000
25217 15:34:37.655197 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
25217 15:34:37.655284 read(7, "", 1024) = 0
25217 15:34:37.655294 close(7)          = 0
25217 15:34:37.655303 munmap(0xb7ef3000, 4096) = 0
25217 15:34:37.655319 munmap(0xb7d22000, 29913) = 0
25217 15:34:37.655332 read(6, "", 4096) = 0
25217 15:34:37.655343 close(6)          = 0
25217 15:34:37.655352 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.655362 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.655381 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.655394 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25217 15:34:37.655410 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.655450 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25217 15:34:37.655504 read(6, "", 4096) = 0
25217 15:34:37.655514 close(6)          = 0
25217 15:34:37.655523 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.655534 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.655552 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.655564 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25217 15:34:37.655580 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.655590 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25217 15:34:37.655628 read(6, "", 4096) = 0
25217 15:34:37.655637 close(6)          = 0
25217 15:34:37.655646 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.655656 read(5, "", 4096) = 0
25217 15:34:37.655665 close(5)          = 0
25217 15:34:37.655673 munmap(0xb7efa000, 4096) = 0
25217 15:34:37.655683 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25217 15:34:37.655696 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25217 15:34:37.655711 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
25217 15:34:37.655721 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25217 15:34:37.655766 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.655783 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.655795 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25217 15:34:37.655811 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.655821 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25217 15:34:37.655869 read(6, "", 4096) = 0
25217 15:34:37.655879 close(6)          = 0
25217 15:34:37.655888 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.655898 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.656056 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.656070 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25217 15:34:37.656095 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.656105 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25217 15:34:37.656144 read(6, "", 4096) = 0
25217 15:34:37.656154 close(6)          = 0
25217 15:34:37.656163 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.656173 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.656191 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.656203 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25217 15:34:37.656219 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.656228 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25217 15:34:37.656343 read(6, "", 4096) = 0
25217 15:34:37.656353 close(6)          = 0
25217 15:34:37.656362 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.656372 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25217 15:34:37.656389 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25217 15:34:37.656401 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25217 15:34:37.656417 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
25217 15:34:37.656427 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25217 15:34:37.656463 read(6, "", 4096) = 0
25217 15:34:37.656473 close(6)          = 0
25217 15:34:37.656485 munmap(0xb7ef4000, 4096) = 0
25217 15:34:37.656495 read(5, "", 4096) = 0
25217 15:34:37.656504 close(5)          = 0
25217 15:34:37.656513 munmap(0xb7efa000, 4096) = 0
25217 15:34:37.656554 time(NULL)        = 1495654477
25217 15:34:37.656566 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25217 15:34:37.656594 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25217 15:34:37.656606 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25217 15:34:37.656621 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
25217 15:34:37.656632 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25217 15:34:37.656653 read(5, "", 4096) = 0
25217 15:34:37.656661 close(5)          = 0
25217 15:34:37.656671 munmap(0xb7efa000, 4096) = 0
25217 15:34:37.656685 getuid32()        = 0
25217 15:34:37.656702 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.656716 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.656726 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25217 15:34:37.656742 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.656752 _llseek(5, 1624, [1624], SEEK_SET) = 0
25217 15:34:37.656771 munmap(0xb7efa000, 1624) = 0
25217 15:34:37.656781 close(5)          = 0
25217 15:34:37.656804 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.656821 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.656831 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25217 15:34:37.656846 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.656857 _llseek(5, 1233, [1233], SEEK_SET) = 0
25217 15:34:37.656876 munmap(0xb7efa000, 1233) = 0
25217 15:34:37.656886 close(5)          = 0
25217 15:34:37.656904 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.656916 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.656926 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25217 15:34:37.656942 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.656952 _llseek(5, 1624, [1624], SEEK_SET) = 0
25217 15:34:37.656968 munmap(0xb7efa000, 1624) = 0
25217 15:34:37.656977 close(5)          = 0
25217 15:34:37.656989 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.657001 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.657038 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25217 15:34:37.657057 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.657079 _llseek(5, 1233, [1233], SEEK_SET) = 0
25217 15:34:37.657096 munmap(0xb7efa000, 1233) = 0
25217 15:34:37.657105 close(5)          = 0
25217 15:34:37.657338 getuid32()        = 0
25217 15:34:37.657349 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.657361 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.657371 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25217 15:34:37.657387 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.657397 _llseek(5, 1624, [1624], SEEK_SET) = 0
25217 15:34:37.657412 munmap(0xb7efa000, 1624) = 0
25217 15:34:37.657421 close(5)          = 0
25217 15:34:37.657433 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.657445 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.657454 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25217 15:34:37.657470 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.657480 _llseek(5, 1233, [1233], SEEK_SET) = 0
25217 15:34:37.657496 munmap(0xb7efa000, 1233) = 0
25217 15:34:37.657504 close(5)          = 0
25217 15:34:37.657505 time(NULL)        = 1495654477
25217 15:34:37.657505 munmap(0xb7ef7000, 12164) = 0
25217 15:34:37.657505 munmap(0xb7ef5000, 7136) = 0
25217 15:34:37.657505 munmap(0xb7d2a000, 95428) = 0
25217 15:34:37.657505 munmap(0xb7cf0000, 201052) = 0
25217 15:34:37.657506 munmap(0xb7cd7000, 101180) = 0
25217 15:34:37.657506 gettimeofday({1495654477, 657506}, NULL) = 0
25217 15:34:37.657506 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa413b4) = -1 ENOENT (No such file or directory)
25217 15:34:37.657507 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25217 15:34:37.657507 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa41504) = 0
25217 15:34:37.657507 write(3, "Wed May 24 15:34:37 2017 [pid 25217] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25217 15:34:37.657507 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa4150c) = 0
25217 15:34:37.657507 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25217 15:34:37.657522 write(4, "\1", 1 <unfinished ...>
25218 15:34:37.657532 <... read resumed> "\1", 1) = 1
25217 15:34:37.657537 <... write resumed> ) = 1
25218 15:34:37.657544 exit_group(0)     = ?
25217 15:34:37.657572 --- SIGCHLD (Child exited) @ 0 (0) ---
25217 15:34:37.657579 sigreturn()       = ? (mask now [])
25217 15:34:37.657598 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25218
25217 15:34:37.657645 close(4)          = 0
25217 15:34:37.657667 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25217 15:34:37.657680 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25217 15:34:37.657694 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25217 15:34:37.657707 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d606f8) = 25219
25219 15:34:37.657759 prctl(0x1, 0x9, 0, 0, 0) = 0
25219 15:34:37.657772 close(4)          = 0
25219 15:34:37.657798 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25219 15:34:37.657814 _llseek(4, 0, [0], SEEK_CUR) = 0
25219 15:34:37.657829 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25219 15:34:37.657847 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
25219 15:34:37.657859 _llseek(4, 1624, [1624], SEEK_SET) = 0
25219 15:34:37.657881 munmap(0xb7efa000, 1624) = 0
25219 15:34:37.657892 close(4)          = 0
25219 15:34:37.657905 getuid32()        = 0
25219 15:34:37.657914 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25219 15:34:37.657926 _llseek(4, 0, [0], SEEK_CUR) = 0
25219 15:34:37.657936 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25219 15:34:37.657952 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
25219 15:34:37.657962 _llseek(4, 1624, [1624], SEEK_SET) = 0
25219 15:34:37.657978 munmap(0xb7efa000, 1624) = 0
25219 15:34:37.657987 close(4)          = 0
25219 15:34:37.658011 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25219 15:34:37.658032 read(4, "65536\n", 31) = 6
25219 15:34:37.658044 close(4)          = 0
25219 15:34:37.658057 socket(PF_FILE, SOCK_STREAM, 0) = 4
25219 15:34:37.658069 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25219 15:34:37.658079 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25219 15:34:37.658127 close(4)          = 0
25219 15:34:37.658142 socket(PF_FILE, SOCK_STREAM, 0) = 4
25219 15:34:37.658161 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25219 15:34:37.658172 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25219 15:34:37.658190 close(4)          = 0
25219 15:34:37.658213 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25219 15:34:37.658229 _llseek(4, 0, [0], SEEK_CUR) = 0
25219 15:34:37.658241 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25219 15:34:37.658257 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
25219 15:34:37.658268 _llseek(4, 886, [886], SEEK_SET) = 0
25219 15:34:37.658292 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25219 15:34:37.658308 munmap(0xb7efa000, 886) = 0
25219 15:34:37.658319 close(4)          = 0
25219 15:34:37.658328 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25219 15:34:37.658344 geteuid32()       = 0
25219 15:34:37.658354 getegid32()       = 0
25219 15:34:37.658365 setregid32(-1, 1000) = 0
25219 15:34:37.658375 setreuid32(-1, 1000) = 0
25219 15:34:37.658389 chdir("/home/msfadmin") = 0
25219 15:34:37.658401 setreuid32(-1, 0) = 0
25219 15:34:37.658410 setregid32(-1, 0) = 0
25219 15:34:37.658420 setgid32(1000)    = 0
25219 15:34:37.658429 setuid32(1000)    = 0
25219 15:34:37.658439 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25219 15:34:37.658452 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef8000
25219 15:34:37.658463 mprotect(0xb7efa000, 4096, PROT_NONE) = 0
25219 15:34:37.658474 mprotect(0xb7ef8000, 4096, PROT_NONE) = 0
25219 15:34:37.658485 getcwd("/home/msfadmin", 4096) = 15
25219 15:34:37.658498 umask(022)        = 077
25219 15:34:37.658508 getcwd("/home/msfadmin", 4096) = 15
25219 15:34:37.658521 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25219 15:34:37.658542 write(0, "230 Login successful.\r\n", 23) = 23
25219 15:34:37.658630 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25219 15:34:37.658657 alarm(300)        = 0
25219 15:34:37.658668 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
25219 15:34:37.658679 mprotect(0xb7ef7000, 4096, PROT_NONE) = 0
25219 15:34:37.658690 mprotect(0xb7ef5000, 4096, PROT_NONE) = 0
25219 15:34:37.658702 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
25219 15:34:37.658715 read(0, "QUIT\r\n", 6) = 6
25219 15:34:37.658729 shutdown(0, 0 /* receive */) = 0
25219 15:34:37.658741 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
25219 15:34:37.658751 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25219 15:34:37.658760 write(0, "221 Goodbye.\r\n", 14) = 14
25219 15:34:37.658809 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
25219 15:34:37.658820 fcntl64(0, F_SETFL, O_RDWR) = 0
25219 15:34:37.658830 shutdown(0, 2 /* send and receive */) = 0
25219 15:34:37.658846 exit_group(0)     = ?
25217 15:34:37.658873 --- SIGCHLD (Child exited) @ 0 (0) ---
25217 15:34:37.658887 alarm(1)          = 0
25217 15:34:37.658898 sigreturn()       = ? (mask now [])
25217 15:34:37.658918 close(5)          = 0
25217 15:34:37.658930 getuid32()        = 0
25217 15:34:37.658945 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25217 15:34:37.658959 _llseek(5, 0, [0], SEEK_CUR) = 0
25217 15:34:37.658970 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25217 15:34:37.658988 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
25217 15:34:37.658999 _llseek(5, 1624, [1624], SEEK_SET) = 0
25217 15:34:37.659016 munmap(0xb7efa000, 1624) = 0
25217 15:34:37.659027 close(5)          = 0
25217 15:34:37.659038 setgroups32(0, []) = 0
25217 15:34:37.659048 chdir("/usr/share/empty") = 0
25217 15:34:37.659060 chroot(".")       = 0
25217 15:34:37.659070 capset(NULL, NULL) = -1 EFAULT (Bad address)
25217 15:34:37.659082 prctl(0x8, 0, 0xbfa414e8, 0x80549a6, 0xbfa414d0) = 0
25217 15:34:37.659121 prctl(0x8, 0x1, 0xbfa414e8, 0x8054a49, 0xbfa414d0) = 0
25217 15:34:37.659132 setgid32(65534)   = 0
25217 15:34:37.659151 setuid32(65534)   = 0
25217 15:34:37.659161 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25217 15:34:37.659174 read(4, "", 1)    = 0
25217 15:34:37.659184 alarm(0)          = 1
25217 15:34:37.659194 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25219
25217 15:34:37.659206 exit_group(0)     = ?
4380  15:34:37.659241 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:34:37.659248 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:34:37.659254 write(4, "\21", 1) = 1
4380  15:34:37.659267 sigreturn()       = ? (mask now [])
4380  15:34:37.659299 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:34:37.659316 ioctl(3, FIONREAD, [1]) = 0
4380  15:34:37.659329 read(3, "\21", 1) = 1
4380  15:34:37.659341 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 25217
4380  15:34:37.659355 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:34:37.659368 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:34:37.659379 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:34:38.167532 accept(5, {sa_family=AF_INET, sin_port=htons(40926), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:34:38.167597 time(NULL)        = 1495654478
4380  15:34:38.167611 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 25220
25220 15:34:38.167720 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
25220 15:34:38.167736 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
25220 15:34:38.167747 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
25220 15:34:38.167759 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
25220 15:34:38.167773 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
25220 15:34:38.167786 close(3)          = 0
25220 15:34:38.167796 close(4)          = 0
25220 15:34:38.167805 open("/dev/null", O_RDONLY) = 3
25220 15:34:38.167821 dup2(3, 0)        = 0
25220 15:34:38.167831 dup2(3, 1)        = 1
25220 15:34:38.167839 dup2(3, 2)        = 2
25220 15:34:38.167847 close(3)          = 0
25220 15:34:38.167859 setgid32(0)       = 0
25220 15:34:38.167872 setgroups32(0, []) = 0
25220 15:34:38.167882 setuid32(0)       = 0
25220 15:34:38.167894 getpriority(PRIO_PROCESS, 0) = 20
25220 15:34:38.167903 setpriority(PRIO_PROCESS, 0, 10) = 0
25220 15:34:38.167912 getpriority(PRIO_PROCESS, 0) = 10
25220 15:34:38.167948 getpeername(13, {sa_family=AF_INET, sin_port=htons(40926), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25220 15:34:38.167971 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25220 15:34:38.167999 open("/etc/hosts.allow", O_RDONLY) = 3
25220 15:34:38.168018 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
25220 15:34:38.168037 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
25220 15:34:38.168051 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
25220 15:34:38.168121 close(3)          = 0
25220 15:34:38.168132 munmap(0xb7fa1000, 4096) = 0
25220 15:34:38.168159 fcntl64(13, F_SETFD, 0) = 0
25220 15:34:38.168172 close(7)          = 0
25220 15:34:38.168182 dup2(13, 0)       = 0
25220 15:34:38.168191 dup2(13, 1)       = 1
25220 15:34:38.168199 dup2(13, 2)       = 2
25220 15:34:38.168209 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
25220 15:34:38.168220 close(13)         = 0
25220 15:34:38.168229 setsid()          = 25220
25220 15:34:38.168259 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
25220 15:34:38.168349 brk(0)            = 0x8064000
25220 15:34:38.168370 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25220 15:34:38.168387 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f12000
25220 15:34:38.168400 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
25220 15:34:38.168415 open("/etc/ld.so.cache", O_RDONLY) = 3
25220 15:34:38.168428 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
25220 15:34:38.168444 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f0a000
25220 15:34:38.168454 close(3)          = 0
25220 15:34:38.168465 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25220 15:34:38.168480 open("/lib/libpam.so.0", O_RDONLY) = 3
25220 15:34:38.168493 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
