26386 15:55:08.567550 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26386 15:55:08.567587 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26386 15:55:08.567604 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2d000
26386 15:55:08.567615 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26386 15:55:08.567702 read(7, "", 1024) = 0
26386 15:55:08.567713 close(7)          = 0
26386 15:55:08.567723 munmap(0xb7f2d000, 4096) = 0
26386 15:55:08.567738 munmap(0xb7d5c000, 29913) = 0
26386 15:55:08.567752 read(6, "", 4096) = 0
26386 15:55:08.567763 close(6)          = 0
26386 15:55:08.567772 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.567783 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.567803 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.567816 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26386 15:55:08.567832 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.567843 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26386 15:55:08.567883 read(6, "", 4096) = 0
26386 15:55:08.567893 close(6)          = 0
26386 15:55:08.567902 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.567913 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.567931 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.567944 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26386 15:55:08.567960 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.567970 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26386 15:55:08.568008 read(6, "", 4096) = 0
26386 15:55:08.568018 close(6)          = 0
26386 15:55:08.568027 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.568037 read(5, "", 4096) = 0
26386 15:55:08.568046 close(5)          = 0
26386 15:55:08.568055 munmap(0xb7f34000, 4096) = 0
26386 15:55:08.568065 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26386 15:55:08.568078 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26386 15:55:08.568094 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f34000
26386 15:55:08.568104 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26386 15:55:08.568149 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.568167 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.568179 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26386 15:55:08.568195 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.568205 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26386 15:55:08.568254 read(6, "", 4096) = 0
26386 15:55:08.568264 close(6)          = 0
26386 15:55:08.568273 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.568284 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.568302 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.568315 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26386 15:55:08.568330 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.568340 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26386 15:55:08.568379 read(6, "", 4096) = 0
26386 15:55:08.568388 close(6)          = 0
26386 15:55:08.568397 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.568408 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.568426 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.568438 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26386 15:55:08.568454 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.568464 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26386 15:55:08.568623 read(6, "", 4096) = 0
26386 15:55:08.568634 close(6)          = 0
26386 15:55:08.568643 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.568654 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26386 15:55:08.568673 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26386 15:55:08.568686 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26386 15:55:08.568701 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2e000
26386 15:55:08.568712 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26386 15:55:08.568750 read(6, "", 4096) = 0
26386 15:55:08.568759 close(6)          = 0
26386 15:55:08.568772 munmap(0xb7f2e000, 4096) = 0
26386 15:55:08.568782 read(5, "", 4096) = 0
26386 15:55:08.568791 close(5)          = 0
26386 15:55:08.568800 munmap(0xb7f34000, 4096) = 0
26386 15:55:08.568812 time(NULL)        = 1495655708
26386 15:55:08.568823 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26386 15:55:08.568842 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26386 15:55:08.568854 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26386 15:55:08.568869 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f34000
26386 15:55:08.568880 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26386 15:55:08.568901 read(5, "", 4096) = 0
26386 15:55:08.568910 close(5)          = 0
26386 15:55:08.568919 munmap(0xb7f34000, 4096) = 0
26386 15:55:08.568934 getuid32()        = 0
26386 15:55:08.568950 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.568965 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.568975 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26386 15:55:08.568991 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569002 _llseek(5, 1624, [1624], SEEK_SET) = 0
26386 15:55:08.569021 munmap(0xb7f34000, 1624) = 0
26386 15:55:08.569031 close(5)          = 0
26386 15:55:08.569055 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.569073 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.569083 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26386 15:55:08.569099 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569109 _llseek(5, 1233, [1233], SEEK_SET) = 0
26386 15:55:08.569129 munmap(0xb7f34000, 1233) = 0
26386 15:55:08.569138 close(5)          = 0
26386 15:55:08.569157 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.569170 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.569180 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26386 15:55:08.569196 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569206 _llseek(5, 1624, [1624], SEEK_SET) = 0
26386 15:55:08.569222 munmap(0xb7f34000, 1624) = 0
26386 15:55:08.569231 close(5)          = 0
26386 15:55:08.569243 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.569255 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.569265 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26386 15:55:08.569281 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569291 _llseek(5, 1233, [1233], SEEK_SET) = 0
26386 15:55:08.569308 munmap(0xb7f34000, 1233) = 0
26386 15:55:08.569317 close(5)          = 0
26386 15:55:08.569581 getuid32()        = 0
26386 15:55:08.569594 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.569607 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.569618 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26386 15:55:08.569634 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569644 _llseek(5, 1624, [1624], SEEK_SET) = 0
26386 15:55:08.569660 munmap(0xb7f34000, 1624) = 0
26386 15:55:08.569670 close(5)          = 0
26386 15:55:08.569682 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.569695 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.569705 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26386 15:55:08.569721 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.569731 _llseek(5, 1233, [1233], SEEK_SET) = 0
26386 15:55:08.569747 munmap(0xb7f34000, 1233) = 0
26386 15:55:08.569756 close(5)          = 0
26386 15:55:08.569768 time(NULL)        = 1495655708
26386 15:55:08.569783 munmap(0xb7f31000, 12164) = 0
26386 15:55:08.569796 munmap(0xb7f2f000, 7136) = 0
26386 15:55:08.569809 munmap(0xb7d64000, 95428) = 0
26386 15:55:08.569820 munmap(0xb7d2a000, 201052) = 0
26386 15:55:08.569831 munmap(0xb7d11000, 101180) = 0
26386 15:55:08.569847 gettimeofday({1495655708, 569851}, NULL) = 0
26386 15:55:08.569862 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe20f94) = -1 ENOENT (No such file or directory)
26386 15:55:08.569877 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26386 15:55:08.569902 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe210e4) = 0
26386 15:55:08.569918 write(3, "Wed May 24 15:55:08 2017 [pid 26386] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26386 15:55:08.569934 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe210ec) = 0
26386 15:55:08.569947 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26386 15:55:08.569961 write(4, "\1", 1 <unfinished ...>
26387 15:55:08.569970 <... read resumed> "\1", 1) = 1
26386 15:55:08.569975 <... write resumed> ) = 1
26387 15:55:08.569982 exit_group(0)     = ?
26386 15:55:08.569991 --- SIGCHLD (Child exited) @ 0 (0) ---
26386 15:55:08.569991 sigreturn()       = ? (mask now [])
26386 15:55:08.569991 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26387
26386 15:55:08.569991 close(4)          = 0
26386 15:55:08.569991 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26386 15:55:08.569992 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26386 15:55:08.569992 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26386 15:55:08.570002 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d9a6f8) = 26388
26388 15:55:08.570051 prctl(0x1, 0x9, 0, 0, 0) = 0
26388 15:55:08.570064 close(4)          = 0
26388 15:55:08.570092 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26388 15:55:08.570109 _llseek(4, 0, [0], SEEK_CUR) = 0
26388 15:55:08.570124 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26388 15:55:08.570142 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f34000
26388 15:55:08.570153 _llseek(4, 1624, [1624], SEEK_SET) = 0
26388 15:55:08.570175 munmap(0xb7f34000, 1624) = 0
26388 15:55:08.570187 close(4)          = 0
26388 15:55:08.570200 getuid32()        = 0
26388 15:55:08.570210 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26388 15:55:08.570222 _llseek(4, 0, [0], SEEK_CUR) = 0
26388 15:55:08.570232 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26388 15:55:08.570278 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f34000
26388 15:55:08.570291 _llseek(4, 1624, [1624], SEEK_SET) = 0
26388 15:55:08.570317 munmap(0xb7f34000, 1624) = 0
26388 15:55:08.570327 close(4)          = 0
26388 15:55:08.570352 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26388 15:55:08.570373 read(4, "65536\n", 31) = 6
26388 15:55:08.570385 close(4)          = 0
26388 15:55:08.570398 socket(PF_FILE, SOCK_STREAM, 0) = 4
26388 15:55:08.570410 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26388 15:55:08.570420 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26388 15:55:08.570441 close(4)          = 0
26388 15:55:08.570452 socket(PF_FILE, SOCK_STREAM, 0) = 4
26388 15:55:08.570462 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26388 15:55:08.570472 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26388 15:55:08.570489 close(4)          = 0
26388 15:55:08.570513 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26388 15:55:08.570527 _llseek(4, 0, [0], SEEK_CUR) = 0
26388 15:55:08.570537 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26388 15:55:08.570554 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f34000
26388 15:55:08.570564 _llseek(4, 886, [886], SEEK_SET) = 0
26388 15:55:08.570588 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26388 15:55:08.570605 munmap(0xb7f34000, 886) = 0
26388 15:55:08.570614 close(4)          = 0
26388 15:55:08.570624 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26388 15:55:08.570640 geteuid32()       = 0
26388 15:55:08.570650 getegid32()       = 0
26388 15:55:08.570660 setregid32(-1, 1000) = 0
26388 15:55:08.570671 setreuid32(-1, 1000) = 0
26388 15:55:08.570685 chdir("/home/msfadmin") = 0
26388 15:55:08.570697 setreuid32(-1, 0) = 0
26388 15:55:08.570705 setregid32(-1, 0) = 0
26388 15:55:08.570716 setgid32(1000)    = 0
26388 15:55:08.570725 setuid32(1000)    = 0
26388 15:55:08.570735 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26388 15:55:08.570748 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
26388 15:55:08.570759 mprotect(0xb7f34000, 4096, PROT_NONE) = 0
26388 15:55:08.570770 mprotect(0xb7f32000, 4096, PROT_NONE) = 0
26388 15:55:08.570781 getcwd("/home/msfadmin", 4096) = 15
26388 15:55:08.570794 umask(022)        = 077
26388 15:55:08.570803 getcwd("/home/msfadmin", 4096) = 15
26388 15:55:08.570816 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26388 15:55:08.570838 write(0, "230 Login successful.\r\n", 23) = 23
26388 15:55:08.570918 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.570935 alarm(300)        = 0
26388 15:55:08.570946 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
26388 15:55:08.570957 mprotect(0xb7f31000, 4096, PROT_NONE) = 0
26388 15:55:08.570968 mprotect(0xb7f2f000, 4096, PROT_NONE) = 0
26388 15:55:08.570981 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26388 15:55:08.570993 read(0, "TYPE I\r\n", 8) = 8
26388 15:55:08.571010 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26388 15:55:08.571049 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.571064 alarm(300)        = 300
26388 15:55:08.571074 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26388 15:55:08.571085 read(0, "PASV\r\n", 6) = 6
26388 15:55:08.571097 write(5, "\n", 1) = 1
26388 15:55:08.571108 read(5,  <unfinished ...>
26386 15:55:08.571120 close(5)          = 0
26386 15:55:08.571133 getuid32()        = 0
26386 15:55:08.571148 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26386 15:55:08.571162 _llseek(5, 0, [0], SEEK_CUR) = 0
26386 15:55:08.571174 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26386 15:55:08.571191 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f34000
26386 15:55:08.571202 _llseek(5, 1624, [1624], SEEK_SET) = 0
26386 15:55:08.571371 munmap(0xb7f34000, 1624) = 0
26386 15:55:08.571395 close(5)          = 0
26386 15:55:08.571411 setgroups32(0, []) = 0
26386 15:55:08.571422 chdir("/usr/share/empty") = 0
26386 15:55:08.571435 chroot(".")       = 0
26386 15:55:08.571445 capset(NULL, NULL) = -1 EFAULT (Bad address)
26386 15:55:08.571458 prctl(0x8, 0, 0xbfe210c8, 0x80549a6, 0xbfe210b0) = 0
26386 15:55:08.571469 prctl(0x8, 0x1, 0xbfe210c8, 0x8054a49, 0xbfe210b0) = 0
26386 15:55:08.571479 setgid32(65534)   = 0
26386 15:55:08.571489 setuid32(65534)   = 0
26386 15:55:08.571498 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26386 15:55:08.571511 read(4, "\n", 1)  = 1
26386 15:55:08.571524 write(4, "\1", 1) = 1
26388 15:55:08.571535 <... read resumed> "\1", 1) = 1
26388 15:55:08.571542 write(5, "\f", 1) = 1
26388 15:55:08.571552 read(5,  <unfinished ...>
26386 15:55:08.571559 read(4, "\f", 1)  = 1
26386 15:55:08.571571 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26386 15:55:08.571584 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26386 15:55:08.571595 gettimeofday({1495655708, 571598}, NULL) = 0
26386 15:55:08.571610 bind(5, {sa_family=AF_INET, sin_port=htons(44550), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26386 15:55:08.571626 listen(5, 1)      = 0
26386 15:55:08.571638 write(4, "\6\256\0\0", 4) = 4
26388 15:55:08.571649 <... read resumed> "\6\256\0\0", 4) = 4
26388 15:55:08.571662 write(0, "227 Entering Passive Mode (127,0,0,1,174,6).\r\n", 46) = 46
26388 15:55:08.571757 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.571773 alarm(300)        = 300
26388 15:55:08.571784 recv(0, "STOR myfile31\r\n", 4096, MSG_PEEK) = 15
26388 15:55:08.571796 read(0, "STOR myfile31\r\n", 15) = 15
26388 15:55:08.571811 write(5, "\v", 1) = 1
26388 15:55:08.571822 read(5,  <unfinished ...>
26386 15:55:08.571829 read(4, "\v", 1)  = 1
26386 15:55:08.571844 write(4, "\1\0\0\0", 4) = 4
26388 15:55:08.571854 <... read resumed> "\1\0\0\0", 4) = 4
26388 15:55:08.571863 gettimeofday({1495655708, 571866}, NULL) = 0
26388 15:55:08.571873 getcwd("/home/msfadmin", 4096) = 15
26388 15:55:08.571886 open("myfile31", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26388 15:55:08.571899 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26388 15:55:08.571916 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26388 15:55:08.571926 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26388 15:55:08.571936 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe21014) = 0
26388 15:55:08.571950 ftruncate64(4, 0) = 0
26388 15:55:08.571968 _llseek(4, 0, [0], SEEK_SET) = 0
26388 15:55:08.571979 write(5, "\v", 1) = 1
26388 15:55:08.571989 read(5,  <unfinished ...>
26386 15:55:08.571996 read(4, "\v", 1)  = 1
26386 15:55:08.572007 write(4, "\1\0\0\0", 4) = 4
26388 15:55:08.572017 <... read resumed> "\1\0\0\0", 4) = 4
26388 15:55:08.572025 write(5, "\v", 1) = 1
26388 15:55:08.572034 read(5,  <unfinished ...>
26386 15:55:08.572041 read(4, "\v", 1)  = 1
26386 15:55:08.572051 write(4, "\1\0\0\0", 4) = 4
26388 15:55:08.572061 <... read resumed> "\1\0\0\0", 4) = 4
26388 15:55:08.572068 write(5, "\r", 1) = 1
26388 15:55:08.572078 read(5,  <unfinished ...>
26386 15:55:08.572084 read(4, "\r", 1)  = 1
26386 15:55:08.572096 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26386 15:55:08.572113 accept(5, {sa_family=AF_INET, sin_port=htons(59195), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26386 15:55:08.572134 write(4, "\1", 1) = 1
26388 15:55:08.572144 <... read resumed> "\1", 1) = 1
26388 15:55:08.572154 recvmsg(5,  <unfinished ...>
26386 15:55:08.572163 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26388 15:55:08.572179 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26388 15:55:08.572192 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26388 15:55:08.572204 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26388 15:55:08.572216 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26388 15:55:08.572227 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.572240 alarm(300)        = 300
26388 15:55:08.572252 write(0, "150 Ok to send data.\r\n", 22) = 22
26388 15:55:08.572351 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d69000
26388 15:55:08.572366 mprotect(0xb7d7b000, 4096, PROT_NONE) = 0
26388 15:55:08.572378 mprotect(0xb7d69000, 4096, PROT_NONE) = 0
26388 15:55:08.572388 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26388 15:55:08.572402 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26388 15:55:08.572418 read(6, "", 65536) = 0
26388 15:55:08.572428 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.572441 alarm(300)        = 300
26388 15:55:08.572451 close(6)          = 0
26388 15:55:08.572460 alarm(0)          = 300
26388 15:55:08.572469 gettimeofday({1495655708, 572473}, NULL) = 0
26388 15:55:08.572486 getpid()          = 26388
26388 15:55:08.572498 gettimeofday({1495655708, 572502}, NULL) = 0
26388 15:55:08.572515 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe20fb4) = 0
26388 15:55:08.572529 write(3, "Wed May 24 15:55:08 2017 [pid 26388] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile31\", 17 bytes, 26.10Kbyte/sec\n", 131) = 131
26388 15:55:08.572549 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe20fbc) = 0
26388 15:55:08.572563 write(0, "226 Transfer complete.\r\n", 24) = 24
26388 15:55:08.572604 write(5, "\n", 1) = 1
26388 15:55:08.572616 read(5,  <unfinished ...>
26386 15:55:08.572623 close(6)          = 0
26386 15:55:08.572641 read(4, "\n", 1)  = 1
26386 15:55:08.572652 close(5)          = 0
26386 15:55:08.572667 write(4, "\1", 1) = 1
26388 15:55:08.572678 <... read resumed> "\1", 1) = 1
26388 15:55:08.572684 close(4)          = 0
26388 15:55:08.572695 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:08.572708 alarm(300)        = 0
26388 15:55:08.572719 recv(0,  <unfinished ...>
26386 15:55:08.572726 read(4,  <unfinished ...>
26388 15:55:09.089997 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
26388 15:55:09.090028 read(0, "TYPE I\r\n", 8) = 8
26388 15:55:09.090049 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26388 15:55:09.090097 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26388 15:55:09.090114 alarm(300)        = 299
