26714 16:00:38.755555 statfs64("/selinux", 84, 0xbf875b0c) = -1 ENOENT (No such file or directory)
26714 16:00:38.755568 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26714 16:00:38.755593 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26714 16:00:38.755610 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd2000
26714 16:00:38.755622 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26714 16:00:38.755706 read(7, "", 1024) = 0
26714 16:00:38.755716 close(7)          = 0
26714 16:00:38.755726 munmap(0xb7fd2000, 4096) = 0
26714 16:00:38.755742 munmap(0xb7e01000, 29913) = 0
26714 16:00:38.755756 read(6, "", 4096) = 0
26714 16:00:38.755767 close(6)          = 0
26714 16:00:38.755776 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.755787 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.755807 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.755820 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26714 16:00:38.755836 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.755851 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26714 16:00:38.755891 read(6, "", 4096) = 0
26714 16:00:38.755901 close(6)          = 0
26714 16:00:38.755911 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.755922 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.755940 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.755953 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26714 16:00:38.755969 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.755979 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26714 16:00:38.756018 read(6, "", 4096) = 0
26714 16:00:38.756028 close(6)          = 0
26714 16:00:38.756037 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.756048 read(5, "", 4096) = 0
26714 16:00:38.756057 close(5)          = 0
26714 16:00:38.756066 munmap(0xb7fd9000, 4096) = 0
26714 16:00:38.756076 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26714 16:00:38.756089 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26714 16:00:38.756105 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
26714 16:00:38.756116 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26714 16:00:38.756160 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.756179 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.756217 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26714 16:00:38.756235 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.756255 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26714 16:00:38.756303 read(6, "", 4096) = 0
26714 16:00:38.756313 close(6)          = 0
26714 16:00:38.756322 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.756334 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.756352 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.756364 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26714 16:00:38.756380 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.756391 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26714 16:00:38.756433 read(6, "", 4096) = 0
26714 16:00:38.756443 close(6)          = 0
26714 16:00:38.756453 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.756463 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.756482 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.756495 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26714 16:00:38.756510 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.756521 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26714 16:00:38.756636 read(6, "", 4096) = 0
26714 16:00:38.756646 close(6)          = 0
26714 16:00:38.756656 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.756666 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26714 16:00:38.756685 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26714 16:00:38.756697 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26714 16:00:38.756713 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
26714 16:00:38.756723 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26714 16:00:38.756761 read(6, "", 4096) = 0
26714 16:00:38.756771 close(6)          = 0
26714 16:00:38.756780 munmap(0xb7fd3000, 4096) = 0
26714 16:00:38.756790 read(5, "", 4096) = 0
26714 16:00:38.756799 close(5)          = 0
26714 16:00:38.756808 munmap(0xb7fd9000, 4096) = 0
26714 16:00:38.756821 time(NULL)        = 1495656038
26714 16:00:38.756833 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26714 16:00:38.756851 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26714 16:00:38.756863 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26714 16:00:38.756879 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
26714 16:00:38.756889 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26714 16:00:38.756913 read(5, "", 4096) = 0
26714 16:00:38.756923 close(5)          = 0
26714 16:00:38.756932 munmap(0xb7fd9000, 4096) = 0
26714 16:00:38.756948 getuid32()        = 0
26714 16:00:38.756964 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.756979 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.756990 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26714 16:00:38.757006 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.757017 _llseek(5, 1624, [1624], SEEK_SET) = 0
26714 16:00:38.757036 munmap(0xb7fd9000, 1624) = 0
26714 16:00:38.757047 close(5)          = 0
26714 16:00:38.757071 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.757089 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.757099 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26714 16:00:38.757116 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.757126 _llseek(5, 1233, [1233], SEEK_SET) = 0
26714 16:00:38.757146 munmap(0xb7fd9000, 1233) = 0
26714 16:00:38.757182 close(5)          = 0
26714 16:00:38.757213 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.757227 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.757237 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26714 16:00:38.757254 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.757265 _llseek(5, 1624, [1624], SEEK_SET) = 0
26714 16:00:38.757281 munmap(0xb7fd9000, 1624) = 0
26714 16:00:38.757291 close(5)          = 0
26714 16:00:38.757304 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.757317 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.757327 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26714 16:00:38.757343 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.757353 _llseek(5, 1233, [1233], SEEK_SET) = 0
26714 16:00:38.757370 munmap(0xb7fd9000, 1233) = 0
26714 16:00:38.757379 close(5)          = 0
26714 16:00:38.757613 getuid32()        = 0
26714 16:00:38.757624 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.757636 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.757647 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26714 16:00:38.757663 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.757936 _llseek(5, 1624, [1624], SEEK_SET) = 0
26714 16:00:38.758032 munmap(0xb7fd9000, 1624) = 0
26714 16:00:38.758077 close(5)          = 0
26714 16:00:38.758110 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.758136 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.758156 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26714 16:00:38.758175 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.758186 _llseek(5, 1233, [1233], SEEK_SET) = 0
26714 16:00:38.758202 munmap(0xb7fd9000, 1233) = 0
26714 16:00:38.758212 close(5)          = 0
26714 16:00:38.758224 time(NULL)        = 1495656038
26714 16:00:38.758240 munmap(0xb7fd6000, 12164) = 0
26714 16:00:38.758254 munmap(0xb7fd4000, 7136) = 0
26714 16:00:38.758268 munmap(0xb7e09000, 95428) = 0
26714 16:00:38.758279 munmap(0xb7dcf000, 201052) = 0
26714 16:00:38.758290 munmap(0xb7db6000, 101180) = 0
26714 16:00:38.758306 gettimeofday({1495656038, 758310}, NULL) = 0
26714 16:00:38.758318 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8779e4) = -1 ENOENT (No such file or directory)
26714 16:00:38.758333 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26714 16:00:38.758358 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf877b34) = 0
26714 16:00:38.758374 write(3, "Wed May 24 16:00:38 2017 [pid 26714] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26714 16:00:38.758391 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf877b3c) = 0
26714 16:00:38.758404 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26714 16:00:38.758418 write(4, "\1", 1 <unfinished ...>
26715 16:00:38.758432 <... read resumed> "\1", 1) = 1
26714 16:00:38.758438 <... write resumed> ) = 1
26715 16:00:38.758445 exit_group(0)     = ?
26714 16:00:38.758503 --- SIGCHLD (Child exited) @ 0 (0) ---
26714 16:00:38.758524 sigreturn()       = ? (mask now [])
26714 16:00:38.758544 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26715
26714 16:00:38.758558 close(4)          = 0
26714 16:00:38.758570 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26714 16:00:38.758583 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26714 16:00:38.758598 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26714 16:00:38.758611 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e3f6f8) = 26716
26716 16:00:38.758661 prctl(0x1, 0x9, 0, 0, 0) = 0
26716 16:00:38.758675 close(4)          = 0
26716 16:00:38.758701 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26716 16:00:38.758719 _llseek(4, 0, [0], SEEK_CUR) = 0
26716 16:00:38.758734 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26716 16:00:38.758753 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd9000
26716 16:00:38.758765 _llseek(4, 1624, [1624], SEEK_SET) = 0
26716 16:00:38.758788 munmap(0xb7fd9000, 1624) = 0
26716 16:00:38.758799 close(4)          = 0
26716 16:00:38.758813 getuid32()        = 0
26716 16:00:38.758823 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26716 16:00:38.758836 _llseek(4, 0, [0], SEEK_CUR) = 0
26716 16:00:38.758847 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26716 16:00:38.758863 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd9000
26716 16:00:38.758874 _llseek(4, 1624, [1624], SEEK_SET) = 0
26716 16:00:38.758890 munmap(0xb7fd9000, 1624) = 0
26716 16:00:38.758900 close(4)          = 0
26716 16:00:38.758925 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26716 16:00:38.758946 read(4, "65536\n", 31) = 6
26716 16:00:38.758985 close(4)          = 0
26716 16:00:38.759001 socket(PF_FILE, SOCK_STREAM, 0) = 4
26716 16:00:38.759023 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26716 16:00:38.759034 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26716 16:00:38.759056 close(4)          = 0
26716 16:00:38.759067 socket(PF_FILE, SOCK_STREAM, 0) = 4
26716 16:00:38.759078 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26716 16:00:38.759088 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26716 16:00:38.759106 close(4)          = 0
26716 16:00:38.759130 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26716 16:00:38.759145 _llseek(4, 0, [0], SEEK_CUR) = 0
26716 16:00:38.759156 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26716 16:00:38.759173 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd9000
26716 16:00:38.759184 _llseek(4, 886, [886], SEEK_SET) = 0
26716 16:00:38.759209 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26716 16:00:38.759226 munmap(0xb7fd9000, 886) = 0
26716 16:00:38.759236 close(4)          = 0
26716 16:00:38.759246 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26716 16:00:38.759263 geteuid32()       = 0
26716 16:00:38.759274 getegid32()       = 0
26716 16:00:38.759285 setregid32(-1, 1000) = 0
26716 16:00:38.759295 setreuid32(-1, 1000) = 0
26716 16:00:38.759306 chdir("/home/msfadmin") = 0
26716 16:00:38.759318 setreuid32(-1, 0) = 0
26716 16:00:38.759327 setregid32(-1, 0) = 0
26716 16:00:38.759338 setgid32(1000)    = 0
26716 16:00:38.759348 setuid32(1000)    = 0
26716 16:00:38.759359 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26716 16:00:38.759372 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
26716 16:00:38.759384 mprotect(0xb7fd9000, 4096, PROT_NONE) = 0
26716 16:00:38.759395 mprotect(0xb7fd7000, 4096, PROT_NONE) = 0
26716 16:00:38.759407 getcwd("/home/msfadmin", 4096) = 15
26716 16:00:38.759420 umask(022)        = 077
26716 16:00:38.759430 getcwd("/home/msfadmin", 4096) = 15
26716 16:00:38.759448 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26716 16:00:38.759623 write(0, "230 Login successful.\r\n", 23) = 23
26716 16:00:38.759705 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26716 16:00:38.759723 alarm(300)        = 0
26716 16:00:38.759734 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd4000
26716 16:00:38.759746 mprotect(0xb7fd6000, 4096, PROT_NONE) = 0
26716 16:00:38.759757 mprotect(0xb7fd4000, 4096, PROT_NONE) = 0
26716 16:00:38.759770 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26716 16:00:38.759783 read(0, "TYPE I\r\n", 8) = 8
26716 16:00:38.759800 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26716 16:00:38.759839 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26716 16:00:38.759854 alarm(300)        = 300
26716 16:00:38.759866 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26716 16:00:38.759878 read(0, "PASV\r\n", 6) = 6
26716 16:00:38.759890 write(5, "\n", 1) = 1
26716 16:00:38.759901 read(5,  <unfinished ...>
26714 16:00:38.759913 close(5)          = 0
26714 16:00:38.759926 getuid32()        = 0
26714 16:00:38.759941 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26714 16:00:38.759956 _llseek(5, 0, [0], SEEK_CUR) = 0
26714 16:00:38.759968 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26714 16:00:38.759986 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd9000
26714 16:00:38.759997 _llseek(5, 1624, [1624], SEEK_SET) = 0
26714 16:00:38.760015 munmap(0xb7fd9000, 1624) = 0
26714 16:00:38.760027 close(5)          = 0
26714 16:00:38.760042 setgroups32(0, []) = 0
26714 16:00:38.760054 chdir("/usr/share/empty") = 0
26714 16:00:38.760095 chroot(".")       = 0
26714 16:00:38.760107 capset(NULL, NULL) = -1 EFAULT (Bad address)
26714 16:00:38.760131 prctl(0x8, 0, 0xbf877b18, 0x80549a6, 0xbf877b00) = 0
26714 16:00:38.760143 prctl(0x8, 0x1, 0xbf877b18, 0x8054a49, 0xbf877b00) = 0
26714 16:00:38.760153 setgid32(65534)   = 0
26714 16:00:38.760163 setuid32(65534)   = 0
26714 16:00:38.760173 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26714 16:00:38.760186 read(4, "\n", 1)  = 1
26714 16:00:38.760200 write(4, "\1", 1) = 1
26716 16:00:38.760211 <... read resumed> "\1", 1) = 1
26716 16:00:38.760219 write(5, "\f", 1) = 1
26716 16:00:38.760229 read(5,  <unfinished ...>
26714 16:00:38.760236 read(4, "\f", 1)  = 1
26714 16:00:38.760249 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26714 16:00:38.760262 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26714 16:00:38.760274 gettimeofday({1495656038, 760278}, NULL) = 0
26714 16:00:38.760290 bind(5, {sa_family=AF_INET, sin_port=htons(60839), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26714 16:00:38.760306 listen(5, 1)      = 0
26714 16:00:38.760319 write(4, "\247\355\0\0", 4) = 4
26716 16:00:38.760330 <... read resumed> "\247\355\0\0", 4) = 4
26716 16:00:38.760344 write(0, "227 Entering Passive Mode (127,0,0,1,237,167).\r\n", 48) = 48
26716 16:00:38.760438 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26716 16:00:38.760455 alarm(300)        = 300
26716 16:00:38.760467 recv(0, "STOR myfile40\r\n", 4096, MSG_PEEK) = 15
26716 16:00:38.760479 read(0, "STOR myfile40\r\n", 15) = 15
26716 16:00:38.760494 write(5, "\v", 1) = 1
26716 16:00:38.760505 read(5,  <unfinished ...>
26714 16:00:38.760513 read(4, "\v", 1)  = 1
26714 16:00:38.760524 write(4, "\1\0\0\0", 4) = 4
26716 16:00:38.760535 <... read resumed> "\1\0\0\0", 4) = 4
26716 16:00:38.760544 gettimeofday({1495656038, 760547}, NULL) = 0
26716 16:00:38.760580 getcwd("/home/msfadmin", 4096) = 15
26716 16:00:38.760597 open("myfile40", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26716 16:00:38.760620 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26716 16:00:38.760637 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26716 16:00:38.760648 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26716 16:00:38.760658 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf877a64) = 0
26716 16:00:38.760677 ftruncate64(4, 0) = 0
26716 16:00:38.760698 _llseek(4, 0, [0], SEEK_SET) = 0
26716 16:00:38.760709 write(5, "\v", 1) = 1
26716 16:00:38.760720 read(5,  <unfinished ...>
26714 16:00:38.760727 read(4, "\v", 1)  = 1
26714 16:00:38.760738 write(4, "\1\0\0\0", 4) = 4
26716 16:00:38.760749 <... read resumed> "\1\0\0\0", 4) = 4
26716 16:00:38.760757 write(5, "\v", 1) = 1
26716 16:00:38.760767 read(5,  <unfinished ...>
26714 16:00:38.760774 read(4, "\v", 1)  = 1
26714 16:00:38.760785 write(4, "\1\0\0\0", 4) = 4
26716 16:00:38.760795 <... read resumed> "\1\0\0\0", 4) = 4
26716 16:00:38.760803 write(5, "\r", 1) = 1
26716 16:00:38.760813 read(5,  <unfinished ...>
26714 16:00:38.760820 read(4, "\r", 1)  = 1
26714 16:00:38.760833 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26714 16:00:38.760850 accept(5, {sa_family=AF_INET, sin_port=htons(37406), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26714 16:00:38.760872 write(4, "\1", 1) = 1
26716 16:00:38.760883 <... read resumed> "\1", 1) = 1
26716 16:00:38.760892 recvmsg(5,  <unfinished ...>
26714 16:00:38.760902 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26716 16:00:38.760919 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26716 16:00:38.760933 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26716 16:00:38.760945 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26716 16:00:38.760957 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26716 16:00:38.760968 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26716 16:00:38.760982 alarm(300)        = 300
26716 16:00:38.760995 write(0, "150 Ok to send data.\r\n", 22) = 22
26716 16:00:38.761086 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e0e000
26716 16:00:38.761101 mprotect(0xb7e20000, 4096, PROT_NONE) = 0
26716 16:00:38.761123 mprotect(0xb7e0e000, 4096, PROT_NONE) = 0
26716 16:00:38.761133 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26716 16:00:38.761147 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26716 16:00:38.761163 read(6, "", 65536) = 0
26716 16:00:38.761174 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26716 16:00:38.761188 alarm(300)        = 300
26716 16:00:38.761198 close(6)          = 0
26716 16:00:38.761207 alarm(0)          = 300
26716 16:00:38.761217 gettimeofday({1495656038, 761221}, NULL) = 0
26716 16:00:38.761235 getpid()          = 26716
26716 16:00:38.761247 gettimeofday({1495656038, 761251}, NULL) = 0
26716 16:00:38.761269 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf877a04) = 0
26716 16:00:38.761285 write(3, "Wed May 24 16:00:38 2017 [pid 26716] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile40\", 17 bytes, 23.58Kbyte/sec\n", 131) = 131
26716 16:00:38.761306 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf877a0c) = 0
26716 16:00:38.761320 write(0, "226 Transfer complete.\r\n", 24) = 24
26716 16:00:38.761369 write(5, "\n", 1) = 1
26716 16:00:38.761381 read(5,  <unfinished ...>
26714 16:00:38.761389 close(6)          = 0
26714 16:00:38.761407 read(4, "\n", 1)  = 1
26714 16:00:38.761419 close(5)          = 0
