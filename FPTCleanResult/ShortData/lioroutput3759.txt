27008 16:05:58.962036 mmap2(0xb7e1c000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7e1c000
27008 16:05:58.962047 close(7)          = 0
27008 16:05:58.962061 open("/etc/ld.so.cache", O_RDONLY) = 7
27008 16:05:58.962074 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
27008 16:05:58.962090 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7e08000
27008 16:05:58.962101 close(7)          = 0
27008 16:05:58.962112 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27008 16:05:58.962128 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
27008 16:05:58.962143 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
27008 16:05:58.962235 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
27008 16:05:58.962254 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dd6000
27008 16:05:58.962266 mmap2(0xb7ddf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7ddf000
27008 16:05:58.962283 mmap2(0xb7de1000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7de1000
27008 16:05:58.962298 close(7)          = 0
27008 16:05:58.962311 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27008 16:05:58.962326 open("/lib/libselinux.so.1", O_RDONLY) = 7
27008 16:05:58.962339 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
27008 16:05:58.962457 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
27008 16:05:58.962475 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dbd000
27008 16:05:58.962487 mmap2(0xb7dd4000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7dd4000
27008 16:05:58.962505 close(7)          = 0
27008 16:05:58.962609 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27008 16:05:58.962635 statfs64("/selinux", 84, 0xbf88031c) = -1 ENOENT (No such file or directory)
27008 16:05:58.962649 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
27008 16:05:58.962675 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
27008 16:05:58.962692 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd9000
27008 16:05:58.962704 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
27008 16:05:58.962792 read(7, "", 1024) = 0
27008 16:05:58.962803 close(7)          = 0
27008 16:05:58.962813 munmap(0xb7fd9000, 4096) = 0
27008 16:05:58.962829 munmap(0xb7e08000, 29913) = 0
27008 16:05:58.962844 read(6, "", 4096) = 0
27008 16:05:58.962855 close(6)          = 0
27008 16:05:58.962884 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.962900 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.962934 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.962948 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27008 16:05:58.962965 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.962976 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27008 16:05:58.963017 read(6, "", 4096) = 0
27008 16:05:58.963028 close(6)          = 0
27008 16:05:58.963038 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963049 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.963068 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.963081 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27008 16:05:58.963098 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.963109 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27008 16:05:58.963147 read(6, "", 4096) = 0
27008 16:05:58.963157 close(6)          = 0
27008 16:05:58.963167 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963177 read(5, "", 4096) = 0
27008 16:05:58.963187 close(5)          = 0
27008 16:05:58.963197 munmap(0xb7fe0000, 4096) = 0
27008 16:05:58.963208 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
27008 16:05:58.963221 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
27008 16:05:58.963237 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fe0000
27008 16:05:58.963248 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
27008 16:05:58.963293 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.963312 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.963325 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
27008 16:05:58.963341 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.963352 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
27008 16:05:58.963429 read(6, "", 4096) = 0
27008 16:05:58.963441 close(6)          = 0
27008 16:05:58.963451 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963462 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.963482 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.963495 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27008 16:05:58.963512 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.963523 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27008 16:05:58.963562 read(6, "", 4096) = 0
27008 16:05:58.963572 close(6)          = 0
27008 16:05:58.963582 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963593 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.963611 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.963625 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
27008 16:05:58.963641 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.963652 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
27008 16:05:58.963767 read(6, "", 4096) = 0
27008 16:05:58.963777 close(6)          = 0
27008 16:05:58.963787 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963798 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27008 16:05:58.963816 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27008 16:05:58.963830 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27008 16:05:58.963846 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fda000
27008 16:05:58.963872 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27008 16:05:58.963936 read(6, "", 4096) = 0
27008 16:05:58.963946 close(6)          = 0
27008 16:05:58.963960 munmap(0xb7fda000, 4096) = 0
27008 16:05:58.963972 read(5, "", 4096) = 0
27008 16:05:58.963982 close(5)          = 0
27008 16:05:58.963991 munmap(0xb7fe0000, 4096) = 0
27008 16:05:58.964005 time(NULL)        = 1495656358
27008 16:05:58.964017 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27008 16:05:58.964036 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
27008 16:05:58.964049 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27008 16:05:58.964065 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fe0000
27008 16:05:58.964076 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
27008 16:05:58.964098 read(5, "", 4096) = 0
27008 16:05:58.964107 close(5)          = 0
27008 16:05:58.964117 munmap(0xb7fe0000, 4096) = 0
27008 16:05:58.964132 getuid32()        = 0
27008 16:05:58.964150 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964165 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964176 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27008 16:05:58.964193 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964204 _llseek(5, 1624, [1624], SEEK_SET) = 0
27008 16:05:58.964224 munmap(0xb7fe0000, 1624) = 0
27008 16:05:58.964235 close(5)          = 0
27008 16:05:58.964260 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964278 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964289 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27008 16:05:58.964306 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964317 _llseek(5, 1233, [1233], SEEK_SET) = 0
27008 16:05:58.964337 munmap(0xb7fe0000, 1233) = 0
27008 16:05:58.964347 close(5)          = 0
27008 16:05:58.964365 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964379 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964390 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27008 16:05:58.964406 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964417 _llseek(5, 1624, [1624], SEEK_SET) = 0
27008 16:05:58.964433 munmap(0xb7fe0000, 1624) = 0
27008 16:05:58.964443 close(5)          = 0
27008 16:05:58.964456 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964469 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964480 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27008 16:05:58.964496 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964507 _llseek(5, 1233, [1233], SEEK_SET) = 0
27008 16:05:58.964524 munmap(0xb7fe0000, 1233) = 0
27008 16:05:58.964534 close(5)          = 0
27008 16:05:58.964766 getuid32()        = 0
27008 16:05:58.964777 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964790 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964801 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27008 16:05:58.964817 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964843 _llseek(5, 1624, [1624], SEEK_SET) = 0
27008 16:05:58.964863 munmap(0xb7fe0000, 1624) = 0
27008 16:05:58.964883 close(5)          = 0
27008 16:05:58.964896 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.964910 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.964920 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27008 16:05:58.964937 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.964948 _llseek(5, 1233, [1233], SEEK_SET) = 0
27008 16:05:58.964964 munmap(0xb7fe0000, 1233) = 0
27008 16:05:58.964974 close(5)          = 0
27008 16:05:58.964986 time(NULL)        = 1495656358
27008 16:05:58.965002 munmap(0xb7fdd000, 12164) = 0
27008 16:05:58.965016 munmap(0xb7fdb000, 7136) = 0
27008 16:05:58.965031 munmap(0xb7e10000, 95428) = 0
27008 16:05:58.965042 munmap(0xb7dd6000, 201052) = 0
27008 16:05:58.965054 munmap(0xb7dbd000, 101180) = 0
27008 16:05:58.965071 gettimeofday({1495656358, 965075}, NULL) = 0
27008 16:05:58.965087 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8821f4) = -1 ENOENT (No such file or directory)
27008 16:05:58.965103 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
27008 16:05:58.965128 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf882344) = 0
27008 16:05:58.965145 write(3, "Wed May 24 16:05:58 2017 [pid 27008] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
27008 16:05:58.965162 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf88234c) = 0
27008 16:05:58.965175 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27008 16:05:58.965190 write(4, "\1", 1 <unfinished ...>
27009 16:05:58.965200 <... read resumed> "\1", 1) = 1
27008 16:05:58.965205 <... write resumed> ) = 1
27009 16:05:58.965212 exit_group(0)     = ?
27008 16:05:58.965241 --- SIGCHLD (Child exited) @ 0 (0) ---
27008 16:05:58.965249 sigreturn()       = ? (mask now [])
27008 16:05:58.965268 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 27009
27008 16:05:58.965281 close(4)          = 0
27008 16:05:58.965293 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
27008 16:05:58.965307 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27008 16:05:58.965321 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27008 16:05:58.965335 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e466f8) = 27010
27010 16:05:58.965384 prctl(0x1, 0x9, 0, 0, 0) = 0
27010 16:05:58.965398 close(4)          = 0
27010 16:05:58.965424 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27010 16:05:58.965442 _llseek(4, 0, [0], SEEK_CUR) = 0
27010 16:05:58.965457 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27010 16:05:58.965476 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fe0000
27010 16:05:58.965488 _llseek(4, 1624, [1624], SEEK_SET) = 0
27010 16:05:58.965511 munmap(0xb7fe0000, 1624) = 0
27010 16:05:58.965523 close(4)          = 0
27010 16:05:58.965536 getuid32()        = 0
27010 16:05:58.965547 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27010 16:05:58.965560 _llseek(4, 0, [0], SEEK_CUR) = 0
27010 16:05:58.965571 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27010 16:05:58.965587 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fe0000
27010 16:05:58.965598 _llseek(4, 1624, [1624], SEEK_SET) = 0
27010 16:05:58.965614 munmap(0xb7fe0000, 1624) = 0
27010 16:05:58.965624 close(4)          = 0
27010 16:05:58.965649 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
27010 16:05:58.965671 read(4, "65536\n", 31) = 6
27010 16:05:58.965684 close(4)          = 0
27010 16:05:58.965697 socket(PF_FILE, SOCK_STREAM, 0) = 4
27010 16:05:58.965710 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27010 16:05:58.965721 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27010 16:05:58.965741 close(4)          = 0
27010 16:05:58.965752 socket(PF_FILE, SOCK_STREAM, 0) = 4
27010 16:05:58.965762 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27010 16:05:58.965773 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27010 16:05:58.965791 close(4)          = 0
27010 16:05:58.965847 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
27010 16:05:58.965863 _llseek(4, 0, [0], SEEK_CUR) = 0
27010 16:05:58.965874 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27010 16:05:58.965891 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fe0000
27010 16:05:58.965902 _llseek(4, 886, [886], SEEK_SET) = 0
27010 16:05:58.965928 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27010 16:05:58.965945 munmap(0xb7fe0000, 886) = 0
27010 16:05:58.965956 close(4)          = 0
27010 16:05:58.965966 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
27010 16:05:58.965983 geteuid32()       = 0
27010 16:05:58.965994 getegid32()       = 0
27010 16:05:58.966005 setregid32(-1, 1000) = 0
27010 16:05:58.966016 setreuid32(-1, 1000) = 0
27010 16:05:58.966031 chdir("/home/msfadmin") = 0
27010 16:05:58.966043 setreuid32(-1, 0) = 0
27010 16:05:58.966052 setregid32(-1, 0) = 0
27010 16:05:58.966063 setgid32(1000)    = 0
27010 16:05:58.966073 setuid32(1000)    = 0
27010 16:05:58.966084 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
27010 16:05:58.966098 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fde000
27010 16:05:58.966109 mprotect(0xb7fe0000, 4096, PROT_NONE) = 0
27010 16:05:58.966121 mprotect(0xb7fde000, 4096, PROT_NONE) = 0
27010 16:05:58.966132 getcwd("/home/msfadmin", 4096) = 15
27010 16:05:58.966146 umask(022)        = 077
27010 16:05:58.966156 getcwd("/home/msfadmin", 4096) = 15
27010 16:05:58.966170 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27010 16:05:58.966192 write(0, "230 Login successful.\r\n", 23) = 23
27010 16:05:58.966272 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27010 16:05:58.966289 alarm(300)        = 0
27010 16:05:58.966300 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fdb000
27010 16:05:58.966312 mprotect(0xb7fdd000, 4096, PROT_NONE) = 0
27010 16:05:58.966324 mprotect(0xb7fdb000, 4096, PROT_NONE) = 0
27010 16:05:58.966337 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
27010 16:05:58.966350 read(0, "TYPE I\r\n", 8) = 8
27010 16:05:58.966367 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27010 16:05:58.966408 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27010 16:05:58.966423 alarm(300)        = 300
27010 16:05:58.966434 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27010 16:05:58.966446 read(0, "PASV\r\n", 6) = 6
27010 16:05:58.966459 write(5, "\n", 1) = 1
27010 16:05:58.966470 read(5,  <unfinished ...>
27008 16:05:58.966482 close(5)          = 0
27008 16:05:58.966495 getuid32()        = 0
27008 16:05:58.966510 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27008 16:05:58.966537 _llseek(5, 0, [0], SEEK_CUR) = 0
27008 16:05:58.966552 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27008 16:05:58.966570 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fe0000
27008 16:05:58.966582 _llseek(5, 1624, [1624], SEEK_SET) = 0
27008 16:05:58.966600 munmap(0xb7fe0000, 1624) = 0
27008 16:05:58.966612 close(5)          = 0
27008 16:05:58.966629 setgroups32(0, []) = 0
27008 16:05:58.966640 chdir("/usr/share/empty") = 0
27008 16:05:58.966653 chroot(".")       = 0
27008 16:05:58.966664 capset(NULL, NULL) = -1 EFAULT (Bad address)
27008 16:05:58.966678 prctl(0x8, 0, 0xbf882328, 0x80549a6, 0xbf882310) = 0
27008 16:05:58.966689 prctl(0x8, 0x1, 0xbf882328, 0x8054a49, 0xbf882310) = 0
27008 16:05:58.966700 setgid32(65534)   = 0
27008 16:05:58.966710 setuid32(65534)   = 0
27008 16:05:58.966720 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
27008 16:05:58.966734 read(4, "\n", 1)  = 1
27008 16:05:58.966770 write(4, "\1", 1) = 1
27010 16:05:58.966784 <... read resumed> "\1", 1) = 1
27010 16:05:58.966802 write(5, "\f", 1) = 1
27010 16:05:58.966812 read(5,  <unfinished ...>
27008 16:05:58.966819 read(4, "\f", 1)  = 1
27008 16:05:58.966832 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27008 16:05:58.966846 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27008 16:05:58.966857 gettimeofday({1495656358, 966861}, NULL) = 0
27008 16:05:58.966874 bind(5, {sa_family=AF_INET, sin_port=htons(52826), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27008 16:05:58.966890 listen(5, 1)      = 0
27008 16:05:58.966902 write(4, "Z\316\0\0", 4) = 4
27010 16:05:58.966914 <... read resumed> "Z\316\0\0", 4) = 4
27010 16:05:58.966928 write(0, "227 Entering Passive Mode (127,0,0,1,206,90).\r\n", 47) = 47
27010 16:05:58.967026 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27010 16:05:58.967044 alarm(300)        = 300
27010 16:05:58.967056 recv(0, "STOR myfile38\r\n", 4096, MSG_PEEK) = 15
27010 16:05:58.967068 read(0, "STOR myfile38\r\n", 15) = 15
27010 16:05:58.967084 write(5, "\v", 1) = 1
27010 16:05:58.967095 read(5,  <unfinished ...>
27008 16:05:58.967102 read(4, "\v", 1)  = 1
27008 16:05:58.967118 write(4, "\1\0\0\0", 4) = 4
27010 16:05:58.967129 <... read resumed> "\1\0\0\0", 4) = 4
27010 16:05:58.967138 gettimeofday({1495656358, 967142}, NULL) = 0
27010 16:05:58.967149 getcwd("/home/msfadmin", 4096) = 15
27010 16:05:58.967162 open("myfile38", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
27010 16:05:58.967176 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
27010 16:05:58.967193 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
27010 16:05:58.967204 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
27010 16:05:58.967214 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf882274) = 0
27010 16:05:58.967229 ftruncate64(4, 0) = 0
27010 16:05:58.967248 _llseek(4, 0, [0], SEEK_SET) = 0
27010 16:05:58.967259 write(5, "\v", 1) = 1
27010 16:05:58.967270 read(5,  <unfinished ...>
27008 16:05:58.967277 read(4, "\v", 1)  = 1
27008 16:05:58.967289 write(4, "\1\0\0\0", 4) = 4
27010 16:05:58.967299 <... read resumed> "\1\0\0\0", 4) = 4
27010 16:05:58.967307 write(5, "\v", 1) = 1
27010 16:05:58.967317 read(5,  <unfinished ...>
27008 16:05:58.967324 read(4, "\v", 1)  = 1
27008 16:05:58.967335 write(4, "\1\0\0\0", 4) = 4
27010 16:05:58.967346 <... read resumed> "\1\0\0\0", 4) = 4
27010 16:05:58.967353 write(5, "\r", 1) = 1
27010 16:05:58.967364 read(5,  <unfinished ...>
27008 16:05:58.967370 read(4, "\r", 1)  = 1
27008 16:05:58.967383 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
