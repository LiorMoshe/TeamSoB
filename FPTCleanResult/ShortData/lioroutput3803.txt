27091 16:07:26.058511 mmap2(0xb7d2b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d2b000
27091 16:07:26.058527 mmap2(0xb7d2d000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d2d000
27091 16:07:26.058542 close(7)          = 0
27091 16:07:26.058554 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
27091 16:07:26.058568 open("/lib/libselinux.so.1", O_RDONLY) = 7
27091 16:07:26.058581 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
27091 16:07:26.058668 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
27091 16:07:26.058685 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d09000
27091 16:07:26.058696 mmap2(0xb7d20000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d20000
27091 16:07:26.058719 close(7)          = 0
27091 16:07:26.058853 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27091 16:07:26.058880 statfs64("/selinux", 84, 0xbf860afc) = -1 ENOENT (No such file or directory)
27091 16:07:26.058893 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
27091 16:07:26.058918 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
27091 16:07:26.058935 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f25000
27091 16:07:26.058947 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
27091 16:07:26.059032 read(7, "", 1024) = 0
27091 16:07:26.059042 close(7)          = 0
27091 16:07:26.059052 munmap(0xb7f25000, 4096) = 0
27091 16:07:26.059068 munmap(0xb7d54000, 29913) = 0
27091 16:07:26.059081 read(6, "", 4096) = 0
27091 16:07:26.059092 close(6)          = 0
27091 16:07:26.059101 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059112 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.059132 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.059145 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27091 16:07:26.059161 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.059175 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27091 16:07:26.059216 read(6, "", 4096) = 0
27091 16:07:26.059226 close(6)          = 0
27091 16:07:26.059235 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059246 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.059264 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.059278 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27091 16:07:26.059294 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.059304 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27091 16:07:26.059342 read(6, "", 4096) = 0
27091 16:07:26.059352 close(6)          = 0
27091 16:07:26.059361 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059371 read(5, "", 4096) = 0
27091 16:07:26.059381 close(5)          = 0
27091 16:07:26.059390 munmap(0xb7f2c000, 4096) = 0
27091 16:07:26.059400 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
27091 16:07:26.059413 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
27091 16:07:26.059429 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2c000
27091 16:07:26.059439 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
27091 16:07:26.059484 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.059502 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.059514 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
27091 16:07:26.059530 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.059541 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
27091 16:07:26.059587 read(6, "", 4096) = 0
27091 16:07:26.059597 close(6)          = 0
27091 16:07:26.059606 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059616 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.059634 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.059647 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27091 16:07:26.059663 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.059673 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27091 16:07:26.059750 read(6, "", 4096) = 0
27091 16:07:26.059761 close(6)          = 0
27091 16:07:26.059770 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059781 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.059800 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.059813 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
27091 16:07:26.059829 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.059840 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
27091 16:07:26.059956 read(6, "", 4096) = 0
27091 16:07:26.059966 close(6)          = 0
27091 16:07:26.059975 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.059986 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27091 16:07:26.060004 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27091 16:07:26.060016 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27091 16:07:26.060032 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f26000
27091 16:07:26.060042 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27091 16:07:26.060080 read(6, "", 4096) = 0
27091 16:07:26.060090 close(6)          = 0
27091 16:07:26.060099 munmap(0xb7f26000, 4096) = 0
27091 16:07:26.060109 read(5, "", 4096) = 0
27091 16:07:26.060118 close(5)          = 0
27091 16:07:26.060127 munmap(0xb7f2c000, 4096) = 0
27091 16:07:26.060139 time(NULL)        = 1495656446
27091 16:07:26.060151 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27091 16:07:26.060169 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
27091 16:07:26.060181 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27091 16:07:26.060197 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2c000
27091 16:07:26.060207 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
27091 16:07:26.060230 read(5, "", 4096) = 0
27091 16:07:26.060240 close(5)          = 0
27091 16:07:26.060249 munmap(0xb7f2c000, 4096) = 0
27091 16:07:26.060264 getuid32()        = 0
27091 16:07:26.060280 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.060295 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.060306 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27091 16:07:26.060322 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.060333 _llseek(5, 1624, [1624], SEEK_SET) = 0
27091 16:07:26.060351 munmap(0xb7f2c000, 1624) = 0
27091 16:07:26.060362 close(5)          = 0
27091 16:07:26.060386 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.060403 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.060413 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27091 16:07:26.060429 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.060440 _llseek(5, 1233, [1233], SEEK_SET) = 0
27091 16:07:26.060460 munmap(0xb7f2c000, 1233) = 0
27091 16:07:26.060470 close(5)          = 0
27091 16:07:26.060487 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.060500 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.060510 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27091 16:07:26.060526 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.060537 _llseek(5, 1624, [1624], SEEK_SET) = 0
27091 16:07:26.060552 munmap(0xb7f2c000, 1624) = 0
27091 16:07:26.060562 close(5)          = 0
27091 16:07:26.060574 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.060586 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.060597 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27091 16:07:26.060613 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.060623 _llseek(5, 1233, [1233], SEEK_SET) = 0
27091 16:07:26.060639 munmap(0xb7f2c000, 1233) = 0
27091 16:07:26.060768 close(5)          = 0
27091 16:07:26.061032 getuid32()        = 0
27091 16:07:26.061043 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.061056 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.061066 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27091 16:07:26.061082 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.061093 _llseek(5, 1624, [1624], SEEK_SET) = 0
27091 16:07:26.061108 munmap(0xb7f2c000, 1624) = 0
27091 16:07:26.061118 close(5)          = 0
27091 16:07:26.061131 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.061144 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.061154 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27091 16:07:26.061170 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.061180 _llseek(5, 1233, [1233], SEEK_SET) = 0
27091 16:07:26.061197 munmap(0xb7f2c000, 1233) = 0
27091 16:07:26.061206 close(5)          = 0
27091 16:07:26.061218 time(NULL)        = 1495656446
27091 16:07:26.061233 munmap(0xb7f29000, 12164) = 0
27091 16:07:26.061246 munmap(0xb7f27000, 7136) = 0
27091 16:07:26.061260 munmap(0xb7d5c000, 95428) = 0
27091 16:07:26.061271 munmap(0xb7d22000, 201052) = 0
27091 16:07:26.061420 munmap(0xb7d09000, 101180) = 0
27091 16:07:26.061443 gettimeofday({1495656446, 61447}, NULL) = 0
27091 16:07:26.061455 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8629d4) = -1 ENOENT (No such file or directory)
27091 16:07:26.061470 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
27091 16:07:26.061496 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf862b24) = 0
27091 16:07:26.061512 write(3, "Wed May 24 16:07:26 2017 [pid 27091] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
27091 16:07:26.061529 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf862b2c) = 0
27091 16:07:26.061574 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27091 16:07:26.061600 write(4, "\1", 1 <unfinished ...>
27092 16:07:26.061614 <... read resumed> "\1", 1) = 1
27091 16:07:26.061619 <... write resumed> ) = 1
27092 16:07:26.061627 exit_group(0)     = ?
27091 16:07:26.061655 --- SIGCHLD (Child exited) @ 0 (0) ---
27091 16:07:26.061666 sigreturn()       = ? (mask now [])
27091 16:07:26.061684 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 27092
27091 16:07:26.061698 close(4)          = 0
27091 16:07:26.061709 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
27091 16:07:26.061722 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27091 16:07:26.061736 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27091 16:07:26.061750 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 27093
27093 16:07:26.061800 prctl(0x1, 0x9, 0, 0, 0) = 0
27093 16:07:26.061813 close(4)          = 0
27093 16:07:26.061839 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27093 16:07:26.061856 _llseek(4, 0, [0], SEEK_CUR) = 0
27093 16:07:26.061872 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27093 16:07:26.061890 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2c000
27093 16:07:26.061902 _llseek(4, 1624, [1624], SEEK_SET) = 0
27093 16:07:26.061924 munmap(0xb7f2c000, 1624) = 0
27093 16:07:26.061936 close(4)          = 0
27093 16:07:26.061949 getuid32()        = 0
27093 16:07:26.061959 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27093 16:07:26.061972 _llseek(4, 0, [0], SEEK_CUR) = 0
27093 16:07:26.061982 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27093 16:07:26.061999 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2c000
27093 16:07:26.062009 _llseek(4, 1624, [1624], SEEK_SET) = 0
27093 16:07:26.062025 munmap(0xb7f2c000, 1624) = 0
27093 16:07:26.062035 close(4)          = 0
27093 16:07:26.062060 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
27093 16:07:26.062081 read(4, "65536\n", 31) = 6
27093 16:07:26.062093 close(4)          = 0
27093 16:07:26.062107 socket(PF_FILE, SOCK_STREAM, 0) = 4
27093 16:07:26.062118 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27093 16:07:26.062129 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27093 16:07:26.062149 close(4)          = 0
27093 16:07:26.062160 socket(PF_FILE, SOCK_STREAM, 0) = 4
27093 16:07:26.062170 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27093 16:07:26.062181 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27093 16:07:26.062199 close(4)          = 0
27093 16:07:26.062222 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
27093 16:07:26.062236 _llseek(4, 0, [0], SEEK_CUR) = 0
27093 16:07:26.062247 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27093 16:07:26.062263 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2c000
27093 16:07:26.062274 _llseek(4, 886, [886], SEEK_SET) = 0
27093 16:07:26.062299 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27093 16:07:26.062316 munmap(0xb7f2c000, 886) = 0
27093 16:07:26.062326 close(4)          = 0
27093 16:07:26.062336 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
27093 16:07:26.062352 geteuid32()       = 0
27093 16:07:26.062363 getegid32()       = 0
27093 16:07:26.062373 setregid32(-1, 1000) = 0
27093 16:07:26.062384 setreuid32(-1, 1000) = 0
27093 16:07:26.062394 chdir("/home/msfadmin") = 0
27093 16:07:26.062406 setreuid32(-1, 0) = 0
27093 16:07:26.062415 setregid32(-1, 0) = 0
27093 16:07:26.062426 setgid32(1000)    = 0
27093 16:07:26.062436 setuid32(1000)    = 0
27093 16:07:26.062446 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
27093 16:07:26.062459 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2a000
27093 16:07:26.062470 mprotect(0xb7f2c000, 4096, PROT_NONE) = 0
27093 16:07:26.062481 mprotect(0xb7f2a000, 4096, PROT_NONE) = 0
27093 16:07:26.062492 getcwd("/home/msfadmin", 4096) = 15
27093 16:07:26.062505 umask(022)        = 077
27093 16:07:26.062540 getcwd("/home/msfadmin", 4096) = 15
27093 16:07:26.062568 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27093 16:07:26.062591 write(0, "230 Login successful.\r\n", 23) = 23
27093 16:07:26.062672 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27093 16:07:26.062689 alarm(300)        = 0
27093 16:07:26.062700 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f27000
27093 16:07:26.062711 mprotect(0xb7f29000, 4096, PROT_NONE) = 0
27093 16:07:26.062722 mprotect(0xb7f27000, 4096, PROT_NONE) = 0
27093 16:07:26.062735 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
27093 16:07:26.062748 read(0, "TYPE I\r\n", 8) = 8
27093 16:07:26.062765 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27093 16:07:26.062804 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27093 16:07:26.062819 alarm(300)        = 300
27093 16:07:26.062830 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27093 16:07:26.062841 read(0, "PASV\r\n", 6) = 6
27093 16:07:26.062853 write(5, "\n", 1) = 1
27093 16:07:26.062864 read(5,  <unfinished ...>
27091 16:07:26.062876 close(5)          = 0
27091 16:07:26.062889 getuid32()        = 0
27091 16:07:26.062903 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27091 16:07:26.062918 _llseek(5, 0, [0], SEEK_CUR) = 0
27091 16:07:26.062930 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27091 16:07:26.062948 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2c000
27091 16:07:26.062959 _llseek(5, 1624, [1624], SEEK_SET) = 0
27091 16:07:26.062976 munmap(0xb7f2c000, 1624) = 0
27091 16:07:26.062988 close(5)          = 0
27091 16:07:26.063003 setgroups32(0, []) = 0
27091 16:07:26.063015 chdir("/usr/share/empty") = 0
27091 16:07:26.063027 chroot(".")       = 0
27091 16:07:26.063037 capset(NULL, NULL) = -1 EFAULT (Bad address)
27091 16:07:26.063051 prctl(0x8, 0, 0xbf862b08, 0x80549a6, 0xbf862af0) = 0
27091 16:07:26.063063 prctl(0x8, 0x1, 0xbf862b08, 0x8054a49, 0xbf862af0) = 0
27091 16:07:26.063073 setgid32(65534)   = 0
27091 16:07:26.063083 setuid32(65534)   = 0
27091 16:07:26.063092 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
27091 16:07:26.063106 read(4, "\n", 1)  = 1
27091 16:07:26.063119 write(4, "\1", 1) = 1
27093 16:07:26.063130 <... read resumed> "\1", 1) = 1
27093 16:07:26.063138 write(5, "\f", 1) = 1
27093 16:07:26.063148 read(5,  <unfinished ...>
27091 16:07:26.063154 read(4, "\f", 1)  = 1
27091 16:07:26.063167 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27091 16:07:26.063180 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27091 16:07:26.063191 gettimeofday({1495656446, 63195}, NULL) = 0
27091 16:07:26.063207 bind(5, {sa_family=AF_INET, sin_port=htons(23449), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27091 16:07:26.063223 listen(5, 1)      = 0
27091 16:07:26.063236 write(4, "\231[\0\0", 4) = 4
27093 16:07:26.063246 <... read resumed> "\231[\0\0", 4) = 4
27093 16:07:26.063260 write(0, "227 Entering Passive Mode (127,0,0,1,91,153).\r\n", 47) = 47
27093 16:07:26.063354 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27093 16:07:26.063371 alarm(300)        = 300
27093 16:07:26.063383 recv(0, "STOR myfile18\r\n", 4096, MSG_PEEK) = 15
27093 16:07:26.063395 read(0, "STOR myfile18\r\n", 15) = 15
27093 16:07:26.063410 write(5, "\v", 1) = 1
27093 16:07:26.063421 read(5,  <unfinished ...>
27091 16:07:26.063428 read(4, "\v", 1)  = 1
27091 16:07:26.063439 write(4, "\1\0\0\0", 4) = 4
27093 16:07:26.063449 <... read resumed> "\1\0\0\0", 4) = 4
27093 16:07:26.063458 gettimeofday({1495656446, 63462}, NULL) = 0
27093 16:07:26.063469 getcwd("/home/msfadmin", 4096) = 15
27093 16:07:26.063508 open("myfile18", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
27093 16:07:26.063533 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
27093 16:07:26.063550 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
27093 16:07:26.063561 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
27093 16:07:26.063571 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf862a54) = 0
27093 16:07:26.063590 ftruncate64(4, 0) = 0
27093 16:07:26.063610 _llseek(4, 0, [0], SEEK_SET) = 0
27093 16:07:26.063621 write(5, "\v", 1) = 1
27093 16:07:26.063631 read(5,  <unfinished ...>
27091 16:07:26.063639 read(4, "\v", 1)  = 1
27091 16:07:26.063650 write(4, "\1\0\0\0", 4) = 4
27093 16:07:26.063660 <... read resumed> "\1\0\0\0", 4) = 4
27093 16:07:26.063667 write(5, "\v", 1) = 1
27093 16:07:26.063677 read(5,  <unfinished ...>
27091 16:07:26.063684 read(4, "\v", 1)  = 1
27091 16:07:26.063694 write(4, "\1\0\0\0", 4) = 4
27093 16:07:26.063704 <... read resumed> "\1\0\0\0", 4) = 4
27093 16:07:26.063712 write(5, "\r", 1) = 1
27093 16:07:26.063721 read(5,  <unfinished ...>
27091 16:07:26.063728 read(4, "\r", 1)  = 1
27091 16:07:26.063740 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
27091 16:07:26.063757 accept(5, {sa_family=AF_INET, sin_port=htons(60193), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
27091 16:07:26.063778 write(4, "\1", 1) = 1
27093 16:07:26.063789 <... read resumed> "\1", 1) = 1
27093 16:07:26.063798 recvmsg(5,  <unfinished ...>
27091 16:07:26.063808 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27093 16:07:26.063825 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27093 16:07:26.063839 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
27093 16:07:26.063851 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
27093 16:07:26.063863 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
27093 16:07:26.063874 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27093 16:07:26.063887 alarm(300)        = 300
27093 16:07:26.063900 write(0, "150 Ok to send data.\r\n", 22) = 22
