26239 15:52:31.715213 open("/lib/libselinux.so.1", O_RDONLY) = 7
26239 15:52:31.715252 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
26239 15:52:31.715350 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
26239 15:52:31.715367 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d70000
26239 15:52:31.715379 mmap2(0xb7d87000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d87000
26239 15:52:31.715398 close(7)          = 0
26239 15:52:31.715493 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26239 15:52:31.715520 statfs64("/selinux", 84, 0xbff74a0c) = -1 ENOENT (No such file or directory)
26239 15:52:31.715533 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26239 15:52:31.715558 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26239 15:52:31.715575 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
26239 15:52:31.715587 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26239 15:52:31.715672 read(7, "", 1024) = 0
26239 15:52:31.715682 close(7)          = 0
26239 15:52:31.715692 munmap(0xb7f8c000, 4096) = 0
26239 15:52:31.715707 munmap(0xb7dbb000, 29913) = 0
26239 15:52:31.716763 read(6, "", 4096) = 0
26239 15:52:31.716776 close(6)          = 0
26239 15:52:31.716786 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.716798 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.716818 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.716832 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26239 15:52:31.716848 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.716863 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26239 15:52:31.716904 read(6, "", 4096) = 0
26239 15:52:31.716914 close(6)          = 0
26239 15:52:31.716923 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.716934 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.716953 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.716965 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26239 15:52:31.716981 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.716992 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26239 15:52:31.717030 read(6, "", 4096) = 0
26239 15:52:31.717040 close(6)          = 0
26239 15:52:31.717049 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.717059 read(5, "", 4096) = 0
26239 15:52:31.717068 close(5)          = 0
26239 15:52:31.717077 munmap(0xb7f93000, 4096) = 0
26239 15:52:31.717088 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26239 15:52:31.717100 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26239 15:52:31.717116 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f93000
26239 15:52:31.717127 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26239 15:52:31.717172 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.717190 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.717230 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26239 15:52:31.717257 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.717268 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26239 15:52:31.717316 read(6, "", 4096) = 0
26239 15:52:31.717326 close(6)          = 0
26239 15:52:31.717335 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.717346 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.717365 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.717377 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26239 15:52:31.717393 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.717403 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26239 15:52:31.717446 read(6, "", 4096) = 0
26239 15:52:31.717455 close(6)          = 0
26239 15:52:31.717465 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.717475 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.717493 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.717506 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26239 15:52:31.717522 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.717533 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26239 15:52:31.717649 read(6, "", 4096) = 0
26239 15:52:31.717659 close(6)          = 0
26239 15:52:31.717668 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.717679 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26239 15:52:31.717723 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26239 15:52:31.717737 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26239 15:52:31.717763 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
26239 15:52:31.717773 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26239 15:52:31.717812 read(6, "", 4096) = 0
26239 15:52:31.717822 close(6)          = 0
26239 15:52:31.717831 munmap(0xb7f8d000, 4096) = 0
26239 15:52:31.717842 read(5, "", 4096) = 0
26239 15:52:31.717851 close(5)          = 0
26239 15:52:31.717860 munmap(0xb7f93000, 4096) = 0
26239 15:52:31.717872 time(NULL)        = 1495655551
26239 15:52:31.717884 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26239 15:52:31.717902 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26239 15:52:31.717913 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26239 15:52:31.717929 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f93000
26239 15:52:31.717939 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26239 15:52:31.717963 read(5, "", 4096) = 0
26239 15:52:31.717973 close(5)          = 0
26239 15:52:31.717982 munmap(0xb7f93000, 4096) = 0
26239 15:52:31.717997 getuid32()        = 0
26239 15:52:31.718013 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718028 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718038 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26239 15:52:31.718054 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718066 _llseek(5, 1624, [1624], SEEK_SET) = 0
26239 15:52:31.718084 munmap(0xb7f93000, 1624) = 0
26239 15:52:31.718095 close(5)          = 0
26239 15:52:31.718118 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718135 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718146 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26239 15:52:31.718162 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718172 _llseek(5, 1233, [1233], SEEK_SET) = 0
26239 15:52:31.718236 munmap(0xb7f93000, 1233) = 0
26239 15:52:31.718260 close(5)          = 0
26239 15:52:31.718279 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718294 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718304 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26239 15:52:31.718320 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718331 _llseek(5, 1624, [1624], SEEK_SET) = 0
26239 15:52:31.718347 munmap(0xb7f93000, 1624) = 0
26239 15:52:31.718356 close(5)          = 0
26239 15:52:31.718369 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718382 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718392 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26239 15:52:31.718408 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718418 _llseek(5, 1233, [1233], SEEK_SET) = 0
26239 15:52:31.718434 munmap(0xb7f93000, 1233) = 0
26239 15:52:31.718443 close(5)          = 0
26239 15:52:31.718675 getuid32()        = 0
26239 15:52:31.718715 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718729 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718753 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26239 15:52:31.718769 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718780 _llseek(5, 1624, [1624], SEEK_SET) = 0
26239 15:52:31.718796 munmap(0xb7f93000, 1624) = 0
26239 15:52:31.718806 close(5)          = 0
26239 15:52:31.718819 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.718831 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.718841 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26239 15:52:31.718857 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.718868 _llseek(5, 1233, [1233], SEEK_SET) = 0
26239 15:52:31.718884 munmap(0xb7f93000, 1233) = 0
26239 15:52:31.718893 close(5)          = 0
26239 15:52:31.718905 time(NULL)        = 1495655551
26239 15:52:31.718920 munmap(0xb7f90000, 12164) = 0
26239 15:52:31.718933 munmap(0xb7f8e000, 7136) = 0
26239 15:52:31.718947 munmap(0xb7dc3000, 95428) = 0
26239 15:52:31.718958 munmap(0xb7d89000, 201052) = 0
26239 15:52:31.718969 munmap(0xb7d70000, 101180) = 0
26239 15:52:31.718985 gettimeofday({1495655551, 718989}, NULL) = 0
26239 15:52:31.718996 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbff768e4) = -1 ENOENT (No such file or directory)
26239 15:52:31.719011 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26239 15:52:31.719036 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff76a34) = 0
26239 15:52:31.719052 write(3, "Wed May 24 15:52:31 2017 [pid 26239] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26239 15:52:31.719069 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbff76a3c) = 0
26239 15:52:31.719082 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26239 15:52:31.719096 write(4, "\1", 1 <unfinished ...>
26240 15:52:31.719109 <... read resumed> "\1", 1) = 1
26239 15:52:31.719115 <... write resumed> ) = 1
26240 15:52:31.719122 exit_group(0)     = ?
26239 15:52:31.719149 --- SIGCHLD (Child exited) @ 0 (0) ---
26239 15:52:31.719159 sigreturn()       = ? (mask now [])
26239 15:52:31.719178 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26240
26239 15:52:31.719191 close(4)          = 0
26239 15:52:31.719202 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26239 15:52:31.719216 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26239 15:52:31.719229 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26239 15:52:31.719242 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7df96f8) = 26241
26241 15:52:31.719291 prctl(0x1, 0x9, 0, 0, 0) = 0
26241 15:52:31.719304 close(4)          = 0
26241 15:52:31.719330 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26241 15:52:31.719347 _llseek(4, 0, [0], SEEK_CUR) = 0
26241 15:52:31.719363 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26241 15:52:31.719381 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f93000
26241 15:52:31.719393 _llseek(4, 1624, [1624], SEEK_SET) = 0
26241 15:52:31.719415 munmap(0xb7f93000, 1624) = 0
26241 15:52:31.719426 close(4)          = 0
26241 15:52:31.719439 getuid32()        = 0
26241 15:52:31.719449 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26241 15:52:31.719462 _llseek(4, 0, [0], SEEK_CUR) = 0
26241 15:52:31.719472 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26241 15:52:31.719488 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f93000
26241 15:52:31.719499 _llseek(4, 1624, [1624], SEEK_SET) = 0
26241 15:52:31.719514 munmap(0xb7f93000, 1624) = 0
26241 15:52:31.719524 close(4)          = 0
26241 15:52:31.719549 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26241 15:52:31.719569 read(4, "65536\n", 31) = 6
26241 15:52:31.719581 close(4)          = 0
26241 15:52:31.719594 socket(PF_FILE, SOCK_STREAM, 0) = 4
26241 15:52:31.719606 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26241 15:52:31.719617 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26241 15:52:31.719637 close(4)          = 0
26241 15:52:31.719648 socket(PF_FILE, SOCK_STREAM, 0) = 4
26241 15:52:31.719682 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26241 15:52:31.719694 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26241 15:52:31.719723 close(4)          = 0
26241 15:52:31.719747 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26241 15:52:31.719762 _llseek(4, 0, [0], SEEK_CUR) = 0
26241 15:52:31.719772 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26241 15:52:31.719789 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f93000
26241 15:52:31.719800 _llseek(4, 886, [886], SEEK_SET) = 0
26241 15:52:31.719824 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26241 15:52:31.719841 munmap(0xb7f93000, 886) = 0
26241 15:52:31.719851 close(4)          = 0
26241 15:52:31.719861 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26241 15:52:31.719877 geteuid32()       = 0
26241 15:52:31.719888 getegid32()       = 0
26241 15:52:31.719898 setregid32(-1, 1000) = 0
26241 15:52:31.719909 setreuid32(-1, 1000) = 0
26241 15:52:31.719920 chdir("/home/msfadmin") = 0
26241 15:52:31.719931 setreuid32(-1, 0) = 0
26241 15:52:31.719941 setregid32(-1, 0) = 0
26241 15:52:31.719951 setgid32(1000)    = 0
26241 15:52:31.719961 setuid32(1000)    = 0
26241 15:52:31.719971 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26241 15:52:31.719984 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f91000
26241 15:52:31.719995 mprotect(0xb7f93000, 4096, PROT_NONE) = 0
26241 15:52:31.720007 mprotect(0xb7f91000, 4096, PROT_NONE) = 0
26241 15:52:31.720018 getcwd("/home/msfadmin", 4096) = 15
26241 15:52:31.720032 umask(022)        = 077
26241 15:52:31.720042 getcwd("/home/msfadmin", 4096) = 15
26241 15:52:31.720059 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26241 15:52:31.720081 write(0, "230 Login successful.\r\n", 23) = 23
26241 15:52:31.720142 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26241 15:52:31.720158 alarm(300)        = 0
26241 15:52:31.720169 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8e000
26241 15:52:31.720180 mprotect(0xb7f90000, 4096, PROT_NONE) = 0
26241 15:52:31.720191 mprotect(0xb7f8e000, 4096, PROT_NONE) = 0
26241 15:52:31.720204 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
26241 15:52:31.720217 read(0, "QUIT\r\n", 6) = 6
26241 15:52:31.720231 shutdown(0, 0 /* receive */) = 0
26241 15:52:31.720243 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
26241 15:52:31.720254 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26241 15:52:31.720264 write(0, "221 Goodbye.\r\n", 14) = 14
26241 15:52:31.720310 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
26241 15:52:31.720321 fcntl64(0, F_SETFL, O_RDWR) = 0
26241 15:52:31.720332 shutdown(0, 2 /* send and receive */) = 0
26241 15:52:31.720349 exit_group(0)     = ?
26239 15:52:31.720375 --- SIGCHLD (Child exited) @ 0 (0) ---
26239 15:52:31.720388 alarm(1)          = 0
26239 15:52:31.720400 sigreturn()       = ? (mask now [])
26239 15:52:31.720420 close(5)          = 0
26239 15:52:31.720433 getuid32()        = 0
26239 15:52:31.720448 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26239 15:52:31.720462 _llseek(5, 0, [0], SEEK_CUR) = 0
26239 15:52:31.720474 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26239 15:52:31.720492 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f93000
26239 15:52:31.720503 _llseek(5, 1624, [1624], SEEK_SET) = 0
26239 15:52:31.720520 munmap(0xb7f93000, 1624) = 0
26239 15:52:31.720531 close(5)          = 0
26239 15:52:31.720543 setgroups32(0, []) = 0
26239 15:52:31.720554 chdir("/usr/share/empty") = 0
26239 15:52:31.720566 chroot(".")       = 0
26239 15:52:31.720576 capset(NULL, NULL) = -1 EFAULT (Bad address)
26239 15:52:31.720589 prctl(0x8, 0, 0xbff76a18, 0x80549a6, 0xbff76a00) = 0
26239 15:52:31.720599 prctl(0x8, 0x1, 0xbff76a18, 0x8054a49, 0xbff76a00) = 0
26239 15:52:31.720609 setgid32(65534)   = 0
26239 15:52:31.720619 setuid32(65534)   = 0
26239 15:52:31.720775 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26239 15:52:31.720799 read(4, "", 1)    = 0
26239 15:52:31.720809 alarm(0)          = 1
26239 15:52:31.720819 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26241
26239 15:52:31.720832 exit_group(0)     = ?
4380  15:52:31.720866 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:52:31.720873 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:52:31.720880 write(4, "\21", 1) = 1
4380  15:52:31.720894 sigreturn()       = ? (mask now [])
4380  15:52:31.720926 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:52:31.720943 ioctl(3, FIONREAD, [1]) = 0
4380  15:52:31.720960 read(3, "\21", 1) = 1
4380  15:52:31.720972 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 26239
4380  15:52:31.720987 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:52:31.721000 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:52:31.721011 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:52:32.226955 accept(5, {sa_family=AF_INET, sin_port=htons(59442), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:52:32.227015 time(NULL)        = 1495655552
4380  15:52:32.227028 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 26242
26242 15:52:32.227141 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
26242 15:52:32.227157 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
26242 15:52:32.227169 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
26242 15:52:32.227180 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
26242 15:52:32.227194 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
26242 15:52:32.227208 close(3)          = 0
26242 15:52:32.227217 close(4)          = 0
26242 15:52:32.227235 open("/dev/null", O_RDONLY) = 3
26242 15:52:32.227251 dup2(3, 0)        = 0
26242 15:52:32.227261 dup2(3, 1)        = 1
26242 15:52:32.227269 dup2(3, 2)        = 2
26242 15:52:32.227278 close(3)          = 0
26242 15:52:32.227289 setgid32(0)       = 0
26242 15:52:32.227302 setgroups32(0, []) = 0
26242 15:52:32.227313 setuid32(0)       = 0
26242 15:52:32.227325 getpriority(PRIO_PROCESS, 0) = 20
26242 15:52:32.227334 setpriority(PRIO_PROCESS, 0, 10) = 0
26242 15:52:32.227344 getpriority(PRIO_PROCESS, 0) = 10
26242 15:52:32.227380 getpeername(13, {sa_family=AF_INET, sin_port=htons(59442), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
26242 15:52:32.227403 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
26242 15:52:32.227431 open("/etc/hosts.allow", O_RDONLY) = 3
26242 15:52:32.227450 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
26242 15:52:32.227469 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
26242 15:52:32.227488 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
26242 15:52:32.227560 close(3)          = 0
26242 15:52:32.227571 munmap(0xb7fa1000, 4096) = 0
26242 15:52:32.227658 fcntl64(13, F_SETFD, 0) = 0
26242 15:52:32.227673 close(7)          = 0
26242 15:52:32.227683 dup2(13, 0)       = 0
26242 15:52:32.227692 dup2(13, 1)       = 1
26242 15:52:32.227701 dup2(13, 2)       = 2
26242 15:52:32.227710 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
26242 15:52:32.227722 close(13)         = 0
26242 15:52:32.227732 setsid()          = 26242
26242 15:52:32.227742 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
26242 15:52:32.227820 brk(0)            = 0x8064000
26242 15:52:32.227841 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26242 15:52:32.227858 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f17000
26242 15:52:32.227872 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
26242 15:52:32.227888 open("/etc/ld.so.cache", O_RDONLY) = 3
26242 15:52:32.227900 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
26242 15:52:32.227917 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f0f000
26242 15:52:32.227927 close(3)          = 0
26242 15:52:32.227938 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
