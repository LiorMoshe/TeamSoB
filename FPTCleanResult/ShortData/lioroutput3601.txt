26674 16:00:02.623070 mmap2(0xb7d64000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d64000
26674 16:00:02.623086 close(7)          = 0
26674 16:00:02.623098 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26674 16:00:02.623112 open("/lib/libselinux.so.1", O_RDONLY) = 7
26674 16:00:02.623124 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
26674 16:00:02.623211 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
26674 16:00:02.623229 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d40000
26674 16:00:02.623240 mmap2(0xb7d57000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d57000
26674 16:00:02.623252 close(7)          = 0
26674 16:00:02.623252 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26674 16:00:02.623252 statfs64("/selinux", 84, 0xbf8f9b8c) = -1 ENOENT (No such file or directory)
26674 16:00:02.623252 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
26674 16:00:02.623253 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26674 16:00:02.623253 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
26674 16:00:02.623253 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
26674 16:00:02.623253 read(7, "", 1024) = 0
26674 16:00:02.623254 close(7)          = 0
26674 16:00:02.623265 munmap(0xb7f5c000, 4096) = 0
26674 16:00:02.623280 munmap(0xb7d8b000, 29913) = 0
26674 16:00:02.623294 read(6, "", 4096) = 0
26674 16:00:02.623305 close(6)          = 0
26674 16:00:02.623314 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.623359 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.623381 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.623408 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26674 16:00:02.623425 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.623436 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26674 16:00:02.623477 read(6, "", 4096) = 0
26674 16:00:02.623487 close(6)          = 0
26674 16:00:02.623496 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.623507 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.623525 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.623538 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26674 16:00:02.623554 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.623564 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26674 16:00:02.623603 read(6, "", 4096) = 0
26674 16:00:02.623613 close(6)          = 0
26674 16:00:02.623622 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.623632 read(5, "", 4096) = 0
26674 16:00:02.623641 close(5)          = 0
26674 16:00:02.623650 munmap(0xb7f63000, 4096) = 0
26674 16:00:02.623660 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26674 16:00:02.623673 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26674 16:00:02.623689 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f63000
26674 16:00:02.623699 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26674 16:00:02.623744 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.623762 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.623774 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26674 16:00:02.623790 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.623800 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26674 16:00:02.623889 read(6, "", 4096) = 0
26674 16:00:02.623900 close(6)          = 0
26674 16:00:02.623910 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.623921 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.623939 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.623952 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26674 16:00:02.623968 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.623978 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26674 16:00:02.624017 read(6, "", 4096) = 0
26674 16:00:02.624027 close(6)          = 0
26674 16:00:02.624036 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.624046 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.624064 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.624076 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26674 16:00:02.624092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.624102 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26674 16:00:02.624218 read(6, "", 4096) = 0
26674 16:00:02.624227 close(6)          = 0
26674 16:00:02.624236 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.624247 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26674 16:00:02.624264 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26674 16:00:02.624277 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26674 16:00:02.624292 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
26674 16:00:02.624303 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26674 16:00:02.624315 read(6, "", 4096) = 0
26674 16:00:02.624315 close(6)          = 0
26674 16:00:02.624317 munmap(0xb7f5d000, 4096) = 0
26674 16:00:02.624328 read(5, "", 4096) = 0
26674 16:00:02.624338 close(5)          = 0
26674 16:00:02.624346 munmap(0xb7f63000, 4096) = 0
26674 16:00:02.624359 time(NULL)        = 1495656002
26674 16:00:02.624370 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26674 16:00:02.624389 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26674 16:00:02.624401 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26674 16:00:02.624417 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f63000
26674 16:00:02.624427 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26674 16:00:02.624449 read(5, "", 4096) = 0
26674 16:00:02.624458 close(5)          = 0
26674 16:00:02.624467 munmap(0xb7f63000, 4096) = 0
26674 16:00:02.624482 getuid32()        = 0
26674 16:00:02.624498 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.624512 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.624523 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26674 16:00:02.624539 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.624550 _llseek(5, 1624, [1624], SEEK_SET) = 0
26674 16:00:02.624568 munmap(0xb7f63000, 1624) = 0
26674 16:00:02.624579 close(5)          = 0
26674 16:00:02.624603 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.624620 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.624630 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26674 16:00:02.624646 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.624656 _llseek(5, 1233, [1233], SEEK_SET) = 0
26674 16:00:02.624676 munmap(0xb7f63000, 1233) = 0
26674 16:00:02.624716 close(5)          = 0
26674 16:00:02.624747 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.624761 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.624771 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26674 16:00:02.624787 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.624797 _llseek(5, 1624, [1624], SEEK_SET) = 0
26674 16:00:02.624813 munmap(0xb7f63000, 1624) = 0
26674 16:00:02.624823 close(5)          = 0
26674 16:00:02.624835 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.624847 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.624857 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26674 16:00:02.624873 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.624883 _llseek(5, 1233, [1233], SEEK_SET) = 0
26674 16:00:02.624899 munmap(0xb7f63000, 1233) = 0
26674 16:00:02.624909 close(5)          = 0
26674 16:00:02.625141 getuid32()        = 0
26674 16:00:02.625152 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.625165 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.625175 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26674 16:00:02.625219 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.625241 _llseek(5, 1624, [1624], SEEK_SET) = 0
26674 16:00:02.625256 munmap(0xb7f63000, 1624) = 0
26674 16:00:02.625266 close(5)          = 0
26674 16:00:02.625279 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.625292 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.625303 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26674 16:00:02.625318 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.625329 _llseek(5, 1233, [1233], SEEK_SET) = 0
26674 16:00:02.625345 munmap(0xb7f63000, 1233) = 0
26674 16:00:02.625354 close(5)          = 0
26674 16:00:02.625366 time(NULL)        = 1495656002
26674 16:00:02.625381 munmap(0xb7f60000, 12164) = 0
26674 16:00:02.625394 munmap(0xb7f5e000, 7136) = 0
26674 16:00:02.625408 munmap(0xb7d93000, 95428) = 0
26674 16:00:02.625419 munmap(0xb7d59000, 201052) = 0
26674 16:00:02.625429 munmap(0xb7d40000, 101180) = 0
26674 16:00:02.625445 gettimeofday({1495656002, 625449}, NULL) = 0
26674 16:00:02.625460 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8fba64) = -1 ENOENT (No such file or directory)
26674 16:00:02.625475 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26674 16:00:02.625501 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8fbbb4) = 0
26674 16:00:02.625517 write(3, "Wed May 24 16:00:02 2017 [pid 26674] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26674 16:00:02.625534 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8fbbbc) = 0
26674 16:00:02.625546 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26674 16:00:02.625560 write(4, "\1", 1 <unfinished ...>
26675 16:00:02.625570 <... read resumed> "\1", 1) = 1
26674 16:00:02.625575 <... write resumed> ) = 1
26675 16:00:02.625582 exit_group(0)     = ?
26674 16:00:02.625610 --- SIGCHLD (Child exited) @ 0 (0) ---
26674 16:00:02.625618 sigreturn()       = ? (mask now [])
26674 16:00:02.625637 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26675
26674 16:00:02.625650 close(4)          = 0
26674 16:00:02.625661 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26674 16:00:02.625704 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26674 16:00:02.625721 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26674 16:00:02.625735 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dc96f8) = 26676
26676 16:00:02.625813 prctl(0x1, 0x9, 0, 0, 0) = 0
26676 16:00:02.625827 close(4)          = 0
26676 16:00:02.625853 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26676 16:00:02.625870 _llseek(4, 0, [0], SEEK_CUR) = 0
26676 16:00:02.625885 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26676 16:00:02.625903 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f63000
26676 16:00:02.625915 _llseek(4, 1624, [1624], SEEK_SET) = 0
26676 16:00:02.625937 munmap(0xb7f63000, 1624) = 0
26676 16:00:02.625948 close(4)          = 0
26676 16:00:02.625961 getuid32()        = 0
26676 16:00:02.625971 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26676 16:00:02.625984 _llseek(4, 0, [0], SEEK_CUR) = 0
26676 16:00:02.625994 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26676 16:00:02.626010 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f63000
26676 16:00:02.626021 _llseek(4, 1624, [1624], SEEK_SET) = 0
26676 16:00:02.626036 munmap(0xb7f63000, 1624) = 0
26676 16:00:02.626046 close(4)          = 0
26676 16:00:02.626071 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26676 16:00:02.626092 read(4, "65536\n", 31) = 6
26676 16:00:02.626104 close(4)          = 0
26676 16:00:02.626117 socket(PF_FILE, SOCK_STREAM, 0) = 4
26676 16:00:02.626129 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26676 16:00:02.626139 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26676 16:00:02.626160 close(4)          = 0
26676 16:00:02.626197 socket(PF_FILE, SOCK_STREAM, 0) = 4
26676 16:00:02.626211 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26676 16:00:02.626231 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26676 16:00:02.626249 close(4)          = 0
26676 16:00:02.626273 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26676 16:00:02.626288 _llseek(4, 0, [0], SEEK_CUR) = 0
26676 16:00:02.626298 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26676 16:00:02.626314 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f63000
26676 16:00:02.626325 _llseek(4, 886, [886], SEEK_SET) = 0
26676 16:00:02.626350 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26676 16:00:02.626367 munmap(0xb7f63000, 886) = 0
26676 16:00:02.626377 close(4)          = 0
26676 16:00:02.626386 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26676 16:00:02.626403 geteuid32()       = 0
26676 16:00:02.626413 getegid32()       = 0
26676 16:00:02.626424 setregid32(-1, 1000) = 0
26676 16:00:02.626434 setreuid32(-1, 1000) = 0
26676 16:00:02.626449 chdir("/home/msfadmin") = 0
26676 16:00:02.626461 setreuid32(-1, 0) = 0
26676 16:00:02.626470 setregid32(-1, 0) = 0
26676 16:00:02.626480 setgid32(1000)    = 0
26676 16:00:02.626490 setuid32(1000)    = 0
26676 16:00:02.626500 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26676 16:00:02.626514 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
26676 16:00:02.626525 mprotect(0xb7f63000, 4096, PROT_NONE) = 0
26676 16:00:02.626537 mprotect(0xb7f61000, 4096, PROT_NONE) = 0
26676 16:00:02.626548 getcwd("/home/msfadmin", 4096) = 15
26676 16:00:02.626561 umask(022)        = 077
26676 16:00:02.626571 getcwd("/home/msfadmin", 4096) = 15
26676 16:00:02.626584 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26676 16:00:02.626606 write(0, "230 Login successful.\r\n", 23) = 23
26676 16:00:02.626722 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26676 16:00:02.626755 alarm(300)        = 0
26676 16:00:02.626766 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5e000
26676 16:00:02.626777 mprotect(0xb7f60000, 4096, PROT_NONE) = 0
26676 16:00:02.626788 mprotect(0xb7f5e000, 4096, PROT_NONE) = 0
26676 16:00:02.626801 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26676 16:00:02.626814 read(0, "TYPE I\r\n", 8) = 8
26676 16:00:02.626831 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26676 16:00:02.626871 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26676 16:00:02.626885 alarm(300)        = 300
26676 16:00:02.626897 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26676 16:00:02.626908 read(0, "PASV\r\n", 6) = 6
26676 16:00:02.626920 write(5, "\n", 1) = 1
26676 16:00:02.626930 read(5,  <unfinished ...>
26674 16:00:02.626942 close(5)          = 0
26674 16:00:02.626955 getuid32()        = 0
26674 16:00:02.626970 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26674 16:00:02.626984 _llseek(5, 0, [0], SEEK_CUR) = 0
26674 16:00:02.626996 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26674 16:00:02.627014 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f63000
26674 16:00:02.627025 _llseek(5, 1624, [1624], SEEK_SET) = 0
26674 16:00:02.627042 munmap(0xb7f63000, 1624) = 0
26674 16:00:02.627054 close(5)          = 0
26674 16:00:02.627069 setgroups32(0, []) = 0
26674 16:00:02.627080 chdir("/usr/share/empty") = 0
26674 16:00:02.627092 chroot(".")       = 0
26674 16:00:02.627103 capset(NULL, NULL) = -1 EFAULT (Bad address)
26674 16:00:02.627116 prctl(0x8, 0, 0xbf8fbb98, 0x80549a6, 0xbf8fbb80) = 0
26674 16:00:02.627127 prctl(0x8, 0x1, 0xbf8fbb98, 0x8054a49, 0xbf8fbb80) = 0
26674 16:00:02.627137 setgid32(65534)   = 0
26674 16:00:02.627147 setuid32(65534)   = 0
26674 16:00:02.627156 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26674 16:00:02.627315 read(4, "\n", 1)  = 1
26674 16:00:02.627338 write(4, "\1", 1) = 1
26676 16:00:02.627349 <... read resumed> "\1", 1) = 1
26676 16:00:02.627356 write(5, "\f", 1) = 1
26676 16:00:02.627366 read(5,  <unfinished ...>
26674 16:00:02.627373 read(4, "\f", 1)  = 1
26674 16:00:02.627385 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26674 16:00:02.627398 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26674 16:00:02.627410 gettimeofday({1495656002, 627413}, NULL) = 0
26674 16:00:02.627426 bind(5, {sa_family=AF_INET, sin_port=htons(29909), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26674 16:00:02.627441 listen(5, 1)      = 0
26674 16:00:02.627453 write(4, "\325t\0\0", 4) = 4
26676 16:00:02.627464 <... read resumed> "\325t\0\0", 4) = 4
26676 16:00:02.627477 write(0, "227 Entering Passive Mode (127,0,0,1,116,213).\r\n", 48) = 48
26676 16:00:02.627573 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26676 16:00:02.627589 alarm(300)        = 300
26676 16:00:02.627601 recv(0, "STOR myfile20\r\n", 4096, MSG_PEEK) = 15
26676 16:00:02.627613 read(0, "STOR myfile20\r\n", 15) = 15
26676 16:00:02.627628 write(5, "\v", 1) = 1
26676 16:00:02.627638 read(5,  <unfinished ...>
26674 16:00:02.627646 read(4, "\v", 1)  = 1
26674 16:00:02.627661 write(4, "\1\0\0\0", 4) = 4
26676 16:00:02.627671 <... read resumed> "\1\0\0\0", 4) = 4
26676 16:00:02.627680 gettimeofday({1495656002, 627683}, NULL) = 0
26676 16:00:02.627691 getcwd("/home/msfadmin", 4096) = 15
26676 16:00:02.627703 open("myfile20", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26676 16:00:02.627717 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26676 16:00:02.627734 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26676 16:00:02.627744 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26676 16:00:02.627754 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8fbae4) = 0
26676 16:00:02.627799 ftruncate64(4, 0) = 0
26676 16:00:02.627829 _llseek(4, 0, [0], SEEK_SET) = 0
26676 16:00:02.627841 write(5, "\v", 1) = 1
26676 16:00:02.627851 read(5,  <unfinished ...>
26674 16:00:02.627858 read(4, "\v", 1)  = 1
26674 16:00:02.627869 write(4, "\1\0\0\0", 4) = 4
26676 16:00:02.627880 <... read resumed> "\1\0\0\0", 4) = 4
26676 16:00:02.627887 write(5, "\v", 1) = 1
26676 16:00:02.627896 read(5,  <unfinished ...>
26674 16:00:02.627903 read(4, "\v", 1)  = 1
26674 16:00:02.627913 write(4, "\1\0\0\0", 4) = 4
26676 16:00:02.627923 <... read resumed> "\1\0\0\0", 4) = 4
26676 16:00:02.627930 write(5, "\r", 1) = 1
26676 16:00:02.627940 read(5,  <unfinished ...>
26674 16:00:02.627946 read(4, "\r", 1)  = 1
26674 16:00:02.627958 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26674 16:00:02.627975 accept(5, {sa_family=AF_INET, sin_port=htons(35567), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26674 16:00:02.627997 write(4, "\1", 1) = 1
26676 16:00:02.628008 <... read resumed> "\1", 1) = 1
26676 16:00:02.628017 recvmsg(5,  <unfinished ...>
26674 16:00:02.628026 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26676 16:00:02.628043 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26676 16:00:02.628056 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26676 16:00:02.628068 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26676 16:00:02.628080 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26676 16:00:02.628091 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26676 16:00:02.628104 alarm(300)        = 300
26676 16:00:02.628117 write(0, "150 Ok to send data.\r\n", 22) = 22
26676 16:00:02.628181 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d98000
26676 16:00:02.628194 mprotect(0xb7daa000, 4096, PROT_NONE) = 0
26676 16:00:02.628206 mprotect(0xb7d98000, 4096, PROT_NONE) = 0
26676 16:00:02.628216 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26676 16:00:02.628229 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26676 16:00:02.628245 read(6, "", 65536) = 0
26676 16:00:02.628255 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26676 16:00:02.628299 alarm(300)        = 300
26676 16:00:02.628310 close(6)          = 0
26676 16:00:02.628329 alarm(0)          = 300
26676 16:00:02.628338 gettimeofday({1495656002, 628342}, NULL) = 0
26676 16:00:02.628355 getpid()          = 26676
