25097 15:32:26.363788 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d82000
25097 15:32:26.363799 mmap2(0xb7d99000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d99000
25097 15:32:26.363816 close(7)          = 0
25097 15:32:26.363913 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25097 15:32:26.363939 statfs64("/selinux", 84, 0xbfb86e1c) = -1 ENOENT (No such file or directory)
25097 15:32:26.363952 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
25097 15:32:26.363977 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
25097 15:32:26.363994 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9e000
25097 15:32:26.364005 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
25097 15:32:26.364090 read(7, "", 1024) = 0
25097 15:32:26.364101 close(7)          = 0
25097 15:32:26.364111 munmap(0xb7f9e000, 4096) = 0
25097 15:32:26.364127 munmap(0xb7dcd000, 29913) = 0
25097 15:32:26.364140 read(6, "", 4096) = 0
25097 15:32:26.364151 close(6)          = 0
25097 15:32:26.364161 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.364171 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.364191 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.364205 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25097 15:32:26.364221 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.364231 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25097 15:32:26.364271 read(6, "", 4096) = 0
25097 15:32:26.364281 close(6)          = 0
25097 15:32:26.364291 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.364301 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.364320 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.364333 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25097 15:32:26.364349 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.364360 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25097 15:32:26.364398 read(6, "", 4096) = 0
25097 15:32:26.364407 close(6)          = 0
25097 15:32:26.364417 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.364427 read(5, "", 4096) = 0
25097 15:32:26.364436 close(5)          = 0
25097 15:32:26.364445 munmap(0xb7fa5000, 4096) = 0
25097 15:32:26.364455 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25097 15:32:26.364482 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25097 15:32:26.364500 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25097 15:32:26.364521 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25097 15:32:26.364565 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.364584 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.364597 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25097 15:32:26.364613 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.364623 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25097 15:32:26.364672 read(6, "", 4096) = 0
25097 15:32:26.364682 close(6)          = 0
25097 15:32:26.364692 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.364703 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.364721 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.364734 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25097 15:32:26.364750 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.364760 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25097 15:32:26.364798 read(6, "", 4096) = 0
25097 15:32:26.364808 close(6)          = 0
25097 15:32:26.364817 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.364827 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.364845 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.364858 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25097 15:32:26.364874 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.364884 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25097 15:32:26.364999 read(6, "", 4096) = 0
25097 15:32:26.365008 close(6)          = 0
25097 15:32:26.365018 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.365028 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25097 15:32:26.365046 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25097 15:32:26.365059 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25097 15:32:26.365075 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9f000
25097 15:32:26.365085 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25097 15:32:26.365122 read(6, "", 4096) = 0
25097 15:32:26.365132 close(6)          = 0
25097 15:32:26.365144 munmap(0xb7f9f000, 4096) = 0
25097 15:32:26.365154 read(5, "", 4096) = 0
25097 15:32:26.365163 close(5)          = 0
25097 15:32:26.365172 munmap(0xb7fa5000, 4096) = 0
25097 15:32:26.365184 time(NULL)        = 1495654346
25097 15:32:26.365196 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25097 15:32:26.365214 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25097 15:32:26.365226 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25097 15:32:26.365242 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
25097 15:32:26.365252 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25097 15:32:26.365272 read(5, "", 4096) = 0
25097 15:32:26.365281 close(5)          = 0
25097 15:32:26.365290 munmap(0xb7fa5000, 4096) = 0
25097 15:32:26.365306 getuid32()        = 0
25097 15:32:26.365322 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.365337 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.365347 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25097 15:32:26.365363 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.365374 _llseek(5, 1624, [1624], SEEK_SET) = 0
25097 15:32:26.365393 munmap(0xb7fa5000, 1624) = 0
25097 15:32:26.365404 close(5)          = 0
25097 15:32:26.365427 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.365574 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.365594 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25097 15:32:26.365610 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.365621 _llseek(5, 1233, [1233], SEEK_SET) = 0
25097 15:32:26.365640 munmap(0xb7fa5000, 1233) = 0
25097 15:32:26.365650 close(5)          = 0
25097 15:32:26.365669 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.365682 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.365693 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25097 15:32:26.365709 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.365719 _llseek(5, 1624, [1624], SEEK_SET) = 0
25097 15:32:26.365735 munmap(0xb7fa5000, 1624) = 0
25097 15:32:26.365744 close(5)          = 0
25097 15:32:26.365756 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.365769 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.365779 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25097 15:32:26.365795 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.365805 _llseek(5, 1233, [1233], SEEK_SET) = 0
25097 15:32:26.365821 munmap(0xb7fa5000, 1233) = 0
25097 15:32:26.365831 close(5)          = 0
25097 15:32:26.366052 getuid32()        = 0
25097 15:32:26.366052 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.366052 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.366052 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25097 15:32:26.366053 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.366053 _llseek(5, 1624, [1624], SEEK_SET) = 0
25097 15:32:26.366053 munmap(0xb7fa5000, 1624) = 0
25097 15:32:26.366053 close(5)          = 0
25097 15:32:26.366053 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.366054 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.366054 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25097 15:32:26.366054 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.366055 _llseek(5, 1233, [1233], SEEK_SET) = 0
25097 15:32:26.366073 munmap(0xb7fa5000, 1233) = 0
25097 15:32:26.366082 close(5)          = 0
25097 15:32:26.366094 time(NULL)        = 1495654346
25097 15:32:26.366109 munmap(0xb7fa2000, 12164) = 0
25097 15:32:26.366122 munmap(0xb7fa0000, 7136) = 0
25097 15:32:26.366137 munmap(0xb7dd5000, 95428) = 0
25097 15:32:26.366148 munmap(0xb7d9b000, 201052) = 0
25097 15:32:26.366159 munmap(0xb7d82000, 101180) = 0
25097 15:32:26.366175 gettimeofday({1495654346, 366179}, NULL) = 0
25097 15:32:26.366190 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb88cf4) = -1 ENOENT (No such file or directory)
25097 15:32:26.366206 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25097 15:32:26.366256 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb88e44) = 0
25097 15:32:26.366285 write(3, "Wed May 24 15:32:26 2017 [pid 25097] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25097 15:32:26.366302 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb88e4c) = 0
25097 15:32:26.366314 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25097 15:32:26.366329 write(4, "\1", 1 <unfinished ...>
25098 15:32:26.366338 <... read resumed> "\1", 1) = 1
25097 15:32:26.366343 <... write resumed> ) = 1
25098 15:32:26.366350 exit_group(0)     = ?
25097 15:32:26.366378 --- SIGCHLD (Child exited) @ 0 (0) ---
25097 15:32:26.366386 sigreturn()       = ? (mask now [])
25097 15:32:26.366404 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25098
25097 15:32:26.366417 close(4)          = 0
25097 15:32:26.366429 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25097 15:32:26.366442 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25097 15:32:26.366456 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25097 15:32:26.366469 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e0b6f8) = 25099
25099 15:32:26.366519 prctl(0x1, 0x9, 0, 0, 0) = 0
25099 15:32:26.366532 close(4)          = 0
25099 15:32:26.366560 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25099 15:32:26.366577 _llseek(4, 0, [0], SEEK_CUR) = 0
25099 15:32:26.366591 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25099 15:32:26.366609 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa5000
25099 15:32:26.366621 _llseek(4, 1624, [1624], SEEK_SET) = 0
25099 15:32:26.366643 munmap(0xb7fa5000, 1624) = 0
25099 15:32:26.366655 close(4)          = 0
25099 15:32:26.366668 getuid32()        = 0
25099 15:32:26.366678 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25099 15:32:26.366691 _llseek(4, 0, [0], SEEK_CUR) = 0
25099 15:32:26.366701 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25099 15:32:26.366717 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa5000
25099 15:32:26.366728 _llseek(4, 1624, [1624], SEEK_SET) = 0
25099 15:32:26.367465 munmap(0xb7fa5000, 1624) = 0
25099 15:32:26.367476 close(4)          = 0
25099 15:32:26.367502 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25099 15:32:26.367523 read(4, "65536\n", 31) = 6
25099 15:32:26.367536 close(4)          = 0
25099 15:32:26.367549 socket(PF_FILE, SOCK_STREAM, 0) = 4
25099 15:32:26.367561 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25099 15:32:26.367571 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25099 15:32:26.367592 close(4)          = 0
25099 15:32:26.367603 socket(PF_FILE, SOCK_STREAM, 0) = 4
25099 15:32:26.367613 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25099 15:32:26.367624 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25099 15:32:26.367641 close(4)          = 0
25099 15:32:26.367665 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25099 15:32:26.367679 _llseek(4, 0, [0], SEEK_CUR) = 0
25099 15:32:26.367690 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25099 15:32:26.367706 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa5000
25099 15:32:26.367717 _llseek(4, 886, [886], SEEK_SET) = 0
25099 15:32:26.367742 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25099 15:32:26.367759 munmap(0xb7fa5000, 886) = 0
25099 15:32:26.367768 close(4)          = 0
25099 15:32:26.367778 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25099 15:32:26.367795 geteuid32()       = 0
25099 15:32:26.367806 getegid32()       = 0
25099 15:32:26.367816 setregid32(-1, 1000) = 0
25099 15:32:26.367827 setreuid32(-1, 1000) = 0
25099 15:32:26.367841 chdir("/home/msfadmin") = 0
25099 15:32:26.367853 setreuid32(-1, 0) = 0
25099 15:32:26.367862 setregid32(-1, 0) = 0
25099 15:32:26.367873 setgid32(1000)    = 0
25099 15:32:26.367916 setuid32(1000)    = 0
25099 15:32:26.367940 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25099 15:32:26.367954 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa3000
25099 15:32:26.367965 mprotect(0xb7fa5000, 4096, PROT_NONE) = 0
25099 15:32:26.367976 mprotect(0xb7fa3000, 4096, PROT_NONE) = 0
25099 15:32:26.367987 getcwd("/home/msfadmin", 4096) = 15
25099 15:32:26.368000 umask(022)        = 077
25099 15:32:26.368010 getcwd("/home/msfadmin", 4096) = 15
25099 15:32:26.368023 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25099 15:32:26.368046 write(0, "230 Login successful.\r\n", 23) = 23
25099 15:32:26.368104 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25099 15:32:26.368120 alarm(300)        = 0
25099 15:32:26.368131 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa0000
25099 15:32:26.368142 mprotect(0xb7fa2000, 4096, PROT_NONE) = 0
25099 15:32:26.368153 mprotect(0xb7fa0000, 4096, PROT_NONE) = 0
25099 15:32:26.368165 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
25099 15:32:26.368178 read(0, "QUIT\r\n", 6) = 6
25099 15:32:26.368192 shutdown(0, 0 /* receive */) = 0
25099 15:32:26.368205 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
25099 15:32:26.368215 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25099 15:32:26.368224 write(0, "221 Goodbye.\r\n", 14) = 14
25099 15:32:26.368270 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
25099 15:32:26.368281 fcntl64(0, F_SETFL, O_RDWR) = 0
25099 15:32:26.368292 shutdown(0, 2 /* send and receive */) = 0
25099 15:32:26.368309 exit_group(0)     = ?
25097 15:32:26.368335 --- SIGCHLD (Child exited) @ 0 (0) ---
25097 15:32:26.368349 alarm(1)          = 0
25097 15:32:26.368360 sigreturn()       = ? (mask now [])
25097 15:32:26.368380 close(5)          = 0
25097 15:32:26.368394 getuid32()        = 0
25097 15:32:26.368409 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25097 15:32:26.368424 _llseek(5, 0, [0], SEEK_CUR) = 0
25097 15:32:26.368436 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25097 15:32:26.368454 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa5000
25097 15:32:26.368465 _llseek(5, 1624, [1624], SEEK_SET) = 0
25097 15:32:26.368482 munmap(0xb7fa5000, 1624) = 0
25097 15:32:26.368494 close(5)          = 0
25097 15:32:26.368506 setgroups32(0, []) = 0
25097 15:32:26.368517 chdir("/usr/share/empty") = 0
25097 15:32:26.368529 chroot(".")       = 0
25097 15:32:26.368539 capset(NULL, NULL) = -1 EFAULT (Bad address)
25097 15:32:26.368551 prctl(0x8, 0, 0xbfb88e28, 0x80549a6, 0xbfb88e10) = 0
25097 15:32:26.368561 prctl(0x8, 0x1, 0xbfb88e28, 0x8054a49, 0xbfb88e10) = 0
25097 15:32:26.368571 setgid32(65534)   = 0
25097 15:32:26.368581 setuid32(65534)   = 0
25097 15:32:26.368590 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25097 15:32:26.368603 read(4, "", 1)    = 0
25097 15:32:26.368614 alarm(0)          = 1
25097 15:32:26.368623 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25099
25097 15:32:26.368636 exit_group(0)     = ?
4380  15:32:26.368669 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:32:26.368677 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:32:26.368683 write(4, "\21", 1) = 1
4380  15:32:26.368697 sigreturn()       = ? (mask now [])
4380  15:32:26.368730 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:32:26.368747 ioctl(3, FIONREAD, [1]) = 0
4380  15:32:26.368760 read(3, "\21", 1) = 1
4380  15:32:26.368773 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 25097
4380  15:32:26.368787 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:32:26.368800 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:32:26.368811 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:32:26.896617 accept(5, {sa_family=AF_INET, sin_port=htons(40678), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:32:26.896683 time(NULL)        = 1495654346
4380  15:32:26.896697 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 25100
25100 15:32:26.896807 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
25100 15:32:26.896823 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
25100 15:32:26.896835 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
25100 15:32:26.896846 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
25100 15:32:26.896861 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
25100 15:32:26.896874 close(3)          = 0
25100 15:32:26.896884 close(4)          = 0
25100 15:32:26.896894 open("/dev/null", O_RDONLY) = 3
25100 15:32:26.896910 dup2(3, 0)        = 0
25100 15:32:26.896924 dup2(3, 1)        = 1
25100 15:32:26.896932 dup2(3, 2)        = 2
25100 15:32:26.896941 close(3)          = 0
25100 15:32:26.896953 setgid32(0)       = 0
25100 15:32:26.896966 setgroups32(0, []) = 0
25100 15:32:26.896977 setuid32(0)       = 0
25100 15:32:26.896988 getpriority(PRIO_PROCESS, 0) = 20
25100 15:32:26.896998 setpriority(PRIO_PROCESS, 0, 10) = 0
25100 15:32:26.897007 getpriority(PRIO_PROCESS, 0) = 10
25100 15:32:26.897043 getpeername(13, {sa_family=AF_INET, sin_port=htons(40678), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25100 15:32:26.897066 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
25100 15:32:26.897094 open("/etc/hosts.allow", O_RDONLY) = 3
25100 15:32:26.897113 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
25100 15:32:26.897132 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
25100 15:32:26.897145 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
25100 15:32:26.897217 close(3)          = 0
25100 15:32:26.897228 munmap(0xb7fa1000, 4096) = 0
25100 15:32:26.897256 fcntl64(13, F_SETFD, 0) = 0
25100 15:32:26.897269 close(7)          = 0
25100 15:32:26.897280 dup2(13, 0)       = 0
25100 15:32:26.897288 dup2(13, 1)       = 1
25100 15:32:26.897297 dup2(13, 2)       = 2
25100 15:32:26.897325 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
25100 15:32:26.897337 close(13)         = 0
25100 15:32:26.897357 setsid()          = 25100
25100 15:32:26.897367 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
25100 15:32:26.897446 brk(0)            = 0x8064000
25100 15:32:26.897466 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25100 15:32:26.897483 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
25100 15:32:26.897497 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
25100 15:32:26.897514 open("/etc/ld.so.cache", O_RDONLY) = 3
25100 15:32:26.897526 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
25100 15:32:26.897543 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7eff000
25100 15:32:26.897553 close(3)          = 0
25100 15:32:26.897563 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25100 15:32:26.897579 open("/lib/libpam.so.0", O_RDONLY) = 3
25100 15:32:26.897592 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
25100 15:32:26.897684 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
25100 15:32:26.897701 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7ef5000
25100 15:32:26.897713 mmap2(0xb7efe000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7efe000
25100 15:32:26.897728 close(3)          = 0
25100 15:32:26.897740 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25100 15:32:26.897754 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 3
25100 15:32:26.897769 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
25100 15:32:26.897855 fstat64(3, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
25100 15:32:26.897872 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7ef1000
25100 15:32:26.897883 mmap2(0xb7ef3000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7ef3000
25100 15:32:26.897899 close(3)          = 0
25100 15:32:26.897911 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
25100 15:32:26.897923 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 3
25100 15:32:26.897937 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
