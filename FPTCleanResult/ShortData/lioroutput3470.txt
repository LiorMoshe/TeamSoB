26423 15:55:44.891568 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.891582 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26423 15:55:44.891636 read(6, "", 4096) = 0
26423 15:55:44.891657 close(6)          = 0
26423 15:55:44.891666 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.891677 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26423 15:55:44.891696 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26423 15:55:44.891708 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26423 15:55:44.891724 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.891734 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26423 15:55:44.891773 read(6, "", 4096) = 0
26423 15:55:44.891782 close(6)          = 0
26423 15:55:44.891791 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.891801 read(5, "", 4096) = 0
26423 15:55:44.891810 close(5)          = 0
26423 15:55:44.891818 munmap(0xb7f10000, 4096) = 0
26423 15:55:44.891837 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26423 15:55:44.891850 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26423 15:55:44.891866 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f10000
26423 15:55:44.891876 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26423 15:55:44.891922 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26423 15:55:44.891941 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26423 15:55:44.891953 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26423 15:55:44.891969 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.891979 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26423 15:55:44.892027 read(6, "", 4096) = 0
26423 15:55:44.892036 close(6)          = 0
26423 15:55:44.892046 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.892056 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26423 15:55:44.892075 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26423 15:55:44.892087 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26423 15:55:44.892103 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.892113 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26423 15:55:44.892156 read(6, "", 4096) = 0
26423 15:55:44.892166 close(6)          = 0
26423 15:55:44.892175 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.892186 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26423 15:55:44.892204 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26423 15:55:44.892217 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26423 15:55:44.892233 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.892243 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26423 15:55:44.892363 read(6, "", 4096) = 0
26423 15:55:44.892373 close(6)          = 0
26423 15:55:44.892382 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.892392 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26423 15:55:44.892411 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26423 15:55:44.892423 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26423 15:55:44.892439 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
26423 15:55:44.892449 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26423 15:55:44.892488 read(6, "", 4096) = 0
26423 15:55:44.892497 close(6)          = 0
26423 15:55:44.892506 munmap(0xb7f0a000, 4096) = 0
26423 15:55:44.892517 read(5, "", 4096) = 0
26423 15:55:44.892526 close(5)          = 0
26423 15:55:44.892535 munmap(0xb7f10000, 4096) = 0
26423 15:55:44.892547 time(NULL)        = 1495655744
26423 15:55:44.892559 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26423 15:55:44.892581 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26423 15:55:44.892594 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26423 15:55:44.892610 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f10000
26423 15:55:44.892621 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26423 15:55:44.892646 read(5, "", 4096) = 0
26423 15:55:44.892655 close(5)          = 0
26423 15:55:44.892664 munmap(0xb7f10000, 4096) = 0
26423 15:55:44.892680 getuid32()        = 0
26423 15:55:44.892697 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.892712 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.892723 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26423 15:55:44.892739 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.892750 _llseek(5, 1624, [1624], SEEK_SET) = 0
26423 15:55:44.892769 munmap(0xb7f10000, 1624) = 0
26423 15:55:44.892779 close(5)          = 0
26423 15:55:44.892803 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.892821 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.892831 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26423 15:55:44.892847 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.892858 _llseek(5, 1233, [1233], SEEK_SET) = 0
26423 15:55:44.892878 munmap(0xb7f10000, 1233) = 0
26423 15:55:44.892887 close(5)          = 0
26423 15:55:44.892906 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.892919 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.892929 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26423 15:55:44.892945 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.892955 _llseek(5, 1624, [1624], SEEK_SET) = 0
26423 15:55:44.892971 munmap(0xb7f10000, 1624) = 0
26423 15:55:44.892981 close(5)          = 0
26423 15:55:44.892993 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.893006 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.893016 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26423 15:55:44.893032 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.893042 _llseek(5, 1233, [1233], SEEK_SET) = 0
26423 15:55:44.893058 munmap(0xb7f10000, 1233) = 0
26423 15:55:44.893066 close(5)          = 0
26423 15:55:44.893066 getuid32()        = 0
26423 15:55:44.893066 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.893074 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.893085 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26423 15:55:44.893102 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.893113 _llseek(5, 1624, [1624], SEEK_SET) = 0
26423 15:55:44.893130 munmap(0xb7f10000, 1624) = 0
26423 15:55:44.893140 close(5)          = 0
26423 15:55:44.893153 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.893166 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.893176 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26423 15:55:44.893203 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.893216 _llseek(5, 1233, [1233], SEEK_SET) = 0
26423 15:55:44.893234 munmap(0xb7f10000, 1233) = 0
26423 15:55:44.893246 close(5)          = 0
26423 15:55:44.893262 time(NULL)        = 1495655744
26423 15:55:44.893278 munmap(0xb7f0d000, 12164) = 0
26423 15:55:44.893292 munmap(0xb7f0b000, 7136) = 0
26423 15:55:44.893306 munmap(0xb7d40000, 95428) = 0
26423 15:55:44.893317 munmap(0xb7d06000, 201052) = 0
26423 15:55:44.893328 munmap(0xb7ced000, 101180) = 0
26423 15:55:44.893344 gettimeofday({1495655744, 893348}, NULL) = 0
26423 15:55:44.893356 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9522c4) = -1 ENOENT (No such file or directory)
26423 15:55:44.893371 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26423 15:55:44.893396 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf952414) = 0
26423 15:55:44.893412 write(3, "Wed May 24 15:55:44 2017 [pid 26423] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26423 15:55:44.893430 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf95241c) = 0
26423 15:55:44.893442 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26423 15:55:44.893457 write(4, "\1", 1 <unfinished ...>
26424 15:55:44.893471 <... read resumed> "\1", 1) = 1
26423 15:55:44.893476 <... write resumed> ) = 1
26424 15:55:44.893484 exit_group(0)     = ?
26423 15:55:44.893515 --- SIGCHLD (Child exited) @ 0 (0) ---
26423 15:55:44.893526 sigreturn()       = ? (mask now [])
26423 15:55:44.893545 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26424
26423 15:55:44.893558 close(4)          = 0
26423 15:55:44.893570 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26423 15:55:44.893584 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26423 15:55:44.893598 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26423 15:55:44.893611 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d766f8) = 26425
26425 15:55:44.893662 prctl(0x1, 0x9, 0, 0, 0) = 0
26425 15:55:44.893676 close(4)          = 0
26425 15:55:44.893703 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26425 15:55:44.893720 _llseek(4, 0, [0], SEEK_CUR) = 0
26425 15:55:44.893735 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26425 15:55:44.893754 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f10000
26425 15:55:44.893766 _llseek(4, 1624, [1624], SEEK_SET) = 0
26425 15:55:44.893788 munmap(0xb7f10000, 1624) = 0
26425 15:55:44.893799 close(4)          = 0
26425 15:55:44.893813 getuid32()        = 0
26425 15:55:44.893823 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26425 15:55:44.893835 _llseek(4, 0, [0], SEEK_CUR) = 0
26425 15:55:44.893846 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26425 15:55:44.893862 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f10000
26425 15:55:44.893873 _llseek(4, 1624, [1624], SEEK_SET) = 0
26425 15:55:44.893888 munmap(0xb7f10000, 1624) = 0
26425 15:55:44.893898 close(4)          = 0
26425 15:55:44.893923 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26425 15:55:44.893944 read(4, "65536\n", 31) = 6
26425 15:55:44.893957 close(4)          = 0
26425 15:55:44.893971 socket(PF_FILE, SOCK_STREAM, 0) = 4
26425 15:55:44.893983 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26425 15:55:44.893994 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26425 15:55:44.894015 close(4)          = 0
26425 15:55:44.894026 socket(PF_FILE, SOCK_STREAM, 0) = 4
26425 15:55:44.894036 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26425 15:55:44.894047 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26425 15:55:44.894065 close(4)          = 0
26425 15:55:44.894090 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26425 15:55:44.894105 _llseek(4, 0, [0], SEEK_CUR) = 0
26425 15:55:44.894115 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26425 15:55:44.894132 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f10000
26425 15:55:44.894143 _llseek(4, 886, [886], SEEK_SET) = 0
26425 15:55:44.894168 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26425 15:55:44.894191 munmap(0xb7f10000, 886) = 0
26425 15:55:44.894202 close(4)          = 0
26425 15:55:44.894212 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26425 15:55:44.894229 geteuid32()       = 0
26425 15:55:44.894240 getegid32()       = 0
26425 15:55:44.894251 setregid32(-1, 1000) = 0
26425 15:55:44.894261 setreuid32(-1, 1000) = 0
26425 15:55:44.894272 chdir("/home/msfadmin") = 0
26425 15:55:44.894284 setreuid32(-1, 0) = 0
26425 15:55:44.894293 setregid32(-1, 0) = 0
26425 15:55:44.894303 setgid32(1000)    = 0
26425 15:55:44.894313 setuid32(1000)    = 0
26425 15:55:44.894323 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26425 15:55:44.894337 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0e000
26425 15:55:44.894348 mprotect(0xb7f10000, 4096, PROT_NONE) = 0
26425 15:55:44.894359 mprotect(0xb7f0e000, 4096, PROT_NONE) = 0
26425 15:55:44.894370 getcwd("/home/msfadmin", 4096) = 15
26425 15:55:44.894384 umask(022)        = 077
26425 15:55:44.894394 getcwd("/home/msfadmin", 4096) = 15
26425 15:55:44.894411 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26425 15:55:44.894434 write(0, "230 Login successful.\r\n", 23) = 23
26425 15:55:44.894526 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.894543 alarm(300)        = 0
26425 15:55:44.894554 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0b000
26425 15:55:44.894565 mprotect(0xb7f0d000, 4096, PROT_NONE) = 0
26425 15:55:44.894576 mprotect(0xb7f0b000, 4096, PROT_NONE) = 0
26425 15:55:44.894589 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26425 15:55:44.894602 read(0, "TYPE I\r\n", 8) = 8
26425 15:55:44.894619 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26425 15:55:44.894660 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.894674 alarm(300)        = 300
26425 15:55:44.894686 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26425 15:55:44.894697 read(0, "PASV\r\n", 6) = 6
26425 15:55:44.894709 write(5, "\n", 1) = 1
26425 15:55:44.894720 read(5,  <unfinished ...>
26423 15:55:44.894732 close(5)          = 0
26423 15:55:44.894745 getuid32()        = 0
26423 15:55:44.894760 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26423 15:55:44.894774 _llseek(5, 0, [0], SEEK_CUR) = 0
26423 15:55:44.894787 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26423 15:55:44.894804 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f10000
26423 15:55:44.894816 _llseek(5, 1624, [1624], SEEK_SET) = 0
26423 15:55:44.894833 munmap(0xb7f10000, 1624) = 0
26423 15:55:44.894845 close(5)          = 0
26423 15:55:44.894860 setgroups32(0, []) = 0
26423 15:55:44.894872 chdir("/usr/share/empty") = 0
26423 15:55:44.894884 chroot(".")       = 0
26423 15:55:44.894894 capset(NULL, NULL) = -1 EFAULT (Bad address)
26423 15:55:44.894909 prctl(0x8, 0, 0xbf9523f8, 0x80549a6, 0xbf9523e0) = 0
26423 15:55:44.894920 prctl(0x8, 0x1, 0xbf9523f8, 0x8054a49, 0xbf9523e0) = 0
26423 15:55:44.894930 setgid32(65534)   = 0
26423 15:55:44.894940 setuid32(65534)   = 0
26423 15:55:44.894950 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26423 15:55:44.894963 read(4, "\n", 1)  = 1
26423 15:55:44.894976 write(4, "\1", 1) = 1
26425 15:55:44.894987 <... read resumed> "\1", 1) = 1
26425 15:55:44.894995 write(5, "\f", 1) = 1
26425 15:55:44.895005 read(5,  <unfinished ...>
26423 15:55:44.895012 read(4, "\f", 1)  = 1
26423 15:55:44.895025 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26423 15:55:44.895038 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26423 15:55:44.895050 gettimeofday({1495655744, 895053}, NULL) = 0
26423 15:55:44.895066 bind(5, {sa_family=AF_INET, sin_port=htons(51712), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26423 15:55:44.895082 listen(5, 1)      = 0
26423 15:55:44.895095 write(4, "\0\312\0\0", 4) = 4
26425 15:55:44.895106 <... read resumed> "\0\312\0\0", 4) = 4
26425 15:55:44.895120 write(0, "227 Entering Passive Mode (127,0,0,1,202,0).\r\n", 46) = 46
26425 15:55:44.895238 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.895256 alarm(300)        = 300
26425 15:55:44.895268 recv(0, "STOR myfile8\r\n", 4096, MSG_PEEK) = 14
26425 15:55:44.895280 read(0, "STOR myfile8\r\n", 14) = 14
26425 15:55:44.895295 write(5, "\v", 1) = 1
26425 15:55:44.895306 read(5,  <unfinished ...>
26423 15:55:44.895313 read(4, "\v", 1)  = 1
26423 15:55:44.895325 write(4, "\1\0\0\0", 4) = 4
26425 15:55:44.895335 <... read resumed> "\1\0\0\0", 4) = 4
26425 15:55:44.895344 gettimeofday({1495655744, 895348}, NULL) = 0
26425 15:55:44.895355 getcwd("/home/msfadmin", 4096) = 15
26425 15:55:44.895367 open("myfile8", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26425 15:55:44.895380 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26425 15:55:44.895398 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26425 15:55:44.895408 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26425 15:55:44.895418 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf952344) = 0
26425 15:55:44.895437 ftruncate64(4, 0) = 0
26425 15:55:44.895458 _llseek(4, 0, [0], SEEK_SET) = 0
26425 15:55:44.895469 write(5, "\v", 1) = 1
26425 15:55:44.895479 read(5,  <unfinished ...>
26423 15:55:44.895486 read(4, "\v", 1)  = 1
26423 15:55:44.895498 write(4, "\1\0\0\0", 4) = 4
26425 15:55:44.895508 <... read resumed> "\1\0\0\0", 4) = 4
26425 15:55:44.895516 write(5, "\v", 1) = 1
26425 15:55:44.895526 read(5,  <unfinished ...>
26423 15:55:44.895532 read(4, "\v", 1)  = 1
26423 15:55:44.895543 write(4, "\1\0\0\0", 4) = 4
26425 15:55:44.895553 <... read resumed> "\1\0\0\0", 4) = 4
26425 15:55:44.895561 write(5, "\r", 1) = 1
26425 15:55:44.895571 read(5,  <unfinished ...>
26423 15:55:44.895577 read(4, "\r", 1)  = 1
26423 15:55:44.895590 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26423 15:55:44.895607 accept(5, {sa_family=AF_INET, sin_port=htons(54987), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26423 15:55:44.895630 write(4, "\1", 1) = 1
26425 15:55:44.895641 <... read resumed> "\1", 1) = 1
26425 15:55:44.895650 recvmsg(5,  <unfinished ...>
26423 15:55:44.895659 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26425 15:55:44.895677 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26425 15:55:44.895690 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26425 15:55:44.895702 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26425 15:55:44.895714 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26425 15:55:44.895725 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.895739 alarm(300)        = 300
26425 15:55:44.895751 write(0, "150 Ok to send data.\r\n", 22) = 22
26425 15:55:44.895815 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d45000
26425 15:55:44.895829 mprotect(0xb7d57000, 4096, PROT_NONE) = 0
26425 15:55:44.895840 mprotect(0xb7d45000, 4096, PROT_NONE) = 0
26425 15:55:44.895850 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26425 15:55:44.895864 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26425 15:55:44.895880 read(6, "", 65536) = 0
26425 15:55:44.895890 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.895904 alarm(300)        = 300
26425 15:55:44.895913 close(6)          = 0
26425 15:55:44.895922 alarm(0)          = 300
26425 15:55:44.895932 gettimeofday({1495655744, 895935}, NULL) = 0
26425 15:55:44.895949 getpid()          = 26425
26425 15:55:44.895961 gettimeofday({1495655744, 895965}, NULL) = 0
26425 15:55:44.895979 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9522e4) = 0
26425 15:55:44.895994 write(3, "Wed May 24 15:55:44 2017 [pid 26425] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile8\", 17 bytes, 26.91Kbyte/sec\n", 130) = 130
26425 15:55:44.896014 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9522ec) = 0
26425 15:55:44.896029 write(0, "226 Transfer complete.\r\n", 24) = 24
26425 15:55:44.896069 write(5, "\n", 1) = 1
26425 15:55:44.896081 read(5,  <unfinished ...>
26423 15:55:44.896089 close(6)          = 0
26423 15:55:44.896107 read(4, "\n", 1)  = 1
26423 15:55:44.896123 close(5)          = 0
26423 15:55:44.896136 write(4, "\1", 1) = 1
26425 15:55:44.896147 <... read resumed> "\1", 1) = 1
26425 15:55:44.896155 close(4)          = 0
26425 15:55:44.896166 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26425 15:55:44.896179 alarm(300)        = 0
26425 15:55:44.896190 recv(0,  <unfinished ...>
26423 15:55:44.896198 read(4,  <unfinished ...>
26425 15:55:45.433808 <... recv resumed> "QUIT\r\n", 4096, MSG_PEEK) = 6
26425 15:55:45.434029 read(0, "QUIT\r\n", 6) = 6
26425 15:55:45.434215 shutdown(0, 0 /* receive */) = 0
26425 15:55:45.434301 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
26425 15:55:45.434344 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26425 15:55:45.434373 write(0, "221 Goodbye.\r\n", 14) = 14
26425 15:55:45.434458 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
26425 15:55:45.434470 fcntl64(0, F_SETFL, O_RDWR) = 0
26425 15:55:45.434481 shutdown(0, 2 /* send and receive */) = 0
26425 15:55:45.434501 exit_group(0)     = ?
26423 15:55:45.434552 <... read resumed> 0xbf9523f7, 1) = ? ERESTARTSYS (To be restarted)
26423 15:55:45.434560 --- SIGCHLD (Child exited) @ 0 (0) ---
26423 15:55:45.434574 alarm(1)          = 0
26423 15:55:45.434586 sigreturn()       = ? (mask now [])
26423 15:55:45.434602 alarm(0)          = 1
26423 15:55:45.434612 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26425
26423 15:55:45.434627 exit_group(0)     = ?
4380  15:55:45.434666 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:55:45.434673 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:55:45.434681 write(4, "\21", 1) = 1
4380  15:55:45.434696 sigreturn()       = ? (mask now [])
4380  15:55:45.434728 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:55:45.434746 ioctl(3, FIONREAD, [1]) = 0
