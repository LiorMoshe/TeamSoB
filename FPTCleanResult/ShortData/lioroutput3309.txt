26040 15:49:12.059150 munmap(0xb7f0d000, 4096) = 0
26040 15:49:12.059165 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26040 15:49:12.059182 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26040 15:49:12.059205 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0d000
26040 15:49:12.059219 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26040 15:49:12.059281 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26040 15:49:12.059451 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26040 15:49:12.059482 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26040 15:49:12.059503 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
26040 15:49:12.059518 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26040 15:49:12.059585 read(6, "", 4096) = 0
26040 15:49:12.059599 close(6)          = 0
26040 15:49:12.059613 munmap(0xb7f07000, 4096) = 0
26040 15:49:12.059628 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26040 15:49:12.059653 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26040 15:49:12.059671 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26040 15:49:12.059693 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
26040 15:49:12.059707 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26040 15:49:12.059762 read(6, "", 4096) = 0
26040 15:49:12.059776 close(6)          = 0
26040 15:49:12.059789 munmap(0xb7f07000, 4096) = 0
26040 15:49:12.059803 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26040 15:49:12.059829 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26040 15:49:12.059847 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26040 15:49:12.059868 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
26040 15:49:12.059883 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26040 15:49:12.060038 read(6, "", 4096) = 0
26040 15:49:12.060052 close(6)          = 0
26040 15:49:12.060065 munmap(0xb7f07000, 4096) = 0
26040 15:49:12.060082 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26040 15:49:12.060113 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26040 15:49:12.060132 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26040 15:49:12.060154 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
26040 15:49:12.060169 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26040 15:49:12.060222 read(6, "", 4096) = 0
26040 15:49:12.060235 close(6)          = 0
26040 15:49:12.060253 munmap(0xb7f07000, 4096) = 0
26040 15:49:12.060268 read(5, "", 4096) = 0
26040 15:49:12.060281 close(5)          = 0
26040 15:49:12.060293 munmap(0xb7f0d000, 4096) = 0
26040 15:49:12.060310 time(NULL)        = 1495655352
26040 15:49:12.060338 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26040 15:49:12.060413 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26040 15:49:12.060454 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26040 15:49:12.060477 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0d000
26040 15:49:12.060492 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26040 15:49:12.060533 read(5, "", 4096) = 0
26040 15:49:12.060548 close(5)          = 0
26040 15:49:12.060561 munmap(0xb7f0d000, 4096) = 0
26040 15:49:12.060582 getuid32()        = 0
26040 15:49:12.060604 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.060626 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.060643 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26040 15:49:12.060665 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.060682 _llseek(5, 1624, [1624], SEEK_SET) = 0
26040 15:49:12.060709 munmap(0xb7f0d000, 1624) = 0
26040 15:49:12.060725 close(5)          = 0
26040 15:49:12.060755 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.060778 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.060793 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26040 15:49:12.060855 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.060870 _llseek(5, 1233, [1233], SEEK_SET) = 0
26040 15:49:12.060896 munmap(0xb7f0d000, 1233) = 0
26040 15:49:12.060909 close(5)          = 0
26040 15:49:12.060934 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.060951 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.060964 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26040 15:49:12.060985 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.060999 _llseek(5, 1624, [1624], SEEK_SET) = 0
26040 15:49:12.061020 munmap(0xb7f0d000, 1624) = 0
26040 15:49:12.061034 close(5)          = 0
26040 15:49:12.061052 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.061069 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.061083 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26040 15:49:12.061104 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.061118 _llseek(5, 1233, [1233], SEEK_SET) = 0
26040 15:49:12.061142 munmap(0xb7f0d000, 1233) = 0
26040 15:49:12.061165 close(5)          = 0
26040 15:49:12.061491 getuid32()        = 0
26040 15:49:12.061506 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.061520 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.061530 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26040 15:49:12.061547 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.061558 _llseek(5, 1624, [1624], SEEK_SET) = 0
26040 15:49:12.061575 munmap(0xb7f0d000, 1624) = 0
26040 15:49:12.061585 close(5)          = 0
26040 15:49:12.061598 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.061611 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.061621 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26040 15:49:12.061637 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.061648 _llseek(5, 1233, [1233], SEEK_SET) = 0
26040 15:49:12.061664 munmap(0xb7f0d000, 1233) = 0
26040 15:49:12.061674 close(5)          = 0
26040 15:49:12.061686 time(NULL)        = 1495655352
26040 15:49:12.061701 munmap(0xb7f0a000, 12164) = 0
26040 15:49:12.061714 munmap(0xb7f08000, 7136) = 0
26040 15:49:12.061729 munmap(0xb7d3d000, 95428) = 0
26040 15:49:12.061741 munmap(0xb7d03000, 201052) = 0
26040 15:49:12.061752 munmap(0xb7cea000, 101180) = 0
26040 15:49:12.061768 gettimeofday({1495655352, 61772}, NULL) = 0
26040 15:49:12.061784 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfafdc74) = -1 ENOENT (No such file or directory)
26040 15:49:12.061800 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26040 15:49:12.061827 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfafddc4) = 0
26040 15:49:12.061843 write(3, "Wed May 24 15:49:12 2017 [pid 26040] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26040 15:49:12.061860 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfafddcc) = 0
26040 15:49:12.061873 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26040 15:49:12.061888 write(4, "\1", 1 <unfinished ...>
26041 15:49:12.061898 <... read resumed> "\1", 1) = 1
26040 15:49:12.061904 <... write resumed> ) = 1
26041 15:49:12.061911 exit_group(0)     = ?
26040 15:49:12.061942 --- SIGCHLD (Child exited) @ 0 (0) ---
26040 15:49:12.061949 sigreturn()       = ? (mask now [])
26040 15:49:12.061968 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26041
26040 15:49:12.061981 close(4)          = 0
26040 15:49:12.061993 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26040 15:49:12.062007 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26040 15:49:12.062021 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26040 15:49:12.062035 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d736f8) = 26042
26042 15:49:12.062087 prctl(0x1, 0x9, 0, 0, 0) = 0
26042 15:49:12.062101 close(4)          = 0
26042 15:49:12.062129 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26042 15:49:12.062146 _llseek(4, 0, [0], SEEK_CUR) = 0
26042 15:49:12.062161 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26042 15:49:12.062179 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f0d000
26042 15:49:12.062191 _llseek(4, 1624, [1624], SEEK_SET) = 0
26042 15:49:12.062213 munmap(0xb7f0d000, 1624) = 0
26042 15:49:12.062225 close(4)          = 0
26042 15:49:12.062238 getuid32()        = 0
26042 15:49:12.062248 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26042 15:49:12.062261 _llseek(4, 0, [0], SEEK_CUR) = 0
26042 15:49:12.062271 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26042 15:49:12.062287 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f0d000
26042 15:49:12.062298 _llseek(4, 1624, [1624], SEEK_SET) = 0
26042 15:49:12.062340 munmap(0xb7f0d000, 1624) = 0
26042 15:49:12.062361 close(4)          = 0
26042 15:49:12.062388 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26042 15:49:12.062409 read(4, "65536\n", 31) = 6
26042 15:49:12.062422 close(4)          = 0
26042 15:49:12.062435 socket(PF_FILE, SOCK_STREAM, 0) = 4
26042 15:49:12.062447 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26042 15:49:12.062458 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26042 15:49:12.062479 close(4)          = 0
26042 15:49:12.062491 socket(PF_FILE, SOCK_STREAM, 0) = 4
26042 15:49:12.062501 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26042 15:49:12.062511 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26042 15:49:12.062529 close(4)          = 0
26042 15:49:12.062553 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26042 15:49:12.062568 _llseek(4, 0, [0], SEEK_CUR) = 0
26042 15:49:12.062578 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26042 15:49:12.062595 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f0d000
26042 15:49:12.062606 _llseek(4, 886, [886], SEEK_SET) = 0
26042 15:49:12.062630 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26042 15:49:12.062647 munmap(0xb7f0d000, 886) = 0
26042 15:49:12.062657 close(4)          = 0
26042 15:49:12.062667 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26042 15:49:12.062684 geteuid32()       = 0
26042 15:49:12.062695 getegid32()       = 0
26042 15:49:12.062706 setregid32(-1, 1000) = 0
26042 15:49:12.062716 setreuid32(-1, 1000) = 0
26042 15:49:12.062731 chdir("/home/msfadmin") = 0
26042 15:49:12.062744 setreuid32(-1, 0) = 0
26042 15:49:12.062753 setregid32(-1, 0) = 0
26042 15:49:12.062764 setgid32(1000)    = 0
26042 15:49:12.062774 setuid32(1000)    = 0
26042 15:49:12.062784 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26042 15:49:12.062797 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0b000
26042 15:49:12.062809 mprotect(0xb7f0d000, 4096, PROT_NONE) = 0
26042 15:49:12.062820 mprotect(0xb7f0b000, 4096, PROT_NONE) = 0
26042 15:49:12.062831 getcwd("/home/msfadmin", 4096) = 15
26042 15:49:12.062845 umask(022)        = 077
26042 15:49:12.062855 getcwd("/home/msfadmin", 4096) = 15
26042 15:49:12.062868 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26042 15:49:12.062891 write(0, "230 Login successful.\r\n", 23) = 23
26042 15:49:12.062964 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.062980 alarm(300)        = 0
26042 15:49:12.062991 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f08000
26042 15:49:12.063003 mprotect(0xb7f0a000, 4096, PROT_NONE) = 0
26042 15:49:12.063014 mprotect(0xb7f08000, 4096, PROT_NONE) = 0
26042 15:49:12.063027 recv(0, "TYPE A\r\n", 4096, MSG_PEEK) = 8
26042 15:49:12.063039 read(0, "TYPE A\r\n", 8) = 8
26042 15:49:12.063057 write(0, "200 Switching to ASCII mode.\r\n", 30) = 30
26042 15:49:12.063097 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.063112 alarm(300)        = 300
26042 15:49:12.063123 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26042 15:49:12.063134 read(0, "PASV\r\n", 6) = 6
26042 15:49:12.063146 write(5, "\n", 1) = 1
26042 15:49:12.063157 read(5,  <unfinished ...>
26040 15:49:12.063169 close(5)          = 0
26040 15:49:12.063183 getuid32()        = 0
26040 15:49:12.063198 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26040 15:49:12.063212 _llseek(5, 0, [0], SEEK_CUR) = 0
26040 15:49:12.063225 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26040 15:49:12.063242 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f0d000
26040 15:49:12.063254 _llseek(5, 1624, [1624], SEEK_SET) = 0
26040 15:49:12.063295 munmap(0xb7f0d000, 1624) = 0
26040 15:49:12.063308 close(5)          = 0
26040 15:49:12.063334 setgroups32(0, []) = 0
26040 15:49:12.063345 chdir("/usr/share/empty") = 0
26040 15:49:12.063357 chroot(".")       = 0
26040 15:49:12.063368 capset(NULL, NULL) = -1 EFAULT (Bad address)
26040 15:49:12.063382 prctl(0x8, 0, 0xbfafdda8, 0x80549a6, 0xbfafdd90) = 0
26040 15:49:12.063393 prctl(0x8, 0x1, 0xbfafdda8, 0x8054a49, 0xbfafdd90) = 0
26040 15:49:12.063403 setgid32(65534)   = 0
26040 15:49:12.063413 setuid32(65534)   = 0
26040 15:49:12.063423 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26040 15:49:12.063436 read(4, "\n", 1)  = 1
26040 15:49:12.063450 write(4, "\1", 1) = 1
26042 15:49:12.063461 <... read resumed> "\1", 1) = 1
26042 15:49:12.063469 write(5, "\f", 1) = 1
26042 15:49:12.063479 read(5,  <unfinished ...>
26040 15:49:12.063486 read(4, "\f", 1)  = 1
26040 15:49:12.063498 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26040 15:49:12.063512 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26040 15:49:12.063523 gettimeofday({1495655352, 63527}, NULL) = 0
26040 15:49:12.063540 bind(5, {sa_family=AF_INET, sin_port=htons(30481), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26040 15:49:12.063556 listen(5, 1)      = 0
26040 15:49:12.063569 write(4, "\21w\0\0", 4) = 4
26042 15:49:12.063580 <... read resumed> "\21w\0\0", 4) = 4
26042 15:49:12.063594 write(0, "227 Entering Passive Mode (127,0,0,1,119,17).\r\n", 47) = 47
26042 15:49:12.063700 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.063718 alarm(300)        = 300
26042 15:49:12.063729 recv(0, "NLST\r\n", 4096, MSG_PEEK) = 6
26042 15:49:12.063741 read(0, "NLST\r\n", 6) = 6
26042 15:49:12.063757 write(5, "\v", 1) = 1
26042 15:49:12.063767 read(5,  <unfinished ...>
26040 15:49:12.063774 read(4, "\v", 1)  = 1
26040 15:49:12.063790 write(4, "\1\0\0\0", 4) = 4
26042 15:49:12.063801 <... read resumed> "\1\0\0\0", 4) = 4
26042 15:49:12.063810 open(".", O_RDONLY|O_NONBLOCK|O_LARGEFILE|O_DIRECTORY|0x80000) = 4
26042 15:49:12.063822 fstat64(4, {st_mode=S_IFDIR|0755, st_size=126976, ...}) = 0
26042 15:49:12.063839 fcntl64(4, F_GETFD) = 0x1 (flags FD_CLOEXEC)
26042 15:49:12.063852 write(5, "\v", 1) = 1
26042 15:49:12.063863 read(5,  <unfinished ...>
26040 15:49:12.063869 read(4, "\v", 1)  = 1
26040 15:49:12.063880 write(4, "\1\0\0\0", 4) = 4
26042 15:49:12.063891 <... read resumed> "\1\0\0\0", 4) = 4
26042 15:49:12.063898 write(5, "\v", 1) = 1
26042 15:49:12.063908 read(5,  <unfinished ...>
26040 15:49:12.063914 read(4, "\v", 1)  = 1
26040 15:49:12.063925 write(4, "\1\0\0\0", 4) = 4
26042 15:49:12.063935 <... read resumed> "\1\0\0\0", 4) = 4
26042 15:49:12.063943 write(5, "\r", 1) = 1
26042 15:49:12.063953 read(5,  <unfinished ...>
26040 15:49:12.063959 read(4, "\r", 1)  = 1
26040 15:49:12.063971 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26040 15:49:12.063988 accept(5, {sa_family=AF_INET, sin_port=htons(34353), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26040 15:49:12.064010 write(4, "\1", 1) = 1
26042 15:49:12.064020 <... read resumed> "\1", 1) = 1
26042 15:49:12.064029 recvmsg(5,  <unfinished ...>
26040 15:49:12.064039 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26042 15:49:12.064056 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26042 15:49:12.064069 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26042 15:49:12.064081 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26042 15:49:12.064093 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26042 15:49:12.064104 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.064118 alarm(300)        = 300
26042 15:49:12.064131 write(0, "150 Here comes the directory listing.\r\n", 39) = 39
26042 15:49:12.064173 getdents64(4, /* 59 entries */, 4096) = 1896
26042 15:49:12.064406 getdents64(4, /* 0 entries */, 4096) = 0
26042 15:49:12.064425 open("/proc/meminfo", O_RDONLY) = 7
26042 15:49:12.064443 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
26042 15:49:12.064461 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f07000
26042 15:49:12.064473 read(7, "MemTotal:      1035240 kB\nMemFree:        529668 kB\nBuffers:         66264 kB\nCached:         285396 kB\nSwapCached:          0 kB\nActive:         219120 kB\nInactive:       257012 kB\nHighTotal:      131008 kB\nHighFree:          264 kB\nLowTotal:       904232 kB\nLowFree:        529404 kB\nSwapTotal:           0 kB\nSwapFree:            0 kB\nDirty:             908 kB\nWriteback:           0 kB\nAnonPages:      124472 kB\nMapped:          51936 kB\nSlab:            18532 kB\nSReclaimable:    10160 kB\nSUnreclaim:       8372 kB\nPageTables:       1884 kB\nNFS_Unstable:        0 kB\nBounce:              0 kB\nCommitLimit:    517620 kB\nCommitted_AS:   630236 kB\nVmallocTotal:   118776 kB\nVmallocUsed:      3420 kB\nVmallocChunk:   114776 kB\nHugePages_Total:     0\nHugePages_Free:      0\nHugePages_Rsvd:      0\nHugePages_Surp:      0\nHugepagesize:     2048 kB\n", 1024) = 846
26042 15:49:12.064554 close(7)          = 0
26042 15:49:12.064565 munmap(0xb7f07000, 4096) = 0
26042 15:49:12.064592 write(6, "Hackathon\r\nSimpleIRCClien2.py\r\nSimpleIRCClient.py\r\nasd.txt\r\nempty\r\nftp\r\nmyfile0\r\nmyfile1\r\nmyfile10\r\nmyfile11\r\nmyfile12\r\nmyfile13\r\nmyfile14\r\nmyfile15\r\nmyfile16\r\nmyfile17\r\nmyfile18\r\nmyfile19\r\nmyfile2\r\nmyfile20\r\nmyfile21\r\nmyfile22\r\nmyfile23\r\nmyfile24\r\nmyfile25\r\nmyfile26\r\nmyfile27\r\nmyfile28\r\nmyfile29\r\nmyfile3\r\nmyfile30\r\nmyfile31\r\nmyfile32\r\nmyfile33\r\nmyfile34\r\nmyfile35\r\nmyfile36\r\nmyfile37\r\nmyfile38\r\nmyfile39\r\nmyfile4\r\nmyfile40\r\nmyfile5\r\nmyfile6\r\nmyfile7\r\nmyfile8\r\nmyfile9\r\noutput.txt\r\nvulnerable\r\n", 496) = 496
26042 15:49:12.064714 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.064730 alarm(300)        = 300
26042 15:49:12.064740 close(6)          = 0
26042 15:49:12.064749 alarm(0)          = 300
26042 15:49:12.064761 write(0, "226 Directory send OK.\r\n", 24) = 24
26042 15:49:12.064779 close(4)          = 0
26042 15:49:12.064790 write(5, "\n", 1) = 1
26042 15:49:12.064800 read(5,  <unfinished ...>
26040 15:49:12.064808 close(6)          = 0
26040 15:49:12.064866 read(4, "\n", 1)  = 1
26040 15:49:12.064879 close(5)          = 0
26040 15:49:12.064890 write(4, "\1", 1) = 1
26042 15:49:12.064901 <... read resumed> "\1", 1) = 1
26042 15:49:12.064909 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26042 15:49:12.064923 alarm(300)        = 0
26042 15:49:12.064934 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
26042 15:49:12.064945 read(0, "QUIT\r\n", 6) = 6
26042 15:49:12.064958 shutdown(0, 0 /* receive */) = 0
26042 15:49:12.064971 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
26042 15:49:12.064981 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26042 15:49:12.064991 write(0, "221 Goodbye.\r\n", 14) = 14
26042 15:49:12.065033 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
26042 15:49:12.065045 fcntl64(0, F_SETFL, O_RDWR) = 0
26042 15:49:12.065055 shutdown(0, 2 /* send and receive */) = 0
26042 15:49:12.065071 exit_group(0)     = ?
26040 15:49:12.065099 --- SIGCHLD (Child exited) @ 0 (0) ---
26040 15:49:12.065108 alarm(1)          = 0
26040 15:49:12.065119 sigreturn()       = ? (mask now [])
26040 15:49:12.065134 alarm(0)          = 1
26040 15:49:12.065144 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26042
26040 15:49:12.065157 exit_group(0)     = ?
4380  15:49:12.065188 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4380  15:49:12.065195 --- SIGCHLD (Child exited) @ 0 (0) ---
4380  15:49:12.065208 write(4, "\21", 1) = 1
4380  15:49:12.065241 sigreturn()       = ? (mask now [])
4380  15:49:12.065283 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4380  15:49:12.065301 ioctl(3, FIONREAD, [1]) = 0
4380  15:49:12.065314 read(3, "\21", 1) = 1
4380  15:49:12.065327 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 26040
4380  15:49:12.065342 close(-1)         = -1 EBADF (Bad file descriptor)
4380  15:49:12.065356 waitpid(-1, 0xbf9d5dbc, WNOHANG) = -1 ECHILD (No child processes)
4380  15:49:12.065368 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4380  15:49:12.611142 accept(5, {sa_family=AF_INET, sin_port=htons(44094), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4380  15:49:12.611201 time(NULL)        = 1495655352
4380  15:49:12.611214 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd26f8) = 26043
26043 15:49:12.611328 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
26043 15:49:12.611344 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
26043 15:49:12.611356 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
26043 15:49:12.611368 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
26043 15:49:12.611409 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
26043 15:49:12.611434 close(3)          = 0
26043 15:49:12.611444 close(4)          = 0
26043 15:49:12.611453 open("/dev/null", O_RDONLY) = 3
26043 15:49:12.611470 dup2(3, 0)        = 0
26043 15:49:12.611479 dup2(3, 1)        = 1
26043 15:49:12.611488 dup2(3, 2)        = 2
26043 15:49:12.611497 close(3)          = 0
26043 15:49:12.611509 setgid32(0)       = 0
26043 15:49:12.611522 setgroups32(0, []) = 0
26043 15:49:12.611533 setuid32(0)       = 0
26043 15:49:12.611545 getpriority(PRIO_PROCESS, 0) = 20
26043 15:49:12.611554 setpriority(PRIO_PROCESS, 0, 10) = 0
26043 15:49:12.611564 getpriority(PRIO_PROCESS, 0) = 10
26043 15:49:12.611600 getpeername(13, {sa_family=AF_INET, sin_port=htons(44094), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
26043 15:49:12.611623 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
26043 15:49:12.611659 open("/etc/hosts.allow", O_RDONLY) = 3
26043 15:49:12.611678 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
26043 15:49:12.611698 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa1000
26043 15:49:12.611712 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
26043 15:49:12.611783 close(3)          = 0
26043 15:49:12.611794 munmap(0xb7fa1000, 4096) = 0
26043 15:49:12.611822 fcntl64(13, F_SETFD, 0) = 0
26043 15:49:12.611839 close(7)          = 0
26043 15:49:12.611850 dup2(13, 0)       = 0
26043 15:49:12.611859 dup2(13, 1)       = 1
26043 15:49:12.611867 dup2(13, 2)       = 2
26043 15:49:12.611900 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
26043 15:49:12.611913 close(13)         = 0
26043 15:49:12.611933 setsid()          = 26043
26043 15:49:12.611943 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
26043 15:49:12.612023 brk(0)            = 0x8064000
26043 15:49:12.612043 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
26043 15:49:12.612060 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
26043 15:49:12.612074 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
26043 15:49:12.612090 open("/etc/ld.so.cache", O_RDONLY) = 3
26043 15:49:12.612103 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
26043 15:49:12.612120 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f13000
26043 15:49:12.612130 close(3)          = 0
26043 15:49:12.612141 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
