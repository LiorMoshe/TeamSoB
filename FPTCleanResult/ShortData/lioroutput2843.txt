25013 15:30:43.185525 close(7)          = 0
25013 15:30:43.185624 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25013 15:30:43.185652 statfs64("/selinux", 84, 0xbfd357cc) = -1 ENOENT (No such file or directory)
25013 15:30:43.185665 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
25013 15:30:43.185690 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
25013 15:30:43.185708 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef6000
25013 15:30:43.185719 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
25013 15:30:43.185809 read(7, "", 1024) = 0
25013 15:30:43.185819 close(7)          = 0
25013 15:30:43.185830 munmap(0xb7ef6000, 4096) = 0
25013 15:30:43.185846 munmap(0xb7d25000, 29913) = 0
25013 15:30:43.185860 read(6, "", 4096) = 0
25013 15:30:43.185871 close(6)          = 0
25013 15:30:43.185881 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.185892 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.185912 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.185925 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25013 15:30:43.185942 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.185953 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25013 15:30:43.185993 read(6, "", 4096) = 0
25013 15:30:43.186004 close(6)          = 0
25013 15:30:43.186013 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186024 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.186051 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.186064 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25013 15:30:43.186079 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.186090 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25013 15:30:43.186127 read(6, "", 4096) = 0
25013 15:30:43.186137 close(6)          = 0
25013 15:30:43.186157 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186173 read(5, "", 4096) = 0
25013 15:30:43.186183 close(5)          = 0
25013 15:30:43.186202 munmap(0xb7efd000, 4096) = 0
25013 15:30:43.186212 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
25013 15:30:43.186236 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
25013 15:30:43.186253 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
25013 15:30:43.186263 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
25013 15:30:43.186317 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.186335 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.186347 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
25013 15:30:43.186363 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.186373 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
25013 15:30:43.186423 read(6, "", 4096) = 0
25013 15:30:43.186433 close(6)          = 0
25013 15:30:43.186442 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186453 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.186471 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.186483 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
25013 15:30:43.186499 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.186509 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
25013 15:30:43.186547 read(6, "", 4096) = 0
25013 15:30:43.186557 close(6)          = 0
25013 15:30:43.186566 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186577 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.186594 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.186607 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
25013 15:30:43.186622 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.186632 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
25013 15:30:43.186746 read(6, "", 4096) = 0
25013 15:30:43.186756 close(6)          = 0
25013 15:30:43.186765 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186776 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
25013 15:30:43.186793 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
25013 15:30:43.186805 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
25013 15:30:43.186821 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
25013 15:30:43.186831 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
25013 15:30:43.186879 read(6, "", 4096) = 0
25013 15:30:43.186889 close(6)          = 0
25013 15:30:43.186902 munmap(0xb7ef7000, 4096) = 0
25013 15:30:43.186912 read(5, "", 4096) = 0
25013 15:30:43.186931 close(5)          = 0
25013 15:30:43.186940 munmap(0xb7efd000, 4096) = 0
25013 15:30:43.186952 time(NULL)        = 1495654243
25013 15:30:43.186964 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25013 15:30:43.186982 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
25013 15:30:43.186993 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
25013 15:30:43.187009 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
25013 15:30:43.187019 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
25013 15:30:43.187039 read(5, "", 4096) = 0
25013 15:30:43.187048 close(5)          = 0
25013 15:30:43.187058 munmap(0xb7efd000, 4096) = 0
25013 15:30:43.187072 getuid32()        = 0
25013 15:30:43.187089 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.187103 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.187124 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25013 15:30:43.187145 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.187157 _llseek(5, 1624, [1624], SEEK_SET) = 0
25013 15:30:43.187186 munmap(0xb7efd000, 1624) = 0
25013 15:30:43.187196 close(5)          = 0
25013 15:30:43.187241 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.187258 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.187269 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25013 15:30:43.187285 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.187295 _llseek(5, 1233, [1233], SEEK_SET) = 0
25013 15:30:43.187315 munmap(0xb7efd000, 1233) = 0
25013 15:30:43.187324 close(5)          = 0
25013 15:30:43.187343 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.187355 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.187365 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25013 15:30:43.187381 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.187391 _llseek(5, 1624, [1624], SEEK_SET) = 0
25013 15:30:43.187407 munmap(0xb7efd000, 1624) = 0
25013 15:30:43.187416 close(5)          = 0
25013 15:30:43.187428 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.187440 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.187450 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25013 15:30:43.187466 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.187476 _llseek(5, 1233, [1233], SEEK_SET) = 0
25013 15:30:43.187492 munmap(0xb7efd000, 1233) = 0
25013 15:30:43.187501 close(5)          = 0
25013 15:30:43.187754 getuid32()        = 0
25013 15:30:43.187765 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.187777 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.187787 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25013 15:30:43.187802 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.187813 _llseek(5, 1624, [1624], SEEK_SET) = 0
25013 15:30:43.188582 munmap(0xb7efd000, 1624) = 0
25013 15:30:43.188596 close(5)          = 0
25013 15:30:43.188610 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.188623 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.188633 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
25013 15:30:43.188649 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.188659 _llseek(5, 1233, [1233], SEEK_SET) = 0
25013 15:30:43.188676 munmap(0xb7efd000, 1233) = 0
25013 15:30:43.188685 close(5)          = 0
25013 15:30:43.188697 time(NULL)        = 1495654243
25013 15:30:43.188712 munmap(0xb7efa000, 12164) = 0
25013 15:30:43.188725 munmap(0xb7ef8000, 7136) = 0
25013 15:30:43.188739 munmap(0xb7d2d000, 95428) = 0
25013 15:30:43.188750 munmap(0xb7cf3000, 201052) = 0
25013 15:30:43.188761 munmap(0xb7cda000, 101180) = 0
25013 15:30:43.188777 gettimeofday({1495654243, 188782}, NULL) = 0
25013 15:30:43.188793 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfd376a4) = -1 ENOENT (No such file or directory)
25013 15:30:43.188838 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
25013 15:30:43.188886 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd377f4) = 0
25013 15:30:43.188903 write(3, "Wed May 24 15:30:43 2017 [pid 25013] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
25013 15:30:43.188920 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd377fc) = 0
25013 15:30:43.188943 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25013 15:30:43.188957 write(4, "\1", 1 <unfinished ...>
25014 15:30:43.188967 <... read resumed> "\1", 1) = 1
25013 15:30:43.188972 <... write resumed> ) = 1
25014 15:30:43.188980 exit_group(0)     = ?
25013 15:30:43.189013 --- SIGCHLD (Child exited) @ 0 (0) ---
25013 15:30:43.189020 sigreturn()       = ? (mask now [])
25013 15:30:43.189039 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 25014
25013 15:30:43.189052 close(4)          = 0
25013 15:30:43.189064 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
25013 15:30:43.189078 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25013 15:30:43.189092 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25013 15:30:43.189105 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d636f8) = 25015
25015 15:30:43.189157 prctl(0x1, 0x9, 0, 0, 0) = 0
25015 15:30:43.189170 close(4)          = 0
25015 15:30:43.189197 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25015 15:30:43.189213 _llseek(4, 0, [0], SEEK_CUR) = 0
25015 15:30:43.189228 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25015 15:30:43.189247 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efd000
25015 15:30:43.189258 _llseek(4, 1624, [1624], SEEK_SET) = 0
25015 15:30:43.189281 munmap(0xb7efd000, 1624) = 0
25015 15:30:43.189292 close(4)          = 0
25015 15:30:43.189305 getuid32()        = 0
25015 15:30:43.189315 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
25015 15:30:43.189327 _llseek(4, 0, [0], SEEK_CUR) = 0
25015 15:30:43.189338 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25015 15:30:43.189353 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efd000
25015 15:30:43.189364 _llseek(4, 1624, [1624], SEEK_SET) = 0
25015 15:30:43.189380 munmap(0xb7efd000, 1624) = 0
25015 15:30:43.189389 close(4)          = 0
25015 15:30:43.189415 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
25015 15:30:43.189436 read(4, "65536\n", 31) = 6
25015 15:30:43.189448 close(4)          = 0
25015 15:30:43.189462 socket(PF_FILE, SOCK_STREAM, 0) = 4
25015 15:30:43.189473 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25015 15:30:43.189484 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25015 15:30:43.189505 close(4)          = 0
25015 15:30:43.189516 socket(PF_FILE, SOCK_STREAM, 0) = 4
25015 15:30:43.189526 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
25015 15:30:43.189536 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
25015 15:30:43.189554 close(4)          = 0
25015 15:30:43.189577 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
25015 15:30:43.189592 _llseek(4, 0, [0], SEEK_CUR) = 0
25015 15:30:43.189602 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25015 15:30:43.189618 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efd000
25015 15:30:43.189629 _llseek(4, 886, [886], SEEK_SET) = 0
25015 15:30:43.189664 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
25015 15:30:43.189682 munmap(0xb7efd000, 886) = 0
25015 15:30:43.189701 close(4)          = 0
25015 15:30:43.189711 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
25015 15:30:43.189727 geteuid32()       = 0
25015 15:30:43.189738 getegid32()       = 0
25015 15:30:43.189749 setregid32(-1, 1000) = 0
25015 15:30:43.189760 setreuid32(-1, 1000) = 0
25015 15:30:43.189785 chdir("/home/msfadmin") = 0
25015 15:30:43.189809 setreuid32(-1, 0) = 0
25015 15:30:43.189820 setregid32(-1, 0) = 0
25015 15:30:43.189832 setgid32(1000)    = 0
25015 15:30:43.189842 setuid32(1000)    = 0
25015 15:30:43.189853 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
25015 15:30:43.189867 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efb000
25015 15:30:43.189888 mprotect(0xb7efd000, 4096, PROT_NONE) = 0
25015 15:30:43.189900 mprotect(0xb7efb000, 4096, PROT_NONE) = 0
25015 15:30:43.189911 getcwd("/home/msfadmin", 4096) = 15
25015 15:30:43.189924 umask(022)        = 077
25015 15:30:43.189934 getcwd("/home/msfadmin", 4096) = 15
25015 15:30:43.189947 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
25015 15:30:43.189973 write(0, "230 Login successful.\r\n", 23) = 23
25015 15:30:43.190070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.190087 alarm(300)        = 0
25015 15:30:43.190098 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef8000
25015 15:30:43.190110 mprotect(0xb7efa000, 4096, PROT_NONE) = 0
25015 15:30:43.190121 mprotect(0xb7ef8000, 4096, PROT_NONE) = 0
25015 15:30:43.190134 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
25015 15:30:43.190147 read(0, "TYPE I\r\n", 8) = 8
25015 15:30:43.190163 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
25015 15:30:43.190204 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.190218 alarm(300)        = 300
25015 15:30:43.190229 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
25015 15:30:43.190240 read(0, "PASV\r\n", 6) = 6
25015 15:30:43.190252 write(5, "\n", 1) = 1
25015 15:30:43.190263 read(5,  <unfinished ...>
25013 15:30:43.190275 close(5)          = 0
25013 15:30:43.190287 getuid32()        = 0
25013 15:30:43.190302 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
25013 15:30:43.190316 _llseek(5, 0, [0], SEEK_CUR) = 0
25013 15:30:43.190339 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
25013 15:30:43.190357 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efd000
25013 15:30:43.190377 _llseek(5, 1624, [1624], SEEK_SET) = 0
25013 15:30:43.190395 munmap(0xb7efd000, 1624) = 0
25013 15:30:43.190406 close(5)          = 0
25013 15:30:43.190422 setgroups32(0, []) = 0
25013 15:30:43.190433 chdir("/usr/share/empty") = 0
25013 15:30:43.190446 chroot(".")       = 0
25013 15:30:43.190456 capset(NULL, NULL) = -1 EFAULT (Bad address)
25013 15:30:43.190470 prctl(0x8, 0, 0xbfd377d8, 0x80549a6, 0xbfd377c0) = 0
25013 15:30:43.190481 prctl(0x8, 0x1, 0xbfd377d8, 0x8054a49, 0xbfd377c0) = 0
25013 15:30:43.190491 setgid32(65534)   = 0
25013 15:30:43.190501 setuid32(65534)   = 0
25013 15:30:43.190510 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
25013 15:30:43.190524 read(4, "\n", 1)  = 1
25013 15:30:43.190537 write(4, "\1", 1) = 1
25015 15:30:43.190547 <... read resumed> "\1", 1) = 1
25015 15:30:43.190555 write(5, "\f", 1) = 1
25015 15:30:43.190565 read(5,  <unfinished ...>
25013 15:30:43.190571 read(4, "\f", 1)  = 1
25013 15:30:43.190583 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
25013 15:30:43.190597 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
25013 15:30:43.190608 gettimeofday({1495654243, 190612}, NULL) = 0
25013 15:30:43.190624 bind(5, {sa_family=AF_INET, sin_port=htons(54601), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
25013 15:30:43.190640 listen(5, 1)      = 0
25013 15:30:43.190654 write(4, "I\325\0\0", 4) = 4
25015 15:30:43.190665 <... read resumed> "I\325\0\0", 4) = 4
25015 15:30:43.190678 write(0, "227 Entering Passive Mode (127,0,0,1,213,73).\r\n", 47) = 47
25015 15:30:43.190813 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.190831 alarm(300)        = 300
25015 15:30:43.190842 recv(0, "STOR myfile15\r\n", 4096, MSG_PEEK) = 15
25015 15:30:43.190854 read(0, "STOR myfile15\r\n", 15) = 15
25015 15:30:43.190870 write(5, "\v", 1) = 1
25015 15:30:43.190880 read(5,  <unfinished ...>
25013 15:30:43.190887 read(4, "\v", 1)  = 1
25013 15:30:43.190903 write(4, "\1\0\0\0", 4) = 4
25015 15:30:43.190913 <... read resumed> "\1\0\0\0", 4) = 4
25015 15:30:43.190922 gettimeofday({1495654243, 190925}, NULL) = 0
25015 15:30:43.190932 getcwd("/home/msfadmin", 4096) = 15
25015 15:30:43.190945 open("myfile15", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
25015 15:30:43.190958 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
25015 15:30:43.190975 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
25015 15:30:43.190986 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
25015 15:30:43.190996 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd37724) = 0
25015 15:30:43.191011 ftruncate64(4, 0) = 0
25015 15:30:43.191029 _llseek(4, 0, [0], SEEK_SET) = 0
25015 15:30:43.191040 write(5, "\v", 1) = 1
25015 15:30:43.191051 read(5,  <unfinished ...>
25013 15:30:43.191058 read(4, "\v", 1)  = 1
25013 15:30:43.191069 write(4, "\1\0\0\0", 4) = 4
25015 15:30:43.191079 <... read resumed> "\1\0\0\0", 4) = 4
25015 15:30:43.191086 write(5, "\v", 1) = 1
25015 15:30:43.191096 read(5,  <unfinished ...>
25013 15:30:43.191102 read(4, "\v", 1)  = 1
25013 15:30:43.191113 write(4, "\1\0\0\0", 4) = 4
25015 15:30:43.191133 <... read resumed> "\1\0\0\0", 4) = 4
25015 15:30:43.191141 write(5, "\r", 1) = 1
25015 15:30:43.191151 read(5,  <unfinished ...>
25013 15:30:43.191158 read(4, "\r", 1)  = 1
25013 15:30:43.191170 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
25013 15:30:43.191197 accept(5, {sa_family=AF_INET, sin_port=htons(53326), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
25013 15:30:43.191219 write(4, "\1", 1) = 1
25015 15:30:43.191229 <... read resumed> "\1", 1) = 1
25015 15:30:43.191238 recvmsg(5,  <unfinished ...>
25013 15:30:43.191248 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25015 15:30:43.191265 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
25015 15:30:43.191278 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
25015 15:30:43.191290 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
25015 15:30:43.191301 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
25015 15:30:43.191312 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.191325 alarm(300)        = 300
25015 15:30:43.191338 write(0, "150 Ok to send data.\r\n", 22) = 22
25015 15:30:43.191400 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d32000
25015 15:30:43.191414 mprotect(0xb7d44000, 4096, PROT_NONE) = 0
25015 15:30:43.191426 mprotect(0xb7d32000, 4096, PROT_NONE) = 0
25015 15:30:43.191436 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
25015 15:30:43.191449 write(4, "assasaaa\na\na\na\na\n", 17) = 17
25015 15:30:43.191465 read(6, "", 65536) = 0
25015 15:30:43.191475 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.191489 alarm(300)        = 300
25015 15:30:43.191498 close(6)          = 0
25015 15:30:43.191507 alarm(0)          = 300
25015 15:30:43.191517 gettimeofday({1495654243, 191520}, NULL) = 0
25015 15:30:43.191534 getpid()          = 25015
25015 15:30:43.191546 gettimeofday({1495654243, 191549}, NULL) = 0
25015 15:30:43.191563 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd376c4) = 0
25015 15:30:43.191577 write(3, "Wed May 24 15:30:43 2017 [pid 25015] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile15\", 17 bytes, 26.61Kbyte/sec\n", 131) = 131
25015 15:30:43.191597 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd376cc) = 0
25015 15:30:43.191611 write(0, "226 Transfer complete.\r\n", 24) = 24
25015 15:30:43.191650 write(5, "\n", 1) = 1
25015 15:30:43.191662 read(5,  <unfinished ...>
25013 15:30:43.191669 close(6)          = 0
25013 15:30:43.191687 read(4, "\n", 1)  = 1
25013 15:30:43.191698 close(5)          = 0
25013 15:30:43.191725 write(4, "\1", 1) = 1
25015 15:30:43.191740 <... read resumed> "\1", 1) = 1
25015 15:30:43.191747 close(4)          = 0
25015 15:30:43.191768 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
25015 15:30:43.191791 alarm(300)        = 0
25015 15:30:43.191802 recv(0,  <unfinished ...>
