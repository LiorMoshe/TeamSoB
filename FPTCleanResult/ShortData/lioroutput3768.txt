27023 16:06:10.696111 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27023 16:06:10.696128 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.696143 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27023 16:06:10.696185 read(6, "", 4096) = 0
27023 16:06:10.696196 close(6)          = 0
27023 16:06:10.696205 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.696216 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27023 16:06:10.696235 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27023 16:06:10.696248 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27023 16:06:10.696265 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.696275 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27023 16:06:10.696315 read(6, "", 4096) = 0
27023 16:06:10.696325 close(6)          = 0
27023 16:06:10.696334 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.696345 read(5, "", 4096) = 0
27023 16:06:10.696354 close(5)          = 0
27023 16:06:10.696363 munmap(0xb7fd0000, 4096) = 0
27023 16:06:10.696383 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
27023 16:06:10.696396 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
27023 16:06:10.696412 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd0000
27023 16:06:10.696422 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
27023 16:06:10.696468 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27023 16:06:10.696486 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
27023 16:06:10.696498 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
27023 16:06:10.696514 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.696524 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
27023 16:06:10.696570 read(6, "", 4096) = 0
27023 16:06:10.696580 close(6)          = 0
27023 16:06:10.696589 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.696600 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27023 16:06:10.696618 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
27023 16:06:10.696630 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
27023 16:06:10.696646 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.696656 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
27023 16:06:10.696704 read(6, "", 4096) = 0
27023 16:06:10.696714 close(6)          = 0
27023 16:06:10.696723 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.696734 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27023 16:06:10.696753 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
27023 16:06:10.696767 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
27023 16:06:10.696783 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.696793 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
27023 16:06:10.696911 read(6, "", 4096) = 0
27023 16:06:10.696920 close(6)          = 0
27023 16:06:10.696930 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.696964 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
27023 16:06:10.696983 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
27023 16:06:10.697013 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
27023 16:06:10.697044 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fca000
27023 16:06:10.697064 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
27023 16:06:10.697128 read(6, "", 4096) = 0
27023 16:06:10.697137 close(6)          = 0
27023 16:06:10.697146 munmap(0xb7fca000, 4096) = 0
27023 16:06:10.697156 read(5, "", 4096) = 0
27023 16:06:10.697165 close(5)          = 0
27023 16:06:10.697174 munmap(0xb7fd0000, 4096) = 0
27023 16:06:10.697187 time(NULL)        = 1495656370
27023 16:06:10.697199 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27023 16:06:10.697217 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
27023 16:06:10.697229 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
27023 16:06:10.697245 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd0000
27023 16:06:10.697255 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
27023 16:06:10.697279 read(5, "", 4096) = 0
27023 16:06:10.697288 close(5)          = 0
27023 16:06:10.697297 munmap(0xb7fd0000, 4096) = 0
27023 16:06:10.697312 getuid32()        = 0
27023 16:06:10.697329 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.697343 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.697354 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27023 16:06:10.697370 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.697381 _llseek(5, 1624, [1624], SEEK_SET) = 0
27023 16:06:10.697400 munmap(0xb7fd0000, 1624) = 0
27023 16:06:10.697410 close(5)          = 0
27023 16:06:10.697434 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.697451 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.697461 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27023 16:06:10.697477 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.697488 _llseek(5, 1233, [1233], SEEK_SET) = 0
27023 16:06:10.697507 munmap(0xb7fd0000, 1233) = 0
27023 16:06:10.697517 close(5)          = 0
27023 16:06:10.697535 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.697548 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.697558 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27023 16:06:10.697574 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.697584 _llseek(5, 1624, [1624], SEEK_SET) = 0
27023 16:06:10.697600 munmap(0xb7fd0000, 1624) = 0
27023 16:06:10.697609 close(5)          = 0
27023 16:06:10.697621 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.697634 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.697644 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27023 16:06:10.697659 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.697670 _llseek(5, 1233, [1233], SEEK_SET) = 0
27023 16:06:10.697686 munmap(0xb7fd0000, 1233) = 0
27023 16:06:10.697695 close(5)          = 0
27023 16:06:10.697950 getuid32()        = 0
27023 16:06:10.697973 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.697986 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.697997 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27023 16:06:10.698013 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.698023 _llseek(5, 1624, [1624], SEEK_SET) = 0
27023 16:06:10.698039 munmap(0xb7fd0000, 1624) = 0
27023 16:06:10.698048 close(5)          = 0
27023 16:06:10.698062 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.698074 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.698084 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
27023 16:06:10.698100 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.698110 _llseek(5, 1233, [1233], SEEK_SET) = 0
27023 16:06:10.698126 munmap(0xb7fd0000, 1233) = 0
27023 16:06:10.698136 close(5)          = 0
27023 16:06:10.698147 time(NULL)        = 1495656370
27023 16:06:10.698163 munmap(0xb7fcd000, 12164) = 0
27023 16:06:10.698177 munmap(0xb7fcb000, 7136) = 0
27023 16:06:10.698190 munmap(0xb7e00000, 95428) = 0
27023 16:06:10.698201 munmap(0xb7dc6000, 201052) = 0
27023 16:06:10.698212 munmap(0xb7dad000, 101180) = 0
27023 16:06:10.698228 gettimeofday({1495656370, 698232}, NULL) = 0
27023 16:06:10.698239 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfc6edd4) = -1 ENOENT (No such file or directory)
27023 16:06:10.698254 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
27023 16:06:10.698279 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc6ef24) = 0
27023 16:06:10.698295 write(3, "Wed May 24 16:06:10 2017 [pid 27023] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
27023 16:06:10.698312 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc6ef2c) = 0
27023 16:06:10.698324 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27023 16:06:10.698338 write(4, "\1", 1 <unfinished ...>
27024 16:06:10.698351 <... read resumed> "\1", 1) = 1
27023 16:06:10.698357 <... write resumed> ) = 1
27024 16:06:10.698364 exit_group(0)     = ?
27023 16:06:10.698392 --- SIGCHLD (Child exited) @ 0 (0) ---
27023 16:06:10.698403 sigreturn()       = ? (mask now [])
27023 16:06:10.698422 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 27024
27023 16:06:10.698435 close(4)          = 0
27023 16:06:10.698446 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
27023 16:06:10.698460 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27023 16:06:10.698473 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27023 16:06:10.698486 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e366f8) = 27025
27025 16:06:10.698537 prctl(0x1, 0x9, 0, 0, 0) = 0
27025 16:06:10.698550 close(4)          = 0
27025 16:06:10.698578 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27025 16:06:10.698595 _llseek(4, 0, [0], SEEK_CUR) = 0
27025 16:06:10.698609 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27025 16:06:10.698627 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd0000
27025 16:06:10.698639 _llseek(4, 1624, [1624], SEEK_SET) = 0
27025 16:06:10.698661 munmap(0xb7fd0000, 1624) = 0
27025 16:06:10.698672 close(4)          = 0
27025 16:06:10.698685 getuid32()        = 0
27025 16:06:10.698695 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
27025 16:06:10.698708 _llseek(4, 0, [0], SEEK_CUR) = 0
27025 16:06:10.698718 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27025 16:06:10.698734 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd0000
27025 16:06:10.698744 _llseek(4, 1624, [1624], SEEK_SET) = 0
27025 16:06:10.698759 munmap(0xb7fd0000, 1624) = 0
27025 16:06:10.698769 close(4)          = 0
27025 16:06:10.698794 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
27025 16:06:10.698814 read(4, "65536\n", 31) = 6
27025 16:06:10.698827 close(4)          = 0
27025 16:06:10.698840 socket(PF_FILE, SOCK_STREAM, 0) = 4
27025 16:06:10.698852 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27025 16:06:10.698863 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27025 16:06:10.698938 close(4)          = 0
27025 16:06:10.698951 socket(PF_FILE, SOCK_STREAM, 0) = 4
27025 16:06:10.698961 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
27025 16:06:10.698972 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
27025 16:06:10.698990 close(4)          = 0
27025 16:06:10.699014 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
27025 16:06:10.699028 _llseek(4, 0, [0], SEEK_CUR) = 0
27025 16:06:10.699039 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27025 16:06:10.699055 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd0000
27025 16:06:10.699066 _llseek(4, 886, [886], SEEK_SET) = 0
27025 16:06:10.699091 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
27025 16:06:10.699107 munmap(0xb7fd0000, 886) = 0
27025 16:06:10.699118 close(4)          = 0
27025 16:06:10.699127 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
27025 16:06:10.699143 geteuid32()       = 0
27025 16:06:10.699154 getegid32()       = 0
27025 16:06:10.699164 setregid32(-1, 1000) = 0
27025 16:06:10.699174 setreuid32(-1, 1000) = 0
27025 16:06:10.699185 chdir("/home/msfadmin") = 0
27025 16:06:10.699196 setreuid32(-1, 0) = 0
27025 16:06:10.699205 setregid32(-1, 0) = 0
27025 16:06:10.699215 setgid32(1000)    = 0
27025 16:06:10.699225 setuid32(1000)    = 0
27025 16:06:10.699235 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
27025 16:06:10.699248 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fce000
27025 16:06:10.699259 mprotect(0xb7fd0000, 4096, PROT_NONE) = 0
27025 16:06:10.699270 mprotect(0xb7fce000, 4096, PROT_NONE) = 0
27025 16:06:10.699281 getcwd("/home/msfadmin", 4096) = 15
27025 16:06:10.699293 umask(022)        = 077
27025 16:06:10.699303 getcwd("/home/msfadmin", 4096) = 15
27025 16:06:10.699320 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
27025 16:06:10.699342 write(0, "230 Login successful.\r\n", 23) = 23
27025 16:06:10.699426 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.699443 alarm(300)        = 0
27025 16:06:10.699454 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcb000
27025 16:06:10.699466 mprotect(0xb7fcd000, 4096, PROT_NONE) = 0
27025 16:06:10.699477 mprotect(0xb7fcb000, 4096, PROT_NONE) = 0
27025 16:06:10.699489 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
27025 16:06:10.699502 read(0, "TYPE I\r\n", 8) = 8
27025 16:06:10.699518 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27025 16:06:10.699559 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.699573 alarm(300)        = 300
27025 16:06:10.699584 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27025 16:06:10.699596 read(0, "PASV\r\n", 6) = 6
27025 16:06:10.699607 write(5, "\n", 1) = 1
27025 16:06:10.699618 read(5,  <unfinished ...>
27023 16:06:10.699630 close(5)          = 0
27023 16:06:10.699644 getuid32()        = 0
27023 16:06:10.699658 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
27023 16:06:10.699672 _llseek(5, 0, [0], SEEK_CUR) = 0
27023 16:06:10.699684 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
27023 16:06:10.699702 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd0000
27023 16:06:10.699713 _llseek(5, 1624, [1624], SEEK_SET) = 0
27023 16:06:10.699730 munmap(0xb7fd0000, 1624) = 0
27023 16:06:10.699741 close(5)          = 0
27023 16:06:10.699757 setgroups32(0, []) = 0
27023 16:06:10.699768 chdir("/usr/share/empty") = 0
27023 16:06:10.699780 chroot(".")       = 0
27023 16:06:10.699791 capset(NULL, NULL) = -1 EFAULT (Bad address)
27023 16:06:10.699805 prctl(0x8, 0, 0xbfc6ef08, 0x80549a6, 0xbfc6eef0) = 0
27023 16:06:10.699816 prctl(0x8, 0x1, 0xbfc6ef08, 0x8054a49, 0xbfc6eef0) = 0
27023 16:06:10.699826 setgid32(65534)   = 0
27023 16:06:10.699835 setuid32(65534)   = 0
27023 16:06:10.699983 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
27023 16:06:10.700008 read(4, "\n", 1)  = 1
27023 16:06:10.700021 write(4, "\1", 1) = 1
27025 16:06:10.700032 <... read resumed> "\1", 1) = 1
27025 16:06:10.700039 write(5, "\f", 1) = 1
27025 16:06:10.700049 read(5,  <unfinished ...>
27023 16:06:10.700056 read(4, "\f", 1)  = 1
27023 16:06:10.700069 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27023 16:06:10.700082 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27023 16:06:10.700093 gettimeofday({1495656370, 700097}, NULL) = 0
27023 16:06:10.700109 bind(5, {sa_family=AF_INET, sin_port=htons(63907), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27023 16:06:10.700125 listen(5, 1)      = 0
27023 16:06:10.700137 write(4, "\243\371\0\0", 4) = 4
27025 16:06:10.700148 <... read resumed> "\243\371\0\0", 4) = 4
27025 16:06:10.700162 write(0, "227 Entering Passive Mode (127,0,0,1,249,163).\r\n", 48) = 48
27025 16:06:10.700270 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.700287 alarm(300)        = 300
27025 16:06:10.700298 recv(0, "STOR myfile15\r\n", 4096, MSG_PEEK) = 15
27025 16:06:10.700310 read(0, "STOR myfile15\r\n", 15) = 15
27025 16:06:10.700325 write(5, "\v", 1) = 1
27025 16:06:10.700336 read(5,  <unfinished ...>
27023 16:06:10.700343 read(4, "\v", 1)  = 1
27023 16:06:10.700354 write(4, "\1\0\0\0", 4) = 4
27025 16:06:10.700364 <... read resumed> "\1\0\0\0", 4) = 4
27025 16:06:10.700373 gettimeofday({1495656370, 700376}, NULL) = 0
27025 16:06:10.700383 getcwd("/home/msfadmin", 4096) = 15
27025 16:06:10.700395 open("myfile15", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
27025 16:06:10.700408 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
27025 16:06:10.700425 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
27025 16:06:10.700435 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
27025 16:06:10.700445 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc6ee54) = 0
27025 16:06:10.700464 ftruncate64(4, 0) = 0
27025 16:06:10.700484 _llseek(4, 0, [0], SEEK_SET) = 0
27025 16:06:10.700495 write(5, "\v", 1) = 1
27025 16:06:10.700505 read(5,  <unfinished ...>
27023 16:06:10.700512 read(4, "\v", 1)  = 1
27023 16:06:10.700523 write(4, "\1\0\0\0", 4) = 4
27025 16:06:10.700533 <... read resumed> "\1\0\0\0", 4) = 4
27025 16:06:10.700540 write(5, "\v", 1) = 1
27025 16:06:10.700550 read(5,  <unfinished ...>
27023 16:06:10.700557 read(4, "\v", 1)  = 1
27023 16:06:10.700567 write(4, "\1\0\0\0", 4) = 4
27025 16:06:10.700577 <... read resumed> "\1\0\0\0", 4) = 4
27025 16:06:10.700585 write(5, "\r", 1) = 1
27025 16:06:10.700594 read(5,  <unfinished ...>
27023 16:06:10.700601 read(4, "\r", 1)  = 1
27023 16:06:10.700613 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
27023 16:06:10.700630 accept(5, {sa_family=AF_INET, sin_port=htons(50234), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
27023 16:06:10.700651 write(4, "\1", 1) = 1
27025 16:06:10.700661 <... read resumed> "\1", 1) = 1
27025 16:06:10.700671 recvmsg(5,  <unfinished ...>
27023 16:06:10.700680 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27025 16:06:10.700697 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
27025 16:06:10.700710 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
27025 16:06:10.700722 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
27025 16:06:10.700734 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
27025 16:06:10.700745 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.700758 alarm(300)        = 300
27025 16:06:10.700770 write(0, "150 Ok to send data.\r\n", 22) = 22
27025 16:06:10.700834 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e05000
27025 16:06:10.700847 mprotect(0xb7e17000, 4096, PROT_NONE) = 0
27025 16:06:10.700859 mprotect(0xb7e05000, 4096, PROT_NONE) = 0
27025 16:06:10.700869 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
27025 16:06:10.700882 write(4, "assasaaa\na\na\na\na\n", 17) = 17
27025 16:06:10.700897 read(6, "", 65536) = 0
27025 16:06:10.700907 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.700921 alarm(300)        = 300
27025 16:06:10.700959 close(6)          = 0
27025 16:06:10.700969 alarm(0)          = 300
27025 16:06:10.700987 gettimeofday({1495656370, 700991}, NULL) = 0
27025 16:06:10.701005 getpid()          = 27025
27025 16:06:10.701017 gettimeofday({1495656370, 701021}, NULL) = 0
27025 16:06:10.701035 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc6edf4) = 0
27025 16:06:10.701049 write(3, "Wed May 24 16:06:10 2017 [pid 27025] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile15\", 17 bytes, 25.74Kbyte/sec\n", 131) = 131
27025 16:06:10.701069 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc6edfc) = 0
27025 16:06:10.701084 write(0, "226 Transfer complete.\r\n", 24) = 24
27025 16:06:10.701126 write(5, "\n", 1) = 1
27025 16:06:10.701138 read(5,  <unfinished ...>
27023 16:06:10.701145 close(6)          = 0
27023 16:06:10.701162 read(4, "\n", 1)  = 1
27023 16:06:10.701174 close(5)          = 0
27023 16:06:10.701184 write(4, "\1", 1) = 1
27025 16:06:10.701195 <... read resumed> "\1", 1) = 1
27025 16:06:10.701201 close(4)          = 0
27025 16:06:10.701212 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:10.701225 alarm(300)        = 0
27025 16:06:10.701236 recv(0,  <unfinished ...>
27023 16:06:10.701244 read(4,  <unfinished ...>
27025 16:06:11.215052 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
27025 16:06:11.215084 read(0, "TYPE I\r\n", 8) = 8
27025 16:06:11.215106 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
27025 16:06:11.215154 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
27025 16:06:11.215172 alarm(300)        = 299
27025 16:06:11.215193 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
27025 16:06:11.215206 read(0, "PASV\r\n", 6) = 6
27025 16:06:11.215219 write(5, "\n", 1) = 1
27025 16:06:11.215232 read(5,  <unfinished ...>
27023 16:06:11.215240 <... read resumed> "\n", 1) = 1
27023 16:06:11.215250 write(4, "\1", 1) = 1
27025 16:06:11.215261 <... read resumed> "\1", 1) = 1
27025 16:06:11.215268 write(5, "\f", 1) = 1
27025 16:06:11.215279 read(5,  <unfinished ...>
27023 16:06:11.215286 read(4, "\f", 1)  = 1
27023 16:06:11.215298 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
27023 16:06:11.215315 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
27023 16:06:11.215329 bind(5, {sa_family=AF_INET, sin_port=htons(64006), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
27023 16:06:11.215346 listen(5, 1)      = 0
27023 16:06:11.215360 write(4, "\6\372\0\0", 4) = 4
27025 16:06:11.215371 <... read resumed> "\6\372\0\0", 4) = 4
