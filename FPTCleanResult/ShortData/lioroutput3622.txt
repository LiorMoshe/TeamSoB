26722 16:00:48.886212 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26722 16:00:48.886252 read(6, "", 4096) = 0
26722 16:00:48.886261 close(6)          = 0
26722 16:00:48.886270 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.886281 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26722 16:00:48.886298 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26722 16:00:48.886311 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26722 16:00:48.886326 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
26722 16:00:48.886336 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26722 16:00:48.886374 read(6, "", 4096) = 0
26722 16:00:48.886383 close(6)          = 0
26722 16:00:48.886392 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.886402 read(5, "", 4096) = 0
26722 16:00:48.886411 close(5)          = 0
26722 16:00:48.886419 munmap(0xb7efb000, 4096) = 0
26722 16:00:48.886429 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
26722 16:00:48.886442 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
26722 16:00:48.886457 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efb000
26722 16:00:48.886467 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
26722 16:00:48.886512 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26722 16:00:48.886529 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
26722 16:00:48.886541 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
26722 16:00:48.886557 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
26722 16:00:48.886567 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
26722 16:00:48.886615 read(6, "", 4096) = 0
26722 16:00:48.886625 close(6)          = 0
26722 16:00:48.886634 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.886645 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26722 16:00:48.886662 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
26722 16:00:48.886674 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
26722 16:00:48.886690 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
26722 16:00:48.886700 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
26722 16:00:48.886771 read(6, "", 4096) = 0
26722 16:00:48.886782 close(6)          = 0
26722 16:00:48.886792 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.886802 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26722 16:00:48.886820 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
26722 16:00:48.886833 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
26722 16:00:48.886849 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
26722 16:00:48.886859 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
26722 16:00:48.886973 read(6, "", 4096) = 0
26722 16:00:48.886983 close(6)          = 0
26722 16:00:48.886992 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.887002 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
26722 16:00:48.887020 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
26722 16:00:48.887032 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
26722 16:00:48.887047 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
26722 16:00:48.887057 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
26722 16:00:48.887094 read(6, "", 4096) = 0
26722 16:00:48.887103 close(6)          = 0
26722 16:00:48.887116 munmap(0xb7ef5000, 4096) = 0
26722 16:00:48.887126 read(5, "", 4096) = 0
26722 16:00:48.887135 close(5)          = 0
26722 16:00:48.887144 munmap(0xb7efb000, 4096) = 0
26722 16:00:48.887156 time(NULL)        = 1495656048
26722 16:00:48.887168 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26722 16:00:48.887186 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
26722 16:00:48.887197 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
26722 16:00:48.887213 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efb000
26722 16:00:48.887223 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
26722 16:00:48.887243 read(5, "", 4096) = 0
26722 16:00:48.887252 close(5)          = 0
26722 16:00:48.887261 munmap(0xb7efb000, 4096) = 0
26722 16:00:48.887276 getuid32()        = 0
26722 16:00:48.887293 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.887307 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.887317 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26722 16:00:48.887333 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.887343 _llseek(5, 1624, [1624], SEEK_SET) = 0
26722 16:00:48.887362 munmap(0xb7efb000, 1624) = 0
26722 16:00:48.887372 close(5)          = 0
26722 16:00:48.887396 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.887412 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.887424 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26722 16:00:48.887439 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.887449 _llseek(5, 1233, [1233], SEEK_SET) = 0
26722 16:00:48.887469 munmap(0xb7efb000, 1233) = 0
26722 16:00:48.887478 close(5)          = 0
26722 16:00:48.887496 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.887509 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.887519 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26722 16:00:48.887534 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.887544 _llseek(5, 1624, [1624], SEEK_SET) = 0
26722 16:00:48.887559 munmap(0xb7efb000, 1624) = 0
26722 16:00:48.887569 close(5)          = 0
26722 16:00:48.887580 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.887592 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.887602 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26722 16:00:48.887618 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.887627 _llseek(5, 1233, [1233], SEEK_SET) = 0
26722 16:00:48.887643 munmap(0xb7efb000, 1233) = 0
26722 16:00:48.887653 close(5)          = 0
26722 16:00:48.887916 getuid32()        = 0
26722 16:00:48.887929 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.887942 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.887952 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26722 16:00:48.887968 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.887978 _llseek(5, 1624, [1624], SEEK_SET) = 0
26722 16:00:48.887994 munmap(0xb7efb000, 1624) = 0
26722 16:00:48.888003 close(5)          = 0
26722 16:00:48.888016 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.888028 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.888038 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
26722 16:00:48.888053 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.888063 _llseek(5, 1233, [1233], SEEK_SET) = 0
26722 16:00:48.888079 munmap(0xb7efb000, 1233) = 0
26722 16:00:48.888088 close(5)          = 0
26722 16:00:48.888099 time(NULL)        = 1495656048
26722 16:00:48.888114 munmap(0xb7ef8000, 12164) = 0
26722 16:00:48.888127 munmap(0xb7ef6000, 7136) = 0
26722 16:00:48.888140 munmap(0xb7d2b000, 95428) = 0
26722 16:00:48.888152 munmap(0xb7cf1000, 201052) = 0
26722 16:00:48.888162 munmap(0xb7cd8000, 101180) = 0
26722 16:00:48.888178 gettimeofday({1495656048, 888182}, NULL) = 0
26722 16:00:48.888192 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8caa34) = -1 ENOENT (No such file or directory)
26722 16:00:48.888207 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
26722 16:00:48.888232 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cab84) = 0
26722 16:00:48.888248 write(3, "Wed May 24 16:00:48 2017 [pid 26722] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
26722 16:00:48.888264 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cab8c) = 0
26722 16:00:48.888277 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26722 16:00:48.888291 write(4, "\1", 1 <unfinished ...>
26723 16:00:48.888300 <... read resumed> "\1", 1) = 1
26722 16:00:48.888305 <... write resumed> ) = 1
26723 16:00:48.888312 exit_group(0)     = ?
26722 16:00:48.888341 --- SIGCHLD (Child exited) @ 0 (0) ---
26722 16:00:48.888348 sigreturn()       = ? (mask now [])
26722 16:00:48.888367 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 26723
26722 16:00:48.888379 close(4)          = 0
26722 16:00:48.888391 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
26722 16:00:48.889053 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26722 16:00:48.889070 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26722 16:00:48.889084 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d616f8) = 26724
26724 16:00:48.889134 prctl(0x1, 0x9, 0, 0, 0) = 0
26724 16:00:48.889147 close(4)          = 0
26724 16:00:48.889173 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26724 16:00:48.889190 _llseek(4, 0, [0], SEEK_CUR) = 0
26724 16:00:48.889205 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26724 16:00:48.889223 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efb000
26724 16:00:48.889235 _llseek(4, 1624, [1624], SEEK_SET) = 0
26724 16:00:48.889257 munmap(0xb7efb000, 1624) = 0
26724 16:00:48.889414 close(4)          = 0
26724 16:00:48.889429 getuid32()        = 0
26724 16:00:48.889448 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
26724 16:00:48.889461 _llseek(4, 0, [0], SEEK_CUR) = 0
26724 16:00:48.889471 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26724 16:00:48.889488 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efb000
26724 16:00:48.889498 _llseek(4, 1624, [1624], SEEK_SET) = 0
26724 16:00:48.889514 munmap(0xb7efb000, 1624) = 0
26724 16:00:48.889523 close(4)          = 0
26724 16:00:48.889548 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
26724 16:00:48.889568 read(4, "65536\n", 31) = 6
26724 16:00:48.889581 close(4)          = 0
26724 16:00:48.889594 socket(PF_FILE, SOCK_STREAM, 0) = 4
26724 16:00:48.889605 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26724 16:00:48.889616 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26724 16:00:48.889637 close(4)          = 0
26724 16:00:48.889648 socket(PF_FILE, SOCK_STREAM, 0) = 4
26724 16:00:48.889658 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
26724 16:00:48.889668 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
26724 16:00:48.889685 close(4)          = 0
26724 16:00:48.889709 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
26724 16:00:48.889723 _llseek(4, 0, [0], SEEK_CUR) = 0
26724 16:00:48.889733 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26724 16:00:48.889749 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efb000
26724 16:00:48.889759 _llseek(4, 886, [886], SEEK_SET) = 0
26724 16:00:48.889783 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
26724 16:00:48.889800 munmap(0xb7efb000, 886) = 0
26724 16:00:48.889809 close(4)          = 0
26724 16:00:48.889819 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
26724 16:00:48.889835 geteuid32()       = 0
26724 16:00:48.889846 getegid32()       = 0
26724 16:00:48.889856 setregid32(-1, 1000) = 0
26724 16:00:48.889866 setreuid32(-1, 1000) = 0
26724 16:00:48.889881 chdir("/home/msfadmin") = 0
26724 16:00:48.889893 setreuid32(-1, 0) = 0
26724 16:00:48.889902 setregid32(-1, 0) = 0
26724 16:00:48.889912 setgid32(1000)    = 0
26724 16:00:48.889922 setuid32(1000)    = 0
26724 16:00:48.889931 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
26724 16:00:48.889944 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef9000
26724 16:00:48.889956 mprotect(0xb7efb000, 4096, PROT_NONE) = 0
26724 16:00:48.889967 mprotect(0xb7ef9000, 4096, PROT_NONE) = 0
26724 16:00:48.889977 getcwd("/home/msfadmin", 4096) = 15
26724 16:00:48.889990 umask(022)        = 077
26724 16:00:48.890000 getcwd("/home/msfadmin", 4096) = 15
26724 16:00:48.890013 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
26724 16:00:48.890034 write(0, "230 Login successful.\r\n", 23) = 23
26724 16:00:48.890114 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.890131 alarm(300)        = 0
26724 16:00:48.890142 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef6000
26724 16:00:48.890153 mprotect(0xb7ef8000, 4096, PROT_NONE) = 0
26724 16:00:48.890164 mprotect(0xb7ef6000, 4096, PROT_NONE) = 0
26724 16:00:48.890176 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
26724 16:00:48.890188 read(0, "TYPE I\r\n", 8) = 8
26724 16:00:48.890205 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26724 16:00:48.890244 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.890258 alarm(300)        = 300
26724 16:00:48.890269 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26724 16:00:48.890280 read(0, "PASV\r\n", 6) = 6
26724 16:00:48.890292 write(5, "\n", 1) = 1
26724 16:00:48.890302 read(5,  <unfinished ...>
26722 16:00:48.890314 close(5)          = 0
26722 16:00:48.890327 getuid32()        = 0
26722 16:00:48.890341 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
26722 16:00:48.890378 _llseek(5, 0, [0], SEEK_CUR) = 0
26722 16:00:48.890393 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
26722 16:00:48.890411 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efb000
26722 16:00:48.890442 _llseek(5, 1624, [1624], SEEK_SET) = 0
26722 16:00:48.890469 munmap(0xb7efb000, 1624) = 0
26722 16:00:48.890480 close(5)          = 0
26722 16:00:48.890496 setgroups32(0, []) = 0
26722 16:00:48.890507 chdir("/usr/share/empty") = 0
26722 16:00:48.890519 chroot(".")       = 0
26722 16:00:48.890529 capset(NULL, NULL) = -1 EFAULT (Bad address)
26722 16:00:48.890543 prctl(0x8, 0, 0xbf8cab68, 0x80549a6, 0xbf8cab50) = 0
26722 16:00:48.890554 prctl(0x8, 0x1, 0xbf8cab68, 0x8054a49, 0xbf8cab50) = 0
26722 16:00:48.890564 setgid32(65534)   = 0
26722 16:00:48.890573 setuid32(65534)   = 0
26722 16:00:48.890582 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
26722 16:00:48.890596 read(4, "\n", 1)  = 1
26722 16:00:48.890609 write(4, "\1", 1) = 1
26724 16:00:48.890620 <... read resumed> "\1", 1) = 1
26724 16:00:48.890627 write(5, "\f", 1) = 1
26724 16:00:48.890637 read(5,  <unfinished ...>
26722 16:00:48.890644 read(4, "\f", 1)  = 1
26722 16:00:48.890656 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26722 16:00:48.890669 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26722 16:00:48.890680 gettimeofday({1495656048, 890684}, NULL) = 0
26722 16:00:48.890696 bind(5, {sa_family=AF_INET, sin_port=htons(25692), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26722 16:00:48.890712 listen(5, 1)      = 0
26722 16:00:48.890724 write(4, "\\d\0\0", 4) = 4
26724 16:00:48.890734 <... read resumed> "\\d\0\0", 4) = 4
26724 16:00:48.890747 write(0, "227 Entering Passive Mode (127,0,0,1,100,92).\r\n", 47) = 47
26724 16:00:48.890850 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.890868 alarm(300)        = 300
26724 16:00:48.890879 recv(0, "STOR myfile16\r\n", 4096, MSG_PEEK) = 15
26724 16:00:48.890891 read(0, "STOR myfile16\r\n", 15) = 15
26724 16:00:48.890906 write(5, "\v", 1) = 1
26724 16:00:48.890916 read(5,  <unfinished ...>
26722 16:00:48.890923 read(4, "\v", 1)  = 1
26722 16:00:48.890938 write(4, "\1\0\0\0", 4) = 4
26724 16:00:48.890949 <... read resumed> "\1\0\0\0", 4) = 4
26724 16:00:48.890957 gettimeofday({1495656048, 890961}, NULL) = 0
26724 16:00:48.890968 getcwd("/home/msfadmin", 4096) = 15
26724 16:00:48.890980 open("myfile16", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26724 16:00:48.890993 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
26724 16:00:48.891010 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
26724 16:00:48.891020 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
26724 16:00:48.891030 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8caab4) = 0
26724 16:00:48.891045 ftruncate64(4, 0) = 0
26724 16:00:48.891063 _llseek(4, 0, [0], SEEK_SET) = 0
26724 16:00:48.891074 write(5, "\v", 1) = 1
26724 16:00:48.891084 read(5,  <unfinished ...>
26722 16:00:48.891090 read(4, "\v", 1)  = 1
26722 16:00:48.891101 write(4, "\1\0\0\0", 4) = 4
26724 16:00:48.891111 <... read resumed> "\1\0\0\0", 4) = 4
26724 16:00:48.891119 write(5, "\v", 1) = 1
26724 16:00:48.891128 read(5,  <unfinished ...>
26722 16:00:48.891134 read(4, "\v", 1)  = 1
26722 16:00:48.891145 write(4, "\1\0\0\0", 4) = 4
26724 16:00:48.891154 <... read resumed> "\1\0\0\0", 4) = 4
26724 16:00:48.891162 write(5, "\r", 1) = 1
26724 16:00:48.891171 read(5,  <unfinished ...>
26722 16:00:48.891178 read(4, "\r", 1)  = 1
26722 16:00:48.891190 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
26722 16:00:48.891206 accept(5, {sa_family=AF_INET, sin_port=htons(44260), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
26722 16:00:48.891228 write(4, "\1", 1) = 1
26724 16:00:48.891238 <... read resumed> "\1", 1) = 1
26724 16:00:48.891247 recvmsg(5,  <unfinished ...>
26722 16:00:48.891256 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26724 16:00:48.891273 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
26724 16:00:48.891286 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
26724 16:00:48.891298 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
26724 16:00:48.891309 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
26724 16:00:48.891357 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.891386 alarm(300)        = 300
26724 16:00:48.891398 write(0, "150 Ok to send data.\r\n", 22) = 22
26724 16:00:48.891462 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d30000
26724 16:00:48.891476 mprotect(0xb7d42000, 4096, PROT_NONE) = 0
26724 16:00:48.891487 mprotect(0xb7d30000, 4096, PROT_NONE) = 0
26724 16:00:48.891497 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
26724 16:00:48.891510 write(4, "assasaaa\na\na\na\na\n", 17) = 17
26724 16:00:48.891526 read(6, "", 65536) = 0
26724 16:00:48.891536 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.891549 alarm(300)        = 300
26724 16:00:48.891559 close(6)          = 0
26724 16:00:48.891568 alarm(0)          = 300
26724 16:00:48.891577 gettimeofday({1495656048, 891580}, NULL) = 0
26724 16:00:48.891594 getpid()          = 26724
26724 16:00:48.891605 gettimeofday({1495656048, 891609}, NULL) = 0
26724 16:00:48.891625 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8caa54) = 0
26724 16:00:48.891641 write(3, "Wed May 24 16:00:48 2017 [pid 26724] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile16\", 17 bytes, 25.62Kbyte/sec\n", 131) = 131
26724 16:00:48.891661 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8caa5c) = 0
26724 16:00:48.891675 write(0, "226 Transfer complete.\r\n", 24) = 24
26724 16:00:48.891715 write(5, "\n", 1) = 1
26724 16:00:48.891726 read(5,  <unfinished ...>
26722 16:00:48.891733 close(6)          = 0
26722 16:00:48.891750 read(4, "\n", 1)  = 1
26722 16:00:48.891762 close(5)          = 0
26722 16:00:48.891776 write(4, "\1", 1) = 1
26724 16:00:48.891787 <... read resumed> "\1", 1) = 1
26724 16:00:48.891794 close(4)          = 0
26724 16:00:48.891804 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:48.891817 alarm(300)        = 0
26724 16:00:48.891828 recv(0,  <unfinished ...>
26722 16:00:48.891835 read(4,  <unfinished ...>
26724 16:00:49.428287 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
26724 16:00:49.428317 read(0, "TYPE I\r\n", 8) = 8
26724 16:00:49.428339 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
26724 16:00:49.428386 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:49.428404 alarm(300)        = 299
26724 16:00:49.428416 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
26724 16:00:49.428427 read(0, "PASV\r\n", 6) = 6
26724 16:00:49.428439 write(5, "\n", 1) = 1
26724 16:00:49.428451 read(5,  <unfinished ...>
26722 16:00:49.428459 <... read resumed> "\n", 1) = 1
26722 16:00:49.428468 write(4, "\1", 1) = 1
26724 16:00:49.428479 <... read resumed> "\1", 1) = 1
26724 16:00:49.428486 write(5, "\f", 1) = 1
26724 16:00:49.428495 read(5,  <unfinished ...>
26722 16:00:49.428502 read(4, "\f", 1)  = 1
26722 16:00:49.428513 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
26722 16:00:49.428529 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
26722 16:00:49.428543 bind(5, {sa_family=AF_INET, sin_port=htons(23825), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
26722 16:00:49.428559 listen(5, 1)      = 0
26722 16:00:49.428573 write(4, "\21]\0\0", 4) = 4
26724 16:00:49.428583 <... read resumed> "\21]\0\0", 4) = 4
26724 16:00:49.428595 write(0, "227 Entering Passive Mode (127,0,0,1,93,17).\r\n", 46) = 46
26724 16:00:49.428706 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
26724 16:00:49.428723 alarm(300)        = 300
26724 16:00:49.428734 recv(0, "STOR myfile17\r\n", 4096, MSG_PEEK) = 15
26724 16:00:49.428746 read(0, "STOR myfile17\r\n", 15) = 15
26724 16:00:49.428759 write(5, "\v", 1) = 1
26724 16:00:49.428769 read(5,  <unfinished ...>
26722 16:00:49.428776 read(4, "\v", 1)  = 1
26722 16:00:49.428787 write(4, "\1\0\0\0", 4) = 4
26724 16:00:49.428797 <... read resumed> "\1\0\0\0", 4) = 4
26724 16:00:49.428805 gettimeofday({1495656049, 428808}, NULL) = 0
26724 16:00:49.428815 getcwd("/home/msfadmin", 4096) = 15
26724 16:00:49.428828 open("myfile17", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
26724 16:00:49.428842 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
