14846 15:42:43.928858 mmap2(0xb7d01000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d01000
14846 15:42:43.928891 close(7)          = 0
14846 15:42:43.928919 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14846 15:42:43.928949 open("/lib/libselinux.so.1", O_RDONLY) = 7
14846 15:42:43.928976 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
14846 15:42:43.929166 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
14846 15:42:43.929204 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cdd000
14846 15:42:43.929230 mmap2(0xb7cf4000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7cf4000
14846 15:42:43.929265 close(7)          = 0
14846 15:42:43.929504 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14846 15:42:43.929565 statfs64("/selinux", 84, 0xbfd8b81c) = -1 ENOENT (No such file or directory)
14846 15:42:43.929594 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
14846 15:42:43.929644 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
14846 15:42:43.929682 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef9000
14846 15:42:43.929708 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
14846 15:42:43.929883 read(7, "", 1024) = 0
14846 15:42:43.929905 close(7)          = 0
14846 15:42:43.929927 munmap(0xb7ef9000, 4096) = 0
14846 15:42:43.929961 munmap(0xb7d28000, 29913) = 0
14846 15:42:43.929991 read(6, "", 4096) = 0
14846 15:42:43.930016 close(6)          = 0
14846 15:42:43.930037 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.930061 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.930113 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.930143 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14846 15:42:43.930179 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.930203 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14846 15:42:43.930311 read(6, "", 4096) = 0
14846 15:42:43.930336 close(6)          = 0
14846 15:42:43.930356 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.930381 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.930424 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.930453 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14846 15:42:43.930488 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.930512 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14846 15:42:43.930597 read(6, "", 4096) = 0
14846 15:42:43.930619 close(6)          = 0
14846 15:42:43.930640 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.930662 read(5, "", 4096) = 0
14846 15:42:43.930683 close(5)          = 0
14846 15:42:43.930703 munmap(0xb7f00000, 4096) = 0
14846 15:42:43.930726 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14846 15:42:43.930754 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14846 15:42:43.930790 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
14846 15:42:43.930851 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14846 15:42:43.930955 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.930997 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.931026 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14846 15:42:43.931062 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.931086 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14846 15:42:43.931188 read(6, "", 4096) = 0
14846 15:42:43.931211 close(6)          = 0
14846 15:42:43.931249 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.931279 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.931321 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.931351 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14846 15:42:43.931386 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.931417 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14846 15:42:43.931503 read(6, "", 4096) = 0
14846 15:42:43.931526 close(6)          = 0
14846 15:42:43.931546 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.931570 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.931610 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.931639 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14846 15:42:43.931674 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.931697 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14846 15:42:43.931948 read(6, "", 4096) = 0
14846 15:42:43.931970 close(6)          = 0
14846 15:42:43.931991 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.932014 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14846 15:42:43.932055 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14846 15:42:43.932083 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14846 15:42:43.932118 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
14846 15:42:43.932141 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14846 15:42:43.932245 read(6, "", 4096) = 0
14846 15:42:43.932270 close(6)          = 0
14846 15:42:43.932291 munmap(0xb7efa000, 4096) = 0
14846 15:42:43.932314 read(5, "", 4096) = 0
14846 15:42:43.932334 close(5)          = 0
14846 15:42:43.932354 munmap(0xb7f00000, 4096) = 0
14846 15:42:43.932382 time(NULL)        = 1495654963
14846 15:42:43.932408 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14846 15:42:43.932449 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14846 15:42:43.932483 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14846 15:42:43.932518 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
14846 15:42:43.932542 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14846 15:42:43.932588 read(5, "", 4096) = 0
14846 15:42:43.932608 close(5)          = 0
14846 15:42:43.932629 munmap(0xb7f00000, 4096) = 0
14846 15:42:43.932663 getuid32()        = 0
14846 15:42:43.932699 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.932731 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.932755 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14846 15:42:43.932791 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.932815 _llseek(5, 1624, [1624], SEEK_SET) = 0
14846 15:42:43.932857 munmap(0xb7f00000, 1624) = 0
14846 15:42:43.932881 close(5)          = 0
14846 15:42:43.932934 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.932971 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.932994 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14846 15:42:43.933030 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.933053 _llseek(5, 1233, [1233], SEEK_SET) = 0
14846 15:42:43.933096 munmap(0xb7f00000, 1233) = 0
14846 15:42:43.933117 close(5)          = 0
14846 15:42:43.933157 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.933204 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.933229 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14846 15:42:43.933264 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.933288 _llseek(5, 1624, [1624], SEEK_SET) = 0
14846 15:42:43.933325 munmap(0xb7f00000, 1624) = 0
14846 15:42:43.933346 close(5)          = 0
14846 15:42:43.933375 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.933404 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.933427 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14846 15:42:43.933462 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.933485 _llseek(5, 1233, [1233], SEEK_SET) = 0
14846 15:42:43.933521 munmap(0xb7f00000, 1233) = 0
14846 15:42:43.933541 close(5)          = 0
14846 15:42:43.934049 getuid32()        = 0
14846 15:42:43.934074 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.934101 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.934124 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14846 15:42:43.934194 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.934232 _llseek(5, 1624, [1624], SEEK_SET) = 0
14846 15:42:43.934287 munmap(0xb7f00000, 1624) = 0
14846 15:42:43.934322 close(5)          = 0
14846 15:42:43.934361 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.934392 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.934415 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14846 15:42:43.934451 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.934475 _llseek(5, 1233, [1233], SEEK_SET) = 0
14846 15:42:43.934512 munmap(0xb7f00000, 1233) = 0
14846 15:42:43.934533 close(5)          = 0
14846 15:42:43.934559 time(NULL)        = 1495654963
14846 15:42:43.934593 munmap(0xb7efd000, 12164) = 0
14846 15:42:43.934623 munmap(0xb7efb000, 7136) = 0
14846 15:42:43.934653 munmap(0xb7d30000, 95428) = 0
14846 15:42:43.934678 munmap(0xb7cf6000, 201052) = 0
14846 15:42:43.934702 munmap(0xb7cdd000, 101180) = 0
14846 15:42:43.934738 gettimeofday({1495654963, 934747}, NULL) = 0
14846 15:42:43.934763 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfd8d6f4) = -1 ENOENT (No such file or directory)
14846 15:42:43.934796 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14846 15:42:43.934853 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd8d844) = 0
14846 15:42:43.934888 write(3, "Wed May 24 15:42:43 2017 [pid 14846] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14846 15:42:43.934934 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd8d84c) = 0
14846 15:42:43.934964 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14846 15:42:43.934995 write(4, "\1", 1 <unfinished ...>
14847 15:42:43.935016 <... read resumed> "\1", 1) = 1
14846 15:42:43.935028 <... write resumed> ) = 1
14847 15:42:43.935044 exit_group(0)     = ?
14846 15:42:43.935126 --- SIGCHLD (Child exited) @ 0 (0) ---
14846 15:42:43.935144 sigreturn()       = ? (mask now [])
14846 15:42:43.935188 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14847
14846 15:42:43.935216 close(4)          = 0
14846 15:42:43.935243 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14846 15:42:43.935274 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14846 15:42:43.935304 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14846 15:42:43.935334 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d666f8) = 14848
14848 15:42:43.935446 prctl(0x1, 0x9, 0, 0, 0) = 0
14848 15:42:43.935475 close(4)          = 0
14848 15:42:43.935535 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14848 15:42:43.935572 _llseek(4, 0, [0], SEEK_CUR) = 0
14848 15:42:43.935606 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14848 15:42:43.935646 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f00000
14848 15:42:43.935672 _llseek(4, 1624, [1624], SEEK_SET) = 0
14848 15:42:43.935722 munmap(0xb7f00000, 1624) = 0
14848 15:42:43.935747 close(4)          = 0
14848 15:42:43.935777 getuid32()        = 0
14848 15:42:43.935799 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14848 15:42:43.935827 _llseek(4, 0, [0], SEEK_CUR) = 0
14848 15:42:43.935850 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14848 15:42:43.935938 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f00000
14848 15:42:43.935971 _llseek(4, 1624, [1624], SEEK_SET) = 0
14848 15:42:43.936009 munmap(0xb7f00000, 1624) = 0
14848 15:42:43.936031 close(4)          = 0
14848 15:42:43.936110 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14848 15:42:43.936158 read(4, "65536\n", 31) = 6
14848 15:42:43.936185 close(4)          = 0
14848 15:42:43.936217 socket(PF_FILE, SOCK_STREAM, 0) = 4
14848 15:42:43.936244 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14848 15:42:43.936268 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14848 15:42:43.936314 close(4)          = 0
14848 15:42:43.936340 socket(PF_FILE, SOCK_STREAM, 0) = 4
14848 15:42:43.936362 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14848 15:42:43.936385 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14848 15:42:43.936424 close(4)          = 0
14848 15:42:43.936476 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14848 15:42:43.936508 _llseek(4, 0, [0], SEEK_CUR) = 0
14848 15:42:43.936532 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14848 15:42:43.936568 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f00000
14848 15:42:43.936593 _llseek(4, 886, [886], SEEK_SET) = 0
14848 15:42:43.936646 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14848 15:42:43.936683 munmap(0xb7f00000, 886) = 0
14848 15:42:43.936705 close(4)          = 0
14848 15:42:43.936727 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14848 15:42:43.936763 geteuid32()       = 0
14848 15:42:43.936787 getegid32()       = 0
14848 15:42:43.936810 setregid32(-1, 1000) = 0
14848 15:42:43.936833 setreuid32(-1, 1000) = 0
14848 15:42:43.936857 chdir("/home/msfadmin") = 0
14848 15:42:43.936882 setreuid32(-1, 0) = 0
14848 15:42:43.936902 setregid32(-1, 0) = 0
14848 15:42:43.936925 setgid32(1000)    = 0
14848 15:42:43.936947 setuid32(1000)    = 0
14848 15:42:43.936970 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14848 15:42:43.936999 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efe000
14848 15:42:43.937048 mprotect(0xb7f00000, 4096, PROT_NONE) = 0
14848 15:42:43.937077 mprotect(0xb7efe000, 4096, PROT_NONE) = 0
14848 15:42:43.937102 getcwd("/home/msfadmin", 4096) = 15
14848 15:42:43.937132 umask(022)        = 077
14848 15:42:43.937154 getcwd("/home/msfadmin", 4096) = 15
14848 15:42:43.937184 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14848 15:42:43.937235 write(0, "230 Login successful.\r\n", 23) = 23
14848 15:42:43.937410 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14848 15:42:43.937449 alarm(300)        = 0
14848 15:42:43.937472 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efb000
14848 15:42:43.937498 mprotect(0xb7efd000, 4096, PROT_NONE) = 0
14848 15:42:43.937522 mprotect(0xb7efb000, 4096, PROT_NONE) = 0
14848 15:42:43.937551 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
14848 15:42:43.937578 read(0, "TYPE I\r\n", 8) = 8
14848 15:42:43.937616 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
14848 15:42:43.937700 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14848 15:42:43.937732 alarm(300)        = 300
14848 15:42:43.937756 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
14848 15:42:43.937781 read(0, "PASV\r\n", 6) = 6
14848 15:42:43.937808 write(5, "\n", 1) = 1
14848 15:42:43.937832 read(5,  <unfinished ...>
14846 15:42:43.937859 close(5)          = 0
14846 15:42:43.937887 getuid32()        = 0
14846 15:42:43.937921 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14846 15:42:43.937953 _llseek(5, 0, [0], SEEK_CUR) = 0
14846 15:42:43.937980 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14846 15:42:43.938160 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f00000
14846 15:42:43.938188 _llseek(5, 1624, [1624], SEEK_SET) = 0
14846 15:42:43.938227 munmap(0xb7f00000, 1624) = 0
14846 15:42:43.938252 close(5)          = 0
14846 15:42:43.938288 setgroups32(0, []) = 0
14846 15:42:43.938313 chdir("/usr/share/empty") = 0
14846 15:42:43.938340 chroot(".")       = 0
14846 15:42:43.938363 capset(NULL, NULL) = -1 EFAULT (Bad address)
14846 15:42:43.938392 prctl(0x8, 0, 0xbfd8d828, 0x80549a6, 0xbfd8d810) = 0
14846 15:42:43.938418 prctl(0x8, 0x1, 0xbfd8d828, 0x8054a49, 0xbfd8d810) = 0
14846 15:42:43.938440 setgid32(65534)   = 0
14846 15:42:43.938462 setuid32(65534)   = 0
14846 15:42:43.938483 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14846 15:42:43.938513 read(4, "\n", 1)  = 1
14846 15:42:43.938543 write(4, "\1", 1) = 1
14848 15:42:43.938567 <... read resumed> "\1", 1) = 1
14848 15:42:43.938584 write(5, "\f", 1) = 1
14848 15:42:43.938606 read(5,  <unfinished ...>
14846 15:42:43.938621 read(4, "\f", 1)  = 1
14846 15:42:43.938649 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
14846 15:42:43.938678 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
14846 15:42:43.938704 gettimeofday({1495654963, 938712}, NULL) = 0
14846 15:42:43.938739 bind(5, {sa_family=AF_INET, sin_port=htons(9067), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
14846 15:42:43.938773 listen(5, 1)      = 0
14846 15:42:43.938801 write(4, "k#\0\0", 4) = 4
14848 15:42:43.938825 <... read resumed> "k#\0\0", 4) = 4
14848 15:42:43.938856 write(0, "227 Entering Passive Mode (127,0,0,1,35,107).\r\n", 47) = 47
14848 15:42:43.939070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14848 15:42:43.939129 alarm(300)        = 300
14848 15:42:43.939154 recv(0, "STOR myfile34\r\n", 4096, MSG_PEEK) = 15
14848 15:42:43.939182 read(0, "STOR myfile34\r\n", 15) = 15
14848 15:42:43.939216 write(5, "\v", 1) = 1
14848 15:42:43.939240 read(5,  <unfinished ...>
14846 15:42:43.939256 read(4, "\v", 1)  = 1
14846 15:42:43.939280 write(4, "\1\0\0\0", 4) = 4
14848 15:42:43.939304 <... read resumed> "\1\0\0\0", 4) = 4
14848 15:42:43.939323 gettimeofday({1495654963, 939331}, NULL) = 0
14848 15:42:43.939346 getcwd("/home/msfadmin", 4096) = 15
14848 15:42:43.939375 open("myfile34", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
14848 15:42:43.939405 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
14848 15:42:43.939452 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
14848 15:42:43.939476 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
14848 15:42:43.939498 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd8d774) = 0
14848 15:42:43.939532 ftruncate64(4, 0) = 0
14848 15:42:43.939570 _llseek(4, 0, [0], SEEK_SET) = 0
14848 15:42:43.939593 write(5, "\v", 1) = 1
14848 15:42:43.939616 read(5,  <unfinished ...>
14846 15:42:43.939632 read(4, "\v", 1)  = 1
14846 15:42:43.939657 write(4, "\1\0\0\0", 4) = 4
14848 15:42:43.939680 <... read resumed> "\1\0\0\0", 4) = 4
14848 15:42:43.939696 write(5, "\v", 1) = 1
14848 15:42:43.939718 read(5,  <unfinished ...>
14846 15:42:43.939732 read(4, "\v", 1)  = 1
14846 15:42:43.939756 write(4, "\1\0\0\0", 4) = 4
14848 15:42:43.939779 <... read resumed> "\1\0\0\0", 4) = 4
14848 15:42:43.939795 write(5, "\r", 1) = 1
14848 15:42:43.939817 read(5,  <unfinished ...>
14846 15:42:43.939831 read(4, "\r", 1)  = 1
14846 15:42:43.939859 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
14846 15:42:43.939896 accept(5, {sa_family=AF_INET, sin_port=htons(33088), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
14846 15:42:43.939944 write(4, "\1", 1) = 1
14848 15:42:43.939967 <... read resumed> "\1", 1) = 1
14848 15:42:43.939988 recvmsg(5,  <unfinished ...>
14846 15:42:43.940008 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14848 15:42:43.940067 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14848 15:42:43.940101 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
14848 15:42:43.940128 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
14848 15:42:43.940154 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
14848 15:42:43.940178 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14848 15:42:43.940208 alarm(300)        = 300
14848 15:42:43.940242 write(0, "150 Ok to send data.\r\n", 22) = 22
14848 15:42:43.940379 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d35000
14848 15:42:43.940410 mprotect(0xb7d47000, 4096, PROT_NONE) = 0
14848 15:42:43.940436 mprotect(0xb7d35000, 4096, PROT_NONE) = 0
14848 15:42:43.940458 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
14848 15:42:43.940487 write(4, "assasaaa\na\na\na\na\n", 17) = 17
14848 15:42:43.940521 read(6, "", 65536) = 0
14848 15:42:43.940544 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14848 15:42:43.940574 alarm(300)        = 300
14848 15:42:43.940596 close(6)          = 0
14848 15:42:43.940616 alarm(0)          = 300
14848 15:42:43.940636 gettimeofday({1495654963, 940644}, NULL) = 0
14848 15:42:43.940675 getpid()          = 14848
