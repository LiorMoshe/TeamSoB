9735  14:50:54.969253 write(5, "\10\0\0\0", 4) = 4
9735  14:50:54.969280 write(5, "msfadmin", 8) = 8
9735  14:50:54.969306 write(5, "\0\0\0\0", 4) = 4
9735  14:50:54.969332 write(5, "\0\0\0\0", 4) = 4
9735  14:50:54.969358 read(5,  <unfinished ...>
9734  14:50:54.969389 close(5)          = 0
9734  14:50:54.969415 read(4, "\1", 1)  = 1
9734  14:50:54.969446 read(4, "\10\0\0\0", 4) = 4
9734  14:50:54.969490 read(4, "msfadmin", 8) = 8
9734  14:50:54.969520 read(4, "\10\0\0\0", 4) = 4
9734  14:50:54.969548 read(4, "msfadmin", 8) = 8
9734  14:50:54.969575 read(4, "\0\0\0\0", 4) = 4
9734  14:50:54.970329 read(4, "\0\0\0\0", 4) = 4
9734  14:50:54.970400 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.970461 open("/etc/pam.d/ftp", O_RDONLY|O_LARGEFILE) = 5
9734  14:50:54.970497 fstat64(5, {st_mode=S_IFREG|0644, st_size=408, ...}) = 0
9734  14:50:54.970538 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
9734  14:50:54.970567 read(5, "# Standard behaviour for ftpd(8).\nauth\trequired\tpam_listfile.so item=user sense=deny file=/etc/ftpusers onerr=succeed\n\n# This line is required by ftpd(8).\nauth\tsufficient\tpam_ftp.so\n\n# Uncomment this to achieve what used to be ftpd -A.\n#auth\trequired\tpam_listfile.so item=user sense=allow file=/etc/ftpchroot onerr=fail\n\n# Standard blurb.\n@include common-auth\n@include common-account\n@include common-session\n", 4096) = 408
9734  14:50:54.970715 open("/lib/security/pam_listfile.so", O_RDONLY) = 6
9734  14:50:54.970757 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\n\0\0004\0\0\0P \0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\36\0\0\24\36\0\0\5\0\0\0\0\20\0\0\1\0\0\0\24\36\0\0\24.\0\0\24.\0\0l\1\0\0p\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0(\36\0\0(.\0\0(.\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0003\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\33\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\0\0\0\0\23\0\0\0\17\0\0\0\34\0\0\0\2\0\0\0\16\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\20\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\35\0\0\0\n\0\0\0\1\0\0\0\t\0\0\0\0\0\0\0\22\0\0\0\26\0\0\0\v\0\0\0\4\0\0\0\7\0\0\0\5\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
9734  14:50:54.970974 fstat64(6, {st_mode=S_IFREG|0644, st_size=9272, ...}) = 0
9734  14:50:54.971019 mmap2(NULL, 12164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f57000
9734  14:50:54.971049 mmap2(0xb7f59000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1) = 0xb7f59000
9734  14:50:54.971085 close(6)          = 0
9734  14:50:54.971170 open("/lib/security/pam_ftp.so", O_RDONLY) = 6
9734  14:50:54.971204 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\5\0\0004\0\0\0\264\f\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\n\0\0\240\n\0\0\5\0\0\0\0\20\0\0\1\0\0\0\240\n\0\0\240\32\0\0\240\32\0\0<\1\0\0@\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274\n\0\0\274\32\0\0\274\32\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\30\0\0\0\16\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\4\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\6\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\10\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\f\0\0\0\1\0\0\0\5\0\0\0\1H@\0\f\0\0\0\r\0\0\0\301\225Y\346\313\306\36\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\354\2\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0c\0\0\0\0\0\0\0;\0\0\0\22\0\0\0\225\0\0\0\0\0\0\0.\3\0\0\22\0\0\0y\0\0\0\0\0\0\0\343\0\0\0\22\0\0\0\216\0\0\0\0\0\0\0\22\1\0\0\22\0\0\0n\0\0\0\0\0\0\0", 512) = 512
9734  14:50:54.971427 fstat64(6, {st_mode=S_IFREG|0644, st_size=4292, ...}) = 0
9734  14:50:54.971471 mmap2(NULL, 7136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f55000
9734  14:50:54.971500 mmap2(0xb7f56000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0) = 0xb7f56000
9734  14:50:54.971533 close(6)          = 0
9734  14:50:54.971585 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.971634 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.971692 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
9734  14:50:54.971737 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.971765 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
9734  14:50:54.971890 open("/lib/security/pam_unix.so", O_RDONLY) = 7
9734  14:50:54.971923 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
9734  14:50:54.972134 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
9734  14:50:54.972177 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d8a000
9734  14:50:54.972207 mmap2(0xb7d95000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d95000
9734  14:50:54.972243 mmap2(0xb7d96000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d96000
9734  14:50:54.972271 close(7)          = 0
9734  14:50:54.972302 open("/etc/ld.so.cache", O_RDONLY) = 7
9734  14:50:54.972332 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
9734  14:50:54.972372 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d82000
9734  14:50:54.972397 close(7)          = 0
9734  14:50:54.972424 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9734  14:50:54.972463 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
9734  14:50:54.972499 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
9734  14:50:54.972745 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
9734  14:50:54.972793 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d50000
9734  14:50:54.972822 mmap2(0xb7d59000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d59000
9734  14:50:54.972860 mmap2(0xb7d5b000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d5b000
9734  14:50:54.972897 close(7)          = 0
9734  14:50:54.972928 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9734  14:50:54.972964 open("/lib/libselinux.so.1", O_RDONLY) = 7
9734  14:50:54.972995 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
9734  14:50:54.973212 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
9734  14:50:54.973255 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d37000
9734  14:50:54.973283 mmap2(0xb7d4e000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d4e000
9734  14:50:54.973324 close(7)          = 0
9734  14:50:54.973567 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
9734  14:50:54.973659 statfs64("/selinux", 84, 0xbfd36fcc) = -1 ENOENT (No such file or directory)
9734  14:50:54.973695 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
9734  14:50:54.973752 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
9734  14:50:54.973795 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f53000
9734  14:50:54.973824 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
9734  14:50:54.974035 read(7, "", 1024) = 0
9734  14:50:54.974061 close(7)          = 0
9734  14:50:54.974086 munmap(0xb7f53000, 4096) = 0
9734  14:50:54.974127 munmap(0xb7d82000, 29913) = 0
9734  14:50:54.974162 read(6, "", 4096) = 0
9734  14:50:54.974189 close(6)          = 0
9734  14:50:54.974212 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.974240 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.974289 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.974322 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
9734  14:50:54.974363 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.974390 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
9734  14:50:54.974489 read(6, "", 4096) = 0
9734  14:50:54.974513 close(6)          = 0
9734  14:50:54.974536 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.974582 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.974635 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.974668 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
9734  14:50:54.974708 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.974735 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
9734  14:50:54.974833 read(6, "", 4096) = 0
9734  14:50:54.974857 close(6)          = 0
9734  14:50:54.974880 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.974906 read(5, "", 4096) = 0
9734  14:50:54.974930 close(5)          = 0
9734  14:50:54.974952 munmap(0xb7f5a000, 4096) = 0
9734  14:50:54.974978 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
9734  14:50:54.975009 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
9734  14:50:54.975049 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
9734  14:50:54.975075 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
9734  14:50:54.975188 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.975233 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.975263 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
9734  14:50:54.975303 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.975330 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
9734  14:50:54.975453 read(6, "", 4096) = 0
9734  14:50:54.975478 close(6)          = 0
9734  14:50:54.975501 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.975544 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.975598 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.975631 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
9734  14:50:54.975670 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.975697 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
9734  14:50:54.975795 read(6, "", 4096) = 0
9734  14:50:54.975819 close(6)          = 0
9734  14:50:54.975842 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.975869 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.975915 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.975946 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
9734  14:50:54.975986 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.976011 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
9734  14:50:54.976261 read(6, "", 4096) = 0
9734  14:50:54.976294 close(6)          = 0
9734  14:50:54.976318 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.976346 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9734  14:50:54.976544 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
9734  14:50:54.976580 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
9734  14:50:54.976621 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f54000
9734  14:50:54.976648 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
9734  14:50:54.976757 read(6, "", 4096) = 0
9734  14:50:54.976782 close(6)          = 0
9734  14:50:54.976806 munmap(0xb7f54000, 4096) = 0
9734  14:50:54.976832 read(5, "", 4096) = 0
9734  14:50:54.976856 close(5)          = 0
9734  14:50:54.976879 munmap(0xb7f5a000, 4096) = 0
9734  14:50:54.976910 time(NULL)        = 1495651854
9734  14:50:54.976939 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
9734  14:50:54.976985 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
9734  14:50:54.977015 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
9734  14:50:54.977055 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
9734  14:50:54.977081 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
9734  14:50:54.977133 read(5, "", 4096) = 0
9734  14:50:54.977156 close(5)          = 0
9734  14:50:54.977179 munmap(0xb7f5a000, 4096) = 0
9734  14:50:54.977216 getuid32()        = 0
9734  14:50:54.977257 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.977293 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.977320 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9734  14:50:54.977361 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.977388 _llseek(5, 1624, [1624], SEEK_SET) = 0
9734  14:50:54.977435 munmap(0xb7f5a000, 1624) = 0
9734  14:50:54.977462 close(5)          = 0
9734  14:50:54.977545 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.977590 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.977617 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9734  14:50:54.977657 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.977684 _llseek(5, 1233, [1233], SEEK_SET) = 0
9734  14:50:54.977733 munmap(0xb7f5a000, 1233) = 0
9734  14:50:54.977758 close(5)          = 0
9734  14:50:54.977804 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.977837 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.977862 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9734  14:50:54.977902 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.977929 _llseek(5, 1624, [1624], SEEK_SET) = 0
9734  14:50:54.977968 munmap(0xb7f5a000, 1624) = 0
9734  14:50:54.977992 close(5)          = 0
9734  14:50:54.978023 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.978055 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.978080 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9734  14:50:54.978120 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.978146 _llseek(5, 1233, [1233], SEEK_SET) = 0
9734  14:50:54.978187 munmap(0xb7f5a000, 1233) = 0
9734  14:50:54.978210 close(5)          = 0
9734  14:50:54.978826 getuid32()        = 0
9734  14:50:54.978861 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.978895 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.978921 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9734  14:50:54.978962 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.978989 _llseek(5, 1624, [1624], SEEK_SET) = 0
9734  14:50:54.979029 munmap(0xb7f5a000, 1624) = 0
9734  14:50:54.979054 close(5)          = 0
9734  14:50:54.979087 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.979119 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.979145 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9734  14:50:54.979185 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.979210 _llseek(5, 1233, [1233], SEEK_SET) = 0
9734  14:50:54.979261 munmap(0xb7f5a000, 1233) = 0
9734  14:50:54.979285 close(5)          = 0
9734  14:50:54.979314 time(NULL)        = 1495651854
9734  14:50:54.979352 munmap(0xb7f57000, 12164) = 0
9734  14:50:54.979431 munmap(0xb7f55000, 7136) = 0
9734  14:50:54.979483 munmap(0xb7d8a000, 95428) = 0
9734  14:50:54.979512 munmap(0xb7d50000, 201052) = 0
9734  14:50:54.979539 munmap(0xb7d37000, 101180) = 0
9734  14:50:54.979581 gettimeofday({1495651854, 979591}, NULL) = 0
9734  14:50:54.979611 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfd38ea4) = -1 ENOENT (No such file or directory)
9734  14:50:54.979647 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
9734  14:50:54.979711 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd38ff4) = 0
9734  14:50:54.979751 write(3, "Wed May 24 14:50:54 2017 [pid 9734] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 76) = 76
9734  14:50:54.979792 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd38ffc) = 0
9734  14:50:54.979824 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9734  14:50:54.979859 write(4, "\1", 1 <unfinished ...>
9735  14:50:54.979882 <... read resumed> "\1", 1) = 1
9734  14:50:54.979895 <... write resumed> ) = 1
9735  14:50:54.979913 exit_group(0)     = ?
9734  14:50:54.979984 --- SIGCHLD (Child exited) @ 0 (0) ---
9734  14:50:54.980002 sigreturn()       = ? (mask now [])
9734  14:50:54.980048 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 9735
9734  14:50:54.980079 close(4)          = 0
9734  14:50:54.980108 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
9734  14:50:54.980141 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9734  14:50:54.980177 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9734  14:50:54.980211 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dc06f8) = 9736
9736  14:50:54.980363 prctl(0x1, 0x9, 0, 0, 0) = 0
9736  14:50:54.980398 close(4)          = 0
9736  14:50:54.980465 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
9736  14:50:54.980508 _llseek(4, 0, [0], SEEK_CUR) = 0
9736  14:50:54.980545 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9736  14:50:54.980590 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f5a000
9736  14:50:54.980619 _llseek(4, 1624, [1624], SEEK_SET) = 0
9736  14:50:54.980675 munmap(0xb7f5a000, 1624) = 0
9736  14:50:54.980703 close(4)          = 0
9736  14:50:54.980736 getuid32()        = 0
9736  14:50:54.980762 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
9736  14:50:54.980793 _llseek(4, 0, [0], SEEK_CUR) = 0
9736  14:50:54.980818 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9736  14:50:54.980859 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f5a000
9736  14:50:54.980885 _llseek(4, 1624, [1624], SEEK_SET) = 0
9736  14:50:54.980924 munmap(0xb7f5a000, 1624) = 0
9736  14:50:54.980948 close(4)          = 0
9736  14:50:54.981011 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
9736  14:50:54.981059 read(4, "65536\n", 31) = 6
9736  14:50:54.981089 close(4)          = 0
9736  14:50:54.981124 socket(PF_FILE, SOCK_STREAM, 0) = 4
9736  14:50:54.981153 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
9736  14:50:54.981180 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
9736  14:50:54.981232 close(4)          = 0
9736  14:50:54.981291 socket(PF_FILE, SOCK_STREAM, 0) = 4
9736  14:50:54.981320 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
9736  14:50:54.981346 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
9736  14:50:54.981393 close(4)          = 0
9736  14:50:54.981451 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
9736  14:50:54.981487 _llseek(4, 0, [0], SEEK_CUR) = 0
9736  14:50:54.981513 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
9736  14:50:54.981554 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f5a000
9736  14:50:54.981582 _llseek(4, 886, [886], SEEK_SET) = 0
9736  14:50:54.981652 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
9736  14:50:54.981695 munmap(0xb7f5a000, 886) = 0
9736  14:50:54.981721 close(4)          = 0
9736  14:50:54.981745 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
9736  14:50:54.981785 geteuid32()       = 0
9736  14:50:54.981812 getegid32()       = 0
9736  14:50:54.981838 setregid32(-1, 1000) = 0
9736  14:50:54.981864 setreuid32(-1, 1000) = 0
9736  14:50:54.981891 chdir("/home/msfadmin") = 0
9736  14:50:54.981919 setreuid32(-1, 0) = 0
9736  14:50:54.981942 setregid32(-1, 0) = 0
9736  14:50:54.981968 setgid32(1000)    = 0
9736  14:50:54.981992 setuid32(1000)    = 0
9736  14:50:54.982017 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
9736  14:50:54.982049 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f58000
9736  14:50:54.982077 mprotect(0xb7f5a000, 4096, PROT_NONE) = 0
9736  14:50:54.982105 mprotect(0xb7f58000, 4096, PROT_NONE) = 0
9736  14:50:54.982132 getcwd("/home/msfadmin", 4096) = 15
9736  14:50:54.982165 umask(022)        = 077
9736  14:50:54.982188 getcwd("/home/msfadmin", 4096) = 15
9736  14:50:54.982245 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
9736  14:50:54.982307 write(0, "230 Login successful.\r\n", 23) = 23
9736  14:50:54.982458 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9736  14:50:54.982499 alarm(300)        = 0
9736  14:50:54.982526 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f55000
9736  14:50:54.982555 mprotect(0xb7f57000, 4096, PROT_NONE) = 0
9736  14:50:54.982582 mprotect(0xb7f55000, 4096, PROT_NONE) = 0
9736  14:50:54.982614 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
9736  14:50:54.982645 read(0, "QUIT\r\n", 6) = 6
9736  14:50:54.982680 shutdown(0, 0 /* receive */) = 0
9736  14:50:54.982711 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
9736  14:50:54.982736 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
9736  14:50:54.982761 write(0, "221 Goodbye.\r\n", 14) = 14
9736  14:50:54.982874 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
9736  14:50:54.982903 fcntl64(0, F_SETFL, O_RDWR) = 0
9736  14:50:54.982929 shutdown(0, 2 /* send and receive */) = 0
9736  14:50:54.982974 exit_group(0)     = ?
9734  14:50:54.983036 --- SIGCHLD (Child exited) @ 0 (0) ---
9734  14:50:54.983070 alarm(1)          = 0
9734  14:50:54.983099 sigreturn()       = ? (mask now [])
9734  14:50:54.983150 close(5)          = 0
9734  14:50:54.983214 getuid32()        = 0
9734  14:50:54.983256 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9734  14:50:54.983292 _llseek(5, 0, [0], SEEK_CUR) = 0
9734  14:50:54.983322 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9734  14:50:54.983367 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f5a000
9734  14:50:54.983395 _llseek(5, 1624, [1624], SEEK_SET) = 0
9734  14:50:54.983439 munmap(0xb7f5a000, 1624) = 0
9734  14:50:54.983467 close(5)          = 0
9734  14:50:54.983498 setgroups32(0, []) = 0
9734  14:50:54.983524 chdir("/usr/share/empty") = 0
9734  14:50:54.983554 chroot(".")       = 0
9734  14:50:54.983581 capset(NULL, NULL) = -1 EFAULT (Bad address)
9734  14:50:54.983609 prctl(0x8, 0, 0xbfd38fd8, 0x80549a6, 0xbfd38fc0) = 0
9734  14:50:54.983635 prctl(0x8, 0x1, 0xbfd38fd8, 0x8054a49, 0xbfd38fc0) = 0
9734  14:50:54.983660 setgid32(65534)   = 0
9734  14:50:54.983684 setuid32(65534)   = 0
9734  14:50:54.983708 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
9734  14:50:54.983739 read(4, "", 1)    = 0
9734  14:50:54.983765 alarm(0)          = 1
9734  14:50:54.983790 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 9736
9734  14:50:54.983822 exit_group(0)     = ?
4439  14:50:54.983906 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  14:50:54.983922 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  14:50:54.983940 write(4, "\21", 1) = 1
4439  14:50:54.983974 sigreturn()       = ? (mask now [])
4439  14:50:54.984055 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  14:50:54.984109 ioctl(3, FIONREAD, [1]) = 0
4439  14:50:54.984142 read(3, "\21", 1) = 1
4439  14:50:54.984200 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 9734
4439  14:50:54.984238 close(-1)         = -1 EBADF (Bad file descriptor)
4439  14:50:54.984271 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  14:50:54.984298 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  14:50:55.507209 accept(5, {sa_family=AF_INET, sin_port=htons(41402), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  14:50:55.507671 time(NULL)        = 1495651855
4439  14:50:55.507786 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 9737
9737  14:50:55.508178 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
9737  14:50:55.508245 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
9737  14:50:55.508298 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
9737  14:50:55.508349 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
9737  14:50:55.508411 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
9737  14:50:55.508467 close(3)          = 0
9737  14:50:55.508511 close(4)          = 0
9737  14:50:55.508628 open("/dev/null", O_RDONLY) = 3
9737  14:50:55.508692 dup2(3, 0)        = 0
9737  14:50:55.508733 dup2(3, 1)        = 1
9737  14:50:55.508771 dup2(3, 2)        = 2
9737  14:50:55.508809 close(3)          = 0
9737  14:50:55.508860 setgid32(0)       = 0
9737  14:50:55.508913 setgroups32(0, []) = 0
9737  14:50:55.508958 setuid32(0)       = 0
9737  14:50:55.509007 getpriority(PRIO_PROCESS, 0) = 20
9737  14:50:55.509048 setpriority(PRIO_PROCESS, 0, 10) = 0
9737  14:50:55.509088 getpriority(PRIO_PROCESS, 0) = 10
9737  14:50:55.509242 getpeername(13, {sa_family=AF_INET, sin_port=htons(41402), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
9737  14:50:55.509425 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
9737  14:50:55.509608 open("/etc/hosts.allow", O_RDONLY) = 3
9737  14:50:55.509704 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
9737  14:50:55.509784 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
9737  14:50:55.509838 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
9737  14:50:55.510139 close(3)          = 0
9737  14:50:55.510186 munmap(0xb7f61000, 4096) = 0
9737  14:50:55.510291 fcntl64(13, F_SETFD, 0) = 0
9737  14:50:55.510347 close(7)          = 0
9737  14:50:55.510391 dup2(13, 0)       = 0
