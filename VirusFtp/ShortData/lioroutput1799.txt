13328 15:27:33.787040 open("/lib/libselinux.so.1", O_RDONLY) = 7
13328 15:27:33.787060 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
13328 15:27:33.787197 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
13328 15:27:33.787225 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cf4000
13328 15:27:33.787243 mmap2(0xb7d0b000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d0b000
13328 15:27:33.787269 close(7)          = 0
13328 15:27:33.787428 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
13328 15:27:33.787469 statfs64("/selinux", 84, 0xbf87130c) = -1 ENOENT (No such file or directory)
13328 15:27:33.787489 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
13328 15:27:33.787526 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
13328 15:27:33.787553 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f10000
13328 15:27:33.787571 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
13328 15:27:33.787709 read(7, "", 1024) = 0
13328 15:27:33.787727 close(7)          = 0
13328 15:27:33.787743 munmap(0xb7f10000, 4096) = 0
13328 15:27:33.787768 munmap(0xb7d3f000, 29913) = 0
13328 15:27:33.787790 read(6, "", 4096) = 0
13328 15:27:33.787807 close(6)          = 0
13328 15:27:33.787822 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.787839 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.787876 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.787906 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
13328 15:27:33.787941 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.787959 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13328 15:27:33.788024 read(6, "", 4096) = 0
13328 15:27:33.788040 close(6)          = 0
13328 15:27:33.788055 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.788072 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.788102 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.788122 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13328 15:27:33.788159 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.788181 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13328 15:27:33.788259 read(6, "", 4096) = 0
13328 15:27:33.788276 close(6)          = 0
13328 15:27:33.788291 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.788309 read(5, "", 4096) = 0
13328 15:27:33.788324 close(5)          = 0
13328 15:27:33.788338 munmap(0xb7f17000, 4096) = 0
13328 15:27:33.788355 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
13328 15:27:33.788375 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
13328 15:27:33.788401 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f17000
13328 15:27:33.788418 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
13328 15:27:33.788488 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.788516 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.788536 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
13328 15:27:33.788561 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.788578 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
13328 15:27:33.788664 read(6, "", 4096) = 0
13328 15:27:33.788683 close(6)          = 0
13328 15:27:33.788698 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.788716 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.788746 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.788766 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
13328 15:27:33.788791 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.788814 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13328 15:27:33.788875 read(6, "", 4096) = 0
13328 15:27:33.788891 close(6)          = 0
13328 15:27:33.788905 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.788923 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.788951 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.788971 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
13328 15:27:33.788996 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.789012 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
13328 15:27:33.789322 read(6, "", 4096) = 0
13328 15:27:33.789339 close(6)          = 0
13328 15:27:33.789354 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.789372 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13328 15:27:33.789401 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13328 15:27:33.789422 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13328 15:27:33.789447 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f11000
13328 15:27:33.789463 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13328 15:27:33.789523 read(6, "", 4096) = 0
13328 15:27:33.789538 close(6)          = 0
13328 15:27:33.789553 munmap(0xb7f11000, 4096) = 0
13328 15:27:33.789570 read(5, "", 4096) = 0
13328 15:27:33.789584 close(5)          = 0
13328 15:27:33.789600 munmap(0xb7f17000, 4096) = 0
13328 15:27:33.789620 time(NULL)        = 1495654053
13328 15:27:33.789638 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13328 15:27:33.789667 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
13328 15:27:33.789691 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13328 15:27:33.789716 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f17000
13328 15:27:33.789733 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
13328 15:27:33.789779 read(5, "", 4096) = 0
13328 15:27:33.789795 close(5)          = 0
13328 15:27:33.789811 munmap(0xb7f17000, 4096) = 0
13328 15:27:33.789836 getuid32()        = 0
13328 15:27:33.789863 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.789886 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.789903 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13328 15:27:33.789929 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.789947 _llseek(5, 1624, [1624], SEEK_SET) = 0
13328 15:27:33.789977 munmap(0xb7f17000, 1624) = 0
13328 15:27:33.789994 close(5)          = 0
13328 15:27:33.790033 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.790060 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.790077 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13328 15:27:33.790102 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.790119 _llseek(5, 1233, [1233], SEEK_SET) = 0
13328 15:27:33.790150 munmap(0xb7f17000, 1233) = 0
13328 15:27:33.790165 close(5)          = 0
13328 15:27:33.790194 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.790215 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.790231 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13328 15:27:33.790271 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.790290 _llseek(5, 1624, [1624], SEEK_SET) = 0
13328 15:27:33.790316 munmap(0xb7f17000, 1624) = 0
13328 15:27:33.790331 close(5)          = 0
13328 15:27:33.790352 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.790372 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.790389 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13328 15:27:33.790414 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.790430 _llseek(5, 1233, [1233], SEEK_SET) = 0
13328 15:27:33.790457 munmap(0xb7f17000, 1233) = 0
13328 15:27:33.790472 close(5)          = 0
13328 15:27:33.790852 getuid32()        = 0
13328 15:27:33.790873 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.790894 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.790911 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13328 15:27:33.790936 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.790954 _llseek(5, 1624, [1624], SEEK_SET) = 0
13328 15:27:33.790979 munmap(0xb7f17000, 1624) = 0
13328 15:27:33.790994 close(5)          = 0
13328 15:27:33.791014 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.791034 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.791050 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13328 15:27:33.791075 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.791092 _llseek(5, 1233, [1233], SEEK_SET) = 0
13328 15:27:33.791118 munmap(0xb7f17000, 1233) = 0
13328 15:27:33.791133 close(5)          = 0
13328 15:27:33.791151 time(NULL)        = 1495654053
13328 15:27:33.791174 munmap(0xb7f14000, 12164) = 0
13328 15:27:33.791195 munmap(0xb7f12000, 7136) = 0
13328 15:27:33.791217 munmap(0xb7d47000, 95428) = 0
13328 15:27:33.791248 munmap(0xb7d0d000, 201052) = 0
13328 15:27:33.791267 munmap(0xb7cf4000, 101180) = 0
13328 15:27:33.791293 gettimeofday({1495654053, 791300}, NULL) = 0
13328 15:27:33.791312 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8731e4) = -1 ENOENT (No such file or directory)
13328 15:27:33.791336 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
13328 15:27:33.791378 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf873334) = 0
13328 15:27:33.791404 write(3, "Wed May 24 15:27:33 2017 [pid 13328] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
13328 15:27:33.791437 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf87333c) = 0
13328 15:27:33.791458 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13328 15:27:33.791481 write(4, "\1", 1 <unfinished ...>
13329 15:27:33.791497 <... read resumed> "\1", 1) = 1
13328 15:27:33.791506 <... write resumed> ) = 1
13329 15:27:33.791519 exit_group(0)     = ?
13328 15:27:33.791574 --- SIGCHLD (Child exited) @ 0 (0) ---
13328 15:27:33.791586 sigreturn()       = ? (mask now [])
13328 15:27:33.791616 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 13329
13328 15:27:33.791636 close(4)          = 0
13328 15:27:33.791656 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
13328 15:27:33.791679 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13328 15:27:33.791701 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13328 15:27:33.791736 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d7d6f8) = 13330
13330 15:27:33.791825 prctl(0x1, 0x9, 0, 0, 0) = 0
13330 15:27:33.791846 close(4)          = 0
13330 15:27:33.791889 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13330 15:27:33.791916 _llseek(4, 0, [0], SEEK_CUR) = 0
13330 15:27:33.791942 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13330 15:27:33.791971 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f17000
13330 15:27:33.791989 _llseek(4, 1624, [1624], SEEK_SET) = 0
13330 15:27:33.792026 munmap(0xb7f17000, 1624) = 0
13330 15:27:33.792044 close(4)          = 0
13330 15:27:33.792065 getuid32()        = 0
13330 15:27:33.792081 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13330 15:27:33.792101 _llseek(4, 0, [0], SEEK_CUR) = 0
13330 15:27:33.792118 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13330 15:27:33.792144 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f17000
13330 15:27:33.792161 _llseek(4, 1624, [1624], SEEK_SET) = 0
13330 15:27:33.792186 munmap(0xb7f17000, 1624) = 0
13330 15:27:33.792201 close(4)          = 0
13330 15:27:33.792255 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
13330 15:27:33.792290 read(4, "65536\n", 31) = 6
13330 15:27:33.792310 close(4)          = 0
13330 15:27:33.792333 socket(PF_FILE, SOCK_STREAM, 0) = 4
13330 15:27:33.792355 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13330 15:27:33.792375 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13330 15:27:33.792409 close(4)          = 0
13330 15:27:33.792428 socket(PF_FILE, SOCK_STREAM, 0) = 4
13330 15:27:33.792444 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13330 15:27:33.792461 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13330 15:27:33.792490 close(4)          = 0
13330 15:27:33.792528 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
13330 15:27:33.792551 _llseek(4, 0, [0], SEEK_CUR) = 0
13330 15:27:33.792568 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13330 15:27:33.792594 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f17000
13330 15:27:33.792612 _llseek(4, 886, [886], SEEK_SET) = 0
13330 15:27:33.792651 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13330 15:27:33.792678 munmap(0xb7f17000, 886) = 0
13330 15:27:33.792694 close(4)          = 0
13330 15:27:33.792721 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
13330 15:27:33.792754 geteuid32()       = 0
13330 15:27:33.792772 getegid32()       = 0
13330 15:27:33.792789 setregid32(-1, 1000) = 0
13330 15:27:33.792806 setreuid32(-1, 1000) = 0
13330 15:27:33.792823 chdir("/home/msfadmin") = 0
13330 15:27:33.792842 setreuid32(-1, 0) = 0
13330 15:27:33.792856 setregid32(-1, 0) = 0
13330 15:27:33.792873 setgid32(1000)    = 0
13330 15:27:33.792889 setuid32(1000)    = 0
13330 15:27:33.792905 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
13330 15:27:33.792927 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f15000
13330 15:27:33.792946 mprotect(0xb7f17000, 4096, PROT_NONE) = 0
13330 15:27:33.792970 mprotect(0xb7f15000, 4096, PROT_NONE) = 0
13330 15:27:33.792988 getcwd("/home/msfadmin", 4096) = 15
13330 15:27:33.793010 umask(022)        = 077
13330 15:27:33.793026 getcwd("/home/msfadmin", 4096) = 15
13330 15:27:33.793047 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
13330 15:27:33.793083 write(0, "230 Login successful.\r\n", 23) = 23
13330 15:27:33.793252 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13330 15:27:33.793280 alarm(300)        = 0
13330 15:27:33.793299 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f12000
13330 15:27:33.793317 mprotect(0xb7f14000, 4096, PROT_NONE) = 0
13330 15:27:33.793335 mprotect(0xb7f12000, 4096, PROT_NONE) = 0
13330 15:27:33.793356 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
13330 15:27:33.793376 read(0, "TYPE I\r\n", 8) = 8
13330 15:27:33.793403 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
13330 15:27:33.793466 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13330 15:27:33.793490 alarm(300)        = 300
13330 15:27:33.793508 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
13330 15:27:33.793526 read(0, "PASV\r\n", 6) = 6
13330 15:27:33.793545 write(5, "\n", 1) = 1
13330 15:27:33.793562 read(5,  <unfinished ...>
13328 15:27:33.793582 close(5)          = 0
13328 15:27:33.793602 getuid32()        = 0
13328 15:27:33.793626 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13328 15:27:33.793649 _llseek(5, 0, [0], SEEK_CUR) = 0
13328 15:27:33.793669 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13328 15:27:33.793696 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f17000
13328 15:27:33.793731 _llseek(5, 1624, [1624], SEEK_SET) = 0
13328 15:27:33.793761 munmap(0xb7f17000, 1624) = 0
13328 15:27:33.793780 close(5)          = 0
13328 15:27:33.793805 setgroups32(0, []) = 0
13328 15:27:33.793823 chdir("/usr/share/empty") = 0
13328 15:27:33.793843 chroot(".")       = 0
13328 15:27:33.793860 capset(NULL, NULL) = -1 EFAULT (Bad address)
13328 15:27:33.793881 prctl(0x8, 0, 0xbf873318, 0x80549a6, 0xbf873300) = 0
13328 15:27:33.793899 prctl(0x8, 0x1, 0xbf873318, 0x8054a49, 0xbf873300) = 0
13328 15:27:33.793914 setgid32(65534)   = 0
13328 15:27:33.793930 setuid32(65534)   = 0
13328 15:27:33.793945 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
13328 15:27:33.793966 read(4, "\n", 1)  = 1
13328 15:27:33.793987 write(4, "\1", 1) = 1
13330 15:27:33.794005 <... read resumed> "\1", 1) = 1
13330 15:27:33.794017 write(5, "\f", 1) = 1
13330 15:27:33.794033 read(5,  <unfinished ...>
13328 15:27:33.794044 read(4, "\f", 1)  = 1
13328 15:27:33.794064 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
13328 15:27:33.794085 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
13328 15:27:33.794104 gettimeofday({1495654053, 794109}, NULL) = 0
13328 15:27:33.794129 bind(5, {sa_family=AF_INET, sin_port=htons(58922), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
13328 15:27:33.794154 listen(5, 1)      = 0
13328 15:27:33.794175 write(4, "*\346\0\0", 4) = 4
13330 15:27:33.794192 <... read resumed> "*\346\0\0", 4) = 4
13330 15:27:33.794252 write(0, "227 Entering Passive Mode (127,0,0,1,230,42).\r\n", 47) = 47
13330 15:27:33.794416 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13330 15:27:33.794443 alarm(300)        = 300
13330 15:27:33.794461 recv(0, "STOR myfile16\r\n", 4096, MSG_PEEK) = 15
13330 15:27:33.794481 read(0, "STOR myfile16\r\n", 15) = 15
13330 15:27:33.794505 write(5, "\v", 1) = 1
13330 15:27:33.794523 read(5,  <unfinished ...>
13328 15:27:33.794534 read(4, "\v", 1)  = 1
13328 15:27:33.794552 write(4, "\1\0\0\0", 4) = 4
13330 15:27:33.794569 <... read resumed> "\1\0\0\0", 4) = 4
13330 15:27:33.794583 gettimeofday({1495654053, 794589}, NULL) = 0
13330 15:27:33.794600 getcwd("/home/msfadmin", 4096) = 15
13330 15:27:33.794620 open("myfile16", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
13330 15:27:33.794642 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
13330 15:27:33.794675 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
13330 15:27:33.794713 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
13330 15:27:33.794734 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf873264) = 0
13330 15:27:33.794760 ftruncate64(4, 0) = 0
13330 15:27:33.794790 _llseek(4, 0, [0], SEEK_SET) = 0
13330 15:27:33.794808 write(5, "\v", 1) = 1
13330 15:27:33.794825 read(5,  <unfinished ...>
13328 15:27:33.794836 read(4, "\v", 1)  = 1
13328 15:27:33.794854 write(4, "\1\0\0\0", 4) = 4
13330 15:27:33.794871 <... read resumed> "\1\0\0\0", 4) = 4
13330 15:27:33.794883 write(5, "\v", 1) = 1
13330 15:27:33.794899 read(5,  <unfinished ...>
13328 15:27:33.794910 read(4, "\v", 1)  = 1
13328 15:27:33.794927 write(4, "\1\0\0\0", 4) = 4
13330 15:27:33.794943 <... read resumed> "\1\0\0\0", 4) = 4
13330 15:27:33.794955 write(5, "\r", 1) = 1
13330 15:27:33.794971 read(5,  <unfinished ...>
13328 15:27:33.794981 read(4, "\r", 1)  = 1
13328 15:27:33.795001 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
13328 15:27:33.795028 accept(5, {sa_family=AF_INET, sin_port=htons(34137), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
13328 15:27:33.795063 write(4, "\1", 1) = 1
13330 15:27:33.795080 <... read resumed> "\1", 1) = 1
13330 15:27:33.795095 recvmsg(5,  <unfinished ...>
13328 15:27:33.795110 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13330 15:27:33.795137 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13330 15:27:33.795158 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
13330 15:27:33.795178 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
13330 15:27:33.795212 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
13330 15:27:33.795232 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13330 15:27:33.795254 alarm(300)        = 300
13330 15:27:33.795275 write(0, "150 Ok to send data.\r\n", 22) = 22
13330 15:27:33.795375 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d4c000
13330 15:27:33.795397 mprotect(0xb7d5e000, 4096, PROT_NONE) = 0
13330 15:27:33.795415 mprotect(0xb7d4c000, 4096, PROT_NONE) = 0
13330 15:27:33.795431 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
13330 15:27:33.795453 write(4, "assasaaa\na\na\na\na\n", 17) = 17
13330 15:27:33.795478 read(6, "", 65536) = 0
13330 15:27:33.795494 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13330 15:27:33.795516 alarm(300)        = 300
13330 15:27:33.795531 close(6)          = 0
13330 15:27:33.795546 alarm(0)          = 300
13330 15:27:33.795561 gettimeofday({1495654053, 795566}, NULL) = 0
13330 15:27:33.795589 getpid()          = 13330
13330 15:27:33.795608 gettimeofday({1495654053, 795614}, NULL) = 0
13330 15:27:33.795635 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf873204) = 0
13330 15:27:33.795659 write(3, "Wed May 24 15:27:33 2017 [pid 13330] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile16\", 17 bytes, 16.20Kbyte/sec\n", 131) = 131
13330 15:27:33.795955 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf87320c) = 0
