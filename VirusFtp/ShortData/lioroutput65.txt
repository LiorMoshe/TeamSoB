8552  14:39:00.981488 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
8552  14:39:00.981574 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
8552  14:39:00.981623 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa4000
8552  14:39:00.981654 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
8552  14:39:00.981880 read(7, "", 1024) = 0
8552  14:39:00.981909 close(7)          = 0
8552  14:39:00.981936 munmap(0xb7fa4000, 4096) = 0
8552  14:39:00.981980 munmap(0xb7dd3000, 29913) = 0
8552  14:39:00.982018 read(6, "", 4096) = 0
8552  14:39:00.982048 close(6)          = 0
8552  14:39:00.982073 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.982104 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.982157 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.982193 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
8552  14:39:00.982237 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.982267 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8552  14:39:00.982374 read(6, "", 4096) = 0
8552  14:39:00.982401 close(6)          = 0
8552  14:39:00.982427 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.982456 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.982532 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.982569 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8552  14:39:00.982613 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.982642 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8552  14:39:00.982747 read(6, "", 4096) = 0
8552  14:39:00.982773 close(6)          = 0
8552  14:39:00.982799 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.982828 read(5, "", 4096) = 0
8552  14:39:00.982854 close(5)          = 0
8552  14:39:00.982879 munmap(0xb7fab000, 4096) = 0
8552  14:39:00.982907 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
8552  14:39:00.982943 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
8552  14:39:00.982986 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fab000
8552  14:39:00.983014 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
8552  14:39:00.983134 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.983183 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.983216 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
8552  14:39:00.983259 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.983288 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
8552  14:39:00.983420 read(6, "", 4096) = 0
8552  14:39:00.983448 close(6)          = 0
8552  14:39:00.983492 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.983526 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.983577 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.983613 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
8552  14:39:00.983656 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.983685 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8552  14:39:00.983790 read(6, "", 4096) = 0
8552  14:39:00.983817 close(6)          = 0
8552  14:39:00.983842 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.983871 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.983920 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.984714 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
8552  14:39:00.984777 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.984808 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
8552  14:39:00.985120 read(6, "", 4096) = 0
8552  14:39:00.985190 close(6)          = 0
8552  14:39:00.985217 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.985249 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8552  14:39:00.985302 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8552  14:39:00.985338 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8552  14:39:00.985382 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa5000
8552  14:39:00.985411 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8552  14:39:00.985525 read(6, "", 4096) = 0
8552  14:39:00.985553 close(6)          = 0
8552  14:39:00.985578 munmap(0xb7fa5000, 4096) = 0
8552  14:39:00.985607 read(5, "", 4096) = 0
8552  14:39:00.985631 close(5)          = 0
8552  14:39:00.985631 munmap(0xb7fab000, 4096) = 0
8552  14:39:00.985631 time(NULL)        = 1495651140
8552  14:39:00.985632 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8552  14:39:00.985632 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
8552  14:39:00.985632 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8552  14:39:00.985632 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fab000
8552  14:39:00.985664 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
8552  14:39:00.985722 read(5, "", 4096) = 0
8552  14:39:00.985748 close(5)          = 0
8552  14:39:00.985773 munmap(0xb7fab000, 4096) = 0
8552  14:39:00.985817 getuid32()        = 0
8552  14:39:00.985861 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.985901 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.985931 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8552  14:39:00.985975 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.986006 _llseek(5, 1624, [1624], SEEK_SET) = 0
8552  14:39:00.986057 munmap(0xb7fab000, 1624) = 0
8552  14:39:00.986087 close(5)          = 0
8552  14:39:00.986152 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.986199 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.986228 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8552  14:39:00.986271 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.986301 _llseek(5, 1233, [1233], SEEK_SET) = 0
8552  14:39:00.986353 munmap(0xb7fab000, 1233) = 0
8552  14:39:00.986379 close(5)          = 0
8552  14:39:00.986429 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.986464 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.986514 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8552  14:39:00.986562 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.986592 _llseek(5, 1624, [1624], SEEK_SET) = 0
8552  14:39:00.986636 munmap(0xb7fab000, 1624) = 0
8552  14:39:00.986663 close(5)          = 0
8552  14:39:00.986698 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.986733 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.986761 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8552  14:39:00.986804 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.986832 _llseek(5, 1233, [1233], SEEK_SET) = 0
8552  14:39:00.986877 munmap(0xb7fab000, 1233) = 0
8552  14:39:00.986903 close(5)          = 0
8552  14:39:00.987546 getuid32()        = 0
8552  14:39:00.987582 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.987617 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.987645 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8552  14:39:00.987688 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.987717 _llseek(5, 1624, [1624], SEEK_SET) = 0
8552  14:39:00.987759 munmap(0xb7fab000, 1624) = 0
8552  14:39:00.987786 close(5)          = 0
8552  14:39:00.987821 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.987855 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.987883 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8552  14:39:00.987926 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.987954 _llseek(5, 1233, [1233], SEEK_SET) = 0
8552  14:39:00.987998 munmap(0xb7fab000, 1233) = 0
8552  14:39:00.988024 close(5)          = 0
8552  14:39:00.988055 time(NULL)        = 1495651140
8552  14:39:00.988095 munmap(0xb7fa8000, 12164) = 0
8552  14:39:00.988131 munmap(0xb7fa6000, 7136) = 0
8552  14:39:00.988168 munmap(0xb7ddb000, 95428) = 0
8552  14:39:00.988199 munmap(0xb7da1000, 201052) = 0
8552  14:39:00.988229 munmap(0xb7d88000, 101180) = 0
8552  14:39:00.988284 gettimeofday({1495651140, 988295}, NULL) = 0
8552  14:39:00.988316 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf910a84) = -1 ENOENT (No such file or directory)
8552  14:39:00.988356 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
8552  14:39:00.988453 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf910bd4) = 0
8552  14:39:00.988505 write(3, "Wed May 24 14:39:00 2017 [pid 8552] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 76) = 76
8552  14:39:00.988551 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf910bdc) = 0
8552  14:39:00.988586 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8552  14:39:00.988626 write(4, "\1", 1 <unfinished ...>
8553  14:39:00.988652 <... read resumed> "\1", 1) = 1
8552  14:39:00.988667 <... write resumed> ) = 1
8553  14:39:00.988687 exit_group(0)     = ?
8552  14:39:00.988771 --- SIGCHLD (Child exited) @ 0 (0) ---
8552  14:39:00.988791 sigreturn()       = ? (mask now [])
8552  14:39:00.988841 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 8553
8552  14:39:00.988876 close(4)          = 0
8552  14:39:00.988908 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
8552  14:39:00.988947 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8552  14:39:00.988985 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8552  14:39:00.989022 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e116f8) = 8554
8554  14:39:00.989159 prctl(0x1, 0x9, 0, 0, 0) = 0
8554  14:39:00.989197 close(4)          = 0
8554  14:39:00.989269 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8554  14:39:00.989315 _llseek(4, 0, [0], SEEK_CUR) = 0
8554  14:39:00.989358 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8554  14:39:00.989435 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
8554  14:39:00.989469 _llseek(4, 1624, [1624], SEEK_SET) = 0
8554  14:39:00.989530 munmap(0xb7fab000, 1624) = 0
8554  14:39:00.989562 close(4)          = 0
8554  14:39:00.989599 getuid32()        = 0
8554  14:39:00.989626 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8554  14:39:00.989661 _llseek(4, 0, [0], SEEK_CUR) = 0
8554  14:39:00.989690 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8554  14:39:00.989734 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
8554  14:39:00.989763 _llseek(4, 1624, [1624], SEEK_SET) = 0
8554  14:39:00.989805 munmap(0xb7fab000, 1624) = 0
8554  14:39:00.989832 close(4)          = 0
8554  14:39:00.989902 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
8554  14:39:00.989954 read(4, "65536\n", 31) = 6
8554  14:39:00.989987 close(4)          = 0
8554  14:39:00.990025 socket(PF_FILE, SOCK_STREAM, 0) = 4
8554  14:39:00.990056 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8554  14:39:00.990086 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8554  14:39:00.990144 close(4)          = 0
8554  14:39:00.990175 socket(PF_FILE, SOCK_STREAM, 0) = 4
8554  14:39:00.990203 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8554  14:39:00.990231 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8554  14:39:00.990280 close(4)          = 0
8554  14:39:00.990342 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
8554  14:39:00.990550 _llseek(4, 0, [0], SEEK_CUR) = 0
8554  14:39:00.990581 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8554  14:39:00.990626 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fab000
8554  14:39:00.990657 _llseek(4, 886, [886], SEEK_SET) = 0
8554  14:39:00.990725 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8554  14:39:00.990770 munmap(0xb7fab000, 886) = 0
8554  14:39:00.990799 close(4)          = 0
8554  14:39:00.990826 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
8554  14:39:00.990870 geteuid32()       = 0
8554  14:39:00.990900 getegid32()       = 0
8554  14:39:00.990929 setregid32(-1, 1000) = 0
8554  14:39:00.990968 setreuid32(-1, 1000) = 0
8554  14:39:00.990997 chdir("/home/msfadmin") = 0
8554  14:39:00.991030 setreuid32(-1, 0) = 0
8554  14:39:00.991055 setregid32(-1, 0) = 0
8554  14:39:00.991083 setgid32(1000)    = 0
8554  14:39:00.991110 setuid32(1000)    = 0
8554  14:39:00.991138 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
8554  14:39:00.991173 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa9000
8554  14:39:00.991205 mprotect(0xb7fab000, 4096, PROT_NONE) = 0
8554  14:39:00.991236 mprotect(0xb7fa9000, 4096, PROT_NONE) = 0
8554  14:39:00.991266 getcwd("/home/msfadmin", 4096) = 15
8554  14:39:00.991302 umask(022)        = 077
8554  14:39:00.991329 getcwd("/home/msfadmin", 4096) = 15
8554  14:39:00.991366 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
8554  14:39:00.991426 write(0, "230 Login successful.\r\n", 23) = 23
8554  14:39:00.991668 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.991714 alarm(300)        = 0
8554  14:39:00.991744 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa6000
8554  14:39:00.991775 mprotect(0xb7fa8000, 4096, PROT_NONE) = 0
8554  14:39:00.991806 mprotect(0xb7fa6000, 4096, PROT_NONE) = 0
8554  14:39:00.991842 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
8554  14:39:00.991876 read(0, "TYPE I\r\n", 8) = 8
8554  14:39:00.991922 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
8554  14:39:00.992023 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.992063 alarm(300)        = 300
8554  14:39:00.992094 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
8554  14:39:00.992124 read(0, "PASV\r\n", 6) = 6
8554  14:39:00.992157 write(5, "\n", 1) = 1
8554  14:39:00.992187 read(5,  <unfinished ...>
8552  14:39:00.992220 close(5)          = 0
8552  14:39:00.992254 getuid32()        = 0
8552  14:39:00.992294 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8552  14:39:00.992334 _llseek(5, 0, [0], SEEK_CUR) = 0
8552  14:39:00.992368 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8552  14:39:00.992441 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fab000
8552  14:39:00.992475 _llseek(5, 1624, [1624], SEEK_SET) = 0
8552  14:39:00.992524 munmap(0xb7fab000, 1624) = 0
8552  14:39:00.992555 close(5)          = 0
8552  14:39:00.992599 setgroups32(0, []) = 0
8552  14:39:00.992630 chdir("/usr/share/empty") = 0
8552  14:39:00.992663 chroot(".")       = 0
8552  14:39:00.992692 capset(NULL, NULL) = -1 EFAULT (Bad address)
8552  14:39:00.992728 prctl(0x8, 0, 0xbf910bb8, 0x80549a6, 0xbf910ba0) = 0
8552  14:39:00.992758 prctl(0x8, 0x1, 0xbf910bb8, 0x8054a49, 0xbf910ba0) = 0
8552  14:39:00.992786 setgid32(65534)   = 0
8552  14:39:00.992813 setuid32(65534)   = 0
8552  14:39:00.992839 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
8552  14:39:00.992877 read(4, "\n", 1)  = 1
8552  14:39:00.992913 write(4, "\1", 1) = 1
8554  14:39:00.992943 <... read resumed> "\1", 1) = 1
8554  14:39:00.992964 write(5, "\f", 1) = 1
8554  14:39:00.992992 read(5,  <unfinished ...>
8552  14:39:00.993010 read(4, "\f", 1)  = 1
8552  14:39:00.993044 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
8552  14:39:00.993081 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
8552  14:39:00.993113 gettimeofday({1495651140, 993123}, NULL) = 0
8552  14:39:00.993156 bind(5, {sa_family=AF_INET, sin_port=htons(18527), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
8552  14:39:00.993199 listen(5, 1)      = 0
8552  14:39:00.993234 write(4, "_H\0\0", 4) = 4
8554  14:39:00.993263 <... read resumed> "_H\0\0", 4) = 4
8554  14:39:00.993299 write(0, "227 Entering Passive Mode (127,0,0,1,72,95).\r\n", 46) = 46
8554  14:39:00.993595 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.993641 alarm(300)        = 300
8554  14:39:00.993673 recv(0, "STOR myfile22\r\n", 4096, MSG_PEEK) = 15
8554  14:39:00.993706 read(0, "STOR myfile22\r\n", 15) = 15
8554  14:39:00.993747 write(5, "\v", 1) = 1
8554  14:39:00.993788 read(5,  <unfinished ...>
8552  14:39:00.993808 read(4, "\v", 1)  = 1
8552  14:39:00.993840 write(4, "\1\0\0\0", 4) = 4
8554  14:39:00.993868 <... read resumed> "\1\0\0\0", 4) = 4
8554  14:39:00.993941 gettimeofday({1495651140, 993954}, NULL) = 0
8554  14:39:00.993975 getcwd("/home/msfadmin", 4096) = 15
8554  14:39:00.994010 open("myfile22", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
8554  14:39:00.994047 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
8554  14:39:00.994093 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
8554  14:39:00.994122 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
8554  14:39:00.994149 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf910b04) = 0
8554  14:39:00.994191 ftruncate64(4, 0) = 0
8554  14:39:00.994239 _llseek(4, 0, [0], SEEK_SET) = 0
8554  14:39:00.994270 write(5, "\v", 1) = 1
8554  14:39:00.994299 read(5,  <unfinished ...>
8552  14:39:00.994341 read(4, "\v", 1)  = 1
8552  14:39:00.994384 write(4, "\1\0\0\0", 4) = 4
8554  14:39:00.994415 <... read resumed> "\1\0\0\0", 4) = 4
8554  14:39:00.994435 write(5, "\v", 1) = 1
8554  14:39:00.994463 read(5,  <unfinished ...>
8552  14:39:00.994481 read(4, "\v", 1)  = 1
8552  14:39:00.994510 write(4, "\1\0\0\0", 4) = 4
8554  14:39:00.994538 <... read resumed> "\1\0\0\0", 4) = 4
8554  14:39:00.994558 write(5, "\r", 1) = 1
8554  14:39:00.994585 read(5,  <unfinished ...>
8552  14:39:00.994603 read(4, "\r", 1)  = 1
8552  14:39:00.994638 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
8552  14:39:00.994689 accept(5, {sa_family=AF_INET, sin_port=htons(42241), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
8552  14:39:00.994751 write(4, "\1", 1) = 1
8554  14:39:00.994780 <... read resumed> "\1", 1) = 1
8554  14:39:00.994805 recvmsg(5,  <unfinished ...>
8552  14:39:00.994831 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
8554  14:39:00.994877 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
8554  14:39:00.994912 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
8554  14:39:00.994946 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
8554  14:39:00.994978 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
8554  14:39:00.995009 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.995045 alarm(300)        = 300
8554  14:39:00.995080 write(0, "150 Ok to send data.\r\n", 22) = 22
8554  14:39:00.995319 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7de0000
8554  14:39:00.995359 mprotect(0xb7df2000, 4096, PROT_NONE) = 0
8554  14:39:00.995392 mprotect(0xb7de0000, 4096, PROT_NONE) = 0
8554  14:39:00.995420 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
8554  14:39:00.995457 write(4, "assasaaa\na\na\na\na\n", 17) = 17
8554  14:39:00.995500 read(6, "", 65536) = 0
8554  14:39:00.995528 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.995565 alarm(300)        = 300
8554  14:39:00.995593 close(6)          = 0
8554  14:39:00.995618 alarm(0)          = 300
8554  14:39:00.995644 gettimeofday({1495651140, 995654}, NULL) = 0
8554  14:39:00.995692 getpid()          = 8554
8554  14:39:00.995724 gettimeofday({1495651140, 995735}, NULL) = 0
8554  14:39:00.995769 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf910aa4) = 0
8554  14:39:00.995809 write(3, "Wed May 24 14:39:00 2017 [pid 8554] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile22\", 17 bytes, 9.32Kbyte/sec\n", 129) = 129
8554  14:39:00.995863 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf910aac) = 0
8554  14:39:00.995902 write(0, "226 Transfer complete.\r\n", 24) = 24
8554  14:39:00.996007 write(5, "\n", 1) = 1
8554  14:39:00.996040 read(5,  <unfinished ...>
8552  14:39:00.996059 close(6)          = 0
8552  14:39:00.996106 read(4, "\n", 1)  = 1
8552  14:39:00.996149 close(5)          = 0
8552  14:39:00.996179 write(4, "\1", 1) = 1
8554  14:39:00.996208 <... read resumed> "\1", 1) = 1
8554  14:39:00.996262 close(4)          = 0
8554  14:39:00.996299 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:00.996336 alarm(300)        = 0
8554  14:39:00.996367 recv(0,  <unfinished ...>
8552  14:39:00.996389 read(4,  <unfinished ...>
8554  14:39:01.545044 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
8554  14:39:01.545149 read(0, "TYPE I\r\n", 8) = 8
8554  14:39:01.545221 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
8554  14:39:01.545494 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8554  14:39:01.545580 alarm(300)        = 299
8554  14:39:01.545635 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
8554  14:39:01.545688 read(0, "PASV\r\n", 6) = 6
