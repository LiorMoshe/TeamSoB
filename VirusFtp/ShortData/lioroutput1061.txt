11312 15:07:10.642343 mmap2(0xb7d79000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d79000
11312 15:07:10.642381 close(7)          = 0
11312 15:07:10.642419 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11312 15:07:10.642458 open("/lib/libselinux.so.1", O_RDONLY) = 7
11312 15:07:10.642491 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
11312 15:07:10.642743 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
11312 15:07:10.642789 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d55000
11312 15:07:10.642818 mmap2(0xb7d6c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d6c000
11312 15:07:10.642860 close(7)          = 0
11312 15:07:10.643100 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11312 15:07:10.643100 statfs64("/selinux", 84, 0xbfed496c) = -1 ENOENT (No such file or directory)
11312 15:07:10.643100 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11312 15:07:10.643100 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11312 15:07:10.643101 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f71000
11312 15:07:10.643161 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11312 15:07:10.643368 read(7, "", 1024) = 0
11312 15:07:10.643395 close(7)          = 0
11312 15:07:10.643421 munmap(0xb7f71000, 4096) = 0
11312 15:07:10.643465 munmap(0xb7da0000, 29913) = 0
11312 15:07:10.643506 read(6, "", 4096) = 0
11312 15:07:10.643537 close(6)          = 0
11312 15:07:10.643559 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.643587 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.643636 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.643671 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11312 15:07:10.643709 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.643737 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11312 15:07:10.643833 read(6, "", 4096) = 0
11312 15:07:10.643857 close(6)          = 0
11312 15:07:10.643880 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.643906 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.643950 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.643983 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11312 15:07:10.644021 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.644046 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11312 15:07:10.644170 read(6, "", 4096) = 0
11312 15:07:10.644197 close(6)          = 0
11312 15:07:10.644219 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.644245 read(5, "", 4096) = 0
11312 15:07:10.644268 close(5)          = 0
11312 15:07:10.644289 munmap(0xb7f78000, 4096) = 0
11312 15:07:10.644314 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11312 15:07:10.644348 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11312 15:07:10.644386 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
11312 15:07:10.644413 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11312 15:07:10.644520 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.644565 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.644596 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11312 15:07:10.644633 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.644660 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11312 15:07:10.644785 read(6, "", 4096) = 0
11312 15:07:10.644810 close(6)          = 0
11312 15:07:10.644833 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.644860 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.644905 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.644936 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11312 15:07:10.644974 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.644999 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11312 15:07:10.645128 read(6, "", 4096) = 0
11312 15:07:10.645154 close(6)          = 0
11312 15:07:10.645177 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.645206 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.645252 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.645285 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11312 15:07:10.645323 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.645351 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11312 15:07:10.645621 read(6, "", 4096) = 0
11312 15:07:10.645647 close(6)          = 0
11312 15:07:10.645670 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.645698 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11312 15:07:10.645744 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11312 15:07:10.645776 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11312 15:07:10.645815 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11312 15:07:10.645841 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11312 15:07:10.645933 read(6, "", 4096) = 0
11312 15:07:10.645971 close(6)          = 0
11312 15:07:10.645993 munmap(0xb7f72000, 4096) = 0
11312 15:07:10.646018 read(5, "", 4096) = 0
11312 15:07:10.646091 close(5)          = 0
11312 15:07:10.646117 munmap(0xb7f78000, 4096) = 0
11312 15:07:10.646154 time(NULL)        = 1495652830
11312 15:07:10.646183 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11312 15:07:10.646229 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11312 15:07:10.646259 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11312 15:07:10.646296 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
11312 15:07:10.646324 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11312 15:07:10.646377 read(5, "", 4096) = 0
11312 15:07:10.646399 close(5)          = 0
11312 15:07:10.646421 munmap(0xb7f78000, 4096) = 0
11312 15:07:10.646463 getuid32()        = 0
11312 15:07:10.646504 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.646541 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.646568 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11312 15:07:10.646606 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.646632 _llseek(5, 1624, [1624], SEEK_SET) = 0
11312 15:07:10.646680 munmap(0xb7f78000, 1624) = 0
11312 15:07:10.646708 close(5)          = 0
11312 15:07:10.646767 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.646809 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.646835 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11312 15:07:10.646873 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.646898 _llseek(5, 1233, [1233], SEEK_SET) = 0
11312 15:07:10.646945 munmap(0xb7f78000, 1233) = 0
11312 15:07:10.646970 close(5)          = 0
11312 15:07:10.647166 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.647203 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.647228 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11312 15:07:10.647266 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.647293 _llseek(5, 1624, [1624], SEEK_SET) = 0
11312 15:07:10.647332 munmap(0xb7f78000, 1624) = 0
11312 15:07:10.647357 close(5)          = 0
11312 15:07:10.647387 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.647418 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.647443 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11312 15:07:10.647481 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.647505 _llseek(5, 1233, [1233], SEEK_SET) = 0
11312 15:07:10.647545 munmap(0xb7f78000, 1233) = 0
11312 15:07:10.647569 close(5)          = 0
11312 15:07:10.648074 getuid32()        = 0
11312 15:07:10.648152 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.648190 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.648216 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11312 15:07:10.648256 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.648285 _llseek(5, 1624, [1624], SEEK_SET) = 0
11312 15:07:10.648328 munmap(0xb7f78000, 1624) = 0
11312 15:07:10.648355 close(5)          = 0
11312 15:07:10.648389 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.648421 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.648445 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11312 15:07:10.648485 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.648509 _llseek(5, 1233, [1233], SEEK_SET) = 0
11312 15:07:10.648550 munmap(0xb7f78000, 1233) = 0
11312 15:07:10.648574 close(5)          = 0
11312 15:07:10.648603 time(NULL)        = 1495652830
11312 15:07:10.648645 munmap(0xb7f75000, 12164) = 0
11312 15:07:10.648678 munmap(0xb7f73000, 7136) = 0
11312 15:07:10.648715 munmap(0xb7da8000, 95428) = 0
11312 15:07:10.648744 munmap(0xb7d6e000, 201052) = 0
11312 15:07:10.648770 munmap(0xb7d55000, 101180) = 0
11312 15:07:10.648814 gettimeofday({1495652830, 648841}, NULL) = 0
11312 15:07:10.648859 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfed6844) = -1 ENOENT (No such file or directory)
11312 15:07:10.648897 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11312 15:07:10.648964 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfed6994) = 0
11312 15:07:10.649005 write(3, "Wed May 24 15:07:10 2017 [pid 11312] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11312 15:07:10.649048 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfed699c) = 0
11312 15:07:10.649119 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11312 15:07:10.649154 write(4, "\1", 1 <unfinished ...>
11313 15:07:10.649183 <... read resumed> "\1", 1) = 1
11312 15:07:10.649197 <... write resumed> ) = 1
11313 15:07:10.649219 exit_group(0)     = ?
11312 15:07:10.649312 --- SIGCHLD (Child exited) @ 0 (0) ---
11312 15:07:10.649331 sigreturn()       = ? (mask now [])
11312 15:07:10.649376 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11313
11312 15:07:10.649407 close(4)          = 0
11312 15:07:10.649437 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11312 15:07:10.649472 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11312 15:07:10.649505 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11312 15:07:10.649540 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dde6f8) = 11314
11314 15:07:10.649673 prctl(0x1, 0x9, 0, 0, 0) = 0
11314 15:07:10.649705 close(4)          = 0
11314 15:07:10.649768 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11314 15:07:10.649813 _llseek(4, 0, [0], SEEK_CUR) = 0
11314 15:07:10.649851 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11314 15:07:10.649897 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11314 15:07:10.649927 _llseek(4, 1624, [1624], SEEK_SET) = 0
11314 15:07:10.649983 munmap(0xb7f78000, 1624) = 0
11314 15:07:10.650012 close(4)          = 0
11314 15:07:10.650088 getuid32()        = 0
11314 15:07:10.650114 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11314 15:07:10.650147 _llseek(4, 0, [0], SEEK_CUR) = 0
11314 15:07:10.650172 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11314 15:07:10.650210 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11314 15:07:10.650237 _llseek(4, 1624, [1624], SEEK_SET) = 0
11314 15:07:10.650277 munmap(0xb7f78000, 1624) = 0
11314 15:07:10.650303 close(4)          = 0
11314 15:07:10.650372 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11314 15:07:10.650422 read(4, "65536\n", 31) = 6
11314 15:07:10.650454 close(4)          = 0
11314 15:07:10.650488 socket(PF_FILE, SOCK_STREAM, 0) = 4
11314 15:07:10.650520 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11314 15:07:10.650545 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11314 15:07:10.650600 close(4)          = 0
11314 15:07:10.650628 socket(PF_FILE, SOCK_STREAM, 0) = 4
11314 15:07:10.650652 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11314 15:07:10.650677 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11314 15:07:10.650721 close(4)          = 0
11314 15:07:10.650787 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11314 15:07:10.650826 _llseek(4, 0, [0], SEEK_CUR) = 0
11314 15:07:10.650852 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11314 15:07:10.650892 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11314 15:07:10.650921 _llseek(4, 886, [886], SEEK_SET) = 0
11314 15:07:10.651016 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11314 15:07:10.651066 munmap(0xb7f78000, 886) = 0
11314 15:07:10.651093 close(4)          = 0
11314 15:07:10.651118 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11314 15:07:10.651162 geteuid32()       = 0
11314 15:07:10.651190 getegid32()       = 0
11314 15:07:10.651216 setregid32(-1, 1000) = 0
11314 15:07:10.651256 setreuid32(-1, 1000) = 0
11314 15:07:10.651284 chdir("/home/msfadmin") = 0
11314 15:07:10.651312 setreuid32(-1, 0) = 0
11314 15:07:10.651334 setregid32(-1, 0) = 0
11314 15:07:10.651360 setgid32(1000)    = 0
11314 15:07:10.651383 setuid32(1000)    = 0
11314 15:07:10.651407 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11314 15:07:10.651441 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f76000
11314 15:07:10.651471 mprotect(0xb7f78000, 4096, PROT_NONE) = 0
11314 15:07:10.651500 mprotect(0xb7f76000, 4096, PROT_NONE) = 0
11314 15:07:10.651528 getcwd("/home/msfadmin", 4096) = 15
11314 15:07:10.651562 umask(022)        = 077
11314 15:07:10.651585 getcwd("/home/msfadmin", 4096) = 15
11314 15:07:10.651619 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11314 15:07:10.651678 write(0, "230 Login successful.\r\n", 23) = 23
11314 15:07:10.651903 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11314 15:07:10.651949 alarm(300)        = 0
11314 15:07:10.652031 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
11314 15:07:10.652060 mprotect(0xb7f75000, 4096, PROT_NONE) = 0
11314 15:07:10.652088 mprotect(0xb7f73000, 4096, PROT_NONE) = 0
11314 15:07:10.652122 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11314 15:07:10.652155 read(0, "TYPE I\r\n", 8) = 8
11314 15:07:10.652198 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11314 15:07:10.652315 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11314 15:07:10.652350 alarm(300)        = 300
11314 15:07:10.652377 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11314 15:07:10.652404 read(0, "PASV\r\n", 6) = 6
11314 15:07:10.652432 write(5, "\n", 1) = 1
11314 15:07:10.652459 read(5,  <unfinished ...>
11312 15:07:10.652733 close(5)          = 0
11312 15:07:10.652775 getuid32()        = 0
11312 15:07:10.652812 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11312 15:07:10.652852 _llseek(5, 0, [0], SEEK_CUR) = 0
11312 15:07:10.652882 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11312 15:07:10.652925 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11312 15:07:10.652954 _llseek(5, 1624, [1624], SEEK_SET) = 0
11312 15:07:10.652998 munmap(0xb7f78000, 1624) = 0
11312 15:07:10.653029 close(5)          = 0
11312 15:07:10.653097 setgroups32(0, []) = 0
11312 15:07:10.653128 chdir("/usr/share/empty") = 0
11312 15:07:10.653160 chroot(".")       = 0
11312 15:07:10.653185 capset(NULL, NULL) = -1 EFAULT (Bad address)
11312 15:07:10.653219 prctl(0x8, 0, 0xbfed6978, 0x80549a6, 0xbfed6960) = 0
11312 15:07:10.653245 prctl(0x8, 0x1, 0xbfed6978, 0x8054a49, 0xbfed6960) = 0
11312 15:07:10.653270 setgid32(65534)   = 0
11312 15:07:10.653295 setuid32(65534)   = 0
11312 15:07:10.653318 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11312 15:07:10.653351 read(4, "\n", 1)  = 1
11312 15:07:10.653388 write(4, "\1", 1 <unfinished ...>
11314 15:07:10.653411 <... read resumed> "\1", 1) = 1
11312 15:07:10.653425 <... write resumed> ) = 1
11314 15:07:10.653441 write(5, "\f", 1) = 1
11314 15:07:10.653466 read(5,  <unfinished ...>
11312 15:07:10.653482 read(4, "\f", 1)  = 1
11312 15:07:10.653514 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11312 15:07:10.653550 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11312 15:07:10.653579 gettimeofday({1495652830, 653589}, NULL) = 0
11312 15:07:10.653620 bind(5, {sa_family=AF_INET, sin_port=htons(6552), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11312 15:07:10.653659 listen(5, 1)      = 0
11312 15:07:10.653689 write(4, "\230\31\0\0", 4 <unfinished ...>
11314 15:07:10.653711 <... read resumed> "\230\31\0\0", 4) = 4
11312 15:07:10.653724 <... write resumed> ) = 4
11314 15:07:10.653758 write(0, "227 Entering Passive Mode (127,0,0,1,25,152).\r\n", 47) = 47
11314 15:07:10.654176 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11314 15:07:10.654232 alarm(300)        = 300
11314 15:07:10.654262 recv(0, "STOR myfile26\r\n", 4096, MSG_PEEK) = 15
11314 15:07:10.654294 read(0, "STOR myfile26\r\n", 15) = 15
11314 15:07:10.654349 write(5, "\v", 1) = 1
11314 15:07:10.654378 read(5,  <unfinished ...>
11312 15:07:10.654397 read(4, "\v", 1)  = 1
11312 15:07:10.654425 write(4, "\1\0\0\0", 4) = 4
11314 15:07:10.654452 <... read resumed> "\1\0\0\0", 4) = 4
11314 15:07:10.654474 gettimeofday({1495652830, 654484}, NULL) = 0
11314 15:07:10.654501 getcwd("/home/msfadmin", 4096) = 15
11314 15:07:10.654532 open("myfile26", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11314 15:07:10.654566 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11314 15:07:10.654607 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11314 15:07:10.654633 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11314 15:07:10.654657 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfed68c4) = 0
11314 15:07:10.654699 ftruncate64(4, 0) = 0
11314 15:07:10.654746 _llseek(4, 0, [0], SEEK_SET) = 0
11314 15:07:10.654773 write(5, "\v", 1) = 1
11314 15:07:10.654799 read(5,  <unfinished ...>
11312 15:07:10.654818 read(4, "\v", 1)  = 1
11312 15:07:10.654845 write(4, "\1\0\0\0", 4) = 4
11314 15:07:10.654871 <... read resumed> "\1\0\0\0", 4) = 4
11314 15:07:10.654889 write(5, "\v", 1) = 1
11314 15:07:10.654913 read(5,  <unfinished ...>
11312 15:07:10.654929 read(4, "\v", 1)  = 1
11312 15:07:10.654954 write(4, "\1\0\0\0", 4) = 4
11314 15:07:10.654979 <... read resumed> "\1\0\0\0", 4) = 4
11314 15:07:10.655041 write(5, "\r", 1) = 1
11314 15:07:10.655070 read(5,  <unfinished ...>
11312 15:07:10.655087 read(4, "\r", 1)  = 1
11312 15:07:10.655119 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11312 15:07:10.655163 accept(5, {sa_family=AF_INET, sin_port=htons(44182), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11312 15:07:10.655223 write(4, "\1", 1) = 1
11314 15:07:10.655249 <... read resumed> "\1", 1) = 1
11314 15:07:10.655273 recvmsg(5,  <unfinished ...>
11312 15:07:10.655297 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11314 15:07:10.655340 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11314 15:07:10.655372 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11314 15:07:10.655402 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11314 15:07:10.655431 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11314 15:07:10.655459 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11314 15:07:10.655493 alarm(300)        = 300
11314 15:07:10.655526 write(0, "150 Ok to send data.\r\n", 22) = 22
11314 15:07:10.655736 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dad000
11314 15:07:10.655772 mprotect(0xb7dbf000, 4096, PROT_NONE) = 0
11314 15:07:10.655802 mprotect(0xb7dad000, 4096, PROT_NONE) = 0
11314 15:07:10.655827 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11314 15:07:10.655861 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11314 15:07:10.655905 read(6, "", 65536) = 0
11314 15:07:10.655932 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11314 15:07:10.656007 alarm(300)        = 300
11314 15:07:10.656034 close(6)          = 0
11314 15:07:10.656056 alarm(0)          = 300
11314 15:07:10.656079 gettimeofday({1495652830, 656087}, NULL) = 0
