17549 16:16:45.970187 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
17549 16:16:45.970353 read(7, "", 1024) = 0
17549 16:16:45.970385 close(7)          = 0
17549 16:16:45.970419 munmap(0xb7f68000, 4096) = 0
17549 16:16:45.970461 munmap(0xb7d97000, 29913) = 0
17549 16:16:45.970499 read(6, "", 4096) = 0
17549 16:16:45.970531 close(6)          = 0
17549 16:16:45.970560 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.970593 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.970641 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.970678 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
17549 16:16:45.970719 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.970751 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
17549 16:16:45.970836 read(6, "", 4096) = 0
17549 16:16:45.970867 close(6)          = 0
17549 16:16:45.970918 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.970953 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.971001 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.971037 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
17549 16:16:45.971078 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.971109 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
17549 16:16:45.971192 read(6, "", 4096) = 0
17549 16:16:45.971222 close(6)          = 0
17549 16:16:45.971252 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.971283 read(5, "", 4096) = 0
17549 16:16:45.971311 close(5)          = 0
17549 16:16:45.971340 munmap(0xb7f6f000, 4096) = 0
17549 16:16:45.971371 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
17549 16:16:45.971428 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
17549 16:16:45.971470 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6f000
17549 16:16:45.971502 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
17549 16:16:45.971595 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.971640 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.971676 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
17549 16:16:45.971716 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.971748 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
17549 16:16:45.971849 read(6, "", 4096) = 0
17549 16:16:45.971899 close(6)          = 0
17549 16:16:45.971933 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.971966 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.972014 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.972049 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
17549 16:16:45.972090 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.972121 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
17549 16:16:45.972204 read(6, "", 4096) = 0
17549 16:16:45.972235 close(6)          = 0
17549 16:16:45.972263 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.972295 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.972340 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.972401 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
17549 16:16:45.972447 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.972479 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
17549 16:16:45.972699 read(6, "", 4096) = 0
17549 16:16:45.972729 close(6)          = 0
17549 16:16:45.972758 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.972790 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
17549 16:16:45.972837 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
17549 16:16:45.972914 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
17549 16:16:45.972957 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
17549 16:16:45.972988 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
17549 16:16:45.973070 read(6, "", 4096) = 0
17549 16:16:45.973107 close(6)          = 0
17549 16:16:45.973136 munmap(0xb7f69000, 4096) = 0
17549 16:16:45.973168 read(5, "", 4096) = 0
17549 16:16:45.973198 close(5)          = 0
17549 16:16:45.973226 munmap(0xb7f6f000, 4096) = 0
17549 16:16:45.973261 time(NULL)        = 1495657005
17549 16:16:45.973295 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
17549 16:16:45.973340 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
17549 16:16:45.973374 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
17549 16:16:45.973416 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6f000
17549 16:16:45.973446 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
17549 16:16:45.973496 read(5, "", 4096) = 0
17549 16:16:45.973525 close(5)          = 0
17549 16:16:45.973554 munmap(0xb7f6f000, 4096) = 0
17549 16:16:45.973595 getuid32()        = 0
17549 16:16:45.973638 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.973678 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.973710 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17549 16:16:45.973751 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.973783 _llseek(5, 1624, [1624], SEEK_SET) = 0
17549 16:16:45.973831 munmap(0xb7f6f000, 1624) = 0
17549 16:16:45.973867 close(5)          = 0
17549 16:16:45.973927 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.973972 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.974003 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
17549 16:16:45.974044 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.974076 _llseek(5, 1233, [1233], SEEK_SET) = 0
17549 16:16:45.974125 munmap(0xb7f6f000, 1233) = 0
17549 16:16:45.974156 close(5)          = 0
17549 16:16:45.974202 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.974239 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.974270 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17549 16:16:45.974310 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.974342 _llseek(5, 1624, [1624], SEEK_SET) = 0
17549 16:16:45.974383 munmap(0xb7f6f000, 1624) = 0
17549 16:16:45.974413 close(5)          = 0
17549 16:16:45.974448 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.974483 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.974513 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
17549 16:16:45.974554 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.974585 _llseek(5, 1233, [1233], SEEK_SET) = 0
17549 16:16:45.974627 munmap(0xb7f6f000, 1233) = 0
17549 16:16:45.974657 close(5)          = 0
17549 16:16:45.975123 getuid32()        = 0
17549 16:16:45.975160 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.975196 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.975227 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17549 16:16:45.975268 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.975300 _llseek(5, 1624, [1624], SEEK_SET) = 0
17549 16:16:45.975340 munmap(0xb7f6f000, 1624) = 0
17549 16:16:45.975370 close(5)          = 0
17549 16:16:45.975407 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.975442 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.975472 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
17549 16:16:45.975486 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.975486 _llseek(5, 1233, [1233], SEEK_SET) = 0
17549 16:16:45.975486 munmap(0xb7f6f000, 1233) = 0
17549 16:16:45.975486 close(5)          = 0
17549 16:16:45.975486 time(NULL)        = 1495657005
17549 16:16:45.975486 munmap(0xb7f6c000, 12164) = 0
17549 16:16:45.975486 munmap(0xb7f6a000, 7136) = 0
17549 16:16:45.975486 munmap(0xb7d9f000, 95428) = 0
17549 16:16:45.975486 munmap(0xb7d65000, 201052) = 0
17549 16:16:45.975486 munmap(0xb7d4c000, 101180) = 0
17549 16:16:45.975486 gettimeofday({1495657005, 975486}, NULL) = 0
17549 16:16:45.975486 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9392a4) = -1 ENOENT (No such file or directory)
17549 16:16:45.975486 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
17549 16:16:45.975486 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9393f4) = 0
17549 16:16:45.975486 write(3, "Wed May 24 16:16:45 2017 [pid 17549] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
17549 16:16:45.975486 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9393fc) = 0
17549 16:16:45.975486 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17549 16:16:45.975486 write(4, "\1", 1 <unfinished ...>
17550 16:16:45.975486 <... read resumed> "\1", 1) = 1
17549 16:16:45.975486 <... write resumed> ) = 1
17550 16:16:45.975486 exit_group(0)     = ?
17549 16:16:45.976392 --- SIGCHLD (Child exited) @ 0 (0) ---
17549 16:16:45.976444 sigreturn()       = ? (mask now [])
17549 16:16:45.976493 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 17550
17549 16:16:45.976530 close(4)          = 0
17549 16:16:45.976565 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
17549 16:16:45.976604 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17549 16:16:45.976666 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17549 16:16:45.976709 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd56f8) = 17551
17551 16:16:45.976834 prctl(0x1, 0x9, 0, 0, 0) = 0
17551 16:16:45.976873 close(4)          = 0
17551 16:16:45.976934 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
17551 16:16:45.976978 _llseek(4, 0, [0], SEEK_CUR) = 0
17551 16:16:45.977019 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17551 16:16:45.977065 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6f000
17551 16:16:45.977099 _llseek(4, 1624, [1624], SEEK_SET) = 0
17551 16:16:45.977153 munmap(0xb7f6f000, 1624) = 0
17551 16:16:45.977187 close(4)          = 0
17551 16:16:45.977224 getuid32()        = 0
17551 16:16:45.977255 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
17551 16:16:45.977290 _llseek(4, 0, [0], SEEK_CUR) = 0
17551 16:16:45.977321 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17551 16:16:45.977363 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6f000
17551 16:16:45.977395 _llseek(4, 1624, [1624], SEEK_SET) = 0
17551 16:16:45.977437 munmap(0xb7f6f000, 1624) = 0
17551 16:16:45.977467 close(4)          = 0
17551 16:16:45.977528 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
17551 16:16:45.977577 read(4, "65536\n", 31) = 6
17551 16:16:45.977637 close(4)          = 0
17551 16:16:45.977678 socket(PF_FILE, SOCK_STREAM, 0) = 4
17551 16:16:45.977711 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
17551 16:16:45.977743 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
17551 16:16:45.977816 close(4)          = 0
17551 16:16:45.977851 socket(PF_FILE, SOCK_STREAM, 0) = 4
17551 16:16:45.977881 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
17551 16:16:45.977912 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
17551 16:16:45.977956 close(4)          = 0
17551 16:16:45.978016 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
17551 16:16:45.978054 _llseek(4, 0, [0], SEEK_CUR) = 0
17551 16:16:45.978085 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
17551 16:16:45.978127 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6f000
17551 16:16:45.978160 _llseek(4, 886, [886], SEEK_SET) = 0
17551 16:16:45.978216 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
17551 16:16:45.978260 munmap(0xb7f6f000, 886) = 0
17551 16:16:45.978292 close(4)          = 0
17551 16:16:45.978322 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
17551 16:16:45.978365 geteuid32()       = 0
17551 16:16:45.978396 getegid32()       = 0
17551 16:16:45.978427 setregid32(-1, 1000) = 0
17551 16:16:45.978458 setreuid32(-1, 1000) = 0
17551 16:16:45.978498 chdir("/home/msfadmin") = 0
17551 16:16:45.978531 setreuid32(-1, 0) = 0
17551 16:16:45.978560 setregid32(-1, 0) = 0
17551 16:16:45.978618 setgid32(1000)    = 0
17551 16:16:45.978649 setuid32(1000)    = 0
17551 16:16:45.978680 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
17551 16:16:45.978719 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6d000
17551 16:16:45.978752 mprotect(0xb7f6f000, 4096, PROT_NONE) = 0
17551 16:16:45.978785 mprotect(0xb7f6d000, 4096, PROT_NONE) = 0
17551 16:16:45.978817 getcwd("/home/msfadmin", 4096) = 15
17551 16:16:45.978854 umask(022)        = 077
17551 16:16:45.978884 getcwd("/home/msfadmin", 4096) = 15
17551 16:16:45.978920 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
17551 16:16:45.978974 write(0, "230 Login successful.\r\n", 23) = 23
17551 16:16:45.979195 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.979240 alarm(300)        = 0
17551 16:16:45.979297 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6a000
17551 16:16:45.979330 mprotect(0xb7f6c000, 4096, PROT_NONE) = 0
17551 16:16:45.979363 mprotect(0xb7f6a000, 4096, PROT_NONE) = 0
17551 16:16:45.979399 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
17551 16:16:45.979433 read(0, "TYPE I\r\n", 8) = 8
17551 16:16:45.979477 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
17551 16:16:45.979621 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.979663 alarm(300)        = 300
17551 16:16:45.979719 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
17551 16:16:45.979752 read(0, "PASV\r\n", 6) = 6
17551 16:16:45.979785 write(5, "\n", 1) = 1
17551 16:16:45.979817 read(5,  <unfinished ...>
17549 16:16:45.979851 close(5)          = 0
17549 16:16:45.979887 getuid32()        = 0
17549 16:16:45.979926 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
17549 16:16:45.979964 _llseek(5, 0, [0], SEEK_CUR) = 0
17549 16:16:45.979999 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
17549 16:16:45.980043 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6f000
17549 16:16:45.980076 _llseek(5, 1624, [1624], SEEK_SET) = 0
17549 16:16:45.980120 munmap(0xb7f6f000, 1624) = 0
17549 16:16:45.980154 close(5)          = 0
17549 16:16:45.980196 setgroups32(0, []) = 0
17549 16:16:45.980229 chdir("/usr/share/empty") = 0
17549 16:16:45.980264 chroot(".")       = 0
17549 16:16:45.980295 capset(NULL, NULL) = -1 EFAULT (Bad address)
17549 16:16:45.980332 prctl(0x8, 0, 0xbf9393d8, 0x80549a6, 0xbf9393c0) = 0
17549 16:16:45.980364 prctl(0x8, 0x1, 0xbf9393d8, 0x8054a49, 0xbf9393c0) = 0
17549 16:16:45.980394 setgid32(65534)   = 0
17549 16:16:45.980424 setuid32(65534)   = 0
17549 16:16:45.980453 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
17549 16:16:45.980490 read(4, "\n", 1)  = 1
17549 16:16:45.980672 write(4, "\1", 1) = 1
17551 16:16:45.980706 <... read resumed> "\1", 1) = 1
17551 16:16:45.980732 write(5, "\f", 1) = 1
17551 16:16:45.980762 read(5,  <unfinished ...>
17549 16:16:45.980787 read(4, "\f", 1)  = 1
17549 16:16:45.980821 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
17549 16:16:45.980858 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
17549 16:16:45.980891 gettimeofday({1495657005, 980911}, NULL) = 0
17549 16:16:45.980947 bind(5, {sa_family=AF_INET, sin_port=htons(16189), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
17549 16:16:45.980989 listen(5, 1)      = 0
17549 16:16:45.981025 write(4, "=?\0\0", 4) = 4
17551 16:16:45.981057 <... read resumed> "=?\0\0", 4) = 4
17551 16:16:45.981093 write(0, "227 Entering Passive Mode (127,0,0,1,63,61).\r\n", 46) = 46
17551 16:16:45.981377 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.981421 alarm(300)        = 300
17551 16:16:45.981478 recv(0, "STOR myfile30\r\n", 4096, MSG_PEEK) = 15
17551 16:16:45.981512 read(0, "STOR myfile30\r\n", 15) = 15
17551 16:16:45.981552 write(5, "\v", 1) = 1
17551 16:16:45.981584 read(5,  <unfinished ...>
17549 16:16:45.981634 read(4, "\v", 1)  = 1
17549 16:16:45.981675 write(4, "\1\0\0\0", 4) = 4
17551 16:16:45.981708 <... read resumed> "\1\0\0\0", 4) = 4
17551 16:16:45.981736 gettimeofday({1495657005, 981756}, NULL) = 0
17551 16:16:45.981781 getcwd("/home/msfadmin", 4096) = 15
17551 16:16:45.981816 open("myfile30", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
17551 16:16:45.981853 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
17551 16:16:45.981895 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
17551 16:16:45.981926 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
17551 16:16:45.981957 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf939324) = 0
17551 16:16:45.981996 ftruncate64(4, 0) = 0
17551 16:16:45.982042 _llseek(4, 0, [0], SEEK_SET) = 0
17551 16:16:45.982075 write(5, "\v", 1) = 1
17551 16:16:45.982105 read(5,  <unfinished ...>
17549 16:16:45.982130 read(4, "\v", 1)  = 1
17549 16:16:45.982162 write(4, "\1\0\0\0", 4) = 4
17551 16:16:45.982193 <... read resumed> "\1\0\0\0", 4) = 4
17551 16:16:45.982218 write(5, "\v", 1) = 1
17551 16:16:45.982248 read(5,  <unfinished ...>
17549 16:16:45.982272 read(4, "\v", 1)  = 1
17549 16:16:45.982303 write(4, "\1\0\0\0", 4) = 4
17551 16:16:45.982333 <... read resumed> "\1\0\0\0", 4) = 4
17551 16:16:45.982358 write(5, "\r", 1) = 1
17551 16:16:45.982388 read(5,  <unfinished ...>
17549 16:16:45.982412 read(4, "\r", 1)  = 1
17549 16:16:45.982447 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
17549 16:16:45.982490 accept(5, {sa_family=AF_INET, sin_port=htons(49520), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
17549 16:16:45.982542 write(4, "\1", 1) = 1
17551 16:16:45.982601 <... read resumed> "\1", 1) = 1
17551 16:16:45.982632 recvmsg(5,  <unfinished ...>
17549 16:16:45.982662 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
17551 16:16:45.982705 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
17551 16:16:45.982741 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
17551 16:16:45.982775 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
17551 16:16:45.982833 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
17551 16:16:45.982866 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.982903 alarm(300)        = 300
17551 16:16:45.982962 write(0, "150 Ok to send data.\r\n", 22) = 22
17551 16:16:45.983141 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da4000
17551 16:16:45.983179 mprotect(0xb7db6000, 4096, PROT_NONE) = 0
17551 16:16:45.983212 mprotect(0xb7da4000, 4096, PROT_NONE) = 0
17551 16:16:45.983242 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
17551 16:16:45.983279 write(4, "assasaaa\na\na\na\na\n", 17) = 17
17551 16:16:45.983319 read(6, "", 65536) = 0
17551 16:16:45.983351 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.983387 alarm(300)        = 300
17551 16:16:45.983441 close(6)          = 0
17551 16:16:45.983469 alarm(0)          = 300
17551 16:16:45.983511 gettimeofday({1495657005, 983553}, NULL) = 0
17551 16:16:45.983593 getpid()          = 17551
17551 16:16:45.983628 gettimeofday({1495657005, 983647}, NULL) = 0
17551 16:16:45.983683 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9392c4) = 0
17551 16:16:45.983723 write(3, "Wed May 24 16:16:45 2017 [pid 17551] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile30\", 17 bytes, 8.78Kbyte/sec\n", 130) = 130
17551 16:16:45.983771 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9392cc) = 0
17551 16:16:45.983809 write(0, "226 Transfer complete.\r\n", 24) = 24
17551 16:16:45.983924 write(5, "\n", 1) = 1
17551 16:16:45.983959 read(5,  <unfinished ...>
17549 16:16:45.983984 close(6)          = 0
17549 16:16:45.984054 read(4, "\n", 1)  = 1
17549 16:16:45.984088 close(5)          = 0
17549 16:16:45.984127 write(4, "\1", 1) = 1
17551 16:16:45.984159 <... read resumed> "\1", 1) = 1
17551 16:16:45.984184 close(4)          = 0
17551 16:16:45.984215 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:45.984252 alarm(300)        = 0
17551 16:16:45.984308 recv(0,  <unfinished ...>
17549 16:16:45.984334 read(4,  <unfinished ...>
17551 16:16:46.487809 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
17551 16:16:46.488069 read(0, "TYPE I\r\n", 8) = 8
17551 16:16:46.488398 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
17551 16:16:46.488789 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
17551 16:16:46.488933 alarm(300)        = 299
17551 16:16:46.489108 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
17551 16:16:46.489192 read(0, "PASV\r\n", 6) = 6
17551 16:16:46.489345 write(5, "\n", 1) = 1
17551 16:16:46.489504 read(5,  <unfinished ...>
17549 16:16:46.489572 <... read resumed> "\n", 1) = 1
17549 16:16:46.489637 write(4, "\1", 1) = 1
17551 16:16:46.489712 <... read resumed> "\1", 1) = 1
