13266 15:27:01.752416 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13266 15:27:01.752474 read(6, "", 4096) = 0
13266 15:27:01.752489 close(6)          = 0
13266 15:27:01.752502 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.752518 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13266 15:27:01.752545 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13266 15:27:01.752564 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13266 15:27:01.752587 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3e000
13266 15:27:01.752602 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13266 15:27:01.752657 read(6, "", 4096) = 0
13266 15:27:01.752671 close(6)          = 0
13266 15:27:01.752684 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.752699 read(5, "", 4096) = 0
13266 15:27:01.752713 close(5)          = 0
13266 15:27:01.752726 munmap(0xb7f44000, 4096) = 0
13266 15:27:01.752740 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
13266 15:27:01.752759 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
13266 15:27:01.752782 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f44000
13266 15:27:01.752797 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
13266 15:27:01.752861 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13266 15:27:01.752888 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
13266 15:27:01.752905 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
13266 15:27:01.752928 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3e000
13266 15:27:01.752943 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
13266 15:27:01.753010 read(6, "", 4096) = 0
13266 15:27:01.753024 close(6)          = 0
13266 15:27:01.753037 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.753052 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13266 15:27:01.753090 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
13266 15:27:01.753110 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
13266 15:27:01.753133 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3e000
13266 15:27:01.753149 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13266 15:27:01.753211 read(6, "", 4096) = 0
13266 15:27:01.753225 close(6)          = 0
13266 15:27:01.753239 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.753255 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13266 15:27:01.753281 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
13266 15:27:01.753300 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
13266 15:27:01.753323 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3e000
13266 15:27:01.753338 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
13266 15:27:01.753505 read(6, "", 4096) = 0
13266 15:27:01.753519 close(6)          = 0
13266 15:27:01.753533 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.753548 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13266 15:27:01.753574 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13266 15:27:01.753592 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13266 15:27:01.753615 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3e000
13266 15:27:01.753630 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13266 15:27:01.753684 read(6, "", 4096) = 0
13266 15:27:01.753698 close(6)          = 0
13266 15:27:01.753711 munmap(0xb7f3e000, 4096) = 0
13266 15:27:01.753726 read(5, "", 4096) = 0
13266 15:27:01.753740 close(5)          = 0
13266 15:27:01.753753 munmap(0xb7f44000, 4096) = 0
13266 15:27:01.753772 time(NULL)        = 1495654021
13266 15:27:01.753790 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13266 15:27:01.753816 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
13266 15:27:01.753833 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13266 15:27:01.753856 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f44000
13266 15:27:01.753871 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
13266 15:27:01.753905 read(5, "", 4096) = 0
13266 15:27:01.753918 close(5)          = 0
13266 15:27:01.753932 munmap(0xb7f44000, 4096) = 0
13266 15:27:01.753954 getuid32()        = 0
13266 15:27:01.753979 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.754001 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.754017 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13266 15:27:01.754052 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.754069 _llseek(5, 1624, [1624], SEEK_SET) = 0
13266 15:27:01.754099 munmap(0xb7f44000, 1624) = 0
13266 15:27:01.754115 close(5)          = 0
13266 15:27:01.754153 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.754180 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.754195 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13266 15:27:01.754218 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.754234 _llseek(5, 1233, [1233], SEEK_SET) = 0
13266 15:27:01.754262 munmap(0xb7f44000, 1233) = 0
13266 15:27:01.754277 close(5)          = 0
13266 15:27:01.754304 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.754323 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.754337 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13266 15:27:01.754360 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.754375 _llseek(5, 1624, [1624], SEEK_SET) = 0
13266 15:27:01.754398 munmap(0xb7f44000, 1624) = 0
13266 15:27:01.754413 close(5)          = 0
13266 15:27:01.754430 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.754449 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.754463 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13266 15:27:01.754486 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.754501 _llseek(5, 1233, [1233], SEEK_SET) = 0
13266 15:27:01.754525 munmap(0xb7f44000, 1233) = 0
13266 15:27:01.754539 close(5)          = 0
13266 15:27:01.754877 getuid32()        = 0
13266 15:27:01.754893 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.754910 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.754925 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13266 15:27:01.754948 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.754963 _llseek(5, 1624, [1624], SEEK_SET) = 0
13266 15:27:01.754986 munmap(0xb7f44000, 1624) = 0
13266 15:27:01.755011 close(5)          = 0
13266 15:27:01.755032 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.755052 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.755067 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13266 15:27:01.755090 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.755106 _llseek(5, 1233, [1233], SEEK_SET) = 0
13266 15:27:01.755130 munmap(0xb7f44000, 1233) = 0
13266 15:27:01.755145 close(5)          = 0
13266 15:27:01.755161 time(NULL)        = 1495654021
13266 15:27:01.755184 munmap(0xb7f41000, 12164) = 0
13266 15:27:01.755203 munmap(0xb7f3f000, 7136) = 0
13266 15:27:01.755224 munmap(0xb7d74000, 95428) = 0
13266 15:27:01.755241 munmap(0xb7d3a000, 201052) = 0
13266 15:27:01.755257 munmap(0xb7d21000, 101180) = 0
13266 15:27:01.755283 gettimeofday({1495654021, 755288}, NULL) = 0
13266 15:27:01.755300 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9d3344) = -1 ENOENT (No such file or directory)
13266 15:27:01.755322 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
13266 15:27:01.755363 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9d3494) = 0
13266 15:27:01.755388 write(3, "Wed May 24 15:27:01 2017 [pid 13266] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
13266 15:27:01.755413 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9d349c) = 0
13266 15:27:01.755432 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13266 15:27:01.755454 write(4, "\1", 1 <unfinished ...>
13267 15:27:01.755477 <... read resumed> "\1", 1) = 1
13266 15:27:01.755485 <... write resumed> ) = 1
13267 15:27:01.755498 exit_group(0)     = ?
13266 15:27:01.755554 --- SIGCHLD (Child exited) @ 0 (0) ---
13266 15:27:01.755570 sigreturn()       = ? (mask now [])
13266 15:27:01.755598 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 13267
13266 15:27:01.755617 close(4)          = 0
13266 15:27:01.755635 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
13266 15:27:01.755655 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13266 15:27:01.755675 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13266 15:27:01.755695 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7daa6f8) = 13268
13268 15:27:01.755775 prctl(0x1, 0x9, 0, 0, 0) = 0
13268 15:27:01.755795 close(4)          = 0
13268 15:27:01.755834 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13268 15:27:01.755859 _llseek(4, 0, [0], SEEK_CUR) = 0
13268 15:27:01.755882 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13268 15:27:01.755908 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f44000
13268 15:27:01.755925 _llseek(4, 1624, [1624], SEEK_SET) = 0
13268 15:27:01.755958 munmap(0xb7f44000, 1624) = 0
13268 15:27:01.755994 close(4)          = 0
13268 15:27:01.756016 getuid32()        = 0
13268 15:27:01.756031 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13268 15:27:01.756050 _llseek(4, 0, [0], SEEK_CUR) = 0
13268 15:27:01.756066 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13268 15:27:01.756089 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f44000
13268 15:27:01.756105 _llseek(4, 1624, [1624], SEEK_SET) = 0
13268 15:27:01.756129 munmap(0xb7f44000, 1624) = 0
13268 15:27:01.756143 close(4)          = 0
13268 15:27:01.756183 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
13268 15:27:01.756213 read(4, "65536\n", 31) = 6
13268 15:27:01.756231 close(4)          = 0
13268 15:27:01.756252 socket(PF_FILE, SOCK_STREAM, 0) = 4
13268 15:27:01.756269 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13268 15:27:01.756285 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13268 15:27:01.756317 close(4)          = 0
13268 15:27:01.756333 socket(PF_FILE, SOCK_STREAM, 0) = 4
13268 15:27:01.756347 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13268 15:27:01.756362 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13268 15:27:01.756388 close(4)          = 0
13268 15:27:01.756424 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
13268 15:27:01.756447 _llseek(4, 0, [0], SEEK_CUR) = 0
13268 15:27:01.756464 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13268 15:27:01.756488 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f44000
13268 15:27:01.756504 _llseek(4, 886, [886], SEEK_SET) = 0
13268 15:27:01.756541 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13268 15:27:01.756566 munmap(0xb7f44000, 886) = 0
13268 15:27:01.756580 close(4)          = 0
13268 15:27:01.756595 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
13268 15:27:01.756619 geteuid32()       = 0
13268 15:27:01.756635 getegid32()       = 0
13268 15:27:01.756650 setregid32(-1, 1000) = 0
13268 15:27:01.756665 setreuid32(-1, 1000) = 0
13268 15:27:01.756681 chdir("/home/msfadmin") = 0
13268 15:27:01.756698 setreuid32(-1, 0) = 0
13268 15:27:01.756711 setregid32(-1, 0) = 0
13268 15:27:01.756726 setgid32(1000)    = 0
13268 15:27:01.756740 setuid32(1000)    = 0
13268 15:27:01.756754 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
13268 15:27:01.756774 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f42000
13268 15:27:01.756791 mprotect(0xb7f44000, 4096, PROT_NONE) = 0
13268 15:27:01.756807 mprotect(0xb7f42000, 4096, PROT_NONE) = 0
13268 15:27:01.756823 getcwd("/home/msfadmin", 4096) = 15
13268 15:27:01.756843 umask(022)        = 077
13268 15:27:01.756857 getcwd("/home/msfadmin", 4096) = 15
13268 15:27:01.756883 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
13268 15:27:01.756917 write(0, "230 Login successful.\r\n", 23) = 23
13268 15:27:01.757090 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.757116 alarm(300)        = 0
13268 15:27:01.757133 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3f000
13268 15:27:01.757149 mprotect(0xb7f41000, 4096, PROT_NONE) = 0
13268 15:27:01.757166 mprotect(0xb7f3f000, 4096, PROT_NONE) = 0
13268 15:27:01.757184 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
13268 15:27:01.757202 read(0, "TYPE I\r\n", 8) = 8
13268 15:27:01.757227 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
13268 15:27:01.757283 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.757303 alarm(300)        = 300
13268 15:27:01.757319 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
13268 15:27:01.757335 read(0, "PASV\r\n", 6) = 6
13268 15:27:01.757352 write(5, "\n", 1) = 1
13268 15:27:01.757368 read(5,  <unfinished ...>
13266 15:27:01.757387 close(5)          = 0
13266 15:27:01.757406 getuid32()        = 0
13266 15:27:01.757428 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13266 15:27:01.757449 _llseek(5, 0, [0], SEEK_CUR) = 0
13266 15:27:01.757467 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13266 15:27:01.757492 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f44000
13266 15:27:01.757509 _llseek(5, 1624, [1624], SEEK_SET) = 0
13266 15:27:01.757534 munmap(0xb7f44000, 1624) = 0
13266 15:27:01.757552 close(5)          = 0
13266 15:27:01.757575 setgroups32(0, []) = 0
13266 15:27:01.757592 chdir("/usr/share/empty") = 0
13266 15:27:01.757610 chroot(".")       = 0
13266 15:27:01.757626 capset(NULL, NULL) = -1 EFAULT (Bad address)
13266 15:27:01.757647 prctl(0x8, 0, 0xbf9d3478, 0x80549a6, 0xbf9d3460) = 0
13266 15:27:01.757663 prctl(0x8, 0x1, 0xbf9d3478, 0x8054a49, 0xbf9d3460) = 0
13266 15:27:01.757678 setgid32(65534)   = 0
13266 15:27:01.757692 setuid32(65534)   = 0
13266 15:27:01.757706 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
13266 15:27:01.757725 read(4, "\n", 1)  = 1
13266 15:27:01.757744 write(4, "\1", 1) = 1
13268 15:27:01.757760 <... read resumed> "\1", 1) = 1
13268 15:27:01.757770 write(5, "\f", 1) = 1
13268 15:27:01.757785 read(5,  <unfinished ...>
13266 15:27:01.757794 read(4, "\f", 1)  = 1
13266 15:27:01.757813 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
13266 15:27:01.757833 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
13266 15:27:01.757850 gettimeofday({1495654021, 757855}, NULL) = 0
13266 15:27:01.757874 bind(5, {sa_family=AF_INET, sin_port=htons(47184), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
13266 15:27:01.757898 listen(5, 1)      = 0
13266 15:27:01.757964 write(4, "P\270\0\0", 4) = 4
13268 15:27:01.757995 <... read resumed> "P\270\0\0", 4) = 4
13268 15:27:01.758029 write(0, "227 Entering Passive Mode (127,0,0,1,184,80).\r\n", 47) = 47
13268 15:27:01.758260 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.758301 alarm(300)        = 300
13268 15:27:01.758326 recv(0, "STOR myfile6\r\n", 4096, MSG_PEEK) = 14
13268 15:27:01.758353 read(0, "STOR myfile6\r\n", 14) = 14
13268 15:27:01.758388 write(5, "\v", 1) = 1
13268 15:27:01.758413 read(5,  <unfinished ...>
13266 15:27:01.758430 read(4, "\v", 1)  = 1
13266 15:27:01.758458 write(4, "\1\0\0\0", 4) = 4
13268 15:27:01.758485 <... read resumed> "\1\0\0\0", 4) = 4
13268 15:27:01.758506 gettimeofday({1495654021, 758515}, NULL) = 0
13268 15:27:01.758531 getcwd("/home/msfadmin", 4096) = 15
13268 15:27:01.758560 open("myfile6", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
13268 15:27:01.758591 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
13268 15:27:01.758631 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
13268 15:27:01.758656 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
13268 15:27:01.758680 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9d33c4) = 0
13268 15:27:01.758729 ftruncate64(4, 0) = 0
13268 15:27:01.758774 _llseek(4, 0, [0], SEEK_SET) = 0
13268 15:27:01.758801 write(5, "\v", 1) = 1
13268 15:27:01.758825 read(5,  <unfinished ...>
13266 15:27:01.758842 read(4, "\v", 1)  = 1
13266 15:27:01.758994 write(4, "\1\0\0\0", 4) = 4
13268 15:27:01.759029 <... read resumed> "\1\0\0\0", 4) = 4
13268 15:27:01.759048 write(5, "\v", 1) = 1
13268 15:27:01.759070 read(5,  <unfinished ...>
13266 15:27:01.759086 read(4, "\v", 1)  = 1
13266 15:27:01.759111 write(4, "\1\0\0\0", 4) = 4
13268 15:27:01.759135 <... read resumed> "\1\0\0\0", 4) = 4
13268 15:27:01.759153 write(5, "\r", 1) = 1
13268 15:27:01.759177 read(5,  <unfinished ...>
13266 15:27:01.759193 read(4, "\r", 1)  = 1
13266 15:27:01.759223 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
13266 15:27:01.759262 accept(5, {sa_family=AF_INET, sin_port=htons(54724), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
13266 15:27:01.759314 write(4, "\1", 1) = 1
13268 15:27:01.759339 <... read resumed> "\1", 1) = 1
13268 15:27:01.759364 recvmsg(5,  <unfinished ...>
13266 15:27:01.759387 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13268 15:27:01.759429 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13268 15:27:01.759462 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
13268 15:27:01.759779 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
13268 15:27:01.759811 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
13268 15:27:01.759837 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.759869 alarm(300)        = 300
13268 15:27:01.759898 write(0, "150 Ok to send data.\r\n", 22) = 22
13268 15:27:01.760035 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d79000
13268 15:27:01.760067 mprotect(0xb7d8b000, 4096, PROT_NONE) = 0
13268 15:27:01.760094 mprotect(0xb7d79000, 4096, PROT_NONE) = 0
13268 15:27:01.760116 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
13268 15:27:01.760161 write(4, "assasaaa\na\na\na\na\n", 17) = 17
13268 15:27:01.760207 read(6, "", 65536) = 0
13268 15:27:01.760233 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.760265 alarm(300)        = 300
13268 15:27:01.760288 close(6)          = 0
13268 15:27:01.760310 alarm(0)          = 300
13268 15:27:01.760333 gettimeofday({1495654021, 760341}, NULL) = 0
13268 15:27:01.760373 getpid()          = 13268
13268 15:27:01.760400 gettimeofday({1495654021, 760409}, NULL) = 0
13268 15:27:01.760438 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9d3364) = 0
13268 15:27:01.760473 write(3, "Wed May 24 15:27:01 2017 [pid 13268] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile6\", 17 bytes, 8.77Kbyte/sec\n", 129) = 129
13268 15:27:01.760520 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9d336c) = 0
13268 15:27:01.760556 write(0, "226 Transfer complete.\r\n", 24) = 24
13268 15:27:01.760650 write(5, "\n", 1) = 1
13268 15:27:01.760678 read(5,  <unfinished ...>
13266 15:27:01.760695 close(6)          = 0
13266 15:27:01.760736 read(4, "\n", 1)  = 1
13266 15:27:01.760765 close(5)          = 0
13266 15:27:01.760794 write(4, "\1", 1) = 1
13268 15:27:01.760820 <... read resumed> "\1", 1) = 1
13268 15:27:01.760837 close(4)          = 0
13268 15:27:01.760862 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13268 15:27:01.760894 alarm(300)        = 0
13268 15:27:01.760919 recv(0,  <unfinished ...>
13266 15:27:01.760936 read(4,  <unfinished ...>
4439  15:27:01.901179 <... select resumed> ) = 1 (in [5])
4439  15:27:01.901236 accept(5, {sa_family=AF_INET, sin_port=htons(44931), sin_addr=inet_addr("10.0.2.8")}, [16]) = 13
4439  15:27:01.901333 time(NULL)        = 1495654021
4439  15:27:01.901358 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 13269
13269 15:27:01.901523 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
13269 15:27:01.901546 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
13269 15:27:01.901563 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
13269 15:27:01.901594 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
13269 15:27:01.901619 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
13269 15:27:01.901638 close(3)          = 0
13269 15:27:01.901652 close(4)          = 0
13269 15:27:01.901666 open("/dev/null", O_RDONLY) = 3
13269 15:27:01.901688 dup2(3, 0)        = 0
13269 15:27:01.901702 dup2(3, 1)        = 1
13269 15:27:01.901714 dup2(3, 2)        = 2
13269 15:27:01.901727 close(3)          = 0
13269 15:27:01.901744 setgid32(0)       = 0
13269 15:27:01.901762 setgroups32(0, []) = 0
13269 15:27:01.901777 setuid32(0)       = 0
13269 15:27:01.901794 getpriority(PRIO_PROCESS, 0) = 20
13269 15:27:01.901808 setpriority(PRIO_PROCESS, 0, 10) = 0
13269 15:27:01.901822 getpriority(PRIO_PROCESS, 0) = 10
13269 15:27:01.901876 getpeername(13, {sa_family=AF_INET, sin_port=htons(44931), sin_addr=inet_addr("10.0.2.8")}, [16]) = 0
13269 15:27:01.901909 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("10.0.2.11")}, [16]) = 0
13269 15:27:01.901949 open("/etc/hosts.allow", O_RDONLY) = 3
