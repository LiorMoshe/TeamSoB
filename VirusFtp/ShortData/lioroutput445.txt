9645  14:50:04.154399 open("/etc/ld.so.cache", O_RDONLY) = 7
9645  14:50:04.154428 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
9645  14:50:04.154465 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d96000
9645  14:50:04.154490 close(7)          = 0
9645  14:50:04.154516 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9645  14:50:04.154579 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
9645  14:50:04.154617 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
9645  14:50:04.154831 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
9645  14:50:04.154875 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d64000
9645  14:50:04.154903 mmap2(0xb7d6d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d6d000
9645  14:50:04.154940 mmap2(0xb7d6f000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d6f000
9645  14:50:04.154977 close(7)          = 0
9645  14:50:04.155007 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
9645  14:50:04.155041 open("/lib/libselinux.so.1", O_RDONLY) = 7
9645  14:50:04.155071 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
9645  14:50:04.155273 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
9645  14:50:04.155314 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d4b000
9645  14:50:04.155342 mmap2(0xb7d62000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d62000
9645  14:50:04.155381 close(7)          = 0
9645  14:50:04.155657 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
9645  14:50:04.155724 statfs64("/selinux", 84, 0xbf8212bc) = -1 ENOENT (No such file or directory)
9645  14:50:04.155760 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
9645  14:50:04.155816 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
9645  14:50:04.155857 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f67000
9645  14:50:04.155884 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
9645  14:50:04.156073 read(7, "", 1024) = 0
9645  14:50:04.156097 close(7)          = 0
9645  14:50:04.156121 munmap(0xb7f67000, 4096) = 0
9645  14:50:04.156160 munmap(0xb7d96000, 29913) = 0
9645  14:50:04.156194 read(6, "", 4096) = 0
9645  14:50:04.156221 close(6)          = 0
9645  14:50:04.156243 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.156269 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.156326 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.156358 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
9645  14:50:04.156396 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.156423 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
9645  14:50:04.156548 read(6, "", 4096) = 0
9645  14:50:04.156575 close(6)          = 0
9645  14:50:04.156598 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.156625 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.156686 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.156734 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
9645  14:50:04.156773 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.156799 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
9645  14:50:04.156891 read(6, "", 4096) = 0
9645  14:50:04.156915 close(6)          = 0
9645  14:50:04.156937 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.156962 read(5, "", 4096) = 0
9645  14:50:04.156985 close(5)          = 0
9645  14:50:04.157007 munmap(0xb7f6e000, 4096) = 0
9645  14:50:04.157031 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
9645  14:50:04.157063 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
9645  14:50:04.157100 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6e000
9645  14:50:04.157125 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
9645  14:50:04.157230 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.157273 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.157302 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
9645  14:50:04.157340 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.157364 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
9645  14:50:04.157497 read(6, "", 4096) = 0
9645  14:50:04.157523 close(6)          = 0
9645  14:50:04.157546 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.157573 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.157617 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.157647 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
9645  14:50:04.157685 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.157717 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
9645  14:50:04.157808 read(6, "", 4096) = 0
9645  14:50:04.157831 close(6)          = 0
9645  14:50:04.157853 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.157878 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.157921 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.157952 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
9645  14:50:04.157989 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.158013 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
9645  14:50:04.158279 read(6, "", 4096) = 0
9645  14:50:04.158303 close(6)          = 0
9645  14:50:04.158324 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.158350 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
9645  14:50:04.158423 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
9645  14:50:04.158458 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
9645  14:50:04.158496 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
9645  14:50:04.158521 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
9645  14:50:04.158611 read(6, "", 4096) = 0
9645  14:50:04.158634 close(6)          = 0
9645  14:50:04.158657 munmap(0xb7f68000, 4096) = 0
9645  14:50:04.158682 read(5, "", 4096) = 0
9645  14:50:04.158704 close(5)          = 0
9645  14:50:04.158725 munmap(0xb7f6e000, 4096) = 0
9645  14:50:04.158757 time(NULL)        = 1495651804
9645  14:50:04.158786 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
9645  14:50:04.158829 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
9645  14:50:04.158864 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
9645  14:50:04.158902 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6e000
9645  14:50:04.158927 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
9645  14:50:04.158976 read(5, "", 4096) = 0
9645  14:50:04.158998 close(5)          = 0
9645  14:50:04.159020 munmap(0xb7f6e000, 4096) = 0
9645  14:50:04.159057 getuid32()        = 0
9645  14:50:04.159098 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.159133 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.159159 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9645  14:50:04.159197 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.159223 _llseek(5, 1624, [1624], SEEK_SET) = 0
9645  14:50:04.159270 munmap(0xb7f6e000, 1624) = 0
9645  14:50:04.159296 close(5)          = 0
9645  14:50:04.159374 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.159421 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.159447 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9645  14:50:04.159505 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.159535 _llseek(5, 1233, [1233], SEEK_SET) = 0
9645  14:50:04.159583 munmap(0xb7f6e000, 1233) = 0
9645  14:50:04.159608 close(5)          = 0
9645  14:50:04.159653 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.159684 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.159732 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9645  14:50:04.159771 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.159797 _llseek(5, 1624, [1624], SEEK_SET) = 0
9645  14:50:04.159835 munmap(0xb7f6e000, 1624) = 0
9645  14:50:04.159859 close(5)          = 0
9645  14:50:04.159889 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.159920 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.159944 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9645  14:50:04.159981 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.160006 _llseek(5, 1233, [1233], SEEK_SET) = 0
9645  14:50:04.160045 munmap(0xb7f6e000, 1233) = 0
9645  14:50:04.160068 close(5)          = 0
9645  14:50:04.160633 getuid32()        = 0
9645  14:50:04.160664 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.160696 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.160721 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9645  14:50:04.160758 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.160784 _llseek(5, 1624, [1624], SEEK_SET) = 0
9645  14:50:04.160821 munmap(0xb7f6e000, 1624) = 0
9645  14:50:04.160844 close(5)          = 0
9645  14:50:04.160875 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.160905 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.160929 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
9645  14:50:04.160982 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.161012 _llseek(5, 1233, [1233], SEEK_SET) = 0
9645  14:50:04.161052 munmap(0xb7f6e000, 1233) = 0
9645  14:50:04.161076 close(5)          = 0
9645  14:50:04.161104 time(NULL)        = 1495651804
9645  14:50:04.161162 munmap(0xb7f6b000, 12164) = 0
9645  14:50:04.161236 munmap(0xb7f69000, 7136) = 0
9645  14:50:04.161426 munmap(0xb7d9e000, 95428) = 0
9645  14:50:04.161459 munmap(0xb7d64000, 201052) = 0
9645  14:50:04.161487 munmap(0xb7d4b000, 101180) = 0
9645  14:50:04.161529 gettimeofday({1495651804, 161539}, NULL) = 0
9645  14:50:04.161558 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf823194) = -1 ENOENT (No such file or directory)
9645  14:50:04.161594 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
9645  14:50:04.161662 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8232e4) = 0
9645  14:50:04.161703 write(3, "Wed May 24 14:50:04 2017 [pid 9645] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 76) = 76
9645  14:50:04.161755 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8232ec) = 0
9645  14:50:04.161810 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9645  14:50:04.161847 write(4, "\1", 1 <unfinished ...>
9646  14:50:04.161874 <... read resumed> "\1", 1) = 1
9645  14:50:04.161887 <... write resumed> ) = 1
9646  14:50:04.161908 exit_group(0)     = ?
9645  14:50:04.161992 --- SIGCHLD (Child exited) @ 0 (0) ---
9645  14:50:04.162009 sigreturn()       = ? (mask now [])
9645  14:50:04.162053 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 9646
9645  14:50:04.162085 close(4)          = 0
9645  14:50:04.162114 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
9645  14:50:04.162148 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9645  14:50:04.162180 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9645  14:50:04.162213 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd46f8) = 9647
9647  14:50:04.162336 prctl(0x1, 0x9, 0, 0, 0) = 0
9647  14:50:04.162396 close(4)          = 0
9647  14:50:04.162468 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
9647  14:50:04.162508 _llseek(4, 0, [0], SEEK_CUR) = 0
9647  14:50:04.162545 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9647  14:50:04.162589 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
9647  14:50:04.162617 _llseek(4, 1624, [1624], SEEK_SET) = 0
9647  14:50:04.162670 munmap(0xb7f6e000, 1624) = 0
9647  14:50:04.162698 close(4)          = 0
9647  14:50:04.162729 getuid32()        = 0
9647  14:50:04.162753 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
9647  14:50:04.162783 _llseek(4, 0, [0], SEEK_CUR) = 0
9647  14:50:04.162807 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9647  14:50:04.162845 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
9647  14:50:04.162870 _llseek(4, 1624, [1624], SEEK_SET) = 0
9647  14:50:04.162907 munmap(0xb7f6e000, 1624) = 0
9647  14:50:04.162930 close(4)          = 0
9647  14:50:04.162993 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
9647  14:50:04.163040 read(4, "65536\n", 31) = 6
9647  14:50:04.163070 close(4)          = 0
9647  14:50:04.163108 socket(PF_FILE, SOCK_STREAM, 0) = 4
9647  14:50:04.163183 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
9647  14:50:04.163218 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
9647  14:50:04.163271 close(4)          = 0
9647  14:50:04.163298 socket(PF_FILE, SOCK_STREAM, 0) = 4
9647  14:50:04.163351 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
9647  14:50:04.163387 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
9647  14:50:04.163433 close(4)          = 0
9647  14:50:04.163492 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
9647  14:50:04.163527 _llseek(4, 0, [0], SEEK_CUR) = 0
9647  14:50:04.163552 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
9647  14:50:04.163591 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
9647  14:50:04.163618 _llseek(4, 886, [886], SEEK_SET) = 0
9647  14:50:04.163675 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
9647  14:50:04.163715 munmap(0xb7f6e000, 886) = 0
9647  14:50:04.163740 close(4)          = 0
9647  14:50:04.163763 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
9647  14:50:04.163804 geteuid32()       = 0
9647  14:50:04.163830 getegid32()       = 0
9647  14:50:04.163855 setregid32(-1, 1000) = 0
9647  14:50:04.163880 setreuid32(-1, 1000) = 0
9647  14:50:04.163906 chdir("/home/msfadmin") = 0
9647  14:50:04.163934 setreuid32(-1, 0) = 0
9647  14:50:04.163956 setregid32(-1, 0) = 0
9647  14:50:04.163981 setgid32(1000)    = 0
9647  14:50:04.164004 setuid32(1000)    = 0
9647  14:50:04.164028 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
9647  14:50:04.164061 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6c000
9647  14:50:04.164097 mprotect(0xb7f6e000, 4096, PROT_NONE) = 0
9647  14:50:04.164125 mprotect(0xb7f6c000, 4096, PROT_NONE) = 0
9647  14:50:04.164151 getcwd("/home/msfadmin", 4096) = 15
9647  14:50:04.164183 umask(022)        = 077
9647  14:50:04.164206 getcwd("/home/msfadmin", 4096) = 15
9647  14:50:04.164237 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
9647  14:50:04.164320 write(0, "230 Login successful.\r\n", 23) = 23
9647  14:50:04.164552 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9647  14:50:04.164592 alarm(300)        = 0
9647  14:50:04.164618 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
9647  14:50:04.164645 mprotect(0xb7f6b000, 4096, PROT_NONE) = 0
9647  14:50:04.164672 mprotect(0xb7f69000, 4096, PROT_NONE) = 0
9647  14:50:04.164703 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
9647  14:50:04.164733 read(0, "TYPE I\r\n", 8) = 8
9647  14:50:04.164772 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
9647  14:50:04.164861 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9647  14:50:04.164895 alarm(300)        = 300
9647  14:50:04.164921 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
9647  14:50:04.164948 read(0, "PASV\r\n", 6) = 6
9647  14:50:04.164975 write(5, "\n", 1) = 1
9647  14:50:04.165001 read(5,  <unfinished ...>
9645  14:50:04.165030 close(5)          = 0
9645  14:50:04.165060 getuid32()        = 0
9645  14:50:04.165096 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
9645  14:50:04.165130 _llseek(5, 0, [0], SEEK_CUR) = 0
9645  14:50:04.165159 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
9645  14:50:04.165201 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
9645  14:50:04.165231 _llseek(5, 1624, [1624], SEEK_SET) = 0
9645  14:50:04.165298 munmap(0xb7f6e000, 1624) = 0
9645  14:50:04.165330 close(5)          = 0
9645  14:50:04.165368 setgroups32(0, []) = 0
9645  14:50:04.165395 chdir("/usr/share/empty") = 0
9645  14:50:04.165424 chroot(".")       = 0
9645  14:50:04.165450 capset(NULL, NULL) = -1 EFAULT (Bad address)
9645  14:50:04.165481 prctl(0x8, 0, 0xbf8232c8, 0x80549a6, 0xbf8232b0) = 0
9645  14:50:04.165508 prctl(0x8, 0x1, 0xbf8232c8, 0x8054a49, 0xbf8232b0) = 0
9645  14:50:04.165531 setgid32(65534)   = 0
9645  14:50:04.165555 setuid32(65534)   = 0
9645  14:50:04.165577 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
9645  14:50:04.165609 read(4, "\n", 1)  = 1
9645  14:50:04.165640 write(4, "\1", 1) = 1
9647  14:50:04.165666 <... read resumed> "\1", 1) = 1
9647  14:50:04.165684 write(5, "\f", 1) = 1
9647  14:50:04.165707 read(5,  <unfinished ...>
9645  14:50:04.165723 read(4, "\f", 1)  = 1
9645  14:50:04.165753 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
9645  14:50:04.165762 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
9645  14:50:04.165763 gettimeofday({1495651804, 165763}, NULL) = 0
9645  14:50:04.165763 bind(5, {sa_family=AF_INET, sin_port=htons(50511), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
9645  14:50:04.165763 listen(5, 1)      = 0
9645  14:50:04.165782 write(4, "O\305\0\0", 4) = 4
9647  14:50:04.165810 <... read resumed> "O\305\0\0", 4) = 4
9647  14:50:04.165844 write(0, "227 Entering Passive Mode (127,0,0,1,197,79).\r\n", 47) = 47
9647  14:50:04.166121 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9647  14:50:04.166161 alarm(300)        = 300
9647  14:50:04.166189 recv(0, "STOR myfile11\r\n", 4096, MSG_PEEK) = 15
9647  14:50:04.166218 read(0, "STOR myfile11\r\n", 15) = 15
9647  14:50:04.166253 write(5, "\v", 1) = 1
9647  14:50:04.166279 read(5,  <unfinished ...>
9645  14:50:04.166297 read(4, "\v", 1)  = 1
9645  14:50:04.166324 write(4, "\1\0\0\0", 4) = 4
9647  14:50:04.166349 <... read resumed> "\1\0\0\0", 4) = 4
9647  14:50:04.166369 gettimeofday({1495651804, 166378}, NULL) = 0
9647  14:50:04.166395 getcwd("/home/msfadmin", 4096) = 15
9647  14:50:04.166424 open("myfile11", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
9647  14:50:04.166456 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
9647  14:50:04.166504 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
9647  14:50:04.166530 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
9647  14:50:04.166554 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf823214) = 0
9647  14:50:04.166591 ftruncate64(4, 0) = 0
9647  14:50:04.166632 _llseek(4, 0, [0], SEEK_SET) = 0
9647  14:50:04.166658 write(5, "\v", 1) = 1
9647  14:50:04.166683 read(5,  <unfinished ...>
9645  14:50:04.166700 read(4, "\v", 1)  = 1
9645  14:50:04.166727 write(4, "\1\0\0\0", 4) = 4
9647  14:50:04.166752 <... read resumed> "\1\0\0\0", 4) = 4
9647  14:50:04.166770 write(5, "\v", 1) = 1
9647  14:50:04.166793 read(5,  <unfinished ...>
9645  14:50:04.166809 read(4, "\v", 1)  = 1
9645  14:50:04.166835 write(4, "\1\0\0\0", 4) = 4
9647  14:50:04.166859 <... read resumed> "\1\0\0\0", 4) = 4
9647  14:50:04.166877 write(5, "\r", 1) = 1
9647  14:50:04.166901 read(5,  <unfinished ...>
9645  14:50:04.166947 read(4, "\r", 1)  = 1
9645  14:50:04.166980 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
9645  14:50:04.167021 accept(5, {sa_family=AF_INET, sin_port=htons(37979), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
9645  14:50:04.167073 write(4, "\1", 1) = 1
9647  14:50:04.167098 <... read resumed> "\1", 1) = 1
9647  14:50:04.167121 recvmsg(5,  <unfinished ...>
9645  14:50:04.167144 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
9647  14:50:04.167185 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
9647  14:50:04.167217 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
9647  14:50:04.167246 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
9647  14:50:04.167274 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
9647  14:50:04.167300 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
9647  14:50:04.167331 alarm(300)        = 300
