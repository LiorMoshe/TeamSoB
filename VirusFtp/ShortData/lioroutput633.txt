10145 14:55:14.795913 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10145 14:55:14.795970 statfs64("/selinux", 84, 0xbfb32dcc) = -1 ENOENT (No such file or directory)
10145 14:55:14.795997 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
10145 14:55:14.796045 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
10145 14:55:14.796080 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
10145 14:55:14.796103 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
10145 14:55:14.796276 read(7, "", 1024) = 0
10145 14:55:14.796297 close(7)          = 0
10145 14:55:14.796318 munmap(0xb7f49000, 4096) = 0
10145 14:55:14.796350 munmap(0xb7d78000, 29913) = 0
10145 14:55:14.796378 read(6, "", 4096) = 0
10145 14:55:14.796401 close(6)          = 0
10145 14:55:14.796421 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.796443 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.796484 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.796511 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10145 14:55:14.796544 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.796567 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10145 14:55:14.796651 read(6, "", 4096) = 0
10145 14:55:14.796671 close(6)          = 0
10145 14:55:14.796690 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.796712 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.796749 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.796776 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10145 14:55:14.796808 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.796830 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10145 14:55:14.796934 read(6, "", 4096) = 0
10145 14:55:14.796957 close(6)          = 0
10145 14:55:14.796976 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.796998 read(5, "", 4096) = 0
10145 14:55:14.797017 close(5)          = 0
10145 14:55:14.797036 munmap(0xb7f50000, 4096) = 0
10145 14:55:14.797057 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
10145 14:55:14.797085 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
10145 14:55:14.797118 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f50000
10145 14:55:14.797140 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
10145 14:55:14.797233 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.797270 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.797296 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
10145 14:55:14.797328 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.797350 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
10145 14:55:14.797452 read(6, "", 4096) = 0
10145 14:55:14.797473 close(6)          = 0
10145 14:55:14.797493 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.797515 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.797552 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.797578 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10145 14:55:14.797611 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.797632 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10145 14:55:14.797712 read(6, "", 4096) = 0
10145 14:55:14.797732 close(6)          = 0
10145 14:55:14.797751 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.797773 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.797810 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.797870 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
10145 14:55:14.797903 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.797925 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
10145 14:55:14.798166 read(6, "", 4096) = 0
10145 14:55:14.798187 close(6)          = 0
10145 14:55:14.798206 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.798229 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10145 14:55:14.798266 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10145 14:55:14.798292 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10145 14:55:14.798323 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
10145 14:55:14.798323 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10145 14:55:14.798348 read(6, "", 4096) = 0
10145 14:55:14.798376 close(6)          = 0
10145 14:55:14.798396 munmap(0xb7f4a000, 4096) = 0
10145 14:55:14.798418 read(5, "", 4096) = 0
10145 14:55:14.798438 close(5)          = 0
10145 14:55:14.798456 munmap(0xb7f50000, 4096) = 0
10145 14:55:14.798483 time(NULL)        = 1495652114
10145 14:55:14.798507 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10145 14:55:14.798545 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
10145 14:55:14.798569 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10145 14:55:14.798602 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f50000
10145 14:55:14.798646 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
10145 14:55:14.798692 read(5, "", 4096) = 0
10145 14:55:14.798711 close(5)          = 0
10145 14:55:14.798731 munmap(0xb7f50000, 4096) = 0
10145 14:55:14.798763 getuid32()        = 0
10145 14:55:14.798797 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.798827 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.798850 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10145 14:55:14.798883 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.798906 _llseek(5, 1624, [1624], SEEK_SET) = 0
10145 14:55:14.798946 munmap(0xb7f50000, 1624) = 0
10145 14:55:14.798968 close(5)          = 0
10145 14:55:14.799019 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.799054 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.799076 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10145 14:55:14.799108 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.799130 _llseek(5, 1233, [1233], SEEK_SET) = 0
10145 14:55:14.799170 munmap(0xb7f50000, 1233) = 0
10145 14:55:14.799190 close(5)          = 0
10145 14:55:14.799228 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.799255 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.799275 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10145 14:55:14.799308 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.799329 _llseek(5, 1624, [1624], SEEK_SET) = 0
10145 14:55:14.799362 munmap(0xb7f50000, 1624) = 0
10145 14:55:14.799382 close(5)          = 0
10145 14:55:14.799407 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.799433 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.799454 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10145 14:55:14.799486 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.799507 _llseek(5, 1233, [1233], SEEK_SET) = 0
10145 14:55:14.799541 munmap(0xb7f50000, 1233) = 0
10145 14:55:14.799561 close(5)          = 0
10145 14:55:14.800057 getuid32()        = 0
10145 14:55:14.800085 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.800112 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.800133 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10145 14:55:14.800166 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.800188 _llseek(5, 1624, [1624], SEEK_SET) = 0
10145 14:55:14.800220 munmap(0xb7f50000, 1624) = 0
10145 14:55:14.800241 close(5)          = 0
10145 14:55:14.800268 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.800294 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.800315 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10145 14:55:14.800347 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.800368 _llseek(5, 1233, [1233], SEEK_SET) = 0
10145 14:55:14.800402 munmap(0xb7f50000, 1233) = 0
10145 14:55:14.800422 close(5)          = 0
10145 14:55:14.800445 time(NULL)        = 1495652114
10145 14:55:14.800476 munmap(0xb7f4d000, 12164) = 0
10145 14:55:14.800502 munmap(0xb7f4b000, 7136) = 0
10145 14:55:14.800531 munmap(0xb7d80000, 95428) = 0
10145 14:55:14.800664 munmap(0xb7d46000, 201052) = 0
10145 14:55:14.800697 munmap(0xb7d2d000, 101180) = 0
10145 14:55:14.800731 gettimeofday({1495652114, 800747}, NULL) = 0
10145 14:55:14.800763 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb34ca4) = -1 ENOENT (No such file or directory)
10145 14:55:14.800795 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
10145 14:55:14.800851 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb34df4) = 0
10145 14:55:14.800885 write(3, "Wed May 24 14:55:14 2017 [pid 10145] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
10145 14:55:14.800919 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb34dfc) = 0
10145 14:55:14.800946 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10145 14:55:14.800975 write(4, "\1", 1 <unfinished ...>
10146 14:55:14.800995 <... read resumed> "\1", 1) = 1
10145 14:55:14.801006 <... write resumed> ) = 1
10146 14:55:14.801021 exit_group(0)     = ?
10145 14:55:14.801086 --- SIGCHLD (Child exited) @ 0 (0) ---
10145 14:55:14.801102 sigreturn()       = ? (mask now [])
10145 14:55:14.801140 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10146
10145 14:55:14.801166 close(4)          = 0
10145 14:55:14.801191 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
10145 14:55:14.801220 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10145 14:55:14.801248 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10145 14:55:14.801276 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7db66f8) = 10147
10147 14:55:14.801382 prctl(0x1, 0x9, 0, 0, 0) = 0
10147 14:55:14.801410 close(4)          = 0
10147 14:55:14.801470 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10147 14:55:14.801505 _llseek(4, 0, [0], SEEK_CUR) = 0
10147 14:55:14.801536 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10147 14:55:14.801573 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
10147 14:55:14.801733 _llseek(4, 1624, [1624], SEEK_SET) = 0
10147 14:55:14.801787 munmap(0xb7f50000, 1624) = 0
10147 14:55:14.801811 close(4)          = 0
10147 14:55:14.801839 getuid32()        = 0
10147 14:55:14.801861 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10147 14:55:14.801887 _llseek(4, 0, [0], SEEK_CUR) = 0
10147 14:55:14.801909 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10147 14:55:14.801941 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
10147 14:55:14.801964 _llseek(4, 1624, [1624], SEEK_SET) = 0
10147 14:55:14.801996 munmap(0xb7f50000, 1624) = 0
10147 14:55:14.802016 close(4)          = 0
10147 14:55:14.802070 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
10147 14:55:14.802111 read(4, "65536\n", 31) = 6
10147 14:55:14.802136 close(4)          = 0
10147 14:55:14.802165 socket(PF_FILE, SOCK_STREAM, 0) = 4
10147 14:55:14.802189 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10147 14:55:14.802212 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10147 14:55:14.802255 close(4)          = 0
10147 14:55:14.802278 socket(PF_FILE, SOCK_STREAM, 0) = 4
10147 14:55:14.802299 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10147 14:55:14.802320 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10147 14:55:14.802356 close(4)          = 0
10147 14:55:14.802404 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
10147 14:55:14.802433 _llseek(4, 0, [0], SEEK_CUR) = 0
10147 14:55:14.802454 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10147 14:55:14.802488 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
10147 14:55:14.802510 _llseek(4, 886, [886], SEEK_SET) = 0
10147 14:55:14.802561 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10147 14:55:14.802596 munmap(0xb7f50000, 886) = 0
10147 14:55:14.802616 close(4)          = 0
10147 14:55:14.802636 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
10147 14:55:14.802670 geteuid32()       = 0
10147 14:55:14.802714 getegid32()       = 0
10147 14:55:14.802737 setregid32(-1, 1000) = 0
10147 14:55:14.802767 setreuid32(-1, 1000) = 0
10147 14:55:14.802789 chdir("/home/msfadmin") = 0
10147 14:55:14.802814 setreuid32(-1, 0) = 0
10147 14:55:14.802833 setregid32(-1, 0) = 0
10147 14:55:14.802854 setgid32(1000)    = 0
10147 14:55:14.802874 setuid32(1000)    = 0
10147 14:55:14.802895 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
10147 14:55:14.802923 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4e000
10147 14:55:14.802946 mprotect(0xb7f50000, 4096, PROT_NONE) = 0
10147 14:55:14.802970 mprotect(0xb7f4e000, 4096, PROT_NONE) = 0
10147 14:55:14.802992 getcwd("/home/msfadmin", 4096) = 15
10147 14:55:14.803020 umask(022)        = 077
10147 14:55:14.803040 getcwd("/home/msfadmin", 4096) = 15
10147 14:55:14.803068 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10147 14:55:14.803115 write(0, "230 Login successful.\r\n", 23) = 23
10147 14:55:14.803279 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.803314 alarm(300)        = 0
10147 14:55:14.803336 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4b000
10147 14:55:14.803359 mprotect(0xb7f4d000, 4096, PROT_NONE) = 0
10147 14:55:14.803383 mprotect(0xb7f4b000, 4096, PROT_NONE) = 0
10147 14:55:14.803410 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
10147 14:55:14.803435 read(0, "TYPE I\r\n", 8) = 8
10147 14:55:14.803470 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
10147 14:55:14.803548 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.803577 alarm(300)        = 300
10147 14:55:14.803600 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
10147 14:55:14.803623 read(0, "PASV\r\n", 6) = 6
10147 14:55:14.803669 write(5, "\n", 1) = 1
10147 14:55:14.803698 read(5,  <unfinished ...>
10145 14:55:14.803723 close(5)          = 0
10145 14:55:14.803750 getuid32()        = 0
10145 14:55:14.803781 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10145 14:55:14.803811 _llseek(5, 0, [0], SEEK_CUR) = 0
10145 14:55:14.803837 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10145 14:55:14.803874 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
10145 14:55:14.803897 _llseek(5, 1624, [1624], SEEK_SET) = 0
10145 14:55:14.803933 munmap(0xb7f50000, 1624) = 0
10145 14:55:14.803957 close(5)          = 0
10145 14:55:14.803989 setgroups32(0, []) = 0
10145 14:55:14.804012 chdir("/usr/share/empty") = 0
10145 14:55:14.804038 chroot(".")       = 0
10145 14:55:14.804059 capset(NULL, NULL) = -1 EFAULT (Bad address)
10145 14:55:14.804087 prctl(0x8, 0, 0xbfb34dd8, 0x80549a6, 0xbfb34dc0) = 0
10145 14:55:14.804110 prctl(0x8, 0x1, 0xbfb34dd8, 0x8054a49, 0xbfb34dc0) = 0
10145 14:55:14.804131 setgid32(65534)   = 0
10145 14:55:14.804151 setuid32(65534)   = 0
10145 14:55:14.804170 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
10145 14:55:14.804198 read(4, "\n", 1)  = 1
10145 14:55:14.804225 write(4, "\1", 1) = 1
10147 14:55:14.804247 <... read resumed> "\1", 1) = 1
10147 14:55:14.804263 write(5, "\f", 1) = 1
10147 14:55:14.804284 read(5,  <unfinished ...>
10145 14:55:14.804298 read(4, "\f", 1)  = 1
10145 14:55:14.804323 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
10145 14:55:14.804351 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10145 14:55:14.804375 gettimeofday({1495652114, 804382}, NULL) = 0
10145 14:55:14.804407 bind(5, {sa_family=AF_INET, sin_port=htons(11726), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
10145 14:55:14.804439 listen(5, 1)      = 0
10145 14:55:14.804465 write(4, "\316-\0\0", 4) = 4
10147 14:55:14.804488 <... read resumed> "\316-\0\0", 4) = 4
10147 14:55:14.804516 write(0, "227 Entering Passive Mode (127,0,0,1,45,206).\r\n", 47) = 47
10147 14:55:14.804758 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.804796 alarm(300)        = 300
10147 14:55:14.804819 recv(0, "STOR myfile30\r\n", 4096, MSG_PEEK) = 15
10147 14:55:14.804845 read(0, "STOR myfile30\r\n", 15) = 15
10147 14:55:14.804876 write(5, "\v", 1) = 1
10147 14:55:14.804898 read(5,  <unfinished ...>
10145 14:55:14.804921 read(4, "\v", 1)  = 1
10145 14:55:14.804945 write(4, "\1\0\0\0", 4) = 4
10147 14:55:14.804967 <... read resumed> "\1\0\0\0", 4) = 4
10147 14:55:14.804985 gettimeofday({1495652114, 804993}, NULL) = 0
10147 14:55:14.805007 getcwd("/home/msfadmin", 4096) = 15
10147 14:55:14.805032 open("myfile30", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
10147 14:55:14.805060 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
10147 14:55:14.805094 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
10147 14:55:14.805116 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
10147 14:55:14.805136 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb34d24) = 0
10147 14:55:14.805167 ftruncate64(4, 0) = 0
10147 14:55:14.805201 _llseek(4, 0, [0], SEEK_SET) = 0
10147 14:55:14.805224 write(5, "\v", 1) = 1
10147 14:55:14.805244 read(5,  <unfinished ...>
10145 14:55:14.805259 read(4, "\v", 1)  = 1
10145 14:55:14.805281 write(4, "\1\0\0\0", 4) = 4
10147 14:55:14.805303 <... read resumed> "\1\0\0\0", 4) = 4
10147 14:55:14.805318 write(5, "\v", 1) = 1
10147 14:55:14.805338 read(5,  <unfinished ...>
10145 14:55:14.805352 read(4, "\v", 1)  = 1
10145 14:55:14.805374 write(4, "\1\0\0\0", 4) = 4
10147 14:55:14.805394 <... read resumed> "\1\0\0\0", 4) = 4
10147 14:55:14.805410 write(5, "\r", 1) = 1
10147 14:55:14.805430 read(5,  <unfinished ...>
10145 14:55:14.805443 read(4, "\r", 1)  = 1
10145 14:55:14.805469 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
10145 14:55:14.805505 accept(5, {sa_family=AF_INET, sin_port=htons(38889), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
10145 14:55:14.805549 write(4, "\1", 1) = 1
10147 14:55:14.805571 <... read resumed> "\1", 1) = 1
10147 14:55:14.805612 recvmsg(5,  <unfinished ...>
10145 14:55:14.805634 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10147 14:55:14.805669 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10147 14:55:14.805696 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
10147 14:55:14.805721 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
10147 14:55:14.805745 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
10147 14:55:14.805768 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.805795 alarm(300)        = 300
10147 14:55:14.805821 write(0, "150 Ok to send data.\r\n", 22) = 22
10147 14:55:14.805946 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d85000
10147 14:55:14.805974 mprotect(0xb7d97000, 4096, PROT_NONE) = 0
10147 14:55:14.805999 mprotect(0xb7d85000, 4096, PROT_NONE) = 0
10147 14:55:14.806020 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
10147 14:55:14.806047 write(4, "assasaaa\na\na\na\na\n", 17) = 17
10147 14:55:14.806078 read(6, "", 65536) = 0
10147 14:55:14.806099 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.806127 alarm(300)        = 300
10147 14:55:14.806146 close(6)          = 0
10147 14:55:14.806165 alarm(0)          = 300
10147 14:55:14.806184 gettimeofday({1495652114, 806191}, NULL) = 0
10147 14:55:14.806219 getpid()          = 10147
10147 14:55:14.806244 gettimeofday({1495652114, 806251}, NULL) = 0
10147 14:55:14.806279 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb34cc4) = 0
10147 14:55:14.806308 write(3, "Wed May 24 14:55:14 2017 [pid 10147] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile30\", 17 bytes, 13.20Kbyte/sec\n", 131) = 131
10147 14:55:14.806349 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb34ccc) = 0
10147 14:55:14.806378 write(0, "226 Transfer complete.\r\n", 24) = 24
10147 14:55:14.806457 write(5, "\n", 1) = 1
10147 14:55:14.806481 read(5,  <unfinished ...>
10145 14:55:14.806495 close(6)          = 0
10145 14:55:14.806530 read(4, "\n", 1)  = 1
10145 14:55:14.806613 close(5)          = 0
10145 14:55:14.806641 write(4, "\1", 1) = 1
10147 14:55:14.806664 <... read resumed> "\1", 1) = 1
10147 14:55:14.806679 close(4)          = 0
10147 14:55:14.806701 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10147 14:55:14.806729 alarm(300)        = 0
10147 14:55:14.806752 recv(0,  <unfinished ...>
10145 14:55:14.806767 read(4,  <unfinished ...>
4439  14:55:14.940605 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  14:55:14.940653 --- SIGCHLD (Child exited) @ 0 (0) ---
