18288 16:26:16.551600 close(7)          = 0
18288 16:26:16.551778 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18288 16:26:16.551833 statfs64("/selinux", 84, 0xbf88fb2c) = -1 ENOENT (No such file or directory)
18288 16:26:16.551867 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
18288 16:26:16.551918 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
18288 16:26:16.551957 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
18288 16:26:16.551988 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
18288 16:26:16.552138 read(7, "", 1024) = 0
18288 16:26:16.552167 close(7)          = 0
18288 16:26:16.552195 munmap(0xb7f74000, 4096) = 0
18288 16:26:16.552231 munmap(0xb7da3000, 29913) = 0
18288 16:26:16.552290 read(6, "", 4096) = 0
18288 16:26:16.552322 close(6)          = 0
18288 16:26:16.552348 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.552378 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.552423 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.552457 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18288 16:26:16.552495 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.552523 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18288 16:26:16.552601 read(6, "", 4096) = 0
18288 16:26:16.552630 close(6)          = 0
18288 16:26:16.552656 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.552685 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.552700 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.552700 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18288 16:26:16.552700 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.552700 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18288 16:26:16.552700 read(6, "", 4096) = 0
18288 16:26:16.552700 close(6)          = 0
18288 16:26:16.552700 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.552700 read(5, "", 4096) = 0
18288 16:26:16.552700 close(5)          = 0
18288 16:26:16.552700 munmap(0xb7f7b000, 4096) = 0
18288 16:26:16.552700 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
18288 16:26:16.552700 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
18288 16:26:16.552700 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7b000
18288 16:26:16.552700 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
18288 16:26:16.552700 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.552700 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.552700 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
18288 16:26:16.552700 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.552700 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
18288 16:26:16.552700 read(6, "", 4096) = 0
18288 16:26:16.552700 close(6)          = 0
18288 16:26:16.552700 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.552700 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.552700 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.552700 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18288 16:26:16.552700 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.552700 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18288 16:26:16.552700 read(6, "", 4096) = 0
18288 16:26:16.552700 close(6)          = 0
18288 16:26:16.554068 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.554105 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.554148 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.554182 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
18288 16:26:16.554219 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.554248 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
18288 16:26:16.554457 read(6, "", 4096) = 0
18288 16:26:16.554484 close(6)          = 0
18288 16:26:16.554511 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.554540 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18288 16:26:16.554582 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18288 16:26:16.554615 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18288 16:26:16.554653 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18288 16:26:16.554680 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18288 16:26:16.554755 read(6, "", 4096) = 0
18288 16:26:16.554789 close(6)          = 0
18288 16:26:16.554815 munmap(0xb7f75000, 4096) = 0
18288 16:26:16.554843 read(5, "", 4096) = 0
18288 16:26:16.554869 close(5)          = 0
18288 16:26:16.554895 munmap(0xb7f7b000, 4096) = 0
18288 16:26:16.554928 time(NULL)        = 1495657576
18288 16:26:16.554958 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18288 16:26:16.555000 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
18288 16:26:16.555030 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18288 16:26:16.555068 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7b000
18288 16:26:16.555095 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
18288 16:26:16.555141 read(5, "", 4096) = 0
18288 16:26:16.555167 close(5)          = 0
18288 16:26:16.555193 munmap(0xb7f7b000, 4096) = 0
18288 16:26:16.555252 getuid32()        = 0
18288 16:26:16.555296 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.555332 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.555361 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18288 16:26:16.555399 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.555428 _llseek(5, 1624, [1624], SEEK_SET) = 0
18288 16:26:16.555472 munmap(0xb7f7b000, 1624) = 0
18288 16:26:16.555501 close(5)          = 0
18288 16:26:16.555555 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.555597 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.555626 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18288 16:26:16.555664 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.555693 _llseek(5, 1233, [1233], SEEK_SET) = 0
18288 16:26:16.555736 munmap(0xb7f7b000, 1233) = 0
18288 16:26:16.555764 close(5)          = 0
18288 16:26:16.555807 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.555840 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.555868 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18288 16:26:16.555905 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.555933 _llseek(5, 1624, [1624], SEEK_SET) = 0
18288 16:26:16.555971 munmap(0xb7f7b000, 1624) = 0
18288 16:26:16.555998 close(5)          = 0
18288 16:26:16.556030 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.556062 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.556089 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18288 16:26:16.556127 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.556155 _llseek(5, 1233, [1233], SEEK_SET) = 0
18288 16:26:16.556215 munmap(0xb7f7b000, 1233) = 0
18288 16:26:16.556247 close(5)          = 0
18288 16:26:16.556642 getuid32()        = 0
18288 16:26:16.556672 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.556705 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.556733 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18288 16:26:16.556771 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.556800 _llseek(5, 1624, [1624], SEEK_SET) = 0
18288 16:26:16.556837 munmap(0xb7f7b000, 1624) = 0
18288 16:26:16.556865 close(5)          = 0
18288 16:26:16.556896 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.556929 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.556958 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18288 16:26:16.556994 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.557023 _llseek(5, 1233, [1233], SEEK_SET) = 0
18288 16:26:16.557061 munmap(0xb7f7b000, 1233) = 0
18288 16:26:16.557087 close(5)          = 0
18288 16:26:16.557118 time(NULL)        = 1495657576
18288 16:26:16.557158 munmap(0xb7f78000, 12164) = 0
18288 16:26:16.557193 munmap(0xb7f76000, 7136) = 0
18288 16:26:16.557227 munmap(0xb7dab000, 95428) = 0
18288 16:26:16.557258 munmap(0xb7d71000, 201052) = 0
18288 16:26:16.557286 munmap(0xb7d58000, 101180) = 0
18288 16:26:16.557325 gettimeofday({1495657576, 557349}, NULL) = 0
18288 16:26:16.557373 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf891a04) = -1 ENOENT (No such file or directory)
18288 16:26:16.557409 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
18288 16:26:16.557465 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf891b54) = 0
18288 16:26:16.557504 write(3, "Wed May 24 16:26:16 2017 [pid 18288] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
18288 16:26:16.557543 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf891b5c) = 0
18288 16:26:16.557575 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18288 16:26:16.557610 write(4, "\1", 1 <unfinished ...>
18289 16:26:16.557637 <... read resumed> "\1", 1) = 1
18288 16:26:16.557657 <... write resumed> ) = 1
18289 16:26:16.557681 exit_group(0)     = ?
18288 16:26:16.557750 --- SIGCHLD (Child exited) @ 0 (0) ---
18288 16:26:16.557774 sigreturn()       = ? (mask now [])
18288 16:26:16.557816 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18289
18288 16:26:16.557848 close(4)          = 0
18288 16:26:16.557878 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
18288 16:26:16.557912 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18288 16:26:16.557947 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18288 16:26:16.557980 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7de16f8) = 18290
18290 16:26:16.558089 prctl(0x1, 0x9, 0, 0, 0) = 0
18290 16:26:16.558143 close(4)          = 0
18290 16:26:16.558205 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18290 16:26:16.558245 _llseek(4, 0, [0], SEEK_CUR) = 0
18290 16:26:16.558282 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18290 16:26:16.558324 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7b000
18290 16:26:16.558354 _llseek(4, 1624, [1624], SEEK_SET) = 0
18290 16:26:16.558403 munmap(0xb7f7b000, 1624) = 0
18290 16:26:16.558433 close(4)          = 0
18290 16:26:16.558467 getuid32()        = 0
18290 16:26:16.558495 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18290 16:26:16.558526 _llseek(4, 0, [0], SEEK_CUR) = 0
18290 16:26:16.558554 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18290 16:26:16.558592 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7b000
18290 16:26:16.558643 _llseek(4, 1624, [1624], SEEK_SET) = 0
18290 16:26:16.558682 munmap(0xb7f7b000, 1624) = 0
18290 16:26:16.558709 close(4)          = 0
18290 16:26:16.558765 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
18290 16:26:16.558811 read(4, "65536\n", 31) = 6
18290 16:26:16.558842 close(4)          = 0
18290 16:26:16.558876 socket(PF_FILE, SOCK_STREAM, 0) = 4
18290 16:26:16.558908 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18290 16:26:16.558936 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18290 16:26:16.558982 close(4)          = 0
18290 16:26:16.559013 socket(PF_FILE, SOCK_STREAM, 0) = 4
18290 16:26:16.559040 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18290 16:26:16.559068 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18290 16:26:16.559132 close(4)          = 0
18290 16:26:16.559185 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
18290 16:26:16.559221 _llseek(4, 0, [0], SEEK_CUR) = 0
18290 16:26:16.559250 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18290 16:26:16.559287 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7b000
18290 16:26:16.559317 _llseek(4, 886, [886], SEEK_SET) = 0
18290 16:26:16.559368 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18290 16:26:16.559408 munmap(0xb7f7b000, 886) = 0
18290 16:26:16.559436 close(4)          = 0
18290 16:26:16.559463 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
18290 16:26:16.559501 geteuid32()       = 0
18290 16:26:16.559531 getegid32()       = 0
18290 16:26:16.559559 setregid32(-1, 1000) = 0
18290 16:26:16.559587 setreuid32(-1, 1000) = 0
18290 16:26:16.559623 chdir("/home/msfadmin") = 0
18290 16:26:16.559654 setreuid32(-1, 0) = 0
18290 16:26:16.559680 setregid32(-1, 0) = 0
18290 16:26:16.559707 setgid32(1000)    = 0
18290 16:26:16.559734 setuid32(1000)    = 0
18290 16:26:16.559762 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
18290 16:26:16.559795 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f79000
18290 16:26:16.559825 mprotect(0xb7f7b000, 4096, PROT_NONE) = 0
18290 16:26:16.559854 mprotect(0xb7f79000, 4096, PROT_NONE) = 0
18290 16:26:16.559883 getcwd("/home/msfadmin", 4096) = 15
18290 16:26:16.559917 umask(022)        = 077
18290 16:26:16.559944 getcwd("/home/msfadmin", 4096) = 15
18290 16:26:16.559976 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18290 16:26:16.560024 write(0, "230 Login successful.\r\n", 23) = 23
18290 16:26:16.560199 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18290 16:26:16.560240 alarm(300)        = 0
18290 16:26:16.560291 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f76000
18290 16:26:16.560320 mprotect(0xb7f78000, 4096, PROT_NONE) = 0
18290 16:26:16.560349 mprotect(0xb7f76000, 4096, PROT_NONE) = 0
18290 16:26:16.560382 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
18290 16:26:16.560414 read(0, "QUIT\r\n", 6) = 6
18290 16:26:16.560449 shutdown(0, 0 /* receive */) = 0
18290 16:26:16.560481 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
18290 16:26:16.560509 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18290 16:26:16.560536 write(0, "221 Goodbye.\r\n", 14) = 14
18290 16:26:16.560653 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
18290 16:26:16.560684 fcntl64(0, F_SETFL, O_RDWR) = 0
18290 16:26:16.560711 shutdown(0, 2 /* send and receive */) = 0
18290 16:26:16.560775 exit_group(0)     = ?
18288 16:26:16.560830 --- SIGCHLD (Child exited) @ 0 (0) ---
18288 16:26:16.560864 alarm(1)          = 0
18288 16:26:16.560916 sigreturn()       = ? (mask now [])
18288 16:26:16.560960 close(5)          = 0
18288 16:26:16.560994 getuid32()        = 0
18288 16:26:16.561055 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18288 16:26:16.561094 _llseek(5, 0, [0], SEEK_CUR) = 0
18288 16:26:16.561125 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18288 16:26:16.561167 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7b000
18288 16:26:16.561197 _llseek(5, 1624, [1624], SEEK_SET) = 0
18288 16:26:16.561237 munmap(0xb7f7b000, 1624) = 0
18288 16:26:16.561266 close(5)          = 0
18288 16:26:16.561299 setgroups32(0, []) = 0
18288 16:26:16.561327 chdir("/usr/share/empty") = 0
18288 16:26:16.561359 chroot(".")       = 0
18288 16:26:16.561389 capset(NULL, NULL) = -1 EFAULT (Bad address)
18288 16:26:16.561420 prctl(0x8, 0, 0xbf891b38, 0x80549a6, 0xbf891b20) = 0
18288 16:26:16.561447 prctl(0x8, 0x1, 0xbf891b38, 0x8054a49, 0xbf891b20) = 0
18288 16:26:16.561475 setgid32(65534)   = 0
18288 16:26:16.561502 setuid32(65534)   = 0
18288 16:26:16.561529 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
18288 16:26:16.561562 read(4, "", 1)    = 0
18288 16:26:16.561591 alarm(0)          = 1
18288 16:26:16.561629 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18290
18288 16:26:16.561663 exit_group(0)     = ?
4439  16:26:16.561732 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  16:26:16.561756 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  16:26:16.561779 write(4, "\21", 1) = 1
4439  16:26:16.561813 sigreturn()       = ? (mask now [])
4439  16:26:16.561878 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  16:26:16.561919 ioctl(3, FIONREAD, [1]) = 0
4439  16:26:16.561953 read(3, "\21", 1) = 1
4439  16:26:16.561985 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 18288
4439  16:26:16.562028 close(-1)         = -1 EBADF (Bad file descriptor)
4439  16:26:16.562062 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  16:26:16.562091 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  16:26:17.075861 accept(5, {sa_family=AF_INET, sin_port=htons(47734), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  16:26:17.076348 time(NULL)        = 1495657577
4439  16:26:17.076520 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 18291
18291 16:26:17.077066 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
18291 16:26:17.077169 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
18291 16:26:17.077251 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
18291 16:26:17.077330 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
18291 16:26:17.077420 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18291 16:26:17.077505 close(3)          = 0
18291 16:26:17.077574 close(4)          = 0
18291 16:26:17.077644 open("/dev/null", O_RDONLY) = 3
18291 16:26:17.077734 dup2(3, 0)        = 0
18291 16:26:17.077804 dup2(3, 1)        = 1
18291 16:26:17.077870 dup2(3, 2)        = 2
18291 16:26:17.077936 close(3)          = 0
18291 16:26:17.078061 setgid32(0)       = 0
18291 16:26:17.078143 setgroups32(0, []) = 0
18291 16:26:17.078216 setuid32(0)       = 0
18291 16:26:17.078336 getpriority(PRIO_PROCESS, 0) = 20
18291 16:26:17.078406 setpriority(PRIO_PROCESS, 0, 10) = 0
18291 16:26:17.078475 getpriority(PRIO_PROCESS, 0) = 10
18291 16:26:17.078654 getpeername(13, {sa_family=AF_INET, sin_port=htons(47734), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
18291 16:26:17.078782 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
18291 16:26:17.078968 open("/etc/hosts.allow", O_RDONLY) = 3
18291 16:26:17.079091 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
18291 16:26:17.079201 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
18291 16:26:17.079286 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
18291 16:26:17.079614 close(3)          = 0
18291 16:26:17.079690 munmap(0xb7f61000, 4096) = 0
18291 16:26:17.079830 fcntl64(13, F_SETFD, 0) = 0
18291 16:26:17.079969 close(7)          = 0
18291 16:26:17.080046 dup2(13, 0)       = 0
18291 16:26:17.080115 dup2(13, 1)       = 1
18291 16:26:17.080182 dup2(13, 2)       = 2
18291 16:26:17.080251 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
18291 16:26:17.080329 close(13)         = 0
18291 16:26:17.080399 setsid()          = 18291
18291 16:26:17.080471 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
18291 16:26:17.080803 brk(0)            = 0x8064000
18291 16:26:17.081083 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18291 16:26:17.081186 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
18291 16:26:17.081274 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
18291 16:26:17.081368 open("/etc/ld.so.cache", O_RDONLY) = 3
18291 16:26:17.081503 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18291 16:26:17.081606 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f84000
18291 16:26:17.081681 close(3)          = 0
18291 16:26:17.081756 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18291 16:26:17.081850 open("/lib/libpam.so.0", O_RDONLY) = 3
18291 16:26:17.081933 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
18291 16:26:17.082367 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
18291 16:26:17.082475 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f7a000
18291 16:26:17.082555 mmap2(0xb7f83000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7f83000
18291 16:26:17.082649 close(3)          = 0
18291 16:26:17.082716 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18291 16:26:17.082716 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 3
18291 16:26:17.082716 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
18291 16:26:17.082716 fstat64(3, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
18291 16:26:17.082716 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f76000
18291 16:26:17.082716 mmap2(0xb7f78000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7f78000
18291 16:26:17.082716 close(3)          = 0
18291 16:26:17.082716 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18291 16:26:17.082716 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 3
18291 16:26:17.084135 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
18291 16:26:17.084563 fstat64(3, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
18291 16:26:17.084667 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
18291 16:26:17.084753 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f5d000
18291 16:26:17.084884 mmap2(0xb7f71000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13) = 0xb7f71000
18291 16:26:17.085003 mmap2(0xb7f73000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
