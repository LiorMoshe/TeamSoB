11263 15:06:34.380969 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11263 15:06:34.381041 statfs64("/selinux", 84, 0xbfb645fc) = -1 ENOENT (No such file or directory)
11263 15:06:34.381076 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11263 15:06:34.381136 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11263 15:06:34.381183 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f71000
11263 15:06:34.381239 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11263 15:06:34.381464 read(7, "", 1024) = 0
11263 15:06:34.381492 close(7)          = 0
11263 15:06:34.381520 munmap(0xb7f71000, 4096) = 0
11263 15:06:34.381561 munmap(0xb7da0000, 29913) = 0
11263 15:06:34.381599 read(6, "", 4096) = 0
11263 15:06:34.381629 close(6)          = 0
11263 15:06:34.381655 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.381684 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.381769 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.381818 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11263 15:06:34.381863 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.381894 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11263 15:06:34.382004 read(6, "", 4096) = 0
11263 15:06:34.382032 close(6)          = 0
11263 15:06:34.382057 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.382089 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.382139 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.382174 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11263 15:06:34.382244 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.382275 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11263 15:06:34.382381 read(6, "", 4096) = 0
11263 15:06:34.382408 close(6)          = 0
11263 15:06:34.382434 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.382463 read(5, "", 4096) = 0
11263 15:06:34.382488 close(5)          = 0
11263 15:06:34.382513 munmap(0xb7f78000, 4096) = 0
11263 15:06:34.382541 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11263 15:06:34.382576 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11263 15:06:34.382620 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
11263 15:06:34.382648 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11263 15:06:34.382795 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.382848 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.382883 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11263 15:06:34.382927 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.382956 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11263 15:06:34.383082 read(6, "", 4096) = 0
11263 15:06:34.383109 close(6)          = 0
11263 15:06:34.383135 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.383164 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.383240 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.383277 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11263 15:06:34.383321 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.383358 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11263 15:06:34.383465 read(6, "", 4096) = 0
11263 15:06:34.383492 close(6)          = 0
11263 15:06:34.383517 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.383547 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.383597 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.383632 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11263 15:06:34.383676 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.383735 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11263 15:06:34.384051 read(6, "", 4096) = 0
11263 15:06:34.384079 close(6)          = 0
11263 15:06:34.384105 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.384134 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11263 15:06:34.384211 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11263 15:06:34.384255 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11263 15:06:34.384299 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f72000
11263 15:06:34.384328 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11263 15:06:34.384432 read(6, "", 4096) = 0
11263 15:06:34.384459 close(6)          = 0
11263 15:06:34.384485 munmap(0xb7f72000, 4096) = 0
11263 15:06:34.384513 read(5, "", 4096) = 0
11263 15:06:34.384539 close(5)          = 0
11263 15:06:34.384564 munmap(0xb7f78000, 4096) = 0
11263 15:06:34.384640 time(NULL)        = 1495652794
11263 15:06:34.384738 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11263 15:06:34.384803 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11263 15:06:34.384836 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11263 15:06:34.384921 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
11263 15:06:34.384960 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11263 15:06:34.385019 read(5, "", 4096) = 0
11263 15:06:34.385045 close(5)          = 0
11263 15:06:34.385071 munmap(0xb7f78000, 4096) = 0
11263 15:06:34.385115 getuid32()        = 0
11263 15:06:34.385160 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.385242 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.385274 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11263 15:06:34.385319 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.385350 _llseek(5, 1624, [1624], SEEK_SET) = 0
11263 15:06:34.385403 munmap(0xb7f78000, 1624) = 0
11263 15:06:34.385433 close(5)          = 0
11263 15:06:34.385501 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.385548 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.385577 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11263 15:06:34.385621 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.385650 _llseek(5, 1233, [1233], SEEK_SET) = 0
11263 15:06:34.385739 munmap(0xb7f78000, 1233) = 0
11263 15:06:34.385770 close(5)          = 0
11263 15:06:34.385822 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.385860 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.385889 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11263 15:06:34.385933 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.385962 _llseek(5, 1624, [1624], SEEK_SET) = 0
11263 15:06:34.386005 munmap(0xb7f78000, 1624) = 0
11263 15:06:34.386032 close(5)          = 0
11263 15:06:34.386066 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.386101 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.386128 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11263 15:06:34.386194 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.386228 _llseek(5, 1233, [1233], SEEK_SET) = 0
11263 15:06:34.386275 munmap(0xb7f78000, 1233) = 0
11263 15:06:34.386302 close(5)          = 0
11263 15:06:34.386841 getuid32()        = 0
11263 15:06:34.386881 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.386918 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.386946 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11263 15:06:34.386991 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.387054 _llseek(5, 1624, [1624], SEEK_SET) = 0
11263 15:06:34.387102 munmap(0xb7f78000, 1624) = 0
11263 15:06:34.387130 close(5)          = 0
11263 15:06:34.387166 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.387202 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.387230 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11263 15:06:34.387274 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.387303 _llseek(5, 1233, [1233], SEEK_SET) = 0
11263 15:06:34.387348 munmap(0xb7f78000, 1233) = 0
11263 15:06:34.387374 close(5)          = 0
11263 15:06:34.387406 time(NULL)        = 1495652794
11263 15:06:34.387447 munmap(0xb7f75000, 12164) = 0
11263 15:06:34.387483 munmap(0xb7f73000, 7136) = 0
11263 15:06:34.387704 munmap(0xb7da8000, 95428) = 0
11263 15:06:34.387747 munmap(0xb7d6e000, 201052) = 0
11263 15:06:34.387777 munmap(0xb7d55000, 101180) = 0
11263 15:06:34.387821 gettimeofday({1495652794, 387832}, NULL) = 0
11263 15:06:34.387854 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb664d4) = -1 ENOENT (No such file or directory)
11263 15:06:34.387895 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11263 15:06:34.387965 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb66624) = 0
11263 15:06:34.388010 write(3, "Wed May 24 15:06:34 2017 [pid 11263] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11263 15:06:34.388067 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb6662c) = 0
11263 15:06:34.388136 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11263 15:06:34.388179 write(4, "\1", 1 <unfinished ...>
11264 15:06:34.388204 <... read resumed> "\1", 1) = 1
11263 15:06:34.388219 <... write resumed> ) = 1
11264 15:06:34.388239 exit_group(0)     = ?
11263 15:06:34.388321 --- SIGCHLD (Child exited) @ 0 (0) ---
11263 15:06:34.388341 sigreturn()       = ? (mask now [])
11263 15:06:34.388391 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11264
11263 15:06:34.388426 close(4)          = 0
11263 15:06:34.388459 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11263 15:06:34.388497 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11263 15:06:34.388535 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11263 15:06:34.388572 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dde6f8) = 11265
11265 15:06:34.388706 prctl(0x1, 0x9, 0, 0, 0) = 0
11265 15:06:34.388743 close(4)          = 0
11265 15:06:34.388815 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11265 15:06:34.388862 _llseek(4, 0, [0], SEEK_CUR) = 0
11265 15:06:34.388905 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11265 15:06:34.388954 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11265 15:06:34.388986 _llseek(4, 1624, [1624], SEEK_SET) = 0
11265 15:06:34.389048 munmap(0xb7f78000, 1624) = 0
11265 15:06:34.389108 close(4)          = 0
11265 15:06:34.389147 getuid32()        = 0
11265 15:06:34.389176 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11265 15:06:34.389212 _llseek(4, 0, [0], SEEK_CUR) = 0
11265 15:06:34.389241 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11265 15:06:34.389285 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11265 15:06:34.389314 _llseek(4, 1624, [1624], SEEK_SET) = 0
11265 15:06:34.389357 munmap(0xb7f78000, 1624) = 0
11265 15:06:34.389383 close(4)          = 0
11265 15:06:34.389454 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11265 15:06:34.389506 read(4, "65536\n", 31) = 6
11265 15:06:34.389540 close(4)          = 0
11265 15:06:34.389579 socket(PF_FILE, SOCK_STREAM, 0) = 4
11265 15:06:34.389611 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11265 15:06:34.389641 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11265 15:06:34.389699 close(4)          = 0
11265 15:06:34.389730 socket(PF_FILE, SOCK_STREAM, 0) = 4
11265 15:06:34.389757 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11265 15:06:34.389786 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11265 15:06:34.389834 close(4)          = 0
11265 15:06:34.389897 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11265 15:06:34.389936 _llseek(4, 0, [0], SEEK_CUR) = 0
11265 15:06:34.389970 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11265 15:06:34.390017 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f78000
11265 15:06:34.390077 _llseek(4, 886, [886], SEEK_SET) = 0
11265 15:06:34.390148 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11265 15:06:34.390196 munmap(0xb7f78000, 886) = 0
11265 15:06:34.390224 close(4)          = 0
11265 15:06:34.390251 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11265 15:06:34.390296 geteuid32()       = 0
11265 15:06:34.390325 getegid32()       = 0
11265 15:06:34.390354 setregid32(-1, 1000) = 0
11265 15:06:34.390383 setreuid32(-1, 1000) = 0
11265 15:06:34.390412 chdir("/home/msfadmin") = 0
11265 15:06:34.390443 setreuid32(-1, 0) = 0
11265 15:06:34.390469 setregid32(-1, 0) = 0
11265 15:06:34.390497 setgid32(1000)    = 0
11265 15:06:34.390524 setuid32(1000)    = 0
11265 15:06:34.390552 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11265 15:06:34.390589 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f76000
11265 15:06:34.390619 mprotect(0xb7f78000, 4096, PROT_NONE) = 0
11265 15:06:34.390661 mprotect(0xb7f76000, 4096, PROT_NONE) = 0
11265 15:06:34.390692 getcwd("/home/msfadmin", 4096) = 15
11265 15:06:34.390728 umask(022)        = 077
11265 15:06:34.390755 getcwd("/home/msfadmin", 4096) = 15
11265 15:06:34.390792 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11265 15:06:34.390852 write(0, "230 Login successful.\r\n", 23) = 23
11265 15:06:34.391325 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11265 15:06:34.391376 alarm(300)        = 0
11265 15:06:34.391406 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
11265 15:06:34.391437 mprotect(0xb7f75000, 4096, PROT_NONE) = 0
11265 15:06:34.391468 mprotect(0xb7f73000, 4096, PROT_NONE) = 0
11265 15:06:34.391504 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11265 15:06:34.391540 read(0, "TYPE I\r\n", 8) = 8
11265 15:06:34.391587 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11265 15:06:34.391702 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11265 15:06:34.391742 alarm(300)        = 300
11265 15:06:34.391773 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11265 15:06:34.391804 read(0, "PASV\r\n", 6) = 6
11265 15:06:34.391836 write(5, "\n", 1) = 1
11265 15:06:34.391866 read(5,  <unfinished ...>
11263 15:06:34.391899 close(5)          = 0
11263 15:06:34.391934 getuid32()        = 0
11263 15:06:34.391975 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11263 15:06:34.392015 _llseek(5, 0, [0], SEEK_CUR) = 0
11263 15:06:34.392049 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11263 15:06:34.392130 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f78000
11263 15:06:34.392164 _llseek(5, 1624, [1624], SEEK_SET) = 0
11263 15:06:34.392229 munmap(0xb7f78000, 1624) = 0
11263 15:06:34.392264 close(5)          = 0
11263 15:06:34.392309 setgroups32(0, []) = 0
11263 15:06:34.392341 chdir("/usr/share/empty") = 0
11263 15:06:34.392376 chroot(".")       = 0
11263 15:06:34.392405 capset(NULL, NULL) = -1 EFAULT (Bad address)
11263 15:06:34.392442 prctl(0x8, 0, 0xbfb66608, 0x80549a6, 0xbfb665f0) = 0
11263 15:06:34.392473 prctl(0x8, 0x1, 0xbfb66608, 0x8054a49, 0xbfb665f0) = 0
11263 15:06:34.392500 setgid32(65534)   = 0
11263 15:06:34.392527 setuid32(65534)   = 0
11263 15:06:34.392554 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11263 15:06:34.392592 read(4, "\n", 1)  = 1
11263 15:06:34.392627 write(4, "\1", 1) = 1
11265 15:06:34.392657 <... read resumed> "\1", 1) = 1
11265 15:06:34.392678 write(5, "\f", 1) = 1
11265 15:06:34.392705 read(5,  <unfinished ...>
11263 15:06:34.392724 read(4, "\f", 1)  = 1
11263 15:06:34.392758 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11263 15:06:34.392796 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11263 15:06:34.392827 gettimeofday({1495652794, 392837}, NULL) = 0
11263 15:06:34.392872 bind(5, {sa_family=AF_INET, sin_port=htons(33834), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11263 15:06:34.392915 listen(5, 1)      = 0
11263 15:06:34.392949 write(4, "*\204\0\0", 4) = 4
11265 15:06:34.392979 <... read resumed> "*\204\0\0", 4) = 4
11265 15:06:34.393016 write(0, "227 Entering Passive Mode (127,0,0,1,132,42).\r\n", 47) = 47
11265 15:06:34.393339 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11265 15:06:34.393388 alarm(300)        = 300
11265 15:06:34.393420 recv(0, "STOR myfile6\r\n", 4096, MSG_PEEK) = 14
11265 15:06:34.393453 read(0, "STOR myfile6\r\n", 14) = 14
11265 15:06:34.393494 write(5, "\v", 1) = 1
11265 15:06:34.393523 read(5,  <unfinished ...>
11263 15:06:34.393543 read(4, "\v", 1)  = 1
11263 15:06:34.393574 write(4, "\1\0\0\0", 4) = 4
11265 15:06:34.393603 <... read resumed> "\1\0\0\0", 4) = 4
11265 15:06:34.393627 gettimeofday({1495652794, 393637}, NULL) = 0
11265 15:06:34.393656 getcwd("/home/msfadmin", 4096) = 15
11265 15:06:34.393690 open("myfile6", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11265 15:06:34.393726 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11265 15:06:34.393772 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11265 15:06:34.393817 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11265 15:06:34.393844 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb66554) = 0
11265 15:06:34.393887 ftruncate64(4, 0) = 0
11265 15:06:34.393932 _llseek(4, 0, [0], SEEK_SET) = 0
11265 15:06:34.393962 write(5, "\v", 1) = 1
11265 15:06:34.393990 read(5,  <unfinished ...>
11263 15:06:34.394037 read(4, "\v", 1)  = 1
11263 15:06:34.394079 write(4, "\1\0\0\0", 4) = 4
11265 15:06:34.394108 <... read resumed> "\1\0\0\0", 4) = 4
11265 15:06:34.394129 write(5, "\v", 1) = 1
11265 15:06:34.394156 read(5,  <unfinished ...>
11263 15:06:34.394174 read(4, "\v", 1)  = 1
11263 15:06:34.394203 write(4, "\1\0\0\0", 4) = 4
11265 15:06:34.394230 <... read resumed> "\1\0\0\0", 4) = 4
11265 15:06:34.394251 write(5, "\r", 1) = 1
11265 15:06:34.394277 read(5,  <unfinished ...>
11263 15:06:34.394295 read(4, "\r", 1)  = 1
11263 15:06:34.394330 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11263 15:06:34.394376 accept(5, {sa_family=AF_INET, sin_port=htons(54058), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11263 15:06:34.394436 write(4, "\1", 1) = 1
11265 15:06:34.394464 <... read resumed> "\1", 1) = 1
11265 15:06:34.394490 recvmsg(5,  <unfinished ...>
11263 15:06:34.394516 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11265 15:06:34.394561 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11265 15:06:34.394597 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11265 15:06:34.394629 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11265 15:06:34.394661 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11265 15:06:34.394691 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11265 15:06:34.394727 alarm(300)        = 300
11265 15:06:34.394762 write(0, "150 Ok to send data.\r\n", 22) = 22
11265 15:06:34.394931 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dad000
11265 15:06:34.394969 mprotect(0xb7dbf000, 4096, PROT_NONE) = 0
11265 15:06:34.395034 mprotect(0xb7dad000, 4096, PROT_NONE) = 0
11265 15:06:34.395064 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11265 15:06:34.395103 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11265 15:06:34.395145 read(6, "", 65536) = 0
11265 15:06:34.395173 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11265 15:06:34.395210 alarm(300)        = 300
11265 15:06:34.395236 close(6)          = 0
11265 15:06:34.395261 alarm(0)          = 300
11265 15:06:34.395288 gettimeofday({1495652794, 395297}, NULL) = 0
11265 15:06:34.395336 getpid()          = 11265
11265 15:06:34.395370 gettimeofday({1495652794, 395381}, NULL) = 0
11265 15:06:34.395416 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb664f4) = 0
11265 15:06:34.395458 write(3, "Wed May 24 15:06:34 2017 [pid 11265] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile6\", 17 bytes, 9.52Kbyte/sec\n", 129) = 129
11265 15:06:34.395513 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb664fc) = 0
11265 15:06:34.395552 write(0, "226 Transfer complete.\r\n", 24) = 24
11265 15:06:34.395662 write(5, "\n", 1) = 1
11265 15:06:34.395695 read(5,  <unfinished ...>
11263 15:06:34.395714 close(6)          = 0
11263 15:06:34.395762 read(4, "\n", 1)  = 1
11263 15:06:34.395793 close(5)          = 0
11263 15:06:34.395823 write(4, "\1", 1) = 1
11265 15:06:34.395852 <... read resumed> "\1", 1) = 1
