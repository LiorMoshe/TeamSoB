12093 15:14:50.323514 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.323544 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.323757 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.323797 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12093 15:14:50.323842 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.323873 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12093 15:14:50.323983 read(6, "", 4096) = 0
12093 15:14:50.324011 close(6)          = 0
12093 15:14:50.324037 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.324067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.324117 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.324152 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12093 15:14:50.324211 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.324242 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12093 15:14:50.324348 read(6, "", 4096) = 0
12093 15:14:50.324375 close(6)          = 0
12093 15:14:50.324400 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.324429 read(5, "", 4096) = 0
12093 15:14:50.324455 close(5)          = 0
12093 15:14:50.324480 munmap(0xb7f4c000, 4096) = 0
12093 15:14:50.324508 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
12093 15:14:50.324545 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
12093 15:14:50.324589 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4c000
12093 15:14:50.324618 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
12093 15:14:50.324761 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.324814 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.324849 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
12093 15:14:50.324901 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.324936 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
12093 15:14:50.325063 read(6, "", 4096) = 0
12093 15:14:50.325090 close(6)          = 0
12093 15:14:50.325116 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.325146 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.325196 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.325231 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12093 15:14:50.325275 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.325323 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12093 15:14:50.325432 read(6, "", 4096) = 0
12093 15:14:50.325458 close(6)          = 0
12093 15:14:50.325484 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.325514 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.325563 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.325647 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
12093 15:14:50.325701 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.325731 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
12093 15:14:50.326056 read(6, "", 4096) = 0
12093 15:14:50.326084 close(6)          = 0
12093 15:14:50.326111 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.326142 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12093 15:14:50.326192 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12093 15:14:50.326229 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12093 15:14:50.326284 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
12093 15:14:50.326314 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12093 15:14:50.326418 read(6, "", 4096) = 0
12093 15:14:50.326445 close(6)          = 0
12093 15:14:50.326470 munmap(0xb7f46000, 4096) = 0
12093 15:14:50.326498 read(5, "", 4096) = 0
12093 15:14:50.326524 close(5)          = 0
12093 15:14:50.326549 munmap(0xb7f4c000, 4096) = 0
12093 15:14:50.326603 time(NULL)        = 1495653290
12093 15:14:50.326643 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12093 15:14:50.326705 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
12093 15:14:50.326748 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12093 15:14:50.326792 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4c000
12093 15:14:50.326822 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
12093 15:14:50.326880 read(5, "", 4096) = 0
12093 15:14:50.326906 close(5)          = 0
12093 15:14:50.326942 munmap(0xb7f4c000, 4096) = 0
12093 15:14:50.326986 getuid32()        = 0
12093 15:14:50.327030 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.327071 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.327075 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12093 15:14:50.327107 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.327139 _llseek(5, 1624, [1624], SEEK_SET) = 0
12093 15:14:50.327203 munmap(0xb7f4c000, 1624) = 0
12093 15:14:50.327237 close(5)          = 0
12093 15:14:50.327305 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.327352 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.327381 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12093 15:14:50.327470 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.327504 _llseek(5, 1233, [1233], SEEK_SET) = 0
12093 15:14:50.327558 munmap(0xb7f4c000, 1233) = 0
12093 15:14:50.327586 close(5)          = 0
12093 15:14:50.327637 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.327674 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.327702 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12093 15:14:50.327745 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.327774 _llseek(5, 1624, [1624], SEEK_SET) = 0
12093 15:14:50.327818 munmap(0xb7f4c000, 1624) = 0
12093 15:14:50.327848 close(5)          = 0
12093 15:14:50.327891 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.327928 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.327956 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12093 15:14:50.328000 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.328029 _llseek(5, 1233, [1233], SEEK_SET) = 0
12093 15:14:50.328074 munmap(0xb7f4c000, 1233) = 0
12093 15:14:50.328100 close(5)          = 0
12093 15:14:50.328703 getuid32()        = 0
12093 15:14:50.328733 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.328762 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.328784 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12093 15:14:50.328817 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.328840 _llseek(5, 1624, [1624], SEEK_SET) = 0
12093 15:14:50.328882 munmap(0xb7f4c000, 1624) = 0
12093 15:14:50.328904 close(5)          = 0
12093 15:14:50.328933 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.328960 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.328982 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12093 15:14:50.329015 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.329047 _llseek(5, 1233, [1233], SEEK_SET) = 0
12093 15:14:50.329078 munmap(0xb7f4c000, 1233) = 0
12093 15:14:50.329095 close(5)          = 0
12093 15:14:50.329117 time(NULL)        = 1495653290
12093 15:14:50.329145 munmap(0xb7f49000, 12164) = 0
12093 15:14:50.329169 munmap(0xb7f47000, 7136) = 0
12093 15:14:50.329195 munmap(0xb7d7c000, 95428) = 0
12093 15:14:50.329216 munmap(0xb7d42000, 201052) = 0
12093 15:14:50.329237 munmap(0xb7d29000, 101180) = 0
12093 15:14:50.329272 gettimeofday({1495653290, 329281}, NULL) = 0
12093 15:14:50.329295 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfde0754) = -1 ENOENT (No such file or directory)
12093 15:14:50.329334 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
12093 15:14:50.329387 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfde08a4) = 0
12093 15:14:50.329418 write(3, "Wed May 24 15:14:50 2017 [pid 12093] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
12093 15:14:50.329457 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfde08ac) = 0
12093 15:14:50.329482 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12093 15:14:50.329510 write(4, "\1", 1 <unfinished ...>
12094 15:14:50.329534 <... read resumed> "\1", 1) = 1
12093 15:14:50.329545 <... write resumed> ) = 1
12094 15:14:50.329560 exit_group(0)     = ?
12093 15:14:50.329618 --- SIGCHLD (Child exited) @ 0 (0) ---
12093 15:14:50.329632 sigreturn()       = ? (mask now [])
12093 15:14:50.329666 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 12094
12093 15:14:50.329690 close(4)          = 0
12093 15:14:50.329712 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
12093 15:14:50.329739 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12093 15:14:50.329764 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12093 15:14:50.329790 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7db26f8) = 12095
12095 15:14:50.329905 prctl(0x1, 0x9, 0, 0, 0) = 0
12095 15:14:50.329934 close(4)          = 0
12095 15:14:50.329984 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12095 15:14:50.330017 _llseek(4, 0, [0], SEEK_CUR) = 0
12095 15:14:50.330051 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12095 15:14:50.330080 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4c000
12095 15:14:50.330098 _llseek(4, 1624, [1624], SEEK_SET) = 0
12095 15:14:50.330133 munmap(0xb7f4c000, 1624) = 0
12095 15:14:50.330155 close(4)          = 0
12095 15:14:50.330178 getuid32()        = 0
12095 15:14:50.330193 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12095 15:14:50.330213 _llseek(4, 0, [0], SEEK_CUR) = 0
12095 15:14:50.330230 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12095 15:14:50.330255 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4c000
12095 15:14:50.330287 _llseek(4, 1624, [1624], SEEK_SET) = 0
12095 15:14:50.330314 munmap(0xb7f4c000, 1624) = 0
12095 15:14:50.330329 close(4)          = 0
12095 15:14:50.330370 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
12095 15:14:50.330401 read(4, "65536\n", 31) = 6
12095 15:14:50.330421 close(4)          = 0
12095 15:14:50.330443 socket(PF_FILE, SOCK_STREAM, 0) = 4
12095 15:14:50.330461 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12095 15:14:50.330478 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12095 15:14:50.330510 close(4)          = 0
12095 15:14:50.330528 socket(PF_FILE, SOCK_STREAM, 0) = 4
12095 15:14:50.330545 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12095 15:14:50.330567 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12095 15:14:50.330596 close(4)          = 0
12095 15:14:50.330633 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
12095 15:14:50.330656 _llseek(4, 0, [0], SEEK_CUR) = 0
12095 15:14:50.330672 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12095 15:14:50.330697 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4c000
12095 15:14:50.330715 _llseek(4, 886, [886], SEEK_SET) = 0
12095 15:14:50.330753 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12095 15:14:50.330779 munmap(0xb7f4c000, 886) = 0
12095 15:14:50.330794 close(4)          = 0
12095 15:14:50.330810 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
12095 15:14:50.330842 geteuid32()       = 0
12095 15:14:50.330860 getegid32()       = 0
12095 15:14:50.330876 setregid32(-1, 1000) = 0
12095 15:14:50.330892 setreuid32(-1, 1000) = 0
12095 15:14:50.330909 chdir("/home/msfadmin") = 0
12095 15:14:50.330926 setreuid32(-1, 0) = 0
12095 15:14:50.330941 setregid32(-1, 0) = 0
12095 15:14:50.330957 setgid32(1000)    = 0
12095 15:14:50.330972 setuid32(1000)    = 0
12095 15:14:50.330987 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
12095 15:14:50.331008 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
12095 15:14:50.331040 mprotect(0xb7f4c000, 4096, PROT_NONE) = 0
12095 15:14:50.331055 mprotect(0xb7f4a000, 4096, PROT_NONE) = 0
12095 15:14:50.331070 getcwd("/home/msfadmin", 4096) = 15
12095 15:14:50.331087 umask(022)        = 077
12095 15:14:50.331100 getcwd("/home/msfadmin", 4096) = 15
12095 15:14:50.331118 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
12095 15:14:50.331148 write(0, "230 Login successful.\r\n", 23) = 23
12095 15:14:50.331292 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12095 15:14:50.331315 alarm(300)        = 0
12095 15:14:50.331330 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
12095 15:14:50.331346 mprotect(0xb7f49000, 4096, PROT_NONE) = 0
12095 15:14:50.331360 mprotect(0xb7f47000, 4096, PROT_NONE) = 0
12095 15:14:50.331378 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
12095 15:14:50.331395 read(0, "QUIT\r\n", 6) = 6
12095 15:14:50.331414 shutdown(0, 0 /* receive */) = 0
12095 15:14:50.331431 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
12095 15:14:50.331444 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12095 15:14:50.331457 write(0, "221 Goodbye.\r\n", 14) = 14
12095 15:14:50.331552 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
12095 15:14:50.331567 fcntl64(0, F_SETFL, O_RDWR) = 0
12095 15:14:50.331581 shutdown(0, 2 /* send and receive */) = 0
12095 15:14:50.331605 exit_group(0)     = ?
12093 15:14:50.331640 --- SIGCHLD (Child exited) @ 0 (0) ---
12093 15:14:50.331657 alarm(1)          = 0
12093 15:14:50.331673 sigreturn()       = ? (mask now [])
12093 15:14:50.331699 close(5)          = 0
12093 15:14:50.331717 getuid32()        = 0
12093 15:14:50.331737 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12093 15:14:50.331756 _llseek(5, 0, [0], SEEK_CUR) = 0
12093 15:14:50.331772 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12093 15:14:50.331796 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4c000
12093 15:14:50.331811 _llseek(5, 1624, [1624], SEEK_SET) = 0
12093 15:14:50.331834 munmap(0xb7f4c000, 1624) = 0
12093 15:14:50.331849 close(5)          = 0
12093 15:14:50.331865 setgroups32(0, []) = 0
12093 15:14:50.331879 chdir("/usr/share/empty") = 0
12093 15:14:50.331911 chroot(".")       = 0
12093 15:14:50.331928 capset(NULL, NULL) = -1 EFAULT (Bad address)
12093 15:14:50.331954 prctl(0x8, 0, 0xbfde0888, 0x80549a6, 0xbfde0870) = 0
12093 15:14:50.331968 prctl(0x8, 0x1, 0xbfde0888, 0x8054a49, 0xbfde0870) = 0
12093 15:14:50.331981 setgid32(65534)   = 0
12093 15:14:50.331994 setuid32(65534)   = 0
12093 15:14:50.332007 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
12093 15:14:50.332025 read(4, "", 1)    = 0
12093 15:14:50.332039 alarm(0)          = 1
12093 15:14:50.332052 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 12095
12093 15:14:50.332069 exit_group(0)     = ?
4439  15:14:50.332115 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:14:50.332124 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:14:50.332134 write(4, "\21", 1) = 1
4439  15:14:50.332153 sigreturn()       = ? (mask now [])
4439  15:14:50.332231 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:14:50.332256 ioctl(3, FIONREAD, [1]) = 0
4439  15:14:50.332274 read(3, "\21", 1) = 1
4439  15:14:50.332291 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 12093
4439  15:14:50.332312 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:14:50.332326 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:14:50.332340 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL <unfinished ...>
12090 15:14:50.490425 <... read resumed> "\n", 1) = 1
12090 15:14:50.490550 stat64(".", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12090 15:14:50.490613 stat64("/sbin/nohup", 0xbfb88cc8) = -1 ENOENT (No such file or directory)
12090 15:14:50.490685 stat64("/bin/nohup", 0xbfb88cc8) = -1 ENOENT (No such file or directory)
12090 15:14:50.490817 stat64("/usr/sbin/nohup", 0xbfb88cc8) = -1 ENOENT (No such file or directory)
12090 15:14:50.490875 stat64("/usr/bin/nohup", {st_mode=S_IFREG|0755, st_size=26336, ...}) = 0
12090 15:14:50.490969 stat64("/usr/bin/nohup", {st_mode=S_IFREG|0755, st_size=26336, ...}) = 0
12090 15:14:50.491090 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
12090 15:14:50.491154 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e456f8) = 12096
12096 15:14:50.491305 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12096 15:14:50.491375 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_DFL}, 8) = 0
12096 15:14:50.491417 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_DFL}, 8) = 0
12096 15:14:50.491450 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_DFL}, 8) = 0
12096 15:14:50.491525 rt_sigaction(SIGINT, {SIG_DFL}, {SIG_DFL}, 8) = 0
12096 15:14:50.491572 rt_sigaction(SIGQUIT, {SIG_DFL}, {SIG_IGN}, 8) = 0
12096 15:14:50.491632 rt_sigaction(SIGCHLD, {SIG_DFL}, {0x807e540, [], 0}, 8) = 0
12096 15:14:50.491788 open("/dev/null", O_WRONLY|O_CREAT|O_TRUNC|O_LARGEFILE, 0666) = 7
12096 15:14:50.491913 dup2(7, 1)        = 1
12096 15:14:50.491986 close(7)          = 0
12096 15:14:50.492064 dup2(1, 2)        = 2
12096 15:14:50.492093 fcntl64(1, F_GETFD) = 0
12096 15:14:50.492129 execve("/usr/bin/nohup", ["nohup"], [/* 16 vars */]) = 0
12096 15:14:50.492354 brk(0)            = 0x804f000
12096 15:14:50.492434 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12096 15:14:50.492482 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f16000
12096 15:14:50.492521 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
12096 15:14:50.492564 open("/etc/ld.so.cache", O_RDONLY) = 7
12096 15:14:50.492623 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12096 15:14:50.492754 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7f0e000
12096 15:14:50.492792 close(7)          = 0
12096 15:14:50.492822 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12096 15:14:50.492884 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 7
12096 15:14:50.492930 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
12096 15:14:50.493276 fstat64(7, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
12096 15:14:50.493332 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dbf000
12096 15:14:50.493367 mmap2(0xb7f08000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x149) = 0xb7f08000
12096 15:14:50.493411 mmap2(0xb7f0b000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f0b000
12096 15:14:50.493451 close(7)          = 0
12096 15:14:50.493543 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dbe000
12096 15:14:50.493581 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7dbe6b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
12096 15:14:50.493759 mprotect(0xb7f08000, 4096, PROT_READ) = 0
12096 15:14:50.493808 munmap(0xb7f0e000, 29913) = 0
12096 15:14:50.493969 brk(0)            = 0x804f000
12096 15:14:50.494049 brk(0x8070000)    = 0x8070000
12096 15:14:50.494127 write(2, "nohup: ", 7) = 7
12096 15:14:50.494164 write(2, "missing operand", 15) = 15
12096 15:14:50.494195 write(2, "\n", 1) = 1
12096 15:14:50.494227 write(2, "Try `nohup --help\' for more information.\n", 41) = 41
12096 15:14:50.494270 close(1)          = 0
12096 15:14:50.494297 close(2)          = 0
12096 15:14:50.494329 exit_group(127)   = ?
12090 15:14:50.494414 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12090 15:14:50.494450 --- SIGCHLD (Child exited) @ 0 (0) ---
12090 15:14:50.494473 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 127}], WNOHANG) = 12096
12090 15:14:50.494512 waitpid(-1, 0xbfb88948, WNOHANG) = 0
12090 15:14:50.494538 sigreturn()       = ? (mask now [])
12090 15:14:50.494741 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12090 15:14:50.494839 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12090 15:14:50.494872 rt_sigprocmask(SIG_BLOCK, [CHLD], [], 8) = 0
12090 15:14:50.494905 rt_sigaction(SIGINT, {0x807f150, [], 0}, {SIG_DFL}, 8) = 0
12090 15:14:50.494947 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12090 15:14:50.494976 rt_sigaction(SIGINT, {SIG_DFL}, {0x807f150, [], 0}, 8) = 0
12090 15:14:50.495020 rt_sigprocmask(SIG_BLOCK, NULL, [], 8) = 0
12090 15:14:50.495053 read(0, "e", 1)   = 1
12090 15:14:50.495135 read(0, "c", 1)   = 1
12090 15:14:50.495168 read(0, "h", 1)   = 1
12090 15:14:50.495195 read(0, "o", 1)   = 1
12090 15:14:50.495222 read(0, " ", 1)   = 1
12090 15:14:50.495248 read(0, "9", 1)   = 1
12090 15:14:50.495275 read(0, "C", 1)   = 1
12090 15:14:50.495301 read(0, "z", 1)   = 1
12090 15:14:50.495328 read(0, "2", 1)   = 1
12090 15:14:50.495354 read(0, "Q", 1)   = 1
12090 15:14:50.495381 read(0, "B", 1)   = 1
12090 15:14:50.495407 read(0, "O", 1)   = 1
12090 15:14:50.495434 read(0, "G", 1)   = 1
12090 15:14:50.495461 read(0, "n", 1)   = 1
12090 15:14:50.495487 read(0, "A", 1)   = 1
12090 15:14:50.495513 read(0, "G", 1)   = 1
