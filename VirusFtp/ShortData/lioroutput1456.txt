12415 15:18:19.827771 close(7)          = 0
12415 15:18:19.828123 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
12415 15:18:19.828178 statfs64("/selinux", 84, 0xbf93f3dc) = -1 ENOENT (No such file or directory)
12415 15:18:19.828199 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
12415 15:18:19.828238 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
12415 15:18:19.828264 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f34000
12415 15:18:19.828281 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
12415 15:18:19.828405 read(7, "", 1024) = 0
12415 15:18:19.828420 close(7)          = 0
12415 15:18:19.828435 munmap(0xb7f34000, 4096) = 0
12415 15:18:19.828459 munmap(0xb7d63000, 29913) = 0
12415 15:18:19.828481 read(6, "", 4096) = 0
12415 15:18:19.828500 close(6)          = 0
12415 15:18:19.828514 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.828530 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.828560 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.828580 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12415 15:18:19.828603 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.828626 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12415 15:18:19.828685 read(6, "", 4096) = 0
12415 15:18:19.828700 close(6)          = 0
12415 15:18:19.828713 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.828729 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.828756 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.828775 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12415 15:18:19.828798 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.828813 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12415 15:18:19.828869 read(6, "", 4096) = 0
12415 15:18:19.828884 close(6)          = 0
12415 15:18:19.828897 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.828912 read(5, "", 4096) = 0
12415 15:18:19.828926 close(5)          = 0
12415 15:18:19.828941 munmap(0xb7f3b000, 4096) = 0
12415 15:18:19.828957 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
12415 15:18:19.828983 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
12415 15:18:19.829007 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
12415 15:18:19.829022 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
12415 15:18:19.829101 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.829130 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.829148 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
12415 15:18:19.829171 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.829187 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
12415 15:18:19.829258 read(6, "", 4096) = 0
12415 15:18:19.829272 close(6)          = 0
12415 15:18:19.829286 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.829303 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.829329 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.829348 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12415 15:18:19.829371 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.829386 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12415 15:18:19.829449 read(6, "", 4096) = 0
12415 15:18:19.829472 close(6)          = 0
12415 15:18:19.829486 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.829503 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.829530 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.829549 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
12415 15:18:19.829572 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.829587 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
12415 15:18:19.829754 read(6, "", 4096) = 0
12415 15:18:19.829769 close(6)          = 0
12415 15:18:19.829782 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.829798 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12415 15:18:19.829827 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12415 15:18:19.829846 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12415 15:18:19.829869 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
12415 15:18:19.829884 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12415 15:18:19.829939 read(6, "", 4096) = 0
12415 15:18:19.829953 close(6)          = 0
12415 15:18:19.829967 munmap(0xb7f35000, 4096) = 0
12415 15:18:19.829982 read(5, "", 4096) = 0
12415 15:18:19.829996 close(5)          = 0
12415 15:18:19.830010 munmap(0xb7f3b000, 4096) = 0
12415 15:18:19.830031 time(NULL)        = 1495653499
12415 15:18:19.830060 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12415 15:18:19.830088 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
12415 15:18:19.830106 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12415 15:18:19.830129 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
12415 15:18:19.830144 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
12415 15:18:19.830181 read(5, "", 4096) = 0
12415 15:18:19.830202 close(5)          = 0
12415 15:18:19.830217 munmap(0xb7f3b000, 4096) = 0
12415 15:18:19.830242 getuid32()        = 0
12415 15:18:19.830270 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.830293 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.830310 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12415 15:18:19.830333 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.830349 _llseek(5, 1624, [1624], SEEK_SET) = 0
12415 15:18:19.830379 munmap(0xb7f3b000, 1624) = 0
12415 15:18:19.830395 close(5)          = 0
12415 15:18:19.830435 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.830461 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.830476 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12415 15:18:19.830500 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.830515 _llseek(5, 1233, [1233], SEEK_SET) = 0
12415 15:18:19.830544 munmap(0xb7f3b000, 1233) = 0
12415 15:18:19.830559 close(5)          = 0
12415 15:18:19.830587 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.830605 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.830620 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12415 15:18:19.830643 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.830662 _llseek(5, 1624, [1624], SEEK_SET) = 0
12415 15:18:19.830691 munmap(0xb7f3b000, 1624) = 0
12415 15:18:19.830706 close(5)          = 0
12415 15:18:19.830725 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.830744 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.830759 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12415 15:18:19.830782 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.830797 _llseek(5, 1233, [1233], SEEK_SET) = 0
12415 15:18:19.830821 munmap(0xb7f3b000, 1233) = 0
12415 15:18:19.830835 close(5)          = 0
12415 15:18:19.831198 getuid32()        = 0
12415 15:18:19.831224 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.831244 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.831260 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12415 15:18:19.831283 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.831300 _llseek(5, 1624, [1624], SEEK_SET) = 0
12415 15:18:19.831324 munmap(0xb7f3b000, 1624) = 0
12415 15:18:19.831339 close(5)          = 0
12415 15:18:19.831359 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.831378 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.831399 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12415 15:18:19.831423 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.831438 _llseek(5, 1233, [1233], SEEK_SET) = 0
12415 15:18:19.831463 munmap(0xb7f3b000, 1233) = 0
12415 15:18:19.831477 close(5)          = 0
12415 15:18:19.831495 time(NULL)        = 1495653499
12415 15:18:19.831857 munmap(0xb7f38000, 12164) = 0
12415 15:18:19.831882 munmap(0xb7f36000, 7136) = 0
12415 15:18:19.831905 munmap(0xb7d6b000, 95428) = 0
12415 15:18:19.831922 munmap(0xb7d31000, 201052) = 0
12415 15:18:19.831939 munmap(0xb7d18000, 101180) = 0
12415 15:18:19.831967 gettimeofday({1495653499, 831973}, NULL) = 0
12415 15:18:19.831985 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9412b4) = -1 ENOENT (No such file or directory)
12415 15:18:19.832009 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
12415 15:18:19.832051 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf941404) = 0
12415 15:18:19.832082 write(3, "Wed May 24 15:18:19 2017 [pid 12415] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
12415 15:18:19.832113 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf94140c) = 0
12415 15:18:19.832134 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12415 15:18:19.832155 write(4, "\1", 1 <unfinished ...>
12416 15:18:19.832183 <... read resumed> "\1", 1) = 1
12415 15:18:19.832191 <... write resumed> ) = 1
12416 15:18:19.832232 exit_group(0)     = ?
12415 15:18:19.832311 --- SIGCHLD (Child exited) @ 0 (0) ---
12415 15:18:19.832335 sigreturn()       = ? (mask now [])
12415 15:18:19.832376 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 12416
12415 15:18:19.832405 close(4)          = 0
12415 15:18:19.832429 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
12415 15:18:19.832454 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12415 15:18:19.832475 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12415 15:18:19.832495 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7da16f8) = 12417
12417 15:18:19.832577 prctl(0x1, 0x9, 0, 0, 0) = 0
12417 15:18:19.832597 close(4)          = 0
12417 15:18:19.832638 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12417 15:18:19.832663 _llseek(4, 0, [0], SEEK_CUR) = 0
12417 15:18:19.832686 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12417 15:18:19.832713 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
12417 15:18:19.832731 _llseek(4, 1624, [1624], SEEK_SET) = 0
12417 15:18:19.832766 munmap(0xb7f3b000, 1624) = 0
12417 15:18:19.832783 close(4)          = 0
12417 15:18:19.832803 getuid32()        = 0
12417 15:18:19.832824 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12417 15:18:19.832844 _llseek(4, 0, [0], SEEK_CUR) = 0
12417 15:18:19.832859 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12417 15:18:19.832882 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
12417 15:18:19.832898 _llseek(4, 1624, [1624], SEEK_SET) = 0
12417 15:18:19.832922 munmap(0xb7f3b000, 1624) = 0
12417 15:18:19.832936 close(4)          = 0
12417 15:18:19.832977 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
12417 15:18:19.833008 read(4, "65536\n", 31) = 6
12417 15:18:19.833025 close(4)          = 0
12417 15:18:19.833046 socket(PF_FILE, SOCK_STREAM, 0) = 4
12417 15:18:19.833063 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12417 15:18:19.833079 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12417 15:18:19.833112 close(4)          = 0
12417 15:18:19.833128 socket(PF_FILE, SOCK_STREAM, 0) = 4
12417 15:18:19.833143 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12417 15:18:19.833158 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12417 15:18:19.833237 close(4)          = 0
12417 15:18:19.833323 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
12417 15:18:19.833348 _llseek(4, 0, [0], SEEK_CUR) = 0
12417 15:18:19.833365 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12417 15:18:19.833420 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
12417 15:18:19.833440 _llseek(4, 886, [886], SEEK_SET) = 0
12417 15:18:19.833479 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12417 15:18:19.833504 munmap(0xb7f3b000, 886) = 0
12417 15:18:19.833520 close(4)          = 0
12417 15:18:19.833536 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
12417 15:18:19.833561 geteuid32()       = 0
12417 15:18:19.833577 getegid32()       = 0
12417 15:18:19.833593 setregid32(-1, 1000) = 0
12417 15:18:19.833609 setreuid32(-1, 1000) = 0
12417 15:18:19.833658 chdir("/home/msfadmin") = 0
12417 15:18:19.833683 setreuid32(-1, 0) = 0
12417 15:18:19.833697 setregid32(-1, 0) = 0
12417 15:18:19.833713 setgid32(1000)    = 0
12417 15:18:19.833728 setuid32(1000)    = 0
12417 15:18:19.833744 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
12417 15:18:19.833764 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f39000
12417 15:18:19.833782 mprotect(0xb7f3b000, 4096, PROT_NONE) = 0
12417 15:18:19.833800 mprotect(0xb7f39000, 4096, PROT_NONE) = 0
12417 15:18:19.833816 getcwd("/home/msfadmin", 4096) = 15
12417 15:18:19.833836 umask(022)        = 077
12417 15:18:19.833851 getcwd("/home/msfadmin", 4096) = 15
12417 15:18:19.833878 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
12417 15:18:19.833914 write(0, "230 Login successful.\r\n", 23) = 23
12417 15:18:19.834075 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12417 15:18:19.834101 alarm(300)        = 0
12417 15:18:19.834181 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f36000
12417 15:18:19.834201 mprotect(0xb7f38000, 4096, PROT_NONE) = 0
12417 15:18:19.834219 mprotect(0xb7f36000, 4096, PROT_NONE) = 0
12417 15:18:19.834239 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
12417 15:18:19.834259 read(0, "TYPE I\r\n", 8) = 8
12417 15:18:19.834286 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
12417 15:18:19.834352 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12417 15:18:19.834375 alarm(300)        = 300
12417 15:18:19.834391 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
12417 15:18:19.834408 read(0, "PASV\r\n", 6) = 6
12417 15:18:19.834425 write(5, "\n", 1) = 1
12417 15:18:19.834442 read(5,  <unfinished ...>
12415 15:18:19.834462 close(5)          = 0
12415 15:18:19.834481 getuid32()        = 0
12415 15:18:19.834503 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12415 15:18:19.834525 _llseek(5, 0, [0], SEEK_CUR) = 0
12415 15:18:19.834543 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12415 15:18:19.834570 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
12415 15:18:19.834587 _llseek(5, 1624, [1624], SEEK_SET) = 0
12415 15:18:19.834648 munmap(0xb7f3b000, 1624) = 0
12415 15:18:19.834668 close(5)          = 0
12415 15:18:19.834692 setgroups32(0, []) = 0
12415 15:18:19.834710 chdir("/usr/share/empty") = 0
12415 15:18:19.834729 chroot(".")       = 0
12415 15:18:19.834745 capset(NULL, NULL) = -1 EFAULT (Bad address)
12415 15:18:19.834767 prctl(0x8, 0, 0xbf9413e8, 0x80549a6, 0xbf9413d0) = 0
12415 15:18:19.834783 prctl(0x8, 0x1, 0xbf9413e8, 0x8054a49, 0xbf9413d0) = 0
12415 15:18:19.834799 setgid32(65534)   = 0
12415 15:18:19.834813 setuid32(65534)   = 0
12415 15:18:19.834828 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
12415 15:18:19.834847 read(4, "\n", 1)  = 1
12415 15:18:19.834867 write(4, "\1", 1) = 1
12417 15:18:19.834884 <... read resumed> "\1", 1) = 1
12417 15:18:19.834895 write(5, "\f", 1) = 1
12417 15:18:19.834910 read(5,  <unfinished ...>
12415 15:18:19.834920 read(4, "\f", 1)  = 1
12415 15:18:19.834939 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
12415 15:18:19.835000 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
12415 15:18:19.835018 gettimeofday({1495653499, 835023}, NULL) = 0
12415 15:18:19.835043 bind(5, {sa_family=AF_INET, sin_port=htons(52043), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
12415 15:18:19.835067 listen(5, 1)      = 0
12415 15:18:19.835118 write(4, "K\313\0\0", 4) = 4
12417 15:18:19.835143 <... read resumed> "K\313\0\0", 4) = 4
12417 15:18:19.835165 write(0, "227 Entering Passive Mode (127,0,0,1,203,75).\r\n", 47) = 47
12417 15:18:19.835323 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12417 15:18:19.835380 alarm(300)        = 300
12417 15:18:19.835399 recv(0, "STOR myfile16\r\n", 4096, MSG_PEEK) = 15
12417 15:18:19.835418 read(0, "STOR myfile16\r\n", 15) = 15
12417 15:18:19.835440 write(5, "\v", 1) = 1
12417 15:18:19.835456 read(5,  <unfinished ...>
12415 15:18:19.835467 read(4, "\v", 1)  = 1
12415 15:18:19.835483 write(4, "\1\0\0\0", 4) = 4
12417 15:18:19.835499 <... read resumed> "\1\0\0\0", 4) = 4
12417 15:18:19.835512 gettimeofday({1495653499, 835517}, NULL) = 0
12417 15:18:19.835528 getcwd("/home/msfadmin", 4096) = 15
12417 15:18:19.835546 open("myfile16", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
12417 15:18:19.835566 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
12417 15:18:19.835591 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
12417 15:18:19.835607 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
12417 15:18:19.835621 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf941334) = 0
12417 15:18:19.835652 ftruncate64(4, 0) = 0
12417 15:18:19.835681 _llseek(4, 0, [0], SEEK_SET) = 0
12417 15:18:19.835698 write(5, "\v", 1) = 1
12417 15:18:19.835713 read(5,  <unfinished ...>
12415 15:18:19.835723 read(4, "\v", 1)  = 1
12415 15:18:19.835740 write(4, "\1\0\0\0", 4) = 4
12417 15:18:19.835755 <... read resumed> "\1\0\0\0", 4) = 4
12417 15:18:19.835765 write(5, "\v", 1) = 1
12417 15:18:19.835780 read(5,  <unfinished ...>
12415 15:18:19.835814 read(4, "\v", 1)  = 1
12415 15:18:19.835844 write(4, "\1\0\0\0", 4) = 4
12417 15:18:19.835860 <... read resumed> "\1\0\0\0", 4) = 4
12417 15:18:19.835871 write(5, "\r", 1) = 1
12417 15:18:19.835886 read(5,  <unfinished ...>
12415 15:18:19.835896 read(4, "\r", 1)  = 1
12415 15:18:19.835915 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
12415 15:18:19.835941 accept(5, {sa_family=AF_INET, sin_port=htons(44284), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
12415 15:18:19.835974 write(4, "\1", 1) = 1
12417 15:18:19.835990 <... read resumed> "\1", 1) = 1
12417 15:18:19.836004 recvmsg(5,  <unfinished ...>
12415 15:18:19.836018 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
12417 15:18:19.836043 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
12417 15:18:19.836081 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
12417 15:18:19.836100 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
12417 15:18:19.836118 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
12417 15:18:19.836134 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12417 15:18:19.836190 alarm(300)        = 300
12417 15:18:19.836212 write(0, "150 Ok to send data.\r\n", 22) = 22
12417 15:18:19.836319 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d70000
12417 15:18:19.836340 mprotect(0xb7d82000, 4096, PROT_NONE) = 0
12417 15:18:19.836358 mprotect(0xb7d70000, 4096, PROT_NONE) = 0
12417 15:18:19.836373 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
12417 15:18:19.836393 write(4, "assasaaa\na\na\na\na\n", 17) = 17
12417 15:18:19.836417 read(6, "", 65536) = 0
12417 15:18:19.836432 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12417 15:18:19.836452 alarm(300)        = 300
12417 15:18:19.836466 close(6)          = 0
12417 15:18:19.836479 alarm(0)          = 300
12417 15:18:19.836493 gettimeofday({1495653499, 836498}, NULL) = 0
12417 15:18:19.836520 getpid()          = 12417
12417 15:18:19.836563 gettimeofday({1495653499, 836574}, NULL) = 0
12417 15:18:19.836597 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9412d4) = 0
12417 15:18:19.836620 write(3, "Wed May 24 15:18:19 2017 [pid 12417] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile16\", 17 bytes, 15.71Kbyte/sec\n", 131) = 131
12417 15:18:19.836650 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9412dc) = 0
12417 15:18:19.836671 write(0, "226 Transfer complete.\r\n", 24) = 24
12417 15:18:19.836737 write(5, "\n", 1) = 1
