16524 16:03:45.411014 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16524 16:03:45.411071 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411115 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16524 16:03:45.411233 read(6, "", 4096) = 0
16524 16:03:45.411275 close(6)          = 0
16524 16:03:45.411314 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411359 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16524 16:03:45.411454 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16524 16:03:45.411508 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16524 16:03:45.411564 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411637 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16524 16:03:45.411753 read(6, "", 4096) = 0
16524 16:03:45.411795 close(6)          = 0
16524 16:03:45.411835 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411878 read(5, "", 4096) = 0
16524 16:03:45.411918 close(5)          = 0
16524 16:03:45.411936 munmap(0xb7f35000, 4096) = 0
16524 16:03:45.411936 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
16524 16:03:45.411936 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
16524 16:03:45.411936 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
16524 16:03:45.411936 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16524 16:03:45.411936 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
16524 16:03:45.411936 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411936 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
16524 16:03:45.411936 read(6, "", 4096) = 0
16524 16:03:45.411936 close(6)          = 0
16524 16:03:45.411936 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411936 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16524 16:03:45.411936 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
16524 16:03:45.411936 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411936 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16524 16:03:45.411936 read(6, "", 4096) = 0
16524 16:03:45.411936 close(6)          = 0
16524 16:03:45.411936 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411936 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16524 16:03:45.411936 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
16524 16:03:45.411936 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411936 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
16524 16:03:45.411936 read(6, "", 4096) = 0
16524 16:03:45.411936 close(6)          = 0
16524 16:03:45.411936 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411936 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16524 16:03:45.411936 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16524 16:03:45.411936 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
16524 16:03:45.411936 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16524 16:03:45.411936 read(6, "", 4096) = 0
16524 16:03:45.411936 close(6)          = 0
16524 16:03:45.411936 munmap(0xb7f2f000, 4096) = 0
16524 16:03:45.411936 read(5, "", 4096) = 0
16524 16:03:45.411936 close(5)          = 0
16524 16:03:45.411936 munmap(0xb7f35000, 4096) = 0
16524 16:03:45.411936 time(NULL)        = 1495656225
16524 16:03:45.411936 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16524 16:03:45.411936 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
16524 16:03:45.411936 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
16524 16:03:45.411936 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
16524 16:03:45.411936 read(5, "", 4096) = 0
16524 16:03:45.411936 close(5)          = 0
16524 16:03:45.411936 munmap(0xb7f35000, 4096) = 0
16524 16:03:45.411936 getuid32()        = 0
16524 16:03:45.411936 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.411936 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.411936 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.411936 _llseek(5, 1624, [1624], SEEK_SET) = 0
16524 16:03:45.411936 munmap(0xb7f35000, 1624) = 0
16524 16:03:45.411936 close(5)          = 0
16524 16:03:45.411936 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.411936 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.411936 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16524 16:03:45.411936 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.411936 _llseek(5, 1233, [1233], SEEK_SET) = 0
16524 16:03:45.411936 munmap(0xb7f35000, 1233) = 0
16524 16:03:45.415873 close(5)          = 0
16524 16:03:45.415976 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.416028 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.416072 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16524 16:03:45.416128 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.416199 _llseek(5, 1624, [1624], SEEK_SET) = 0
16524 16:03:45.416266 munmap(0xb7f35000, 1624) = 0
16524 16:03:45.416308 close(5)          = 0
16524 16:03:45.416358 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.416408 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.416451 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16524 16:03:45.416507 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.416550 _llseek(5, 1233, [1233], SEEK_SET) = 0
16524 16:03:45.416639 munmap(0xb7f35000, 1233) = 0
16524 16:03:45.416681 close(5)          = 0
16524 16:03:45.417304 getuid32()        = 0
16524 16:03:45.417356 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.417406 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.417449 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16524 16:03:45.417506 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.417549 _llseek(5, 1624, [1624], SEEK_SET) = 0
16524 16:03:45.417606 munmap(0xb7f35000, 1624) = 0
16524 16:03:45.417648 close(5)          = 0
16524 16:03:45.417698 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.417747 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.417789 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16524 16:03:45.417845 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.417888 _llseek(5, 1233, [1233], SEEK_SET) = 0
16524 16:03:45.417946 munmap(0xb7f35000, 1233) = 0
16524 16:03:45.417986 close(5)          = 0
16524 16:03:45.418032 time(NULL)        = 1495656225
16524 16:03:45.418087 munmap(0xb7f32000, 12164) = 0
16524 16:03:45.418172 munmap(0xb7f30000, 7136) = 0
16524 16:03:45.418225 munmap(0xb7d65000, 95428) = 0
16524 16:03:45.418270 munmap(0xb7d2b000, 201052) = 0
16524 16:03:45.418312 munmap(0xb7d12000, 101180) = 0
16524 16:03:45.418370 gettimeofday({1495656225, 418406}, NULL) = 0
16524 16:03:45.418444 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe10f84) = -1 ENOENT (No such file or directory)
16524 16:03:45.418498 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
16524 16:03:45.418581 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe110d4) = 0
16524 16:03:45.418640 write(3, "Wed May 24 16:03:45 2017 [pid 16524] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
16524 16:03:45.418698 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe110dc) = 0
16524 16:03:45.418747 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16524 16:03:45.418798 write(4, "\1", 1 <unfinished ...>
16525 16:03:45.418839 <... read resumed> "\1", 1) = 1
16524 16:03:45.418868 <... write resumed> ) = 1
16525 16:03:45.418902 exit_group(0)     = ?
16524 16:03:45.418995 --- SIGCHLD (Child exited) @ 0 (0) ---
16524 16:03:45.419031 sigreturn()       = ? (mask now [])
16524 16:03:45.419244 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 16525
16524 16:03:45.419296 close(4)          = 0
16524 16:03:45.419344 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
16524 16:03:45.419395 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16524 16:03:45.419447 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16524 16:03:45.419497 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d9b6f8) = 16526
16526 16:03:45.419661 prctl(0x1, 0x9, 0, 0, 0) = 0
16526 16:03:45.419712 close(4)          = 0
16526 16:03:45.419800 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16526 16:03:45.419861 _llseek(4, 0, [0], SEEK_CUR) = 0
16526 16:03:45.419916 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16526 16:03:45.419978 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f35000
16526 16:03:45.420025 _llseek(4, 1624, [1624], SEEK_SET) = 0
16526 16:03:45.420097 munmap(0xb7f35000, 1624) = 0
16526 16:03:45.420144 close(4)          = 0
16526 16:03:45.420214 getuid32()        = 0
16526 16:03:45.420258 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16526 16:03:45.420309 _llseek(4, 0, [0], SEEK_CUR) = 0
16526 16:03:45.420351 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16526 16:03:45.420408 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f35000
16526 16:03:45.420453 _llseek(4, 1624, [1624], SEEK_SET) = 0
16526 16:03:45.420509 munmap(0xb7f35000, 1624) = 0
16526 16:03:45.420550 close(4)          = 0
16526 16:03:45.420633 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
16526 16:03:45.420701 read(4, "65536\n", 31) = 6
16526 16:03:45.420748 close(4)          = 0
16526 16:03:45.420799 socket(PF_FILE, SOCK_STREAM, 0) = 4
16526 16:03:45.420845 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16526 16:03:45.420889 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16526 16:03:45.420958 close(4)          = 0
16526 16:03:45.421003 socket(PF_FILE, SOCK_STREAM, 0) = 4
16526 16:03:45.421045 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16526 16:03:45.421087 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16526 16:03:45.421228 close(4)          = 0
16526 16:03:45.421311 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
16526 16:03:45.421366 _llseek(4, 0, [0], SEEK_CUR) = 0
16526 16:03:45.421409 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16526 16:03:45.421466 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f35000
16526 16:03:45.421511 _llseek(4, 886, [886], SEEK_SET) = 0
16526 16:03:45.421588 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16526 16:03:45.421682 munmap(0xb7f35000, 886) = 0
16526 16:03:45.421723 close(4)          = 0
16526 16:03:45.421765 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
16526 16:03:45.421822 geteuid32()       = 0
16526 16:03:45.421866 getegid32()       = 0
16526 16:03:45.421909 setregid32(-1, 1000) = 0
16526 16:03:45.421936 setreuid32(-1, 1000) = 0
16526 16:03:45.421936 chdir("/home/msfadmin") = 0
16526 16:03:45.421936 setreuid32(-1, 0) = 0
16526 16:03:45.421936 setregid32(-1, 0) = 0
16526 16:03:45.421936 setgid32(1000)    = 0
16526 16:03:45.421936 setuid32(1000)    = 0
16526 16:03:45.421936 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
16526 16:03:45.421936 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f33000
16526 16:03:45.421936 mprotect(0xb7f35000, 4096, PROT_NONE) = 0
16526 16:03:45.421936 mprotect(0xb7f33000, 4096, PROT_NONE) = 0
16526 16:03:45.421936 getcwd("/home/msfadmin", 4096) = 15
16526 16:03:45.421936 umask(022)        = 077
16526 16:03:45.421936 getcwd("/home/msfadmin", 4096) = 15
16526 16:03:45.421936 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
16526 16:03:45.421936 write(0, "230 Login successful.\r\n", 23) = 23
16526 16:03:45.421936 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.421936 alarm(300)        = 0
16526 16:03:45.421936 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f30000
16526 16:03:45.421936 mprotect(0xb7f32000, 4096, PROT_NONE) = 0
16526 16:03:45.421936 mprotect(0xb7f30000, 4096, PROT_NONE) = 0
16526 16:03:45.421936 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
16526 16:03:45.421936 read(0, "TYPE I\r\n", 8) = 8
16526 16:03:45.421936 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
16526 16:03:45.421936 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.421936 alarm(300)        = 300
16526 16:03:45.421936 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
16526 16:03:45.421936 read(0, "PASV\r\n", 6) = 6
16526 16:03:45.421936 write(5, "\n", 1) = 1
16526 16:03:45.421936 read(5,  <unfinished ...>
16524 16:03:45.421936 close(5)          = 0
16524 16:03:45.421936 getuid32()        = 0
16524 16:03:45.421936 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16524 16:03:45.421936 _llseek(5, 0, [0], SEEK_CUR) = 0
16524 16:03:45.421936 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16524 16:03:45.421936 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f35000
16524 16:03:45.421936 _llseek(5, 1624, [1624], SEEK_SET) = 0
16524 16:03:45.421936 munmap(0xb7f35000, 1624) = 0
16524 16:03:45.421936 close(5)          = 0
16524 16:03:45.421936 setgroups32(0, []) = 0
16524 16:03:45.421936 chdir("/usr/share/empty") = 0
16524 16:03:45.421936 chroot(".")       = 0
16524 16:03:45.421936 capset(NULL, NULL) = -1 EFAULT (Bad address)
16524 16:03:45.421936 prctl(0x8, 0, 0xbfe110b8, 0x80549a6, 0xbfe110a0) = 0
16524 16:03:45.421936 prctl(0x8, 0x1, 0xbfe110b8, 0x8054a49, 0xbfe110a0) = 0
16524 16:03:45.421936 setgid32(65534)   = 0
16524 16:03:45.421936 setuid32(65534)   = 0
16524 16:03:45.421936 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
16524 16:03:45.421936 read(4, "\n", 1)  = 1
16524 16:03:45.421936 write(4, "\1", 1) = 1
16526 16:03:45.421936 <... read resumed> "\1", 1) = 1
16526 16:03:45.421936 write(5, "\f", 1) = 1
16526 16:03:45.421936 read(5,  <unfinished ...>
16524 16:03:45.421936 read(4, "\f", 1)  = 1
16524 16:03:45.421936 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
16524 16:03:45.421936 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
16524 16:03:45.421936 gettimeofday({1495656225, 421936}, NULL) = 0
16524 16:03:45.421936 bind(5, {sa_family=AF_INET, sin_port=htons(44233), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
16524 16:03:45.421936 listen(5, 1)      = 0
16524 16:03:45.421936 write(4, "\311\254\0\0", 4) = 4
16526 16:03:45.421936 <... read resumed> "\311\254\0\0", 4) = 4
16526 16:03:45.421936 write(0, "227 Entering Passive Mode (127,0,0,1,172,201).\r\n", 48) = 48
16526 16:03:45.425977 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.426039 alarm(300)        = 300
16526 16:03:45.426116 recv(0, "STOR myfile10\r\n", 4096, MSG_PEEK) = 15
16526 16:03:45.426165 read(0, "STOR myfile10\r\n", 15) = 15
16526 16:03:45.426219 write(5, "\v", 1) = 1
16526 16:03:45.426263 read(5,  <unfinished ...>
16524 16:03:45.426310 read(4, "\v", 1)  = 1
16524 16:03:45.426356 write(4, "\1\0\0\0", 4) = 4
16526 16:03:45.426400 <... read resumed> "\1\0\0\0", 4) = 4
16526 16:03:45.426438 gettimeofday({1495656225, 426465}, NULL) = 0
16526 16:03:45.426499 getcwd("/home/msfadmin", 4096) = 15
16526 16:03:45.426547 open("myfile10", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
16526 16:03:45.426597 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
16526 16:03:45.426691 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
16526 16:03:45.426735 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
16526 16:03:45.426776 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe11004) = 0
16526 16:03:45.426833 ftruncate64(4, 0) = 0
16526 16:03:45.426929 _llseek(4, 0, [0], SEEK_SET) = 0
16526 16:03:45.426978 write(5, "\v", 1) = 1
16526 16:03:45.427021 read(5,  <unfinished ...>
16524 16:03:45.427055 read(4, "\v", 1)  = 1
16524 16:03:45.427100 write(4, "\1\0\0\0", 4) = 4
16526 16:03:45.427143 <... read resumed> "\1\0\0\0", 4) = 4
16526 16:03:45.427178 write(5, "\v", 1) = 1
16526 16:03:45.427218 read(5,  <unfinished ...>
16524 16:03:45.427251 read(4, "\v", 1)  = 1
16524 16:03:45.427294 write(4, "\1\0\0\0", 4) = 4
16526 16:03:45.427335 <... read resumed> "\1\0\0\0", 4) = 4
16526 16:03:45.427371 write(5, "\r", 1) = 1
16526 16:03:45.427412 read(5,  <unfinished ...>
16524 16:03:45.427444 read(4, "\r", 1)  = 1
16524 16:03:45.427492 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
16524 16:03:45.427551 accept(5, {sa_family=AF_INET, sin_port=htons(58264), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
16524 16:03:45.427622 write(4, "\1", 1) = 1
16526 16:03:45.427666 <... read resumed> "\1", 1) = 1
16526 16:03:45.427705 recvmsg(5,  <unfinished ...>
16524 16:03:45.427745 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
16526 16:03:45.427804 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
16526 16:03:45.427882 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
16526 16:03:45.427935 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
16526 16:03:45.427981 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
16526 16:03:45.428024 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.428074 alarm(300)        = 300
16526 16:03:45.428154 write(0, "150 Ok to send data.\r\n", 22) = 22
16526 16:03:45.428400 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d6a000
16526 16:03:45.428453 mprotect(0xb7d7c000, 4096, PROT_NONE) = 0
16526 16:03:45.428499 mprotect(0xb7d6a000, 4096, PROT_NONE) = 0
16526 16:03:45.428540 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
16526 16:03:45.428590 write(4, "assasaaa\na\na\na\na\n", 17) = 17
16526 16:03:45.428646 read(6, "", 65536) = 0
16526 16:03:45.428689 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.428739 alarm(300)        = 300
16526 16:03:45.428839 close(6)          = 0
16526 16:03:45.428887 alarm(0)          = 300
16526 16:03:45.428945 gettimeofday({1495656225, 428970}, NULL) = 0
16526 16:03:45.429025 getpid()          = 16526
16526 16:03:45.429072 gettimeofday({1495656225, 429099}, NULL) = 0
16526 16:03:45.429147 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe10fa4) = 0
16526 16:03:45.429201 write(3, "Wed May 24 16:03:45 2017 [pid 16526] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile10\", 17 bytes, 6.30Kbyte/sec\n", 130) = 130
16526 16:03:45.429268 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe10fac) = 0
16526 16:03:45.429320 write(0, "226 Transfer complete.\r\n", 24) = 24
16526 16:03:45.429476 write(5, "\n", 1) = 1
16526 16:03:45.429524 read(5,  <unfinished ...>
16524 16:03:45.429558 close(6)          = 0
16524 16:03:45.429654 read(4, "\n", 1)  = 1
16524 16:03:45.429708 close(5)          = 0
16524 16:03:45.429753 write(4, "\1", 1) = 1
16526 16:03:45.429949 <... read resumed> "\1", 1) = 1
16526 16:03:45.429986 close(4)          = 0
16526 16:03:45.430030 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.430080 alarm(300)        = 0
16526 16:03:45.430157 recv(0,  <unfinished ...>
16524 16:03:45.430193 read(4,  <unfinished ...>
16526 16:03:45.946975 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
16526 16:03:45.947235 read(0, "TYPE I\r\n", 8) = 8
16526 16:03:45.947490 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
16526 16:03:45.947732 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.947816 alarm(300)        = 299
16526 16:03:45.947900 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
16526 16:03:45.947955 read(0, "PASV\r\n", 6) = 6
16526 16:03:45.947994 write(5, "\n", 1) = 1
16526 16:03:45.948033 read(5,  <unfinished ...>
16524 16:03:45.948089 <... read resumed> "\n", 1) = 1
16524 16:03:45.948126 write(4, "\1", 1) = 1
16526 16:03:45.948162 <... read resumed> "\1", 1) = 1
16526 16:03:45.948191 write(5, "\f", 1) = 1
16526 16:03:45.948224 read(5,  <unfinished ...>
16524 16:03:45.948251 read(4, "\f", 1)  = 1
16524 16:03:45.948289 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
16524 16:03:45.948333 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
16524 16:03:45.948374 bind(5, {sa_family=AF_INET, sin_port=htons(55732), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
16524 16:03:45.948419 listen(5, 1)      = 0
16524 16:03:45.948459 write(4, "\264\331\0\0", 4) = 4
16526 16:03:45.948496 <... read resumed> "\264\331\0\0", 4) = 4
16526 16:03:45.948534 write(0, "227 Entering Passive Mode (127,0,0,1,217,180).\r\n", 48) = 48
16526 16:03:45.948830 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16526 16:03:45.948861 alarm(300)        = 300
16526 16:03:45.948916 recv(0, "STOR myfile11\r\n", 4096, MSG_PEEK) = 15
16526 16:03:45.948944 read(0, "STOR myfile11\r\n", 15) = 15
16526 16:03:45.948974 write(5, "\v", 1) = 1
16526 16:03:45.948999 read(5,  <unfinished ...>
16524 16:03:45.949068 read(4, "\v", 1)  = 1
16524 16:03:45.949098 write(4, "\1\0\0\0", 4) = 4
16526 16:03:45.949124 <... read resumed> "\1\0\0\0", 4) = 4
16526 16:03:45.949145 gettimeofday({1495656225, 949161}, NULL) = 0
