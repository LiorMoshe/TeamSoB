19156 16:37:20.820707 statfs64("/selinux", 84, 0xbfec615c) = -1 ENOENT (No such file or directory)
19156 16:37:20.820736 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
19156 16:37:20.820782 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
19156 16:37:20.820817 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f73000
19156 16:37:20.820842 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
19156 16:37:20.820970 read(7, "", 1024) = 0
19156 16:37:20.820994 close(7)          = 0
19156 16:37:20.821018 munmap(0xb7f73000, 4096) = 0
19156 16:37:20.821051 munmap(0xb7da2000, 29913) = 0
19156 16:37:20.821092 read(6, "", 4096) = 0
19156 16:37:20.821118 close(6)          = 0
19156 16:37:20.821140 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.821166 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.821204 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.821233 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
19156 16:37:20.821266 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.821297 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
19156 16:37:20.821365 read(6, "", 4096) = 0
19156 16:37:20.821389 close(6)          = 0
19156 16:37:20.821412 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.821437 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.821473 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.821501 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
19156 16:37:20.821533 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.821558 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
19156 16:37:20.821623 read(6, "", 4096) = 0
19156 16:37:20.821646 close(6)          = 0
19156 16:37:20.821669 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.821693 read(5, "", 4096) = 0
19156 16:37:20.821716 close(5)          = 0
19156 16:37:20.821738 munmap(0xb7f7a000, 4096) = 0
19156 16:37:20.821762 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
19156 16:37:20.821790 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
19156 16:37:20.821822 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
19156 16:37:20.821847 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
19156 16:37:20.821920 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.821957 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.821984 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
19156 16:37:20.822017 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.822045 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
19156 16:37:20.822122 read(6, "", 4096) = 0
19156 16:37:20.822146 close(6)          = 0
19156 16:37:20.822169 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.822194 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.822230 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.822257 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
19156 16:37:20.822289 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.822314 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
19156 16:37:20.822384 read(6, "", 4096) = 0
19156 16:37:20.822407 close(6)          = 0
19156 16:37:20.822430 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.822454 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.822490 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.822517 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
19156 16:37:20.822550 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.822573 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
19156 16:37:20.822741 read(6, "", 4096) = 0
19156 16:37:20.822741 close(6)          = 0
19156 16:37:20.822741 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.822741 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19156 16:37:20.822741 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
19156 16:37:20.822741 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
19156 16:37:20.822741 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f74000
19156 16:37:20.823020 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
19156 16:37:20.823127 read(6, "", 4096) = 0
19156 16:37:20.823153 close(6)          = 0
19156 16:37:20.823175 munmap(0xb7f74000, 4096) = 0
19156 16:37:20.823200 read(5, "", 4096) = 0
19156 16:37:20.823223 close(5)          = 0
19156 16:37:20.823245 munmap(0xb7f7a000, 4096) = 0
19156 16:37:20.823274 time(NULL)        = 1495658240
19156 16:37:20.823301 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
19156 16:37:20.823338 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
19156 16:37:20.823364 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
19156 16:37:20.823396 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7a000
19156 16:37:20.823421 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
19156 16:37:20.823466 read(5, "", 4096) = 0
19156 16:37:20.823489 close(5)          = 0
19156 16:37:20.823512 munmap(0xb7f7a000, 4096) = 0
19156 16:37:20.823545 getuid32()        = 0
19156 16:37:20.823580 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.823612 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.823637 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19156 16:37:20.823670 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.823696 _llseek(5, 1624, [1624], SEEK_SET) = 0
19156 16:37:20.823733 munmap(0xb7f7a000, 1624) = 0
19156 16:37:20.823758 close(5)          = 0
19156 16:37:20.823807 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.823842 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.823867 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19156 16:37:20.823900 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.823949 _llseek(5, 1233, [1233], SEEK_SET) = 0
19156 16:37:20.824017 munmap(0xb7f7a000, 1233) = 0
19156 16:37:20.824048 close(5)          = 0
19156 16:37:20.824088 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.824118 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.824143 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19156 16:37:20.824176 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.824201 _llseek(5, 1624, [1624], SEEK_SET) = 0
19156 16:37:20.824234 munmap(0xb7f7a000, 1624) = 0
19156 16:37:20.824257 close(5)          = 0
19156 16:37:20.824285 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.824314 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.824338 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19156 16:37:20.824370 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.824395 _llseek(5, 1233, [1233], SEEK_SET) = 0
19156 16:37:20.824428 munmap(0xb7f7a000, 1233) = 0
19156 16:37:20.824451 close(5)          = 0
19156 16:37:20.824799 getuid32()        = 0
19156 16:37:20.824870 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.825071 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.825097 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19156 16:37:20.825130 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.825156 _llseek(5, 1624, [1624], SEEK_SET) = 0
19156 16:37:20.825189 munmap(0xb7f7a000, 1624) = 0
19156 16:37:20.825213 close(5)          = 0
19156 16:37:20.825244 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.825272 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.825296 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19156 16:37:20.825328 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.825353 _llseek(5, 1233, [1233], SEEK_SET) = 0
19156 16:37:20.825386 munmap(0xb7f7a000, 1233) = 0
19156 16:37:20.825410 close(5)          = 0
19156 16:37:20.825436 time(NULL)        = 1495658240
19156 16:37:20.825470 munmap(0xb7f77000, 12164) = 0
19156 16:37:20.825500 munmap(0xb7f75000, 7136) = 0
19156 16:37:20.825532 munmap(0xb7daa000, 95428) = 0
19156 16:37:20.825558 munmap(0xb7d70000, 201052) = 0
19156 16:37:20.825584 munmap(0xb7d57000, 101180) = 0
19156 16:37:20.825622 gettimeofday({1495658240, 825638}, NULL) = 0
19156 16:37:20.825660 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfec8034) = -1 ENOENT (No such file or directory)
19156 16:37:20.825693 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
19156 16:37:20.825746 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfec8184) = 0
19156 16:37:20.825782 write(3, "Wed May 24 16:37:20 2017 [pid 19156] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
19156 16:37:20.825817 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfec818c) = 0
19156 16:37:20.825846 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19156 16:37:20.825876 write(4, "\1", 1 <unfinished ...>
19157 16:37:20.825914 <... read resumed> "\1", 1) = 1
19156 16:37:20.825932 <... write resumed> ) = 1
19157 16:37:20.825955 exit_group(0)     = ?
19156 16:37:20.826066 --- SIGCHLD (Child exited) @ 0 (0) ---
19156 16:37:20.826096 sigreturn()       = ? (mask now [])
19156 16:37:20.826135 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 19157
19156 16:37:20.826164 close(4)          = 0
19156 16:37:20.826191 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
19156 16:37:20.826222 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19156 16:37:20.826251 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19156 16:37:20.826280 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7de06f8) = 19158
19158 16:37:20.826383 prctl(0x1, 0x9, 0, 0, 0) = 0
19158 16:37:20.826414 close(4)          = 0
19158 16:37:20.826467 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
19158 16:37:20.826502 _llseek(4, 0, [0], SEEK_CUR) = 0
19158 16:37:20.826534 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19158 16:37:20.826570 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7a000
19158 16:37:20.826597 _llseek(4, 1624, [1624], SEEK_SET) = 0
19158 16:37:20.826641 munmap(0xb7f7a000, 1624) = 0
19158 16:37:20.826667 close(4)          = 0
19158 16:37:20.826696 getuid32()        = 0
19158 16:37:20.826720 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
19158 16:37:20.826748 _llseek(4, 0, [0], SEEK_CUR) = 0
19158 16:37:20.826772 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19158 16:37:20.826805 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7a000
19158 16:37:20.826830 _llseek(4, 1624, [1624], SEEK_SET) = 0
19158 16:37:20.826862 munmap(0xb7f7a000, 1624) = 0
19158 16:37:20.826885 close(4)          = 0
19158 16:37:20.826934 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
19158 16:37:20.826995 read(4, "65536\n", 31) = 6
19158 16:37:20.827038 close(4)          = 0
19158 16:37:20.827072 socket(PF_FILE, SOCK_STREAM, 0) = 4
19158 16:37:20.827099 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
19158 16:37:20.827124 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
19158 16:37:20.827166 close(4)          = 0
19158 16:37:20.827192 socket(PF_FILE, SOCK_STREAM, 0) = 4
19158 16:37:20.827217 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
19158 16:37:20.827241 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
19158 16:37:20.827276 close(4)          = 0
19158 16:37:20.827322 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
19158 16:37:20.827354 _llseek(4, 0, [0], SEEK_CUR) = 0
19158 16:37:20.827378 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
19158 16:37:20.827412 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7a000
19158 16:37:20.827438 _llseek(4, 886, [886], SEEK_SET) = 0
19158 16:37:20.827483 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
19158 16:37:20.827517 munmap(0xb7f7a000, 886) = 0
19158 16:37:20.827542 close(4)          = 0
19158 16:37:20.827565 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
19158 16:37:20.827599 geteuid32()       = 0
19158 16:37:20.827624 getegid32()       = 0
19158 16:37:20.827649 setregid32(-1, 1000) = 0
19158 16:37:20.827673 setreuid32(-1, 1000) = 0
19158 16:37:20.827698 chdir("/home/msfadmin") = 0
19158 16:37:20.827724 setreuid32(-1, 0) = 0
19158 16:37:20.827747 setregid32(-1, 0) = 0
19158 16:37:20.827771 setgid32(1000)    = 0
19158 16:37:20.827795 setuid32(1000)    = 0
19158 16:37:20.827819 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
19158 16:37:20.827848 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
19158 16:37:20.827874 mprotect(0xb7f7a000, 4096, PROT_NONE) = 0
19158 16:37:20.827900 mprotect(0xb7f78000, 4096, PROT_NONE) = 0
19158 16:37:20.827967 getcwd("/home/msfadmin", 4096) = 15
19158 16:37:20.828011 umask(022)        = 077
19158 16:37:20.828045 getcwd("/home/msfadmin", 4096) = 15
19158 16:37:20.828100 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
19158 16:37:20.828168 write(0, "230 Login successful.\r\n", 23) = 23
19158 16:37:20.828412 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19158 16:37:20.828450 alarm(300)        = 0
19158 16:37:20.828495 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f75000
19158 16:37:20.828522 mprotect(0xb7f77000, 4096, PROT_NONE) = 0
19158 16:37:20.828548 mprotect(0xb7f75000, 4096, PROT_NONE) = 0
19158 16:37:20.828577 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
19158 16:37:20.828605 read(0, "TYPE I\r\n", 8) = 8
19158 16:37:20.828640 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
19158 16:37:20.828729 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19158 16:37:20.828765 alarm(300)        = 300
19158 16:37:20.828840 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
19158 16:37:20.828967 read(0, "PASV\r\n", 6) = 6
19158 16:37:20.829003 write(5, "\n", 1) = 1
19158 16:37:20.829029 read(5,  <unfinished ...>
19156 16:37:20.829060 close(5)          = 0
19156 16:37:20.829089 getuid32()        = 0
19156 16:37:20.829124 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19156 16:37:20.829173 _llseek(5, 0, [0], SEEK_CUR) = 0
19156 16:37:20.829216 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19156 16:37:20.829277 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7a000
19156 16:37:20.829313 _llseek(5, 1624, [1624], SEEK_SET) = 0
19156 16:37:20.829362 munmap(0xb7f7a000, 1624) = 0
19156 16:37:20.829401 close(5)          = 0
19156 16:37:20.829446 setgroups32(0, []) = 0
19156 16:37:20.829482 chdir("/usr/share/empty") = 0
19156 16:37:20.829521 chroot(".")       = 0
19156 16:37:20.829556 capset(NULL, NULL) = -1 EFAULT (Bad address)
19156 16:37:20.829598 prctl(0x8, 0, 0xbfec8168, 0x80549a6, 0xbfec8150) = 0
19156 16:37:20.829634 prctl(0x8, 0x1, 0xbfec8168, 0x8054a49, 0xbfec8150) = 0
19156 16:37:20.829667 setgid32(65534)   = 0
19156 16:37:20.829701 setuid32(65534)   = 0
19156 16:37:20.829732 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
19156 16:37:20.829771 read(4, "\n", 1)  = 1
19156 16:37:20.829809 write(4, "\1", 1) = 1
19158 16:37:20.829921 <... read resumed> "\1", 1) = 1
19158 16:37:20.829950 write(5, "\f", 1) = 1
19158 16:37:20.829984 read(5,  <unfinished ...>
19156 16:37:20.830009 read(4, "\f", 1)  = 1
19156 16:37:20.830048 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
19156 16:37:20.830090 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
19156 16:37:20.830126 gettimeofday({1495658240, 830149}, NULL) = 0
19156 16:37:20.830188 bind(5, {sa_family=AF_INET, sin_port=htons(24563), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
19156 16:37:20.830235 listen(5, 1)      = 0
19156 16:37:20.830274 write(4, "\363_\0\0", 4) = 4
19158 16:37:20.830313 <... read resumed> "\363_\0\0", 4) = 4
19158 16:37:20.830357 write(0, "227 Entering Passive Mode (127,0,0,1,95,243).\r\n", 47) = 47
19158 16:37:20.830723 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19158 16:37:20.830771 alarm(300)        = 300
19158 16:37:20.830835 recv(0, "STOR myfile12\r\n", 4096, MSG_PEEK) = 15
19158 16:37:20.830874 read(0, "STOR myfile12\r\n", 15) = 15
19158 16:37:20.830915 write(5, "\v", 1) = 1
19158 16:37:20.830948 read(5,  <unfinished ...>
19156 16:37:20.830973 read(4, "\v", 1)  = 1
19156 16:37:20.831006 write(4, "\1\0\0\0", 4) = 4
19158 16:37:20.831040 <... read resumed> "\1\0\0\0", 4) = 4
19158 16:37:20.831068 gettimeofday({1495658240, 831088}, NULL) = 0
19158 16:37:20.831114 getcwd("/home/msfadmin", 4096) = 15
19158 16:37:20.831150 open("myfile12", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
19158 16:37:20.831187 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
19158 16:37:20.831233 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
19158 16:37:20.831265 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
19158 16:37:20.831296 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfec80b4) = 0
19158 16:37:20.831350 ftruncate64(4, 0) = 0
19158 16:37:20.831400 _llseek(4, 0, [0], SEEK_SET) = 0
19158 16:37:20.831433 write(5, "\v", 1) = 1
19158 16:37:20.831465 read(5,  <unfinished ...>
19156 16:37:20.831489 read(4, "\v", 1)  = 1
19156 16:37:20.831522 write(4, "\1\0\0\0", 4) = 4
19158 16:37:20.831554 <... read resumed> "\1\0\0\0", 4) = 4
19158 16:37:20.831580 write(5, "\v", 1) = 1
19158 16:37:20.831610 read(5,  <unfinished ...>
19156 16:37:20.831634 read(4, "\v", 1)  = 1
19156 16:37:20.831666 write(4, "\1\0\0\0", 4) = 4
19158 16:37:20.831698 <... read resumed> "\1\0\0\0", 4) = 4
19158 16:37:20.831724 write(5, "\r", 1) = 1
19158 16:37:20.831755 read(5,  <unfinished ...>
19156 16:37:20.831846 read(4, "\r", 1)  = 1
19156 16:37:20.831897 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
19156 16:37:20.831934 accept(5, {sa_family=AF_INET, sin_port=htons(43631), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
19156 16:37:20.831978 write(4, "\1", 1) = 1
19158 16:37:20.832005 <... read resumed> "\1", 1) = 1
19158 16:37:20.832029 recvmsg(5,  <unfinished ...>
19156 16:37:20.832052 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
19158 16:37:20.832088 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
19158 16:37:20.832116 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
19158 16:37:20.832144 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
19158 16:37:20.832170 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
19158 16:37:20.832196 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19158 16:37:20.832225 alarm(300)        = 300
19158 16:37:20.832273 write(0, "150 Ok to send data.\r\n", 22) = 22
19158 16:37:20.832440 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7daf000
19158 16:37:20.832471 mprotect(0xb7dc1000, 4096, PROT_NONE) = 0
19158 16:37:20.832499 mprotect(0xb7daf000, 4096, PROT_NONE) = 0
19158 16:37:20.832523 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
19158 16:37:20.832552 write(4, "assasaaa\na\na\na\na\n", 17) = 17
19158 16:37:20.832586 read(6, "", 65536) = 0
19158 16:37:20.832611 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19158 16:37:20.832640 alarm(300)        = 300
19158 16:37:20.832683 close(6)          = 0
19158 16:37:20.832705 alarm(0)          = 300
19158 16:37:20.832738 gettimeofday({1495658240, 832741}, NULL) = 0
19158 16:37:20.832741 getpid()          = 19158
19158 16:37:20.832741 gettimeofday({1495658240, 832741}, NULL) = 0
19158 16:37:20.832741 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfec8054) = 0
19158 16:37:20.832741 write(3, "Wed May 24 16:37:20 2017 [pid 19158] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile12\", 17 bytes, 10.04Kbyte/sec\n", 131) = 131
19158 16:37:20.832741 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfec805c) = 0
19158 16:37:20.833032 write(0, "226 Transfer complete.\r\n", 24) = 24
19158 16:37:20.833138 write(5, "\n", 1) = 1
19158 16:37:20.833166 read(5,  <unfinished ...>
19156 16:37:20.833186 close(6)          = 0
19156 16:37:20.833242 read(4, "\n", 1)  = 1
19156 16:37:20.833269 close(5)          = 0
