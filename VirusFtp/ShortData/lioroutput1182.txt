11666 15:10:30.647248 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11666 15:10:30.647291 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11666 15:10:30.647313 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f34000
11666 15:10:30.647328 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11666 15:10:30.647437 read(7, "", 1024) = 0
11666 15:10:30.647450 close(7)          = 0
11666 15:10:30.647463 munmap(0xb7f34000, 4096) = 0
11666 15:10:30.647484 munmap(0xb7d63000, 29913) = 0
11666 15:10:30.647502 read(6, "", 4096) = 0
11666 15:10:30.647517 close(6)          = 0
11666 15:10:30.647529 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.647543 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.647569 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.647587 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11666 15:10:30.647608 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.647622 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11666 15:10:30.647674 read(6, "", 4096) = 0
11666 15:10:30.647835 close(6)          = 0
11666 15:10:30.647849 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.647864 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.647902 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.647922 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11666 15:10:30.647954 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.647968 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11666 15:10:30.648019 read(6, "", 4096) = 0
11666 15:10:30.648032 close(6)          = 0
11666 15:10:30.648044 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.648058 read(5, "", 4096) = 0
11666 15:10:30.648070 close(5)          = 0
11666 15:10:30.648082 munmap(0xb7f3b000, 4096) = 0
11666 15:10:30.648095 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11666 15:10:30.648113 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11666 15:10:30.648134 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
11666 15:10:30.648147 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11666 15:10:30.648219 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.648256 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.648272 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11666 15:10:30.648293 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.648307 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11666 15:10:30.648352 read(6, "", 4096) = 0
11666 15:10:30.648352 close(6)          = 0
11666 15:10:30.648353 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.648353 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.648353 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.648353 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11666 15:10:30.648357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.648372 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11666 15:10:30.648423 read(6, "", 4096) = 0
11666 15:10:30.648436 close(6)          = 0
11666 15:10:30.648448 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.648462 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.648491 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.648508 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11666 15:10:30.648529 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.648573 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11666 15:10:30.648742 read(6, "", 4096) = 0
11666 15:10:30.648755 close(6)          = 0
11666 15:10:30.648768 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.648782 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11666 15:10:30.648806 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11666 15:10:30.648823 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11666 15:10:30.648844 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f35000
11666 15:10:30.648872 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11666 15:10:30.648935 read(6, "", 4096) = 0
11666 15:10:30.648947 close(6)          = 0
11666 15:10:30.648960 munmap(0xb7f35000, 4096) = 0
11666 15:10:30.648973 read(5, "", 4096) = 0
11666 15:10:30.648985 close(5)          = 0
11666 15:10:30.648997 munmap(0xb7f3b000, 4096) = 0
11666 15:10:30.649014 time(NULL)        = 1495653030
11666 15:10:30.649029 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11666 15:10:30.649053 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11666 15:10:30.649068 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11666 15:10:30.649089 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
11666 15:10:30.649102 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11666 15:10:30.649130 read(5, "", 4096) = 0
11666 15:10:30.649142 close(5)          = 0
11666 15:10:30.649154 munmap(0xb7f3b000, 4096) = 0
11666 15:10:30.649174 getuid32()        = 0
11666 15:10:30.649196 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.649215 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.649230 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11666 15:10:30.649255 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.649270 _llseek(5, 1624, [1624], SEEK_SET) = 0
11666 15:10:30.649295 munmap(0xb7f3b000, 1624) = 0
11666 15:10:30.649309 close(5)          = 0
11666 15:10:30.649341 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.649363 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.649377 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11666 15:10:30.649398 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.649412 _llseek(5, 1233, [1233], SEEK_SET) = 0
11666 15:10:30.649437 munmap(0xb7f3b000, 1233) = 0
11666 15:10:30.649450 close(5)          = 0
11666 15:10:30.649474 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.649491 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.649505 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11666 15:10:30.649553 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.649569 _llseek(5, 1624, [1624], SEEK_SET) = 0
11666 15:10:30.649591 munmap(0xb7f3b000, 1624) = 0
11666 15:10:30.649604 close(5)          = 0
11666 15:10:30.649622 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.649639 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.649652 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11666 15:10:30.649672 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.649686 _llseek(5, 1233, [1233], SEEK_SET) = 0
11666 15:10:30.649708 munmap(0xb7f3b000, 1233) = 0
11666 15:10:30.649720 close(5)          = 0
11666 15:10:30.650047 getuid32()        = 0
11666 15:10:30.650062 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.650078 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.650091 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11666 15:10:30.650112 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.650126 _llseek(5, 1624, [1624], SEEK_SET) = 0
11666 15:10:30.650146 munmap(0xb7f3b000, 1624) = 0
11666 15:10:30.650159 close(5)          = 0
11666 15:10:30.650175 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.650192 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.650205 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11666 15:10:30.650226 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.650239 _llseek(5, 1233, [1233], SEEK_SET) = 0
11666 15:10:30.650260 munmap(0xb7f3b000, 1233) = 0
11666 15:10:30.650273 close(5)          = 0
11666 15:10:30.650288 time(NULL)        = 1495653030
11666 15:10:30.650307 munmap(0xb7f38000, 12164) = 0
11666 15:10:30.650324 munmap(0xb7f36000, 7136) = 0
11666 15:10:30.650342 munmap(0xb7d6b000, 95428) = 0
11666 15:10:30.650357 munmap(0xb7d31000, 201052) = 0
11666 15:10:30.650371 munmap(0xb7d18000, 101180) = 0
11666 15:10:30.650393 gettimeofday({1495653030, 650398}, NULL) = 0
11666 15:10:30.650421 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf7fd974) = -1 ENOENT (No such file or directory)
11666 15:10:30.650452 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11666 15:10:30.650485 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf7fdac4) = 0
11666 15:10:30.650525 write(3, "Wed May 24 15:10:30 2017 [pid 11666] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11666 15:10:30.650548 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf7fdacc) = 0
11666 15:10:30.650565 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11666 15:10:30.650583 write(4, "\1", 1 <unfinished ...>
11667 15:10:30.650596 <... read resumed> "\1", 1) = 1
11666 15:10:30.650603 <... write resumed> ) = 1
11667 15:10:30.650612 exit_group(0)     = ?
11666 15:10:30.650650 --- SIGCHLD (Child exited) @ 0 (0) ---
11666 15:10:30.650660 sigreturn()       = ? (mask now [])
11666 15:10:30.650685 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11667
11666 15:10:30.650701 close(4)          = 0
11666 15:10:30.650717 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11666 15:10:30.650741 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11666 15:10:30.650759 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11666 15:10:30.650776 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7da16f8) = 11668
11668 15:10:30.650840 prctl(0x1, 0x9, 0, 0, 0) = 0
11668 15:10:30.650857 close(4)          = 0
11668 15:10:30.650892 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11668 15:10:30.650913 _llseek(4, 0, [0], SEEK_CUR) = 0
11668 15:10:30.650946 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11668 15:10:30.650982 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
11668 15:10:30.650998 _llseek(4, 1624, [1624], SEEK_SET) = 0
11668 15:10:30.651027 munmap(0xb7f3b000, 1624) = 0
11668 15:10:30.651042 close(4)          = 0
11668 15:10:30.651059 getuid32()        = 0
11668 15:10:30.651073 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11668 15:10:30.651089 _llseek(4, 0, [0], SEEK_CUR) = 0
11668 15:10:30.651102 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11668 15:10:30.651123 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
11668 15:10:30.651137 _llseek(4, 1624, [1624], SEEK_SET) = 0
11668 15:10:30.651157 munmap(0xb7f3b000, 1624) = 0
11668 15:10:30.651170 close(4)          = 0
11668 15:10:30.651203 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11668 15:10:30.651230 read(4, "65536\n", 31) = 6
11668 15:10:30.651245 close(4)          = 0
11668 15:10:30.651278 socket(PF_FILE, SOCK_STREAM, 0) = 4
11668 15:10:30.651305 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11668 15:10:30.651319 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11668 15:10:30.651346 close(4)          = 0
11668 15:10:30.651361 socket(PF_FILE, SOCK_STREAM, 0) = 4
11668 15:10:30.651374 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11668 15:10:30.651387 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11668 15:10:30.651410 close(4)          = 0
11668 15:10:30.651440 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11668 15:10:30.651500 _llseek(4, 0, [0], SEEK_CUR) = 0
11668 15:10:30.651514 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11668 15:10:30.651536 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f3b000
11668 15:10:30.651550 _llseek(4, 886, [886], SEEK_SET) = 0
11668 15:10:30.651583 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11668 15:10:30.651605 munmap(0xb7f3b000, 886) = 0
11668 15:10:30.651618 close(4)          = 0
11668 15:10:30.651631 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11668 15:10:30.651652 geteuid32()       = 0
11668 15:10:30.651666 getegid32()       = 0
11668 15:10:30.651680 setregid32(-1, 1000) = 0
11668 15:10:30.651693 setreuid32(-1, 1000) = 0
11668 15:10:30.651707 chdir("/home/msfadmin") = 0
11668 15:10:30.651722 setreuid32(-1, 0) = 0
11668 15:10:30.651734 setregid32(-1, 0) = 0
11668 15:10:30.651747 setgid32(1000)    = 0
11668 15:10:30.651760 setuid32(1000)    = 0
11668 15:10:30.651773 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11668 15:10:30.651791 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f39000
11668 15:10:30.651807 mprotect(0xb7f3b000, 4096, PROT_NONE) = 0
11668 15:10:30.651835 mprotect(0xb7f39000, 4096, PROT_NONE) = 0
11668 15:10:30.651862 getcwd("/home/msfadmin", 4096) = 15
11668 15:10:30.651879 umask(022)        = 077
11668 15:10:30.651892 getcwd("/home/msfadmin", 4096) = 15
11668 15:10:30.651909 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11668 15:10:30.651938 write(0, "230 Login successful.\r\n", 23) = 23
11668 15:10:30.652046 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11668 15:10:30.652068 alarm(300)        = 0
11668 15:10:30.652082 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f36000
11668 15:10:30.652097 mprotect(0xb7f38000, 4096, PROT_NONE) = 0
11668 15:10:30.652116 mprotect(0xb7f36000, 4096, PROT_NONE) = 0
11668 15:10:30.652147 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11668 15:10:30.652177 read(0, "TYPE I\r\n", 8) = 8
11668 15:10:30.652199 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11668 15:10:30.652249 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11668 15:10:30.652268 alarm(300)        = 300
11668 15:10:30.652283 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11668 15:10:30.652297 read(0, "PASV\r\n", 6) = 6
11668 15:10:30.652313 write(5, "\n", 1) = 1
11668 15:10:30.652327 read(5,  <unfinished ...>
11666 15:10:30.652342 close(5)          = 0
11666 15:10:30.652359 getuid32()        = 0
11666 15:10:30.652378 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11666 15:10:30.652397 _llseek(5, 0, [0], SEEK_CUR) = 0
11666 15:10:30.652413 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11666 15:10:30.652473 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f3b000
11666 15:10:30.652492 _llseek(5, 1624, [1624], SEEK_SET) = 0
11666 15:10:30.652519 munmap(0xb7f3b000, 1624) = 0
11666 15:10:30.652546 close(5)          = 0
11666 15:10:30.652567 setgroups32(0, []) = 0
11666 15:10:30.652582 chdir("/usr/share/empty") = 0
11666 15:10:30.652598 chroot(".")       = 0
11666 15:10:30.652611 capset(NULL, NULL) = -1 EFAULT (Bad address)
11666 15:10:30.652629 prctl(0x8, 0, 0xbf7fdaa8, 0x80549a6, 0xbf7fda90) = 0
11666 15:10:30.652644 prctl(0x8, 0x1, 0xbf7fdaa8, 0x8054a49, 0xbf7fda90) = 0
11666 15:10:30.652657 setgid32(65534)   = 0
11666 15:10:30.652669 setuid32(65534)   = 0
11666 15:10:30.652682 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11666 15:10:30.652700 read(4, "\n", 1)  = 1
11666 15:10:30.652717 write(4, "\1", 1) = 1
11668 15:10:30.652731 <... read resumed> "\1", 1) = 1
11668 15:10:30.652741 write(5, "\f", 1) = 1
11668 15:10:30.652755 read(5,  <unfinished ...>
11666 15:10:30.652778 read(4, "\f", 1)  = 1
11666 15:10:30.652796 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11666 15:10:30.652825 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11666 15:10:30.652840 gettimeofday({1495653030, 652845}, NULL) = 0
11666 15:10:30.652862 bind(5, {sa_family=AF_INET, sin_port=htons(35505), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11666 15:10:30.652882 listen(5, 1)      = 0
11666 15:10:30.652899 write(4, "\261\212\0\0", 4) = 4
11668 15:10:30.652914 <... read resumed> "\261\212\0\0", 4) = 4
11668 15:10:30.652932 write(0, "227 Entering Passive Mode (127,0,0,1,138,177).\r\n", 48) = 48
11668 15:10:30.653070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11668 15:10:30.653107 alarm(300)        = 300
11668 15:10:30.653134 recv(0, "STOR myfile26\r\n", 4096, MSG_PEEK) = 15
11668 15:10:30.653150 read(0, "STOR myfile26\r\n", 15) = 15
11668 15:10:30.653170 write(5, "\v", 1) = 1
11668 15:10:30.653184 read(5,  <unfinished ...>
11666 15:10:30.653193 read(4, "\v", 1)  = 1
11666 15:10:30.653207 write(4, "\1\0\0\0", 4) = 4
11668 15:10:30.653221 <... read resumed> "\1\0\0\0", 4) = 4
11668 15:10:30.653232 gettimeofday({1495653030, 653237}, NULL) = 0
11668 15:10:30.653246 getcwd("/home/msfadmin", 4096) = 15
11668 15:10:30.653262 open("myfile26", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11668 15:10:30.653280 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11668 15:10:30.653302 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11668 15:10:30.653316 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11668 15:10:30.653329 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf7fd9f4) = 0
11668 15:10:30.653348 ftruncate64(4, 0) = 0
11668 15:10:30.653374 _llseek(4, 0, [0], SEEK_SET) = 0
11668 15:10:30.653399 write(5, "\v", 1) = 1
11668 15:10:30.653434 read(5,  <unfinished ...>
11666 15:10:30.653444 read(4, "\v", 1)  = 1
11666 15:10:30.653458 write(4, "\1\0\0\0", 4) = 4
11668 15:10:30.653472 <... read resumed> "\1\0\0\0", 4) = 4
11668 15:10:30.653481 write(5, "\v", 1) = 1
11668 15:10:30.653494 read(5,  <unfinished ...>
11666 15:10:30.653503 read(4, "\v", 1)  = 1
11666 15:10:30.653522 write(4, "\1\0\0\0", 4) = 4
11668 15:10:30.653535 <... read resumed> "\1\0\0\0", 4) = 4
11668 15:10:30.653545 write(5, "\r", 1) = 1
11668 15:10:30.653558 read(5,  <unfinished ...>
11666 15:10:30.653567 read(4, "\r", 1)  = 1
11666 15:10:30.653583 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11666 15:10:30.653606 accept(5, {sa_family=AF_INET, sin_port=htons(50752), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11666 15:10:30.653649 write(4, "\1", 1) = 1
11668 15:10:30.653664 <... read resumed> "\1", 1) = 1
11668 15:10:30.653688 recvmsg(5,  <unfinished ...>
11666 15:10:30.653700 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11668 15:10:30.653722 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11668 15:10:30.653739 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11668 15:10:30.653755 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11668 15:10:30.653770 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11668 15:10:30.653785 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11668 15:10:30.653814 alarm(300)        = 300
11668 15:10:30.653833 write(0, "150 Ok to send data.\r\n", 22) = 22
11668 15:10:30.653980 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d70000
11668 15:10:30.654016 mprotect(0xb7d82000, 4096, PROT_NONE) = 0
11668 15:10:30.654037 mprotect(0xb7d70000, 4096, PROT_NONE) = 0
11668 15:10:30.654056 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11668 15:10:30.654081 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11668 15:10:30.654111 read(6, "", 65536) = 0
11668 15:10:30.654130 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11668 15:10:30.654156 alarm(300)        = 300
11668 15:10:30.654174 close(6)          = 0
11668 15:10:30.654190 alarm(0)          = 300
11668 15:10:30.654207 gettimeofday({1495653030, 654214}, NULL) = 0
11668 15:10:30.654239 getpid()          = 11668
11668 15:10:30.654261 gettimeofday({1495653030, 654268}, NULL) = 0
11668 15:10:30.654298 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf7fd994) = 0
11668 15:10:30.654327 write(3, "Wed May 24 15:10:30 2017 [pid 11668] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile26\", 17 bytes, 16.10Kbyte/sec\n", 131) = 131
11668 15:10:30.654404 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf7fd99c) = 0
11668 15:10:30.654434 write(0, "226 Transfer complete.\r\n", 24) = 24
11668 15:10:30.654556 write(5, "\n", 1) = 1
11668 15:10:30.654580 read(5,  <unfinished ...>
11666 15:10:30.654593 close(6)          = 0
11666 15:10:30.654629 read(4, "\n", 1)  = 1
11666 15:10:30.654650 close(5)          = 0
11666 15:10:30.654671 write(4, "\1", 1) = 1
