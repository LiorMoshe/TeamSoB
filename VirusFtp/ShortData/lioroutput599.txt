10054 14:54:06.676122 alarm(300)        = 300
10054 14:54:06.676149 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f90000
10054 14:54:06.676175 mprotect(0xb7f92000, 4096, PROT_NONE) = 0
10054 14:54:06.676202 mprotect(0xb7f90000, 4096, PROT_NONE) = 0
10054 14:54:06.676231 recv(0, "USER msfadmin\r\n", 4096, MSG_PEEK) = 15
10054 14:54:06.676262 read(0, "USER msfadmin\r\n", 15) = 15
10054 14:54:06.676301 write(0, "331 Please specify the password.\r\n", 34) = 34
10054 14:54:06.676389 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10054 14:54:06.676421 alarm(300)        = 300
10054 14:54:06.676447 recv(0, "PASS msfadmin\r\n", 4096, MSG_PEEK) = 15
10054 14:54:06.676473 read(0, "PASS msfadmin\r\n", 15) = 15
10054 14:54:06.676501 write(5, "\1", 1) = 1
10054 14:54:06.676527 write(5, "\10\0\0\0", 4) = 4
10054 14:54:06.676553 write(5, "msfadmin", 8) = 8
10054 14:54:06.676563 write(5, "\10\0\0\0", 4) = 4
10054 14:54:06.676564 write(5, "msfadmin", 8) = 8
10054 14:54:06.676564 write(5, "\0\0\0\0", 4) = 4
10054 14:54:06.676573 write(5, "\0\0\0\0", 4) = 4
10054 14:54:06.676598 read(5,  <unfinished ...>
10053 14:54:06.676627 close(5)          = 0
10053 14:54:06.676651 read(4, "\1", 1)  = 1
10053 14:54:06.676682 read(4, "\10\0\0\0", 4) = 4
10053 14:54:06.676723 read(4, "msfadmin", 8) = 8
10053 14:54:06.676751 read(4, "\10\0\0\0", 4) = 4
10053 14:54:06.676777 read(4, "msfadmin", 8) = 8
10053 14:54:06.676827 read(4, "\0\0\0\0", 4) = 4
10053 14:54:06.676859 read(4, "\0\0\0\0", 4) = 4
10053 14:54:06.676949 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.677007 open("/etc/pam.d/ftp", O_RDONLY|O_LARGEFILE) = 5
10053 14:54:06.677039 fstat64(5, {st_mode=S_IFREG|0644, st_size=408, ...}) = 0
10053 14:54:06.677087 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f92000
10053 14:54:06.677114 read(5, "# Standard behaviour for ftpd(8).\nauth\trequired\tpam_listfile.so item=user sense=deny file=/etc/ftpusers onerr=succeed\n\n# This line is required by ftpd(8).\nauth\tsufficient\tpam_ftp.so\n\n# Uncomment this to achieve what used to be ftpd -A.\n#auth\trequired\tpam_listfile.so item=user sense=allow file=/etc/ftpchroot onerr=fail\n\n# Standard blurb.\n@include common-auth\n@include common-account\n@include common-session\n", 4096) = 408
10053 14:54:06.677227 open("/lib/security/pam_listfile.so", O_RDONLY) = 6
10053 14:54:06.677261 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\n\0\0004\0\0\0P \0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\36\0\0\24\36\0\0\5\0\0\0\0\20\0\0\1\0\0\0\24\36\0\0\24.\0\0\24.\0\0l\1\0\0p\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0(\36\0\0(.\0\0(.\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0003\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\33\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\0\0\0\0\23\0\0\0\17\0\0\0\34\0\0\0\2\0\0\0\16\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\20\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\35\0\0\0\n\0\0\0\1\0\0\0\t\0\0\0\0\0\0\0\22\0\0\0\26\0\0\0\v\0\0\0\4\0\0\0\7\0\0\0\5\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
10053 14:54:06.677464 fstat64(6, {st_mode=S_IFREG|0644, st_size=9272, ...}) = 0
10053 14:54:06.677503 mmap2(NULL, 12164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f8f000
10053 14:54:06.677530 mmap2(0xb7f91000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1) = 0xb7f91000
10053 14:54:06.677563 close(6)          = 0
10053 14:54:06.677640 open("/lib/security/pam_ftp.so", O_RDONLY) = 6
10053 14:54:06.677671 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\5\0\0004\0\0\0\264\f\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\n\0\0\240\n\0\0\5\0\0\0\0\20\0\0\1\0\0\0\240\n\0\0\240\32\0\0\240\32\0\0<\1\0\0@\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274\n\0\0\274\32\0\0\274\32\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\30\0\0\0\16\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\4\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\6\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\10\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\f\0\0\0\1\0\0\0\5\0\0\0\1H@\0\f\0\0\0\r\0\0\0\301\225Y\346\313\306\36\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\354\2\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0c\0\0\0\0\0\0\0;\0\0\0\22\0\0\0\225\0\0\0\0\0\0\0.\3\0\0\22\0\0\0y\0\0\0\0\0\0\0\343\0\0\0\22\0\0\0\216\0\0\0\0\0\0\0\22\1\0\0\22\0\0\0n\0\0\0\0\0\0\0", 512) = 512
10053 14:54:06.677895 fstat64(6, {st_mode=S_IFREG|0644, st_size=4292, ...}) = 0
10053 14:54:06.677938 mmap2(NULL, 7136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f8d000
10053 14:54:06.677965 mmap2(0xb7f8e000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0) = 0xb7f8e000
10053 14:54:06.677995 close(6)          = 0
10053 14:54:06.678045 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.678091 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.678121 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
10053 14:54:06.678158 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.678183 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
10053 14:54:06.678302 open("/lib/security/pam_unix.so", O_RDONLY) = 7
10053 14:54:06.678332 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
10053 14:54:06.678531 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
10053 14:54:06.678570 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dc2000
10053 14:54:06.678597 mmap2(0xb7dcd000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7dcd000
10053 14:54:06.678631 mmap2(0xb7dce000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7dce000
10053 14:54:06.678656 close(7)          = 0
10053 14:54:06.678685 open("/etc/ld.so.cache", O_RDONLY) = 7
10053 14:54:06.678712 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10053 14:54:06.678770 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7dba000
10053 14:54:06.678796 close(7)          = 0
10053 14:54:06.678821 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10053 14:54:06.678858 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
10053 14:54:06.678892 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
10053 14:54:06.679097 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
10053 14:54:06.679140 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d88000
10053 14:54:06.679166 mmap2(0xb7d91000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d91000
10053 14:54:06.679200 mmap2(0xb7d93000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d93000
10053 14:54:06.679242 close(7)          = 0
10053 14:54:06.679271 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10053 14:54:06.679304 open("/lib/libselinux.so.1", O_RDONLY) = 7
10053 14:54:06.679332 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
10053 14:54:06.679534 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
10053 14:54:06.679573 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d6f000
10053 14:54:06.679599 mmap2(0xb7d86000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d86000
10053 14:54:06.679636 close(7)          = 0
10053 14:54:06.679875 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10053 14:54:06.679937 statfs64("/selinux", 84, 0xbfd13fac) = -1 ENOENT (No such file or directory)
10053 14:54:06.679967 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
10053 14:54:06.680018 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
10053 14:54:06.680057 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8b000
10053 14:54:06.680084 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
10053 14:54:06.680209 read(7, "", 1024) = 0
10053 14:54:06.680210 close(7)          = 0
10053 14:54:06.680210 munmap(0xb7f8b000, 4096) = 0
10053 14:54:06.680235 munmap(0xb7dba000, 29913) = 0
10053 14:54:06.680268 read(6, "", 4096) = 0
10053 14:54:06.680294 close(6)          = 0
10053 14:54:06.680315 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.680340 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.680386 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.680449 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10053 14:54:06.680488 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.680513 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10053 14:54:06.680617 read(6, "", 4096) = 0
10053 14:54:06.680641 close(6)          = 0
10053 14:54:06.680663 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.680688 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.680731 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.680761 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10053 14:54:06.680798 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.680822 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10053 14:54:06.680912 read(6, "", 4096) = 0
10053 14:54:06.680934 close(6)          = 0
10053 14:54:06.680955 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.680978 read(5, "", 4096) = 0
10053 14:54:06.681000 close(5)          = 0
10053 14:54:06.681020 munmap(0xb7f92000, 4096) = 0
10053 14:54:06.681044 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
10053 14:54:06.681073 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
10053 14:54:06.681111 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f92000
10053 14:54:06.681134 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
10053 14:54:06.681238 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.681280 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.681309 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
10053 14:54:06.681346 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.681369 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
10053 14:54:06.681500 read(6, "", 4096) = 0
10053 14:54:06.681524 close(6)          = 0
10053 14:54:06.681546 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.681571 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.681614 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.681644 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10053 14:54:06.681680 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.681704 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10053 14:54:06.681801 read(6, "", 4096) = 0
10053 14:54:06.681824 close(6)          = 0
10053 14:54:06.681845 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.681869 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.681911 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.681940 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
10053 14:54:06.681976 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.682000 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
10053 14:54:06.682268 read(6, "", 4096) = 0
10053 14:54:06.682290 close(6)          = 0
10053 14:54:06.682311 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.682335 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10053 14:54:06.682406 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10053 14:54:06.682437 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10053 14:54:06.682474 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
10053 14:54:06.682498 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10053 14:54:06.682587 read(6, "", 4096) = 0
10053 14:54:06.682610 close(6)          = 0
10053 14:54:06.682631 munmap(0xb7f8c000, 4096) = 0
10053 14:54:06.682655 read(5, "", 4096) = 0
10053 14:54:06.682676 close(5)          = 0
10053 14:54:06.682697 munmap(0xb7f92000, 4096) = 0
10053 14:54:06.682726 time(NULL)        = 1495652046
10053 14:54:06.682752 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10053 14:54:06.682794 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
10053 14:54:06.682820 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10053 14:54:06.682857 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f92000
10053 14:54:06.682880 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
10053 14:54:06.682929 read(5, "", 4096) = 0
10053 14:54:06.682950 close(5)          = 0
10053 14:54:06.682978 munmap(0xb7f92000, 4096) = 0
10053 14:54:06.683013 getuid32()        = 0
10053 14:54:06.683051 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.683084 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.683108 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10053 14:54:06.683145 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.683170 _llseek(5, 1624, [1624], SEEK_SET) = 0
10053 14:54:06.683213 munmap(0xb7f92000, 1624) = 0
10053 14:54:06.683238 close(5)          = 0
10053 14:54:06.683292 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.683356 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.683382 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10053 14:54:06.683419 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.683444 _llseek(5, 1233, [1233], SEEK_SET) = 0
10053 14:54:06.683489 munmap(0xb7f92000, 1233) = 0
10053 14:54:06.683512 close(5)          = 0
10053 14:54:06.683556 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.683586 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.683609 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10053 14:54:06.683645 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.683670 _llseek(5, 1624, [1624], SEEK_SET) = 0
10053 14:54:06.683706 munmap(0xb7f92000, 1624) = 0
10053 14:54:06.683728 close(5)          = 0
10053 14:54:06.683756 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.683785 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.683808 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10053 14:54:06.683844 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.683868 _llseek(5, 1233, [1233], SEEK_SET) = 0
10053 14:54:06.683905 munmap(0xb7f92000, 1233) = 0
10053 14:54:06.683927 close(5)          = 0
10053 14:54:06.684486 getuid32()        = 0
10053 14:54:06.684517 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.684548 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.684571 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10053 14:54:06.684608 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.684633 _llseek(5, 1624, [1624], SEEK_SET) = 0
10053 14:54:06.684669 munmap(0xb7f92000, 1624) = 0
10053 14:54:06.684691 close(5)          = 0
10053 14:54:06.684720 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.684749 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.684772 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10053 14:54:06.684809 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.684833 _llseek(5, 1233, [1233], SEEK_SET) = 0
10053 14:54:06.684870 munmap(0xb7f92000, 1233) = 0
10053 14:54:06.684892 close(5)          = 0
10053 14:54:06.684918 time(NULL)        = 1495652046
10053 14:54:06.684952 munmap(0xb7f8f000, 12164) = 0
10053 14:54:06.684982 munmap(0xb7f8d000, 7136) = 0
10053 14:54:06.685013 munmap(0xb7dc2000, 95428) = 0
10053 14:54:06.685038 munmap(0xb7d88000, 201052) = 0
10053 14:54:06.685063 munmap(0xb7d6f000, 101180) = 0
10053 14:54:06.685100 gettimeofday({1495652046, 685109}, NULL) = 0
10053 14:54:06.685126 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfd15e84) = -1 ENOENT (No such file or directory)
10053 14:54:06.685160 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
10053 14:54:06.685217 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd15fd4) = 0
10053 14:54:06.685275 write(3, "Wed May 24 14:54:06 2017 [pid 10053] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
10053 14:54:06.685320 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfd15fdc) = 0
10053 14:54:06.685351 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10053 14:54:06.685384 write(4, "\1", 1 <unfinished ...>
10054 14:54:06.685406 <... read resumed> "\1", 1) = 1
10053 14:54:06.685418 <... write resumed> ) = 1
10054 14:54:06.685435 exit_group(0)     = ?
10053 14:54:06.685503 --- SIGCHLD (Child exited) @ 0 (0) ---
10053 14:54:06.685520 sigreturn()       = ? (mask now [])
10053 14:54:06.685572 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10054
10053 14:54:06.685601 close(4)          = 0
10053 14:54:06.685628 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
10053 14:54:06.685659 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10053 14:54:06.685690 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10053 14:54:06.685721 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7df86f8) = 10055
10055 14:54:06.685838 prctl(0x1, 0x9, 0, 0, 0) = 0
10055 14:54:06.685869 close(4)          = 0
10055 14:54:06.685931 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10055 14:54:06.685969 _llseek(4, 0, [0], SEEK_CUR) = 0
10055 14:54:06.686003 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10055 14:54:06.686045 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f92000
10055 14:54:06.686071 _llseek(4, 1624, [1624], SEEK_SET) = 0
10055 14:54:06.686123 munmap(0xb7f92000, 1624) = 0
10055 14:54:06.686149 close(4)          = 0
10055 14:54:06.686180 getuid32()        = 0
10055 14:54:06.686202 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10055 14:54:06.686371 _llseek(4, 0, [0], SEEK_CUR) = 0
10055 14:54:06.686397 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10055 14:54:06.686434 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f92000
10055 14:54:06.686459 _llseek(4, 1624, [1624], SEEK_SET) = 0
10055 14:54:06.686496 munmap(0xb7f92000, 1624) = 0
10055 14:54:06.686519 close(4)          = 0
10055 14:54:06.686579 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
10055 14:54:06.686624 read(4, "65536\n", 31) = 6
10055 14:54:06.686653 close(4)          = 0
10055 14:54:06.686685 socket(PF_FILE, SOCK_STREAM, 0) = 4
10055 14:54:06.686712 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10055 14:54:06.686737 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10055 14:54:06.686784 close(4)          = 0
10055 14:54:06.686810 socket(PF_FILE, SOCK_STREAM, 0) = 4
10055 14:54:06.687377 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10055 14:54:06.687409 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10055 14:54:06.687454 close(4)          = 0
10055 14:54:06.687511 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
10055 14:54:06.687544 _llseek(4, 0, [0], SEEK_CUR) = 0
10055 14:54:06.687568 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10055 14:54:06.687606 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f92000
10055 14:54:06.687631 _llseek(4, 886, [886], SEEK_SET) = 0
10055 14:54:06.687688 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10055 14:54:06.687727 munmap(0xb7f92000, 886) = 0
10055 14:54:06.687751 close(4)          = 0
10055 14:54:06.687773 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
10055 14:54:06.687841 geteuid32()       = 0
10055 14:54:06.687869 getegid32()       = 0
10055 14:54:06.687892 setregid32(-1, 1000) = 0
10055 14:54:06.687916 setreuid32(-1, 1000) = 0
10055 14:54:06.687940 chdir("/home/msfadmin") = 0
10055 14:54:06.687967 setreuid32(-1, 0) = 0
10055 14:54:06.687988 setregid32(-1, 0) = 0
10055 14:54:06.688011 setgid32(1000)    = 0
10055 14:54:06.688034 setuid32(1000)    = 0
10055 14:54:06.688057 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
10055 14:54:06.688087 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f90000
10055 14:54:06.688113 mprotect(0xb7f92000, 4096, PROT_NONE) = 0
10055 14:54:06.688139 mprotect(0xb7f90000, 4096, PROT_NONE) = 0
10055 14:54:06.688165 getcwd("/home/msfadmin", 4096) = 15
10055 14:54:06.688195 umask(022)        = 077
10055 14:54:06.688217 getcwd("/home/msfadmin", 4096) = 15
10055 14:54:06.688248 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10055 14:54:06.688299 write(0, "230 Login successful.\r\n", 23) = 23
10055 14:54:06.688480 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10055 14:54:06.688528 alarm(300)        = 0
10055 14:54:06.688553 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8d000
10055 14:54:06.688579 mprotect(0xb7f8f000, 4096, PROT_NONE) = 0
10055 14:54:06.688604 mprotect(0xb7f8d000, 4096, PROT_NONE) = 0
10055 14:54:06.688634 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
10055 14:54:06.688663 read(0, "TYPE I\r\n", 8) = 8
10055 14:54:06.688701 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
10055 14:54:06.688835 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10055 14:54:06.688872 alarm(300)        = 300
10055 14:54:06.688898 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
10055 14:54:06.688923 read(0, "PASV\r\n", 6) = 6
10055 14:54:06.688951 write(5, "\n", 1) = 1
10055 14:54:06.688976 read(5,  <unfinished ...>
10053 14:54:06.689006 close(5)          = 0
10053 14:54:06.689034 getuid32()        = 0
10053 14:54:06.689067 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10053 14:54:06.689100 _llseek(5, 0, [0], SEEK_CUR) = 0
10053 14:54:06.689128 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10053 14:54:06.689169 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f92000
10053 14:54:06.689195 _llseek(5, 1624, [1624], SEEK_SET) = 0
10053 14:54:06.689235 munmap(0xb7f92000, 1624) = 0
10053 14:54:06.689261 close(5)          = 0
10053 14:54:06.689297 setgroups32(0, []) = 0
10053 14:54:06.689323 chdir("/usr/share/empty") = 0
10053 14:54:06.689351 chroot(".")       = 0
10053 14:54:06.689375 capset(NULL, NULL) = -1 EFAULT (Bad address)
10053 14:54:06.689405 prctl(0x8, 0, 0xbfd15fb8, 0x80549a6, 0xbfd15fa0) = 0
10053 14:54:06.689430 prctl(0x8, 0x1, 0xbfd15fb8, 0x8054a49, 0xbfd15fa0) = 0
10053 14:54:06.689454 setgid32(65534)   = 0
10053 14:54:06.689476 setuid32(65534)   = 0
10053 14:54:06.689498 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
10053 14:54:06.689526 read(4, "\n", 1)  = 1
10053 14:54:06.689556 write(4, "\1", 1) = 1
10055 14:54:06.689581 <... read resumed> "\1", 1) = 1
10055 14:54:06.689598 write(5, "\f", 1) = 1
10055 14:54:06.689621 read(5,  <unfinished ...>
10053 14:54:06.689637 read(4, "\f", 1)  = 1
10053 14:54:06.689665 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
10053 14:54:06.689695 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10053 14:54:06.689741 gettimeofday({1495652046, 689755}, NULL) = 0
10053 14:54:06.689786 bind(5, {sa_family=AF_INET, sin_port=htons(16765), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
10053 14:54:06.689822 listen(5, 1)      = 0
10053 14:54:06.689852 write(4, "}A\0\0", 4) = 4
10055 14:54:06.689877 <... read resumed> "}A\0\0", 4) = 4
10055 14:54:06.689910 write(0, "227 Entering Passive Mode (127,0,0,1,65,125).\r\n", 47) = 47
10055 14:54:06.690136 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10055 14:54:06.690175 alarm(300)        = 300
10055 14:54:06.690201 recv(0, "STOR myfile39\r\n", 4096, MSG_PEEK) = 15
10055 14:54:06.690225 read(0, "STOR myfile39\r\n", 15) = 15
10055 14:54:06.690225 write(5, "\v", 1) = 1
10055 14:54:06.690226 read(5,  <unfinished ...>
10053 14:54:06.690226 read(4, "\v", 1)  = 1
10053 14:54:06.690226 write(4, "\1\0\0\0", 4) = 4
10055 14:54:06.690241 <... read resumed> "\1\0\0\0", 4) = 4
10055 14:54:06.690261 gettimeofday({1495652046, 690269}, NULL) = 0
