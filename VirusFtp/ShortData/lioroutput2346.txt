14742 15:41:41.281392 close(6)          = 0
14742 15:41:41.281457 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.281495 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14742 15:41:41.281544 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14742 15:41:41.281579 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14742 15:41:41.281619 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
14742 15:41:41.281646 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14742 15:41:41.281745 read(6, "", 4096) = 0
14742 15:41:41.281810 close(6)          = 0
14742 15:41:41.281855 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.281884 read(5, "", 4096) = 0
14742 15:41:41.281908 close(5)          = 0
14742 15:41:41.281930 munmap(0xb7fa8000, 4096) = 0
14742 15:41:41.281956 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14742 15:41:41.281990 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14742 15:41:41.282031 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa8000
14742 15:41:41.282057 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14742 15:41:41.282213 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14742 15:41:41.282326 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14742 15:41:41.282368 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14742 15:41:41.282408 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
14742 15:41:41.282436 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14742 15:41:41.282556 read(6, "", 4096) = 0
14742 15:41:41.282581 close(6)          = 0
14742 15:41:41.282605 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.282633 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14742 15:41:41.282679 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14742 15:41:41.282711 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14742 15:41:41.282750 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
14742 15:41:41.282775 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14742 15:41:41.282932 read(6, "", 4096) = 0
14742 15:41:41.282961 close(6)          = 0
14742 15:41:41.282984 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.283012 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14742 15:41:41.283059 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14742 15:41:41.283091 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14742 15:41:41.283131 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
14742 15:41:41.283157 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14742 15:41:41.283515 read(6, "", 4096) = 0
14742 15:41:41.283545 close(6)          = 0
14742 15:41:41.283569 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.283597 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14742 15:41:41.283625 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14742 15:41:41.283625 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14742 15:41:41.283626 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa2000
14742 15:41:41.283648 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14742 15:41:41.283747 read(6, "", 4096) = 0
14742 15:41:41.283772 close(6)          = 0
14742 15:41:41.283796 munmap(0xb7fa2000, 4096) = 0
14742 15:41:41.283822 read(5, "", 4096) = 0
14742 15:41:41.283845 close(5)          = 0
14742 15:41:41.283867 munmap(0xb7fa8000, 4096) = 0
14742 15:41:41.283902 time(NULL)        = 1495654901
14742 15:41:41.283931 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14742 15:41:41.284003 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14742 15:41:41.284034 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14742 15:41:41.284074 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa8000
14742 15:41:41.284101 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14742 15:41:41.284164 read(5, "", 4096) = 0
14742 15:41:41.284226 close(5)          = 0
14742 15:41:41.284251 munmap(0xb7fa8000, 4096) = 0
14742 15:41:41.284294 getuid32()        = 0
14742 15:41:41.284383 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.284426 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.284454 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14742 15:41:41.284495 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.284523 _llseek(5, 1624, [1624], SEEK_SET) = 0
14742 15:41:41.284572 munmap(0xb7fa8000, 1624) = 0
14742 15:41:41.284600 close(5)          = 0
14742 15:41:41.284664 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.284707 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.284733 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14742 15:41:41.284773 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.284800 _llseek(5, 1233, [1233], SEEK_SET) = 0
14742 15:41:41.284848 munmap(0xb7fa8000, 1233) = 0
14742 15:41:41.285074 close(5)          = 0
14742 15:41:41.285153 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.285191 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.285217 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14742 15:41:41.285257 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.285284 _llseek(5, 1624, [1624], SEEK_SET) = 0
14742 15:41:41.285325 munmap(0xb7fa8000, 1624) = 0
14742 15:41:41.285350 close(5)          = 0
14742 15:41:41.285393 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.285429 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.285454 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14742 15:41:41.285494 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.285520 _llseek(5, 1233, [1233], SEEK_SET) = 0
14742 15:41:41.285562 munmap(0xb7fa8000, 1233) = 0
14742 15:41:41.285586 close(5)          = 0
14742 15:41:41.286255 getuid32()        = 0
14742 15:41:41.286296 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.286332 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.286358 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14742 15:41:41.286399 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.286426 _llseek(5, 1624, [1624], SEEK_SET) = 0
14742 15:41:41.286468 munmap(0xb7fa8000, 1624) = 0
14742 15:41:41.286494 close(5)          = 0
14742 15:41:41.286528 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.286561 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.286587 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14742 15:41:41.286627 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.286652 _llseek(5, 1233, [1233], SEEK_SET) = 0
14742 15:41:41.286694 munmap(0xb7fa8000, 1233) = 0
14742 15:41:41.286718 close(5)          = 0
14742 15:41:41.286747 time(NULL)        = 1495654901
14742 15:41:41.286787 munmap(0xb7fa5000, 12164) = 0
14742 15:41:41.286822 munmap(0xb7fa3000, 7136) = 0
14742 15:41:41.286858 munmap(0xb7dd8000, 95428) = 0
14742 15:41:41.286886 munmap(0xb7d9e000, 201052) = 0
14742 15:41:41.286914 munmap(0xb7d85000, 101180) = 0
14742 15:41:41.286957 gettimeofday({1495654901, 286967}, NULL) = 0
14742 15:41:41.287013 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfc4bdb4) = -1 ENOENT (No such file or directory)
14742 15:41:41.287055 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14742 15:41:41.287125 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc4bf04) = 0
14742 15:41:41.287167 write(3, "Wed May 24 15:41:41 2017 [pid 14742] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14742 15:41:41.287211 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc4bf0c) = 0
14742 15:41:41.287243 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14742 15:41:41.287291 write(4, "\1", 1 <unfinished ...>
14743 15:41:41.287320 <... read resumed> "\1", 1) = 1
14742 15:41:41.287333 <... write resumed> ) = 1
14743 15:41:41.287353 exit_group(0)     = ?
14742 15:41:41.287438 --- SIGCHLD (Child exited) @ 0 (0) ---
14742 15:41:41.287464 sigreturn()       = ? (mask now [])
14742 15:41:41.287510 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14743
14742 15:41:41.287543 close(4)          = 0
14742 15:41:41.287573 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14742 15:41:41.287607 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14742 15:41:41.287641 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14742 15:41:41.287676 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e0e6f8) = 14744
14744 15:41:41.287805 prctl(0x1, 0x9, 0, 0, 0) = 0
14744 15:41:41.287840 close(4)          = 0
14744 15:41:41.287913 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14744 15:41:41.287987 _llseek(4, 0, [0], SEEK_CUR) = 0
14744 15:41:41.288032 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14744 15:41:41.288078 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa8000
14744 15:41:41.288107 _llseek(4, 1624, [1624], SEEK_SET) = 0
14744 15:41:41.288164 munmap(0xb7fa8000, 1624) = 0
14744 15:41:41.288193 close(4)          = 0
14744 15:41:41.288227 getuid32()        = 0
14744 15:41:41.288253 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14744 15:41:41.288285 _llseek(4, 0, [0], SEEK_CUR) = 0
14744 15:41:41.288311 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14744 15:41:41.288353 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa8000
14744 15:41:41.288442 _llseek(4, 1624, [1624], SEEK_SET) = 0
14744 15:41:41.288485 munmap(0xb7fa8000, 1624) = 0
14744 15:41:41.288511 close(4)          = 0
14744 15:41:41.288579 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14744 15:41:41.288630 read(4, "65536\n", 31) = 6
14744 15:41:41.288662 close(4)          = 0
14744 15:41:41.288697 socket(PF_FILE, SOCK_STREAM, 0) = 4
14744 15:41:41.288728 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14744 15:41:41.288755 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14744 15:41:41.288808 close(4)          = 0
14744 15:41:41.288945 socket(PF_FILE, SOCK_STREAM, 0) = 4
14744 15:41:41.288978 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14744 15:41:41.289005 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14744 15:41:41.289053 close(4)          = 0
14744 15:41:41.289116 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14744 15:41:41.289153 _llseek(4, 0, [0], SEEK_CUR) = 0
14744 15:41:41.289237 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14744 15:41:41.289306 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fa8000
14744 15:41:41.289348 _llseek(4, 886, [886], SEEK_SET) = 0
14744 15:41:41.289442 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14744 15:41:41.289507 munmap(0xb7fa8000, 886) = 0
14744 15:41:41.289542 close(4)          = 0
14744 15:41:41.289576 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14744 15:41:41.289634 geteuid32()       = 0
14744 15:41:41.289675 getegid32()       = 0
14744 15:41:41.289700 setregid32(-1, 1000) = 0
14744 15:41:41.289701 setreuid32(-1, 1000) = 0
14744 15:41:41.289701 chdir("/home/msfadmin") = 0
14744 15:41:41.289720 setreuid32(-1, 0) = 0
14744 15:41:41.289740 setregid32(-1, 0) = 0
14744 15:41:41.289762 setgid32(1000)    = 0
14744 15:41:41.289783 setuid32(1000)    = 0
14744 15:41:41.289804 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14744 15:41:41.289834 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa6000
14744 15:41:41.289860 mprotect(0xb7fa8000, 4096, PROT_NONE) = 0
14744 15:41:41.289886 mprotect(0xb7fa6000, 4096, PROT_NONE) = 0
14744 15:41:41.289910 getcwd("/home/msfadmin", 4096) = 15
14744 15:41:41.289939 umask(022)        = 077
14744 15:41:41.289970 getcwd("/home/msfadmin", 4096) = 15
14744 15:41:41.290000 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14744 15:41:41.290059 write(0, "230 Login successful.\r\n", 23) = 23
14744 15:41:41.290252 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.290286 alarm(300)        = 0
14744 15:41:41.290308 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fa3000
14744 15:41:41.290331 mprotect(0xb7fa5000, 4096, PROT_NONE) = 0
14744 15:41:41.290353 mprotect(0xb7fa3000, 4096, PROT_NONE) = 0
14744 15:41:41.290380 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
14744 15:41:41.290405 read(0, "TYPE I\r\n", 8) = 8
14744 15:41:41.290438 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
14744 15:41:41.290593 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.290653 alarm(300)        = 300
14744 15:41:41.290692 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
14744 15:41:41.290731 read(0, "PASV\r\n", 6) = 6
14744 15:41:41.290769 write(5, "\n", 1) = 1
14744 15:41:41.290802 read(5,  <unfinished ...>
14742 15:41:41.290842 close(5)          = 0
14742 15:41:41.290883 getuid32()        = 0
14742 15:41:41.290927 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14742 15:41:41.290975 _llseek(5, 0, [0], SEEK_CUR) = 0
14742 15:41:41.291024 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14742 15:41:41.291072 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fa8000
14742 15:41:41.291104 _llseek(5, 1624, [1624], SEEK_SET) = 0
14742 15:41:41.291152 munmap(0xb7fa8000, 1624) = 0
14742 15:41:41.291183 close(5)          = 0
14742 15:41:41.291227 setgroups32(0, []) = 0
14742 15:41:41.291257 chdir("/usr/share/empty") = 0
14742 15:41:41.291291 chroot(".")       = 0
14742 15:41:41.291320 capset(NULL, NULL) = -1 EFAULT (Bad address)
14742 15:41:41.291356 prctl(0x8, 0, 0xbfc4bee8, 0x80549a6, 0xbfc4bed0) = 0
14742 15:41:41.291384 prctl(0x8, 0x1, 0xbfc4bee8, 0x8054a49, 0xbfc4bed0) = 0
14742 15:41:41.291410 setgid32(65534)   = 0
14742 15:41:41.291434 setuid32(65534)   = 0
14742 15:41:41.291457 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14742 15:41:41.291565 read(4, "\n", 1)  = 1
14742 15:41:41.291608 write(4, "\1", 1) = 1
14744 15:41:41.291638 <... read resumed> "\1", 1) = 1
14744 15:41:41.291657 write(5, "\f", 1) = 1
14744 15:41:41.291673 read(5,  <unfinished ...>
14742 15:41:41.291685 read(4, "\f", 1)  = 1
14742 15:41:41.291707 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
14742 15:41:41.291731 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
14742 15:41:41.291751 gettimeofday({1495654901, 291756}, NULL) = 0
14742 15:41:41.291777 bind(5, {sa_family=AF_INET, sin_port=htons(10403), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
14742 15:41:41.291804 listen(5, 1)      = 0
14742 15:41:41.291825 write(4, "\243(\0\0", 4) = 4
14744 15:41:41.291843 <... read resumed> "\243(\0\0", 4) = 4
14744 15:41:41.291867 write(0, "227 Entering Passive Mode (127,0,0,1,40,163).\r\n", 47) = 47
14744 15:41:41.292072 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.292099 alarm(300)        = 300
14744 15:41:41.292116 recv(0, "STOR myfile13\r\n", 4096, MSG_PEEK) = 15
14744 15:41:41.292134 read(0, "STOR myfile13\r\n", 15) = 15
14744 15:41:41.292156 write(5, "\v", 1) = 1
14744 15:41:41.292172 read(5,  <unfinished ...>
14742 15:41:41.292182 read(4, "\v", 1)  = 1
14742 15:41:41.292198 write(4, "\1\0\0\0", 4) = 4
14744 15:41:41.292213 <... read resumed> "\1\0\0\0", 4) = 4
14744 15:41:41.292226 gettimeofday({1495654901, 292231}, NULL) = 0
14744 15:41:41.292242 getcwd("/home/msfadmin", 4096) = 15
14744 15:41:41.292260 open("myfile13", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
14744 15:41:41.292280 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
14744 15:41:41.292305 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
14744 15:41:41.292322 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
14744 15:41:41.292336 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc4be34) = 0
14744 15:41:41.292369 ftruncate64(4, 0) = 0
14744 15:41:41.292398 _llseek(4, 0, [0], SEEK_SET) = 0
14744 15:41:41.292414 write(5, "\v", 1) = 1
14744 15:41:41.292429 read(5,  <unfinished ...>
14742 15:41:41.292462 read(4, "\v", 1)  = 1
14742 15:41:41.292483 write(4, "\1\0\0\0", 4) = 4
14744 15:41:41.292498 <... read resumed> "\1\0\0\0", 4) = 4
14744 15:41:41.292509 write(5, "\v", 1) = 1
14744 15:41:41.292523 read(5,  <unfinished ...>
14742 15:41:41.292533 read(4, "\v", 1)  = 1
14742 15:41:41.292548 write(4, "\1\0\0\0", 4) = 4
14744 15:41:41.292562 <... read resumed> "\1\0\0\0", 4) = 4
14744 15:41:41.292573 write(5, "\r", 1) = 1
14744 15:41:41.292592 read(5,  <unfinished ...>
14742 15:41:41.292605 read(4, "\r", 1)  = 1
14742 15:41:41.292624 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
14742 15:41:41.292650 accept(5, {sa_family=AF_INET, sin_port=htons(52458), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
14742 15:41:41.292682 write(4, "\1", 1) = 1
14744 15:41:41.292698 <... read resumed> "\1", 1) = 1
14744 15:41:41.292712 recvmsg(5,  <unfinished ...>
14742 15:41:41.292725 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14744 15:41:41.292750 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14744 15:41:41.292769 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
14744 15:41:41.292787 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
14744 15:41:41.292804 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
14744 15:41:41.292820 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.292840 alarm(300)        = 300
14744 15:41:41.292859 write(0, "150 Ok to send data.\r\n", 22) = 22
14744 15:41:41.292970 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ddd000
14744 15:41:41.292991 mprotect(0xb7def000, 4096, PROT_NONE) = 0
14744 15:41:41.293010 mprotect(0xb7ddd000, 4096, PROT_NONE) = 0
14744 15:41:41.293025 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
14744 15:41:41.293045 write(4, "assasaaa\na\na\na\na\n", 17) = 17
14744 15:41:41.293070 read(6, "", 65536) = 0
14744 15:41:41.293085 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.293104 alarm(300)        = 300
14744 15:41:41.293118 close(6)          = 0
14744 15:41:41.293131 alarm(0)          = 300
14744 15:41:41.293146 gettimeofday({1495654901, 293152}, NULL) = 0
14744 15:41:41.293175 getpid()          = 14744
14744 15:41:41.293193 gettimeofday({1495654901, 293198}, NULL) = 0
14744 15:41:41.293219 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc4bdd4) = 0
14744 15:41:41.293241 write(3, "Wed May 24 15:41:41 2017 [pid 14744] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile13\", 17 bytes, 17.17Kbyte/sec\n", 131) = 131
14744 15:41:41.293270 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc4bddc) = 0
14744 15:41:41.293290 write(0, "226 Transfer complete.\r\n", 24) = 24
14744 15:41:41.293353 write(5, "\n", 1) = 1
14744 15:41:41.293370 read(5,  <unfinished ...>
14742 15:41:41.293380 close(6)          = 0
14742 15:41:41.293461 read(4, "\n", 1)  = 1
14742 15:41:41.293489 close(5)          = 0
14742 15:41:41.293507 write(4, "\1", 1) = 1
14744 15:41:41.293523 <... read resumed> "\1", 1) = 1
14744 15:41:41.293533 close(4)          = 0
14744 15:41:41.293550 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14744 15:41:41.293569 alarm(300)        = 0
14744 15:41:41.293585 recv(0,  <unfinished ...>
14742 15:41:41.293597 read(4,  <unfinished ...>
4439  15:41:41.438239 <... select resumed> ) = 1 (in [5])
4439  15:41:41.438346 accept(5, {sa_family=AF_INET, sin_port=htons(37763), sin_addr=inet_addr("10.0.2.8")}, [16]) = 13
4439  15:41:41.438489 time(NULL)        = 1495654901
4439  15:41:41.438533 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 14745
14745 15:41:41.438720 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
14745 15:41:41.438743 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
14745 15:41:41.438759 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
14745 15:41:41.438775 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
14745 15:41:41.438795 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
14745 15:41:41.438812 close(3)          = 0
14745 15:41:41.438825 close(4)          = 0
14745 15:41:41.438838 open("/dev/null", O_RDONLY) = 3
14745 15:41:41.438859 dup2(3, 0)        = 0
14745 15:41:41.438872 dup2(3, 1)        = 1
14745 15:41:41.438884 dup2(3, 2)        = 2
14745 15:41:41.438895 close(3)          = 0
14745 15:41:41.438911 setgid32(0)       = 0
14745 15:41:41.438928 setgroups32(0, []) = 0
14745 15:41:41.438942 setuid32(0)       = 0
14745 15:41:41.438957 getpriority(PRIO_PROCESS, 0) = 20
14745 15:41:41.438970 setpriority(PRIO_PROCESS, 0, 10) = 0
14745 15:41:41.438983 getpriority(PRIO_PROCESS, 0) = 10
14745 15:41:41.439033 getpeername(13, {sa_family=AF_INET, sin_port=htons(37763), sin_addr=inet_addr("10.0.2.8")}, [16]) = 0
14745 15:41:41.439064 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("10.0.2.11")}, [16]) = 0
14745 15:41:41.439138 open("/etc/hosts.allow", O_RDONLY) = 3
14745 15:41:41.439182 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
14745 15:41:41.439220 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
14745 15:41:41.439238 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
14745 15:41:41.439336 close(3)          = 0
14745 15:41:41.439351 munmap(0xb7f61000, 4096) = 0
