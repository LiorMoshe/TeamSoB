11847 15:12:25.192207 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.192229 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11847 15:12:25.192288 read(6, "", 4096) = 0
11847 15:12:25.192302 close(6)          = 0
11847 15:12:25.192316 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.192331 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11847 15:12:25.192358 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11847 15:12:25.192380 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11847 15:12:25.192408 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.192424 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11847 15:12:25.192481 read(6, "", 4096) = 0
11847 15:12:25.192495 close(6)          = 0
11847 15:12:25.192508 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.192523 read(5, "", 4096) = 0
11847 15:12:25.192537 close(5)          = 0
11847 15:12:25.192550 munmap(0xb7fb5000, 4096) = 0
11847 15:12:25.192565 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11847 15:12:25.192584 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11847 15:12:25.192607 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fb5000
11847 15:12:25.192622 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11847 15:12:25.192687 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11847 15:12:25.192729 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11847 15:12:25.192748 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11847 15:12:25.192771 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.192789 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11847 15:12:25.192865 read(6, "", 4096) = 0
11847 15:12:25.192880 close(6)          = 0
11847 15:12:25.192894 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.192910 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11847 15:12:25.192936 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11847 15:12:25.192955 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11847 15:12:25.192978 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.192993 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11847 15:12:25.193055 read(6, "", 4096) = 0
11847 15:12:25.193070 close(6)          = 0
11847 15:12:25.193083 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.193098 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11847 15:12:25.193125 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11847 15:12:25.193144 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11847 15:12:25.193166 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.193181 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11847 15:12:25.193351 read(6, "", 4096) = 0
11847 15:12:25.193366 close(6)          = 0
11847 15:12:25.193379 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.193395 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11847 15:12:25.193421 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11847 15:12:25.193439 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11847 15:12:25.193463 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7faf000
11847 15:12:25.193477 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11847 15:12:25.193532 read(6, "", 4096) = 0
11847 15:12:25.193553 close(6)          = 0
11847 15:12:25.193567 munmap(0xb7faf000, 4096) = 0
11847 15:12:25.193582 read(5, "", 4096) = 0
11847 15:12:25.193596 close(5)          = 0
11847 15:12:25.193609 munmap(0xb7fb5000, 4096) = 0
11847 15:12:25.193628 time(NULL)        = 1495653145
11847 15:12:25.193645 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11847 15:12:25.193685 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11847 15:12:25.193704 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11847 15:12:25.193727 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fb5000
11847 15:12:25.193742 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11847 15:12:25.193778 read(5, "", 4096) = 0
11847 15:12:25.193792 close(5)          = 0
11847 15:12:25.193805 munmap(0xb7fb5000, 4096) = 0
11847 15:12:25.193829 getuid32()        = 0
11847 15:12:25.193855 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.193877 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.193893 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11847 15:12:25.193916 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.193932 _llseek(5, 1624, [1624], SEEK_SET) = 0
11847 15:12:25.193960 munmap(0xb7fb5000, 1624) = 0
11847 15:12:25.193983 close(5)          = 0
11847 15:12:25.194024 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.194049 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.194064 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11847 15:12:25.194087 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.194103 _llseek(5, 1233, [1233], SEEK_SET) = 0
11847 15:12:25.194132 munmap(0xb7fb5000, 1233) = 0
11847 15:12:25.194146 close(5)          = 0
11847 15:12:25.194174 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.194192 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.194207 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11847 15:12:25.194230 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.194245 _llseek(5, 1624, [1624], SEEK_SET) = 0
11847 15:12:25.194268 munmap(0xb7fb5000, 1624) = 0
11847 15:12:25.194282 close(5)          = 0
11847 15:12:25.194300 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.194321 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.194336 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11847 15:12:25.194359 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.194374 _llseek(5, 1233, [1233], SEEK_SET) = 0
11847 15:12:25.194451 munmap(0xb7fb5000, 1233) = 0
11847 15:12:25.194467 close(5)          = 0
11847 15:12:25.194828 getuid32()        = 0
11847 15:12:25.194849 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.194869 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.194884 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11847 15:12:25.194907 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.194923 _llseek(5, 1624, [1624], SEEK_SET) = 0
11847 15:12:25.194946 munmap(0xb7fb5000, 1624) = 0
11847 15:12:25.194960 close(5)          = 0
11847 15:12:25.194980 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.194998 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.195012 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11847 15:12:25.195035 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.195055 _llseek(5, 1233, [1233], SEEK_SET) = 0
11847 15:12:25.195085 munmap(0xb7fb5000, 1233) = 0
11847 15:12:25.195099 close(5)          = 0
11847 15:12:25.195116 time(NULL)        = 1495653145
11847 15:12:25.195139 munmap(0xb7fb2000, 12164) = 0
11847 15:12:25.195159 munmap(0xb7fb0000, 7136) = 0
11847 15:12:25.195181 munmap(0xb7de5000, 95428) = 0
11847 15:12:25.195198 munmap(0xb7dab000, 201052) = 0
11847 15:12:25.195214 munmap(0xb7d92000, 101180) = 0
11847 15:12:25.195239 gettimeofday({1495653145, 195245}, NULL) = 0
11847 15:12:25.195257 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8839f4) = -1 ENOENT (No such file or directory)
11847 15:12:25.195279 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11847 15:12:25.195321 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf883b44) = 0
11847 15:12:25.195347 write(3, "Wed May 24 15:12:25 2017 [pid 11847] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11847 15:12:25.195372 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf883b4c) = 0
11847 15:12:25.195394 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11847 15:12:25.195416 write(4, "\1", 1 <unfinished ...>
11848 15:12:25.195441 <... read resumed> "\1", 1) = 1
11847 15:12:25.195449 <... write resumed> ) = 1
11848 15:12:25.195462 exit_group(0)     = ?
11847 15:12:25.195516 --- SIGCHLD (Child exited) @ 0 (0) ---
11847 15:12:25.195533 sigreturn()       = ? (mask now [])
11847 15:12:25.195560 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11848
11847 15:12:25.195579 close(4)          = 0
11847 15:12:25.195629 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11847 15:12:25.195663 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11847 15:12:25.195693 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11847 15:12:25.195723 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e1b6f8) = 11849
11849 15:12:25.195808 prctl(0x1, 0x9, 0, 0, 0) = 0
11849 15:12:25.195827 close(4)          = 0
11849 15:12:25.195869 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11849 15:12:25.195894 _llseek(4, 0, [0], SEEK_CUR) = 0
11849 15:12:25.195917 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11849 15:12:25.195944 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fb5000
11849 15:12:25.195961 _llseek(4, 1624, [1624], SEEK_SET) = 0
11849 15:12:25.195995 munmap(0xb7fb5000, 1624) = 0
11849 15:12:25.196012 close(4)          = 0
11849 15:12:25.196032 getuid32()        = 0
11849 15:12:25.196047 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11849 15:12:25.196065 _llseek(4, 0, [0], SEEK_CUR) = 0
11849 15:12:25.196080 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11849 15:12:25.196103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fb5000
11849 15:12:25.196119 _llseek(4, 1624, [1624], SEEK_SET) = 0
11849 15:12:25.196152 munmap(0xb7fb5000, 1624) = 0
11849 15:12:25.196168 close(4)          = 0
11849 15:12:25.196209 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11849 15:12:25.196240 read(4, "65536\n", 31) = 6
11849 15:12:25.196258 close(4)          = 0
11849 15:12:25.196279 socket(PF_FILE, SOCK_STREAM, 0) = 4
11849 15:12:25.196296 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11849 15:12:25.196312 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11849 15:12:25.196345 close(4)          = 0
11849 15:12:25.196361 socket(PF_FILE, SOCK_STREAM, 0) = 4
11849 15:12:25.196376 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11849 15:12:25.196391 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11849 15:12:25.196417 close(4)          = 0
11849 15:12:25.196454 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11849 15:12:25.196475 _llseek(4, 0, [0], SEEK_CUR) = 0
11849 15:12:25.196494 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11849 15:12:25.196518 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fb5000
11849 15:12:25.196534 _llseek(4, 886, [886], SEEK_SET) = 0
11849 15:12:25.196585 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11849 15:12:25.196614 munmap(0xb7fb5000, 886) = 0
11849 15:12:25.196629 close(4)          = 0
11849 15:12:25.196643 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11849 15:12:25.196668 geteuid32()       = 0
11849 15:12:25.196685 getegid32()       = 0
11849 15:12:25.196700 setregid32(-1, 1000) = 0
11849 15:12:25.196716 setreuid32(-1, 1000) = 0
11849 15:12:25.196732 chdir("/home/msfadmin") = 0
11849 15:12:25.196750 setreuid32(-1, 0) = 0
11849 15:12:25.196763 setregid32(-1, 0) = 0
11849 15:12:25.196778 setgid32(1000)    = 0
11849 15:12:25.196797 setuid32(1000)    = 0
11849 15:12:25.196817 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11849 15:12:25.196837 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fb3000
11849 15:12:25.196854 mprotect(0xb7fb5000, 4096, PROT_NONE) = 0
11849 15:12:25.196871 mprotect(0xb7fb3000, 4096, PROT_NONE) = 0
11849 15:12:25.196887 getcwd("/home/msfadmin", 4096) = 15
11849 15:12:25.196907 umask(022)        = 077
11849 15:12:25.196922 getcwd("/home/msfadmin", 4096) = 15
11849 15:12:25.196950 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11849 15:12:25.196985 write(0, "230 Login successful.\r\n", 23) = 23
11849 15:12:25.197140 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.197165 alarm(300)        = 0
11849 15:12:25.197182 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fb0000
11849 15:12:25.197198 mprotect(0xb7fb2000, 4096, PROT_NONE) = 0
11849 15:12:25.197216 mprotect(0xb7fb0000, 4096, PROT_NONE) = 0
11849 15:12:25.197244 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11849 15:12:25.197264 read(0, "TYPE I\r\n", 8) = 8
11849 15:12:25.197289 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11849 15:12:25.197347 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.197369 alarm(300)        = 300
11849 15:12:25.197385 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11849 15:12:25.197401 read(0, "PASV\r\n", 6) = 6
11849 15:12:25.197419 write(5, "\n", 1) = 1
11849 15:12:25.197435 read(5,  <unfinished ...>
11847 15:12:25.197454 close(5)          = 0
11847 15:12:25.197472 getuid32()        = 0
11847 15:12:25.197495 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11847 15:12:25.197517 _llseek(5, 0, [0], SEEK_CUR) = 0
11847 15:12:25.197553 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11847 15:12:25.197579 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fb5000
11847 15:12:25.197595 _llseek(5, 1624, [1624], SEEK_SET) = 0
11847 15:12:25.197621 munmap(0xb7fb5000, 1624) = 0
11847 15:12:25.197639 close(5)          = 0
11847 15:12:25.197664 setgroups32(0, []) = 0
11847 15:12:25.197682 chdir("/usr/share/empty") = 0
11847 15:12:25.197700 chroot(".")       = 0
11847 15:12:25.197716 capset(NULL, NULL) = -1 EFAULT (Bad address)
11847 15:12:25.197737 prctl(0x8, 0, 0xbf883b28, 0x80549a6, 0xbf883b10) = 0
11847 15:12:25.197754 prctl(0x8, 0x1, 0xbf883b28, 0x8054a49, 0xbf883b10) = 0
11847 15:12:25.197768 setgid32(65534)   = 0
11847 15:12:25.197782 setuid32(65534)   = 0
11847 15:12:25.197796 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11847 15:12:25.197816 read(4, "\n", 1)  = 1
11847 15:12:25.197835 write(4, "\1", 1) = 1
11849 15:12:25.197851 <... read resumed> "\1", 1) = 1
11849 15:12:25.197862 write(5, "\f", 1) = 1
11849 15:12:25.197877 read(5,  <unfinished ...>
11847 15:12:25.197887 read(4, "\f", 1)  = 1
11847 15:12:25.197904 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11847 15:12:25.197924 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11847 15:12:25.197942 gettimeofday({1495653145, 197947}, NULL) = 0
11847 15:12:25.197965 bind(5, {sa_family=AF_INET, sin_port=htons(16325), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11847 15:12:25.197989 listen(5, 1)      = 0
11847 15:12:25.198012 write(4, "\305?\0\0", 4) = 4
11849 15:12:25.198032 <... read resumed> "\305?\0\0", 4) = 4
11849 15:12:25.198053 write(0, "227 Entering Passive Mode (127,0,0,1,63,197).\r\n", 47) = 47
11849 15:12:25.198214 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.198240 alarm(300)        = 300
11849 15:12:25.198257 recv(0, "STOR myfile8\r\n", 4096, MSG_PEEK) = 14
11849 15:12:25.198274 read(0, "STOR myfile8\r\n", 14) = 14
11849 15:12:25.198297 write(5, "\v", 1) = 1
11849 15:12:25.198312 read(5,  <unfinished ...>
11847 15:12:25.198322 read(4, "\v", 1)  = 1
11847 15:12:25.198338 write(4, "\1\0\0\0", 4) = 4
11849 15:12:25.198353 <... read resumed> "\1\0\0\0", 4) = 4
11849 15:12:25.198366 gettimeofday({1495653145, 198371}, NULL) = 0
11849 15:12:25.198381 getcwd("/home/msfadmin", 4096) = 15
11849 15:12:25.198400 open("myfile8", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11849 15:12:25.198419 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11849 15:12:25.198444 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11849 15:12:25.198462 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11849 15:12:25.198484 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf883a74) = 0
11849 15:12:25.198537 ftruncate64(4, 0) = 0
11849 15:12:25.198568 _llseek(4, 0, [0], SEEK_SET) = 0
11849 15:12:25.198584 write(5, "\v", 1) = 1
11849 15:12:25.198599 read(5,  <unfinished ...>
11847 15:12:25.198610 read(4, "\v", 1)  = 1
11847 15:12:25.198626 write(4, "\1\0\0\0", 4) = 4
11849 15:12:25.198641 <... read resumed> "\1\0\0\0", 4) = 4
11849 15:12:25.198652 write(5, "\v", 1) = 1
11849 15:12:25.198666 read(5,  <unfinished ...>
11847 15:12:25.198675 read(4, "\v", 1)  = 1
11847 15:12:25.198691 write(4, "\1\0\0\0", 4) = 4
11849 15:12:25.198705 <... read resumed> "\1\0\0\0", 4) = 4
11849 15:12:25.198716 write(5, "\r", 1) = 1
11849 15:12:25.198730 read(5,  <unfinished ...>
11847 15:12:25.198740 read(4, "\r", 1)  = 1
11847 15:12:25.198758 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11847 15:12:25.198784 accept(5, {sa_family=AF_INET, sin_port=htons(38996), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11847 15:12:25.198820 write(4, "\1", 1) = 1
11849 15:12:25.198835 <... read resumed> "\1", 1) = 1
11849 15:12:25.198849 recvmsg(5,  <unfinished ...>
11847 15:12:25.198863 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11849 15:12:25.198889 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11849 15:12:25.198908 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11849 15:12:25.198926 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11849 15:12:25.198943 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11849 15:12:25.198959 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.198979 alarm(300)        = 300
11849 15:12:25.198998 write(0, "150 Ok to send data.\r\n", 22) = 22
11849 15:12:25.199101 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dea000
11849 15:12:25.199122 mprotect(0xb7dfc000, 4096, PROT_NONE) = 0
11849 15:12:25.199147 mprotect(0xb7dea000, 4096, PROT_NONE) = 0
11849 15:12:25.199162 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11849 15:12:25.199182 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11849 15:12:25.199206 read(6, "", 65536) = 0
11849 15:12:25.199221 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.199241 alarm(300)        = 300
11849 15:12:25.199255 close(6)          = 0
11849 15:12:25.199268 alarm(0)          = 300
11849 15:12:25.199282 gettimeofday({1495653145, 199287}, NULL) = 0
11849 15:12:25.199309 getpid()          = 11849
11849 15:12:25.199326 gettimeofday({1495653145, 199332}, NULL) = 0
11849 15:12:25.199357 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf883a14) = 0
11849 15:12:25.199381 write(3, "Wed May 24 15:12:25 2017 [pid 11849] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile8\", 17 bytes, 17.28Kbyte/sec\n", 130) = 130
11849 15:12:25.199410 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf883a1c) = 0
11849 15:12:25.199431 write(0, "226 Transfer complete.\r\n", 24) = 24
11849 15:12:25.199519 write(5, "\n", 1) = 1
11849 15:12:25.199541 read(5,  <unfinished ...>
11847 15:12:25.199555 close(6)          = 0
11847 15:12:25.199592 read(4, "\n", 1)  = 1
11847 15:12:25.199609 close(5)          = 0
11847 15:12:25.199625 write(4, "\1", 1) = 1
11849 15:12:25.199641 <... read resumed> "\1", 1) = 1
11849 15:12:25.199652 close(4)          = 0
11849 15:12:25.199667 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11849 15:12:25.199687 alarm(300)        = 0
11849 15:12:25.199703 recv(0,  <unfinished ...>
11847 15:12:25.199714 read(4,  <unfinished ...>
4439  15:12:25.282895 <... select resumed> ) = 1 (in [5])
4439  15:12:25.282975 accept(5, {sa_family=AF_INET, sin_port=htons(43293), sin_addr=inet_addr("10.0.2.8")}, [16]) = 13
4439  15:12:25.283085 time(NULL)        = 1495653145
4439  15:12:25.283134 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 11850
11850 15:12:25.283300 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
11850 15:12:25.283322 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
11850 15:12:25.283337 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
11850 15:12:25.283353 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
11850 15:12:25.283372 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
11850 15:12:25.283389 close(3)          = 0
11850 15:12:25.283401 close(4)          = 0
11850 15:12:25.283414 open("/dev/null", O_RDONLY) = 3
11850 15:12:25.283434 dup2(3, 0)        = 0
11850 15:12:25.283447 dup2(3, 1)        = 1
11850 15:12:25.283458 dup2(3, 2)        = 2
11850 15:12:25.283484 close(3)          = 0
11850 15:12:25.283501 setgid32(0)       = 0
11850 15:12:25.283519 setgroups32(0, []) = 0
11850 15:12:25.283544 setuid32(0)       = 0
11850 15:12:25.283560 getpriority(PRIO_PROCESS, 0) = 20
11850 15:12:25.283572 setpriority(PRIO_PROCESS, 0, 10) = 0
11850 15:12:25.283585 getpriority(PRIO_PROCESS, 0) = 10
11850 15:12:25.283668 getpeername(13, {sa_family=AF_INET, sin_port=htons(43293), sin_addr=inet_addr("10.0.2.8")}, [16]) = 0
