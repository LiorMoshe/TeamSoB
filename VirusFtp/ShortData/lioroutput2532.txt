15469 15:50:01.127067 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.127067 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15469 15:50:01.127067 read(6, "", 4096) = 0
15469 15:50:01.127067 close(6)          = 0
15469 15:50:01.127067 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.127067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15469 15:50:01.127067 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15469 15:50:01.127067 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.127067 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15469 15:50:01.127067 read(6, "", 4096) = 0
15469 15:50:01.127067 close(6)          = 0
15469 15:50:01.127067 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.127067 read(5, "", 4096) = 0
15469 15:50:01.127067 close(5)          = 0
15469 15:50:01.127067 munmap(0xb7f89000, 4096) = 0
15469 15:50:01.127067 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15469 15:50:01.127067 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f89000
15469 15:50:01.127067 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15469 15:50:01.127067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15469 15:50:01.127067 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15469 15:50:01.127067 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.127067 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15469 15:50:01.127067 read(6, "", 4096) = 0
15469 15:50:01.127067 close(6)          = 0
15469 15:50:01.127067 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.127067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15469 15:50:01.127067 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15469 15:50:01.127067 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.127067 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15469 15:50:01.127067 read(6, "", 4096) = 0
15469 15:50:01.127067 close(6)          = 0
15469 15:50:01.127067 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.127067 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15469 15:50:01.127067 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15469 15:50:01.127067 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15469 15:50:01.127067 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.127067 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15469 15:50:01.127067 read(6, "", 4096) = 0
15469 15:50:01.127067 close(6)          = 0
15469 15:50:01.134757 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.134844 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15469 15:50:01.134914 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15469 15:50:01.134966 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15469 15:50:01.135059 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f83000
15469 15:50:01.135106 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15469 15:50:01.135313 read(6, "", 4096) = 0
15469 15:50:01.135363 close(6)          = 0
15469 15:50:01.135432 munmap(0xb7f83000, 4096) = 0
15469 15:50:01.135484 read(5, "", 4096) = 0
15469 15:50:01.135527 close(5)          = 0
15469 15:50:01.135570 munmap(0xb7f89000, 4096) = 0
15469 15:50:01.135623 time(NULL)        = 1495655401
15469 15:50:01.135673 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15469 15:50:01.135741 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15469 15:50:01.135790 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15469 15:50:01.135852 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f89000
15469 15:50:01.135898 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15469 15:50:01.135983 read(5, "", 4096) = 0
15469 15:50:01.136027 close(5)          = 0
15469 15:50:01.136074 munmap(0xb7f89000, 4096) = 0
15469 15:50:01.136146 getuid32()        = 0
15469 15:50:01.136210 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.136268 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.136316 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15469 15:50:01.136414 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.136469 _llseek(5, 1624, [1624], SEEK_SET) = 0
15469 15:50:01.136542 munmap(0xb7f89000, 1624) = 0
15469 15:50:01.136590 close(5)          = 0
15469 15:50:01.136676 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.136742 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.136789 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15469 15:50:01.136849 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.136896 _llseek(5, 1233, [1233], SEEK_SET) = 0
15469 15:50:01.136966 munmap(0xb7f89000, 1233) = 0
15469 15:50:01.137011 close(5)          = 0
15469 15:50:01.137068 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.137068 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.137068 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15469 15:50:01.137068 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.137068 _llseek(5, 1624, [1624], SEEK_SET) = 0
15469 15:50:01.137068 munmap(0xb7f89000, 1624) = 0
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.137068 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.137068 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15469 15:50:01.137068 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.137068 _llseek(5, 1233, [1233], SEEK_SET) = 0
15469 15:50:01.137068 munmap(0xb7f89000, 1233) = 0
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 getuid32()        = 0
15469 15:50:01.137068 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.137068 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.137068 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15469 15:50:01.137068 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.137068 _llseek(5, 1624, [1624], SEEK_SET) = 0
15469 15:50:01.137068 munmap(0xb7f89000, 1624) = 0
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.137068 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.137068 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15469 15:50:01.137068 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.137068 _llseek(5, 1233, [1233], SEEK_SET) = 0
15469 15:50:01.137068 munmap(0xb7f89000, 1233) = 0
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 time(NULL)        = 1495655401
15469 15:50:01.137068 munmap(0xb7f86000, 12164) = 0
15469 15:50:01.137068 munmap(0xb7f84000, 7136) = 0
15469 15:50:01.137068 munmap(0xb7db9000, 95428) = 0
15469 15:50:01.137068 munmap(0xb7d7f000, 201052) = 0
15469 15:50:01.137068 munmap(0xb7d66000, 101180) = 0
15469 15:50:01.137068 gettimeofday({1495655401, 137068}, NULL) = 0
15469 15:50:01.137068 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfbd5544) = -1 ENOENT (No such file or directory)
15469 15:50:01.137068 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15469 15:50:01.137068 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbd5694) = 0
15469 15:50:01.137068 write(3, "Wed May 24 15:50:01 2017 [pid 15469] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15469 15:50:01.137068 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbd569c) = 0
15469 15:50:01.137068 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15469 15:50:01.137068 write(4, "\1", 1 <unfinished ...>
15470 15:50:01.137068 <... read resumed> "\1", 1) = 1
15469 15:50:01.137068 <... write resumed> ) = 1
15470 15:50:01.137068 exit_group(0)     = ?
15469 15:50:01.137068 --- SIGCHLD (Child exited) @ 0 (0) ---
15469 15:50:01.137068 sigreturn()       = ? (mask now [])
15469 15:50:01.137068 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15470
15469 15:50:01.137068 close(4)          = 0
15469 15:50:01.137068 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15469 15:50:01.137068 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15469 15:50:01.137068 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15469 15:50:01.137068 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7def6f8) = 15471
15471 15:50:01.137068 prctl(0x1, 0x9, 0, 0, 0) = 0
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15471 15:50:01.137068 _llseek(4, 0, [0], SEEK_CUR) = 0
15471 15:50:01.137068 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15471 15:50:01.137068 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
15471 15:50:01.137068 _llseek(4, 1624, [1624], SEEK_SET) = 0
15471 15:50:01.137068 munmap(0xb7f89000, 1624) = 0
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 getuid32()        = 0
15471 15:50:01.137068 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15471 15:50:01.137068 _llseek(4, 0, [0], SEEK_CUR) = 0
15471 15:50:01.137068 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15471 15:50:01.137068 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
15471 15:50:01.137068 _llseek(4, 1624, [1624], SEEK_SET) = 0
15471 15:50:01.137068 munmap(0xb7f89000, 1624) = 0
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15471 15:50:01.137068 read(4, "65536\n", 31) = 6
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 socket(PF_FILE, SOCK_STREAM, 0) = 4
15471 15:50:01.137068 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15471 15:50:01.137068 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 socket(PF_FILE, SOCK_STREAM, 0) = 4
15471 15:50:01.137068 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15471 15:50:01.137068 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15471 15:50:01.137068 _llseek(4, 0, [0], SEEK_CUR) = 0
15471 15:50:01.137068 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15471 15:50:01.137068 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f89000
15471 15:50:01.137068 _llseek(4, 886, [886], SEEK_SET) = 0
15471 15:50:01.137068 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15471 15:50:01.137068 munmap(0xb7f89000, 886) = 0
15471 15:50:01.137068 close(4)          = 0
15471 15:50:01.137068 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15471 15:50:01.137068 geteuid32()       = 0
15471 15:50:01.137068 getegid32()       = 0
15471 15:50:01.137068 setregid32(-1, 1000) = 0
15471 15:50:01.137068 setreuid32(-1, 1000) = 0
15471 15:50:01.137068 chdir("/home/msfadmin") = 0
15471 15:50:01.137068 setreuid32(-1, 0) = 0
15471 15:50:01.137068 setregid32(-1, 0) = 0
15471 15:50:01.137068 setgid32(1000)    = 0
15471 15:50:01.137068 setuid32(1000)    = 0
15471 15:50:01.137068 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15471 15:50:01.137068 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f87000
15471 15:50:01.137068 mprotect(0xb7f89000, 4096, PROT_NONE) = 0
15471 15:50:01.137068 mprotect(0xb7f87000, 4096, PROT_NONE) = 0
15471 15:50:01.137068 getcwd("/home/msfadmin", 4096) = 15
15471 15:50:01.137068 umask(022)        = 077
15471 15:50:01.137068 getcwd("/home/msfadmin", 4096) = 15
15471 15:50:01.137068 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15471 15:50:01.137068 write(0, "230 Login successful.\r\n", 23) = 23
15471 15:50:01.137068 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.137068 alarm(300)        = 0
15471 15:50:01.137068 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f84000
15471 15:50:01.137068 mprotect(0xb7f86000, 4096, PROT_NONE) = 0
15471 15:50:01.137068 mprotect(0xb7f84000, 4096, PROT_NONE) = 0
15471 15:50:01.137068 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15471 15:50:01.137068 read(0, "TYPE I\r\n", 8) = 8
15471 15:50:01.137068 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15471 15:50:01.137068 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.137068 alarm(300)        = 300
15471 15:50:01.137068 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15471 15:50:01.137068 read(0, "PASV\r\n", 6) = 6
15471 15:50:01.137068 write(5, "\n", 1) = 1
15471 15:50:01.137068 read(5,  <unfinished ...>
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 getuid32()        = 0
15469 15:50:01.137068 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15469 15:50:01.137068 _llseek(5, 0, [0], SEEK_CUR) = 0
15469 15:50:01.137068 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15469 15:50:01.137068 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f89000
15469 15:50:01.137068 _llseek(5, 1624, [1624], SEEK_SET) = 0
15469 15:50:01.137068 munmap(0xb7f89000, 1624) = 0
15469 15:50:01.137068 close(5)          = 0
15469 15:50:01.137068 setgroups32(0, []) = 0
15469 15:50:01.137068 chdir("/usr/share/empty") = 0
15469 15:50:01.137068 chroot(".")       = 0
15469 15:50:01.137068 capset(NULL, NULL) = -1 EFAULT (Bad address)
15469 15:50:01.137068 prctl(0x8, 0, 0xbfbd5678, 0x80549a6, 0xbfbd5660) = 0
15469 15:50:01.144740 prctl(0x8, 0x1, 0xbfbd5678, 0x8054a49, 0xbfbd5660) = 0
15469 15:50:01.144769 setgid32(65534)   = 0
15469 15:50:01.144790 setuid32(65534)   = 0
15469 15:50:01.144811 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15469 15:50:01.144838 read(4, "\n", 1)  = 1
15469 15:50:01.144864 write(4, "\1", 1) = 1
15471 15:50:01.144887 <... read resumed> "\1", 1) = 1
15471 15:50:01.144905 write(5, "\f", 1) = 1
15471 15:50:01.144927 read(5,  <unfinished ...>
15469 15:50:01.144944 read(4, "\f", 1)  = 1
15469 15:50:01.144969 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15469 15:50:01.145012 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15469 15:50:01.145036 gettimeofday({1495655401, 145051}, NULL) = 0
15469 15:50:01.145077 bind(5, {sa_family=AF_INET, sin_port=htons(34581), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15469 15:50:01.145107 listen(5, 1)      = 0
15469 15:50:01.145133 write(4, "\25\207\0\0", 4) = 4
15471 15:50:01.145169 <... read resumed> "\25\207\0\0", 4) = 4
15471 15:50:01.145199 write(0, "227 Entering Passive Mode (127,0,0,1,135,21).\r\n", 47) = 47
15471 15:50:01.145410 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.145441 alarm(300)        = 300
15471 15:50:01.145481 recv(0, "STOR myfile16\r\n", 4096, MSG_PEEK) = 15
15471 15:50:01.145507 read(0, "STOR myfile16\r\n", 15) = 15
15471 15:50:01.145535 write(5, "\v", 1) = 1
15471 15:50:01.145558 read(5,  <unfinished ...>
15469 15:50:01.145575 read(4, "\v", 1)  = 1
15469 15:50:01.145599 write(4, "\1\0\0\0", 4) = 4
15471 15:50:01.145620 <... read resumed> "\1\0\0\0", 4) = 4
15471 15:50:01.145641 gettimeofday({1495655401, 145654}, NULL) = 0
15471 15:50:01.145672 getcwd("/home/msfadmin", 4096) = 15
15471 15:50:01.145697 open("myfile16", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15471 15:50:01.145724 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15471 15:50:01.145754 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15471 15:50:01.145776 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15471 15:50:01.145798 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbd55c4) = 0
15471 15:50:01.145833 ftruncate64(4, 0) = 0
15471 15:50:01.145869 _llseek(4, 0, [0], SEEK_SET) = 0
15471 15:50:01.145891 write(5, "\v", 1) = 1
15471 15:50:01.145914 read(5,  <unfinished ...>
15469 15:50:01.145931 read(4, "\v", 1)  = 1
15469 15:50:01.145954 write(4, "\1\0\0\0", 4) = 4
15471 15:50:01.145977 <... read resumed> "\1\0\0\0", 4) = 4
15471 15:50:01.145994 write(5, "\v", 1) = 1
15471 15:50:01.146016 read(5,  <unfinished ...>
15469 15:50:01.146033 read(4, "\v", 1)  = 1
15469 15:50:01.146055 write(4, "\1\0\0\0", 4) = 4
15471 15:50:01.146077 <... read resumed> "\1\0\0\0", 4) = 4
15471 15:50:01.146096 write(5, "\r", 1) = 1
15471 15:50:01.146117 read(5,  <unfinished ...>
15469 15:50:01.146137 read(4, "\r", 1)  = 1
15469 15:50:01.146162 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15469 15:50:01.146193 accept(5, {sa_family=AF_INET, sin_port=htons(38600), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15469 15:50:01.146230 write(4, "\1", 1) = 1
15471 15:50:01.146252 <... read resumed> "\1", 1) = 1
15471 15:50:01.146273 recvmsg(5,  <unfinished ...>
15469 15:50:01.146294 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15471 15:50:01.146325 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15471 15:50:01.146351 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15471 15:50:01.146375 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15471 15:50:01.146398 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15471 15:50:01.146421 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.146447 alarm(300)        = 300
15471 15:50:01.146489 write(0, "150 Ok to send data.\r\n", 22) = 22
15471 15:50:01.146614 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dbe000
15471 15:50:01.146642 mprotect(0xb7dd0000, 4096, PROT_NONE) = 0
15471 15:50:01.146666 mprotect(0xb7dbe000, 4096, PROT_NONE) = 0
15471 15:50:01.146687 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15471 15:50:01.146713 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15471 15:50:01.146742 read(6, "", 65536) = 0
15471 15:50:01.146765 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.146790 alarm(300)        = 300
15471 15:50:01.146828 close(6)          = 0
15471 15:50:01.146849 alarm(0)          = 300
15471 15:50:01.146878 gettimeofday({1495655401, 146892}, NULL) = 0
15471 15:50:01.146919 getpid()          = 15471
15471 15:50:01.146942 gettimeofday({1495655401, 146956}, NULL) = 0
15471 15:50:01.146983 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbd5564) = 0
15471 15:50:01.147011 write(3, "Wed May 24 15:50:01 2017 [pid 15471] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile16\", 17 bytes, 12.75Kbyte/sec\n", 131) = 131
15471 15:50:01.147045 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbd556c) = 0
15471 15:50:01.147068 write(0, "226 Transfer complete.\r\n", 24) = 24
15471 15:50:01.147068 write(5, "\n", 1) = 1
15471 15:50:01.147068 read(5,  <unfinished ...>
15469 15:50:01.147068 close(6)          = 0
15469 15:50:01.147068 read(4, "\n", 1)  = 1
15469 15:50:01.147068 close(5)          = 0
15469 15:50:01.147068 write(4, "\1", 1) = 1
15471 15:50:01.147068 <... read resumed> "\1", 1) = 1
15471 15:50:01.147068 close(4)          = 0
15471 15:50:01.147068 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.147068 alarm(300)        = 0
15471 15:50:01.147068 recv(0,  <unfinished ...>
15469 15:50:01.147068 read(4,  <unfinished ...>
15471 15:50:01.655301 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
15471 15:50:01.655423 read(0, "TYPE I\r\n", 8) = 8
15471 15:50:01.655534 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15471 15:50:01.656837 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15471 15:50:01.656845 alarm(300)        = 299
15471 15:50:01.656845 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15471 15:50:01.656845 read(0, "PASV\r\n", 6) = 6
15471 15:50:01.656845 write(5, "\n", 1) = 1
15471 15:50:01.656845 read(5,  <unfinished ...>
15469 15:50:01.656845 <... read resumed> "\n", 1) = 1
15469 15:50:01.656845 write(4, "\1", 1) = 1
15471 15:50:01.656845 <... read resumed> "\1", 1) = 1
15471 15:50:01.656845 write(5, "\f", 1) = 1
15471 15:50:01.656845 read(5,  <unfinished ...>
15469 15:50:01.656845 read(4, "\f", 1)  = 1
15469 15:50:01.656845 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15469 15:50:01.656845 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15469 15:50:01.656845 bind(5, {sa_family=AF_INET, sin_port=htons(58941), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15469 15:50:01.656845 listen(5, 1)      = 0
15469 15:50:01.656845 write(4, "=\346\0\0", 4) = 4
15471 15:50:01.656845 <... read resumed> "=\346\0\0", 4) = 4
