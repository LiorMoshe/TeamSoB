11076 15:04:28.898556 mmap2(0xb7d6f000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d6f000
11076 15:04:28.898620 close(7)          = 0
11076 15:04:28.898675 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11076 15:04:28.898737 open("/lib/libselinux.so.1", O_RDONLY) = 7
11076 15:04:28.898791 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
11076 15:04:28.899215 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
11076 15:04:28.899296 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d4b000
11076 15:04:28.899346 mmap2(0xb7d62000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d62000
11076 15:04:28.899418 close(7)          = 0
11076 15:04:28.899835 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11076 15:04:28.899947 statfs64("/selinux", 84, 0xbfb1cdac) = -1 ENOENT (No such file or directory)
11076 15:04:28.900001 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11076 15:04:28.900133 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11076 15:04:28.900217 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f67000
11076 15:04:28.900268 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11076 15:04:28.900611 read(7, "", 1024) = 0
11076 15:04:28.900654 close(7)          = 0
11076 15:04:28.900697 munmap(0xb7f67000, 4096) = 0
11076 15:04:28.900764 munmap(0xb7d96000, 29913) = 0
11076 15:04:28.900824 read(6, "", 4096) = 0
11076 15:04:28.900871 close(6)          = 0
11076 15:04:28.900911 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.900957 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.901104 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.901180 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11076 15:04:28.901252 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.901300 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11076 15:04:28.901476 read(6, "", 4096) = 0
11076 15:04:28.901519 close(6)          = 0
11076 15:04:28.901560 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.901682 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.901782 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.901839 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11076 15:04:28.901909 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.901956 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11076 15:04:28.902136 read(6, "", 4096) = 0
11076 15:04:28.902159 close(6)          = 0
11076 15:04:28.902179 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.902201 read(5, "", 4096) = 0
11076 15:04:28.902220 close(5)          = 0
11076 15:04:28.902238 munmap(0xb7f6e000, 4096) = 0
11076 15:04:28.902259 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11076 15:04:28.902287 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11076 15:04:28.902320 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6e000
11076 15:04:28.902342 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11076 15:04:28.902433 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.902471 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.902496 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11076 15:04:28.902528 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.902550 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11076 15:04:28.902643 read(6, "", 4096) = 0
11076 15:04:28.902663 close(6)          = 0
11076 15:04:28.902682 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.902704 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.902741 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.902766 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11076 15:04:28.902798 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.902827 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11076 15:04:28.902906 read(6, "", 4096) = 0
11076 15:04:28.902926 close(6)          = 0
11076 15:04:28.902944 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.903094 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.903135 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.903161 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11076 15:04:28.903193 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.903215 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11076 15:04:28.903451 read(6, "", 4096) = 0
11076 15:04:28.903471 close(6)          = 0
11076 15:04:28.903490 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.903512 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11076 15:04:28.903549 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11076 15:04:28.903575 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11076 15:04:28.903607 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f68000
11076 15:04:28.903627 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11076 15:04:28.903707 read(6, "", 4096) = 0
11076 15:04:28.903722 close(6)          = 0
11076 15:04:28.903736 munmap(0xb7f68000, 4096) = 0
11076 15:04:28.903752 read(5, "", 4096) = 0
11076 15:04:28.903767 close(5)          = 0
11076 15:04:28.903781 munmap(0xb7f6e000, 4096) = 0
11076 15:04:28.903801 time(NULL)        = 1495652668
11076 15:04:28.903819 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11076 15:04:28.903847 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11076 15:04:28.903871 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11076 15:04:28.903896 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6e000
11076 15:04:28.903913 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11076 15:04:28.903946 read(5, "", 4096) = 0
11076 15:04:28.903960 close(5)          = 0
11076 15:04:28.903975 munmap(0xb7f6e000, 4096) = 0
11076 15:04:28.903998 getuid32()        = 0
11076 15:04:28.904025 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.904057 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.904075 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11076 15:04:28.904100 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.904118 _llseek(5, 1624, [1624], SEEK_SET) = 0
11076 15:04:28.904148 munmap(0xb7f6e000, 1624) = 0
11076 15:04:28.904165 close(5)          = 0
11076 15:04:28.904204 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.904231 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.904248 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11076 15:04:28.904273 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.904290 _llseek(5, 1233, [1233], SEEK_SET) = 0
11076 15:04:28.904321 munmap(0xb7f6e000, 1233) = 0
11076 15:04:28.904336 close(5)          = 0
11076 15:04:28.904365 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.904385 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.904401 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11076 15:04:28.904426 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.904442 _llseek(5, 1624, [1624], SEEK_SET) = 0
11076 15:04:28.904467 munmap(0xb7f6e000, 1624) = 0
11076 15:04:28.904482 close(5)          = 0
11076 15:04:28.904501 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.904521 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.904536 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11076 15:04:28.904562 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.904578 _llseek(5, 1233, [1233], SEEK_SET) = 0
11076 15:04:28.904603 munmap(0xb7f6e000, 1233) = 0
11076 15:04:28.904618 close(5)          = 0
11076 15:04:28.905027 getuid32()        = 0
11076 15:04:28.905050 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.905071 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.905088 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11076 15:04:28.905113 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.905130 _llseek(5, 1624, [1624], SEEK_SET) = 0
11076 15:04:28.905155 munmap(0xb7f6e000, 1624) = 0
11076 15:04:28.905171 close(5)          = 0
11076 15:04:28.905191 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.905211 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.905226 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11076 15:04:28.905251 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.905268 _llseek(5, 1233, [1233], SEEK_SET) = 0
11076 15:04:28.905293 munmap(0xb7f6e000, 1233) = 0
11076 15:04:28.905308 close(5)          = 0
11076 15:04:28.905326 time(NULL)        = 1495652668
11076 15:04:28.905350 munmap(0xb7f6b000, 12164) = 0
11076 15:04:28.905370 munmap(0xb7f69000, 7136) = 0
11076 15:04:28.905392 munmap(0xb7d9e000, 95428) = 0
11076 15:04:28.905409 munmap(0xb7d64000, 201052) = 0
11076 15:04:28.905426 munmap(0xb7d4b000, 101180) = 0
11076 15:04:28.905451 gettimeofday({1495652668, 905457}, NULL) = 0
11076 15:04:28.905469 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb1ec84) = -1 ENOENT (No such file or directory)
11076 15:04:28.905492 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11076 15:04:28.905531 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1edd4) = 0
11076 15:04:28.905556 write(3, "Wed May 24 15:04:28 2017 [pid 11076] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11076 15:04:28.905588 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1eddc) = 0
11076 15:04:28.905609 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11076 15:04:28.905632 write(4, "\1", 1 <unfinished ...>
11077 15:04:28.905646 <... read resumed> "\1", 1) = 1
11076 15:04:28.905655 <... write resumed> ) = 1
11077 15:04:28.905667 exit_group(0)     = ?
11076 15:04:28.905714 --- SIGCHLD (Child exited) @ 0 (0) ---
11076 15:04:28.905726 sigreturn()       = ? (mask now [])
11076 15:04:28.905756 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11077
11076 15:04:28.905776 close(4)          = 0
11076 15:04:28.905794 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11076 15:04:28.905816 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11076 15:04:28.905838 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11076 15:04:28.905859 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dd46f8) = 11078
11078 15:04:28.905938 prctl(0x1, 0x9, 0, 0, 0) = 0
11078 15:04:28.905959 close(4)          = 0
11078 15:04:28.906014 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11078 15:04:28.906043 _llseek(4, 0, [0], SEEK_CUR) = 0
11078 15:04:28.906067 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11078 15:04:28.906096 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
11078 15:04:28.906115 _llseek(4, 1624, [1624], SEEK_SET) = 0
11078 15:04:28.906150 munmap(0xb7f6e000, 1624) = 0
11078 15:04:28.906168 close(4)          = 0
11078 15:04:28.906189 getuid32()        = 0
11078 15:04:28.906205 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11078 15:04:28.906224 _llseek(4, 0, [0], SEEK_CUR) = 0
11078 15:04:28.906240 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11078 15:04:28.906266 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
11078 15:04:28.906283 _llseek(4, 1624, [1624], SEEK_SET) = 0
11078 15:04:28.906307 munmap(0xb7f6e000, 1624) = 0
11078 15:04:28.906322 close(4)          = 0
11078 15:04:28.906363 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11078 15:04:28.906395 read(4, "65536\n", 31) = 6
11078 15:04:28.906414 close(4)          = 0
11078 15:04:28.906436 socket(PF_FILE, SOCK_STREAM, 0) = 4
11078 15:04:28.906455 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11078 15:04:28.906472 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11078 15:04:28.906505 close(4)          = 0
11078 15:04:28.906523 socket(PF_FILE, SOCK_STREAM, 0) = 4
11078 15:04:28.906539 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11078 15:04:28.906555 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11078 15:04:28.906583 close(4)          = 0
11078 15:04:28.906620 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11078 15:04:28.906642 _llseek(4, 0, [0], SEEK_CUR) = 0
11078 15:04:28.906658 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11078 15:04:28.906684 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f6e000
11078 15:04:28.906702 _llseek(4, 886, [886], SEEK_SET) = 0
11078 15:04:28.906740 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11078 15:04:28.906767 munmap(0xb7f6e000, 886) = 0
11078 15:04:28.906783 close(4)          = 0
11078 15:04:28.906798 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11078 15:04:28.906824 geteuid32()       = 0
11078 15:04:28.906840 getegid32()       = 0
11078 15:04:28.906857 setregid32(-1, 1000) = 0
11078 15:04:28.906873 setreuid32(-1, 1000) = 0
11078 15:04:28.906890 chdir("/home/msfadmin") = 0
11078 15:04:28.906908 setreuid32(-1, 0) = 0
11078 15:04:28.906922 setregid32(-1, 0) = 0
11078 15:04:28.906945 setgid32(1000)    = 0
11078 15:04:28.906965 setuid32(1000)    = 0
11078 15:04:28.906981 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11078 15:04:28.907003 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f6c000
11078 15:04:28.907027 mprotect(0xb7f6e000, 4096, PROT_NONE) = 0
11078 15:04:28.907045 mprotect(0xb7f6c000, 4096, PROT_NONE) = 0
11078 15:04:28.907063 getcwd("/home/msfadmin", 4096) = 15
11078 15:04:28.907083 umask(022)        = 077
11078 15:04:28.907099 getcwd("/home/msfadmin", 4096) = 15
11078 15:04:28.907120 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11078 15:04:28.907155 write(0, "230 Login successful.\r\n", 23) = 23
11078 15:04:28.907279 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11078 15:04:28.907307 alarm(300)        = 0
11078 15:04:28.907323 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
11078 15:04:28.907341 mprotect(0xb7f6b000, 4096, PROT_NONE) = 0
11078 15:04:28.907359 mprotect(0xb7f69000, 4096, PROT_NONE) = 0
11078 15:04:28.907379 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11078 15:04:28.907400 read(0, "TYPE I\r\n", 8) = 8
11078 15:04:28.907426 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11078 15:04:28.907487 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11078 15:04:28.907510 alarm(300)        = 300
11078 15:04:28.907528 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11078 15:04:28.907546 read(0, "PASV\r\n", 6) = 6
11078 15:04:28.907564 write(5, "\n", 1) = 1
11078 15:04:28.907581 read(5,  <unfinished ...>
11076 15:04:28.907601 close(5)          = 0
11076 15:04:28.907622 getuid32()        = 0
11076 15:04:28.907645 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11076 15:04:28.907668 _llseek(5, 0, [0], SEEK_CUR) = 0
11076 15:04:28.907687 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11076 15:04:28.907715 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f6e000
11076 15:04:28.907733 _llseek(5, 1624, [1624], SEEK_SET) = 0
11076 15:04:28.907760 munmap(0xb7f6e000, 1624) = 0
11076 15:04:28.907778 close(5)          = 0
11076 15:04:28.907803 setgroups32(0, []) = 0
11076 15:04:28.907820 chdir("/usr/share/empty") = 0
11076 15:04:28.907839 chroot(".")       = 0
11076 15:04:28.907856 capset(NULL, NULL) = -1 EFAULT (Bad address)
11076 15:04:28.907877 prctl(0x8, 0, 0xbfb1edb8, 0x80549a6, 0xbfb1eda0) = 0
11076 15:04:28.907894 prctl(0x8, 0x1, 0xbfb1edb8, 0x8054a49, 0xbfb1eda0) = 0
11076 15:04:28.907921 setgid32(65534)   = 0
11076 15:04:28.907939 setuid32(65534)   = 0
11076 15:04:28.907955 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11076 15:04:28.907977 read(4, "\n", 1)  = 1
11076 15:04:28.907997 write(4, "\1", 1) = 1
11078 15:04:28.908015 <... read resumed> "\1", 1) = 1
11078 15:04:28.908027 write(5, "\f", 1) = 1
11078 15:04:28.908043 read(5,  <unfinished ...>
11076 15:04:28.908053 read(4, "\f", 1)  = 1
11076 15:04:28.908073 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11076 15:04:28.908094 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11076 15:04:28.908112 gettimeofday({1495652668, 908118}, NULL) = 0
11076 15:04:28.908137 bind(5, {sa_family=AF_INET, sin_port=htons(17429), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11076 15:04:28.908162 listen(5, 1)      = 0
11076 15:04:28.908183 write(4, "\25D\0\0", 4) = 4
11078 15:04:28.908200 <... read resumed> "\25D\0\0", 4) = 4
11078 15:04:28.908222 write(0, "227 Entering Passive Mode (127,0,0,1,68,21).\r\n", 46) = 46
11078 15:04:28.908390 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11078 15:04:28.908418 alarm(300)        = 300
11078 15:04:28.908436 recv(0, "STOR myfile1\r\n", 4096, MSG_PEEK) = 14
11078 15:04:28.908455 read(0, "STOR myfile1\r\n", 14) = 14
11078 15:04:28.908479 write(5, "\v", 1) = 1
11078 15:04:28.908495 read(5,  <unfinished ...>
11076 15:04:28.908507 read(4, "\v", 1)  = 1
11076 15:04:28.908524 write(4, "\1\0\0\0", 4) = 4
11078 15:04:28.908541 <... read resumed> "\1\0\0\0", 4) = 4
11078 15:04:28.908554 gettimeofday({1495652668, 908560}, NULL) = 0
11078 15:04:28.908571 getcwd("/home/msfadmin", 4096) = 15
11078 15:04:28.908591 open("myfile1", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11078 15:04:28.908611 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11078 15:04:28.908644 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11078 15:04:28.908662 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11078 15:04:28.908677 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1ed04) = 0
11078 15:04:28.908701 ftruncate64(4, 0) = 0
11078 15:04:28.908728 _llseek(4, 0, [0], SEEK_SET) = 0
11078 15:04:28.908745 write(5, "\v", 1) = 1
11078 15:04:28.908761 read(5,  <unfinished ...>
11076 15:04:28.908772 read(4, "\v", 1)  = 1
11076 15:04:28.908790 write(4, "\1\0\0\0", 4) = 4
11078 15:04:28.908806 <... read resumed> "\1\0\0\0", 4) = 4
11078 15:04:28.908818 write(5, "\v", 1) = 1
11078 15:04:28.908833 read(5,  <unfinished ...>
11076 15:04:28.908843 read(4, "\v", 1)  = 1
11076 15:04:28.908860 write(4, "\1\0\0\0", 4) = 4
11078 15:04:28.908891 <... read resumed> "\1\0\0\0", 4) = 4
11078 15:04:28.908909 write(5, "\r", 1) = 1
11078 15:04:28.908925 read(5,  <unfinished ...>
11076 15:04:28.908936 read(4, "\r", 1)  = 1
11076 15:04:28.908956 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11076 15:04:28.908983 accept(5, {sa_family=AF_INET, sin_port=htons(50258), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11076 15:04:28.909018 write(4, "\1", 1) = 1
11078 15:04:28.909035 <... read resumed> "\1", 1) = 1
11078 15:04:28.909050 recvmsg(5,  <unfinished ...>
11076 15:04:28.909065 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11078 15:04:28.909092 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11078 15:04:28.909113 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11078 15:04:28.909132 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11078 15:04:28.909151 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11078 15:04:28.909168 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11078 15:04:28.909189 alarm(300)        = 300
11078 15:04:28.909209 write(0, "150 Ok to send data.\r\n", 22) = 22
11078 15:04:28.909310 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da3000
11078 15:04:28.909332 mprotect(0xb7db5000, 4096, PROT_NONE) = 0
11078 15:04:28.909350 mprotect(0xb7da3000, 4096, PROT_NONE) = 0
11078 15:04:28.909365 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11078 15:04:28.909387 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11078 15:04:28.909413 read(6, "", 65536) = 0
11078 15:04:28.909429 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11078 15:04:28.909450 alarm(300)        = 300
11078 15:04:28.909465 close(6)          = 0
11078 15:04:28.909479 alarm(0)          = 300
11078 15:04:28.909494 gettimeofday({1495652668, 909499}, NULL) = 0
11078 15:04:28.909521 getpid()          = 11078
