11872 15:12:41.967339 munmap(0xb7f06000, 4096) = 0
11872 15:12:41.967406 stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11872 15:12:41.967556 stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11872 15:12:41.967680 rt_sigaction(SIGPIPE, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.967748 setrlimit(RLIMIT_AS, {rlim_cur=102400*1024, rlim_max=102400*1024}) = 0
11872 15:12:41.967798 open("/var/log/vsftpd.log", O_WRONLY|O_CREAT|O_APPEND|O_NONBLOCK|O_LARGEFILE, 0600) = 3
11872 15:12:41.967938 setsockopt(0, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11872 15:12:41.968001 setsockopt(0, SOL_TCP, TCP_NODELAY, [1], 4) = 0
11872 15:12:41.968053 setsockopt(0, SOL_SOCKET, SO_OOBINLINE, [1], 4) = 0
11872 15:12:41.968102 rt_sigaction(SIGTERM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.968162 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.968222 prctl(0x1, 0xf, 0, 0, 0) = 0
11872 15:12:41.968274 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11872 15:12:41.968366 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.968434 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.968491 clone(child_stack=0, flags=0x40000000|SIGCHLD) = -1 EINVAL (Invalid argument)
11872 15:12:41.968689 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d6c6f8) = 11873
11873 15:12:41.968960 prctl(0x1, 0x9, 0, 0, 0) = 0
11873 15:12:41.969024 close(4)          = 0
11873 15:12:41.969165 lstat64("/usr/share/empty", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11873 15:12:41.969261 getuid32()        = 0
11873 15:12:41.969401 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11873 15:12:41.969480 _llseek(4, 0, [0], SEEK_CUR) = 0
11873 15:12:41.969545 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11873 15:12:41.969625 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f06000
11873 15:12:41.969678 _llseek(4, 1624, [1624], SEEK_SET) = 0
11873 15:12:41.969774 munmap(0xb7f06000, 1624) = 0
11873 15:12:41.969868 close(4)          = 0
11873 15:12:41.969937 setgroups32(0, []) = 0
11873 15:12:41.969988 chdir("/usr/share/empty") = 0
11873 15:12:41.970050 chroot(".")       = 0
11873 15:12:41.970101 setrlimit(RLIMIT_NOFILE, {rlim_cur=0, rlim_max=0}) = 0
11873 15:12:41.970155 setgid32(65534)   = 0
11873 15:12:41.970201 setuid32(65534)   = 0
11873 15:12:41.970244 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11873 15:12:41.970301 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11873 15:12:41.970410 alarm(300)        = 0
11873 15:12:41.970470 gettimeofday({1495653161, 970487}, NULL) = 0
11873 15:12:41.970527 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe367a4) = -1 ENOENT (No such file or directory)
11873 15:12:41.970590 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 EMFILE (Too many open files)
11873 15:12:41.970730 getpid()          = 11873
11873 15:12:41.970846 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe368f4) = 0
11873 15:12:41.970928 write(3, "Wed May 24 15:12:41 2017 [pid 11873] CONNECT: Client \"127.0.0.1\"\n", 65) = 65
11873 15:12:41.971001 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe368fc) = 0
11873 15:12:41.971073 write(0, "220 (vsFTPd 2.3.4)\r\n", 20) = 20
11873 15:12:41.971390 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11873 15:12:41.971462 alarm(300)        = 300
11873 15:12:41.971514 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f04000
11873 15:12:41.971567 mprotect(0xb7f06000, 4096, PROT_NONE) = 0
11873 15:12:41.971620 mprotect(0xb7f04000, 4096, PROT_NONE) = 0
11873 15:12:41.971676 recv(0, "USER msfadmin\r\n", 4096, MSG_PEEK) = 15
11873 15:12:41.971737 read(0, "USER msfadmin\r\n", 15) = 15
11873 15:12:41.971810 write(0, "331 Please specify the password.\r\n", 34) = 34
11873 15:12:41.971975 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11873 15:12:41.972040 alarm(300)        = 300
11873 15:12:41.972089 recv(0, "PASS msfadmin\r\n", 4096, MSG_PEEK) = 15
11873 15:12:41.972142 read(0, "PASS msfadmin\r\n", 15) = 15
11873 15:12:41.972196 write(5, "\1", 1) = 1
11873 15:12:41.972247 write(5, "\10\0\0\0", 4) = 4
11873 15:12:41.972338 write(5, "msfadmin", 8) = 8
11873 15:12:41.972398 write(5, "\10\0\0\0", 4) = 4
11873 15:12:41.972446 write(5, "msfadmin", 8) = 8
11873 15:12:41.972493 write(5, "\0\0\0\0", 4) = 4
11873 15:12:41.972540 write(5, "\0\0\0\0", 4) = 4
11873 15:12:41.972590 read(5,  <unfinished ...>
11872 15:12:41.972644 close(5)          = 0
11872 15:12:41.972691 read(4, "\1", 1)  = 1
11872 15:12:41.972745 read(4, "\10\0\0\0", 4) = 4
11872 15:12:41.972805 read(4, "msfadmin", 8) = 8
11872 15:12:41.972805 read(4, "\10\0\0\0", 4) = 4
11872 15:12:41.972806 read(4, "msfadmin", 8) = 8
11872 15:12:41.972806 read(4, "\0\0\0\0", 4) = 4
11872 15:12:41.972871 read(4, "\0\0\0\0", 4) = 4
11872 15:12:41.972988 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.973096 open("/etc/pam.d/ftp", O_RDONLY|O_LARGEFILE) = 5
11872 15:12:41.973158 fstat64(5, {st_mode=S_IFREG|0644, st_size=408, ...}) = 0
11872 15:12:41.973232 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f06000
11872 15:12:41.973283 read(5, "# Standard behaviour for ftpd(8).\nauth\trequired\tpam_listfile.so item=user sense=deny file=/etc/ftpusers onerr=succeed\n\n# This line is required by ftpd(8).\nauth\tsufficient\tpam_ftp.so\n\n# Uncomment this to achieve what used to be ftpd -A.\n#auth\trequired\tpam_listfile.so item=user sense=allow file=/etc/ftpchroot onerr=fail\n\n# Standard blurb.\n@include common-auth\n@include common-account\n@include common-session\n", 4096) = 408
11872 15:12:41.973522 open("/lib/security/pam_listfile.so", O_RDONLY) = 6
11872 15:12:41.973588 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\n\0\0004\0\0\0P \0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\36\0\0\24\36\0\0\5\0\0\0\0\20\0\0\1\0\0\0\24\36\0\0\24.\0\0\24.\0\0l\1\0\0p\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0(\36\0\0(.\0\0(.\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0003\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\33\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\0\0\0\0\23\0\0\0\17\0\0\0\34\0\0\0\2\0\0\0\16\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\20\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\35\0\0\0\n\0\0\0\1\0\0\0\t\0\0\0\0\0\0\0\22\0\0\0\26\0\0\0\v\0\0\0\4\0\0\0\7\0\0\0\5\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
11872 15:12:41.974008 fstat64(6, {st_mode=S_IFREG|0644, st_size=9272, ...}) = 0
11872 15:12:41.974092 mmap2(NULL, 12164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f03000
11872 15:12:41.974146 mmap2(0xb7f05000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1) = 0xb7f05000
11872 15:12:41.974209 close(6)          = 0
11872 15:12:41.974358 open("/lib/security/pam_ftp.so", O_RDONLY) = 6
11872 15:12:41.974419 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\5\0\0004\0\0\0\264\f\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\n\0\0\240\n\0\0\5\0\0\0\0\20\0\0\1\0\0\0\240\n\0\0\240\32\0\0\240\32\0\0<\1\0\0@\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274\n\0\0\274\32\0\0\274\32\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\30\0\0\0\16\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\4\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\6\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\10\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\f\0\0\0\1\0\0\0\5\0\0\0\1H@\0\f\0\0\0\r\0\0\0\301\225Y\346\313\306\36\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\354\2\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0c\0\0\0\0\0\0\0;\0\0\0\22\0\0\0\225\0\0\0\0\0\0\0.\3\0\0\22\0\0\0y\0\0\0\0\0\0\0\343\0\0\0\22\0\0\0\216\0\0\0\0\0\0\0\22\1\0\0\22\0\0\0n\0\0\0\0\0\0\0", 512) = 512
11872 15:12:41.974985 fstat64(6, {st_mode=S_IFREG|0644, st_size=4292, ...}) = 0
11872 15:12:41.975038 mmap2(NULL, 7136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f01000
11872 15:12:41.975070 mmap2(0xb7f02000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0) = 0xb7f02000
11872 15:12:41.975107 close(6)          = 0
11872 15:12:41.975166 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.975221 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.975257 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11872 15:12:41.975301 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.975332 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11872 15:12:41.975457 open("/lib/security/pam_unix.so", O_RDONLY) = 7
11872 15:12:41.975504 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
11872 15:12:41.975734 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
11872 15:12:41.975782 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d36000
11872 15:12:41.975814 mmap2(0xb7d41000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d41000
11872 15:12:41.975897 mmap2(0xb7d42000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d42000
11872 15:12:41.975930 close(7)          = 0
11872 15:12:41.975966 open("/etc/ld.so.cache", O_RDONLY) = 7
11872 15:12:41.976000 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
11872 15:12:41.976045 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d2e000
11872 15:12:41.976073 close(7)          = 0
11872 15:12:41.976102 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11872 15:12:41.976146 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
11872 15:12:41.976185 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
11872 15:12:41.976422 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
11872 15:12:41.976472 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cfc000
11872 15:12:41.976503 mmap2(0xb7d05000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d05000
11872 15:12:41.976544 mmap2(0xb7d07000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d07000
11872 15:12:41.976584 close(7)          = 0
11872 15:12:41.976618 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11872 15:12:41.976656 open("/lib/libselinux.so.1", O_RDONLY) = 7
11872 15:12:41.976690 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
11872 15:12:41.976952 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
11872 15:12:41.977003 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7ce3000
11872 15:12:41.977036 mmap2(0xb7cfa000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7cfa000
11872 15:12:41.977081 close(7)          = 0
11872 15:12:41.977340 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11872 15:12:41.977475 statfs64("/selinux", 84, 0xbfe348cc) = -1 ENOENT (No such file or directory)
11872 15:12:41.977514 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11872 15:12:41.977575 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11872 15:12:41.977623 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7eff000
11872 15:12:41.977655 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11872 15:12:41.977899 read(7, "", 1024) = 0
11872 15:12:41.977930 close(7)          = 0
11872 15:12:41.977957 munmap(0xb7eff000, 4096) = 0
11872 15:12:41.977999 munmap(0xb7d2e000, 29913) = 0
11872 15:12:41.978037 read(6, "", 4096) = 0
11872 15:12:41.978068 close(6)          = 0
11872 15:12:41.978094 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.978124 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.978177 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.978214 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11872 15:12:41.978259 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.978289 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11872 15:12:41.978398 read(6, "", 4096) = 0
11872 15:12:41.978425 close(6)          = 0
11872 15:12:41.978451 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.978480 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.978530 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.978565 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11872 15:12:41.978619 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.978649 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11872 15:12:41.978774 read(6, "", 4096) = 0
11872 15:12:41.978803 close(6)          = 0
11872 15:12:41.978829 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.978859 read(5, "", 4096) = 0
11872 15:12:41.978885 close(5)          = 0
11872 15:12:41.978910 munmap(0xb7f06000, 4096) = 0
11872 15:12:41.978939 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11872 15:12:41.978975 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11872 15:12:41.979019 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f06000
11872 15:12:41.979048 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11872 15:12:41.979169 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.979219 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.979252 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11872 15:12:41.979296 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.979325 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11872 15:12:41.979448 read(6, "", 4096) = 0
11872 15:12:41.979475 close(6)          = 0
11872 15:12:41.979500 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.979530 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.979580 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.979614 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11872 15:12:41.979657 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.979731 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11872 15:12:41.979843 read(6, "", 4096) = 0
11872 15:12:41.979870 close(6)          = 0
11872 15:12:41.979896 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.979926 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.979977 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.980013 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11872 15:12:41.980057 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.980085 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11872 15:12:41.980404 read(6, "", 4096) = 0
11872 15:12:41.980432 close(6)          = 0
11872 15:12:41.980457 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.980487 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11872 15:12:41.980543 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11872 15:12:41.980579 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11872 15:12:41.980647 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
11872 15:12:41.980686 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11872 15:12:41.980793 read(6, "", 4096) = 0
11872 15:12:41.980820 close(6)          = 0
11872 15:12:41.980846 munmap(0xb7f00000, 4096) = 0
11872 15:12:41.980875 read(5, "", 4096) = 0
11872 15:12:41.980901 close(5)          = 0
11872 15:12:41.980927 munmap(0xb7f06000, 4096) = 0
11872 15:12:41.980961 time(NULL)        = 1495653161
11872 15:12:41.980994 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11872 15:12:41.981045 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11872 15:12:41.981078 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11872 15:12:41.981122 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f06000
11872 15:12:41.981151 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11872 15:12:41.981208 read(5, "", 4096) = 0
11872 15:12:41.981234 close(5)          = 0
11872 15:12:41.981259 munmap(0xb7f06000, 4096) = 0
11872 15:12:41.981300 getuid32()        = 0
11872 15:12:41.981346 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.981386 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.981425 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11872 15:12:41.981493 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.981527 _llseek(5, 1624, [1624], SEEK_SET) = 0
11872 15:12:41.981581 munmap(0xb7f06000, 1624) = 0
11872 15:12:41.981636 close(5)          = 0
11872 15:12:41.981710 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.981770 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.981800 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11872 15:12:41.981844 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.981874 _llseek(5, 1233, [1233], SEEK_SET) = 0
11872 15:12:41.981927 munmap(0xb7f06000, 1233) = 0
11872 15:12:41.981955 close(5)          = 0
11872 15:12:41.982006 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.982042 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.982071 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11872 15:12:41.982114 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.982143 _llseek(5, 1624, [1624], SEEK_SET) = 0
11872 15:12:41.982187 munmap(0xb7f06000, 1624) = 0
11872 15:12:41.982214 close(5)          = 0
11872 15:12:41.982248 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.982282 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.982310 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11872 15:12:41.982353 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.982446 _llseek(5, 1233, [1233], SEEK_SET) = 0
11872 15:12:41.982499 munmap(0xb7f06000, 1233) = 0
11872 15:12:41.982527 close(5)          = 0
11872 15:12:41.983187 getuid32()        = 0
11872 15:12:41.983224 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.983261 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.983289 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11872 15:12:41.983333 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.983363 _llseek(5, 1624, [1624], SEEK_SET) = 0
11872 15:12:41.983406 munmap(0xb7f06000, 1624) = 0
11872 15:12:41.983434 close(5)          = 0
11872 15:12:41.983470 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11872 15:12:41.983511 _llseek(5, 0, [0], SEEK_CUR) = 0
11872 15:12:41.983563 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11872 15:12:41.983608 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f06000
11872 15:12:41.983638 _llseek(5, 1233, [1233], SEEK_SET) = 0
11872 15:12:41.983684 munmap(0xb7f06000, 1233) = 0
11872 15:12:41.983711 close(5)          = 0
11872 15:12:41.983744 time(NULL)        = 1495653161
11872 15:12:41.983789 munmap(0xb7f03000, 12164) = 0
11872 15:12:41.983829 munmap(0xb7f01000, 7136) = 0
11872 15:12:41.983867 munmap(0xb7d36000, 95428) = 0
11872 15:12:41.983898 munmap(0xb7cfc000, 201052) = 0
11872 15:12:41.983929 munmap(0xb7ce3000, 101180) = 0
11872 15:12:41.983975 gettimeofday({1495653161, 983985}, NULL) = 0
11872 15:12:41.984006 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe367a4) = -1 ENOENT (No such file or directory)
11872 15:12:41.984047 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11872 15:12:41.984119 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe368f4) = 0
11872 15:12:41.984164 write(3, "Wed May 24 15:12:41 2017 [pid 11872] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11872 15:12:41.984210 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe368fc) = 0
11872 15:12:41.984246 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.984285 write(4, "\1", 1 <unfinished ...>
11873 15:12:41.984314 <... read resumed> "\1", 1) = 1
11872 15:12:41.984329 <... write resumed> ) = 1
11873 15:12:41.984351 exit_group(0)     = ?
11872 15:12:41.984445 --- SIGCHLD (Child exited) @ 0 (0) ---
11872 15:12:41.984465 sigreturn()       = ? (mask now [])
11872 15:12:41.984544 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11873
11872 15:12:41.984582 close(4)          = 0
11872 15:12:41.984617 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11872 15:12:41.984656 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.984693 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11872 15:12:41.984731 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d6c6f8) = 11874
11874 15:12:41.984885 prctl(0x1, 0x9, 0, 0, 0) = 0
11874 15:12:41.984923 close(4)          = 0
11874 15:12:41.984996 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11874 15:12:41.985043 _llseek(4, 0, [0], SEEK_CUR) = 0
11874 15:12:41.985085 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11874 15:12:41.985135 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f06000
11874 15:12:41.985167 _llseek(4, 1624, [1624], SEEK_SET) = 0
11874 15:12:41.985229 munmap(0xb7f06000, 1624) = 0
11874 15:12:41.985260 close(4)          = 0
11874 15:12:41.985297 getuid32()        = 0
11874 15:12:41.985325 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11874 15:12:41.985359 _llseek(4, 0, [0], SEEK_CUR) = 0
11874 15:12:41.985388 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11874 15:12:41.985432 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f06000
11874 15:12:41.985462 _llseek(4, 1624, [1624], SEEK_SET) = 0
11874 15:12:41.985645 munmap(0xb7f06000, 1624) = 0
11874 15:12:41.985674 close(4)          = 0
11874 15:12:41.985747 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11874 15:12:41.985802 read(4, "65536\n", 31) = 6
11874 15:12:41.985836 close(4)          = 0
11874 15:12:41.985874 socket(PF_FILE, SOCK_STREAM, 0) = 4
11874 15:12:41.985907 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11874 15:12:41.985937 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11874 15:12:41.985995 close(4)          = 0
11874 15:12:41.986027 socket(PF_FILE, SOCK_STREAM, 0) = 4
11874 15:12:41.986055 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11874 15:12:41.986083 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11874 15:12:41.986132 close(4)          = 0
11874 15:12:41.986194 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11874 15:12:41.986234 _llseek(4, 0, [0], SEEK_CUR) = 0
11874 15:12:41.986263 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11874 15:12:41.986308 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f06000
11874 15:12:41.986339 _llseek(4, 886, [886], SEEK_SET) = 0
11874 15:12:41.986404 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11874 15:12:41.986451 munmap(0xb7f06000, 886) = 0
11874 15:12:41.986478 close(4)          = 0
11874 15:12:41.986505 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11874 15:12:41.986567 geteuid32()       = 0
11874 15:12:41.986605 getegid32()       = 0
11874 15:12:41.986634 setregid32(-1, 1000) = 0
11874 15:12:41.986663 setreuid32(-1, 1000) = 0
11874 15:12:41.986692 chdir("/home/msfadmin") = 0
11874 15:12:41.986724 setreuid32(-1, 0) = 0
11874 15:12:41.986750 setregid32(-1, 0) = 0
11874 15:12:41.986779 setgid32(1000)    = 0
11874 15:12:41.986806 setuid32(1000)    = 0
11874 15:12:41.986834 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
