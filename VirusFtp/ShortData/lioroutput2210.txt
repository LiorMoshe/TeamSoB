14421 15:38:45.499554 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
14421 15:38:45.499629 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cdd000
14421 15:38:45.499654 mmap2(0xb7ce6000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7ce6000
14421 15:38:45.499684 mmap2(0xb7ce8000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7ce8000
14421 15:38:45.499713 close(7)          = 0
14421 15:38:45.499738 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14421 15:38:45.499766 open("/lib/libselinux.so.1", O_RDONLY) = 7
14421 15:38:45.499792 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
14421 15:38:45.500006 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
14421 15:38:45.500043 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cc4000
14421 15:38:45.500098 mmap2(0xb7cdb000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7cdb000
14421 15:38:45.500135 close(7)          = 0
14421 15:38:45.500342 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14421 15:38:45.500393 statfs64("/selinux", 84, 0xbf937bcc) = -1 ENOENT (No such file or directory)
14421 15:38:45.500419 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
14421 15:38:45.500464 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
14421 15:38:45.500500 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee0000
14421 15:38:45.500524 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
14421 15:38:45.500740 read(7, "", 1024) = 0
14421 15:38:45.500762 close(7)          = 0
14421 15:38:45.500783 munmap(0xb7ee0000, 4096) = 0
14421 15:38:45.500812 munmap(0xb7d0f000, 29913) = 0
14421 15:38:45.500840 read(6, "", 4096) = 0
14421 15:38:45.500861 close(6)          = 0
14421 15:38:45.500887 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.500909 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.500949 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.500977 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14421 15:38:45.501012 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.501035 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14421 15:38:45.501155 read(6, "", 4096) = 0
14421 15:38:45.501176 close(6)          = 0
14421 15:38:45.501195 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.501217 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.501256 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.501284 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14421 15:38:45.501318 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.501340 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14421 15:38:45.501422 read(6, "", 4096) = 0
14421 15:38:45.501443 close(6)          = 0
14421 15:38:45.501461 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.501482 read(5, "", 4096) = 0
14421 15:38:45.501501 close(5)          = 0
14421 15:38:45.501520 munmap(0xb7ee7000, 4096) = 0
14421 15:38:45.501541 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14421 15:38:45.501603 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14421 15:38:45.501638 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
14421 15:38:45.501660 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14421 15:38:45.501758 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.501797 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.501823 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14421 15:38:45.501856 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.501878 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14421 15:38:45.501978 read(6, "", 4096) = 0
14421 15:38:45.501998 close(6)          = 0
14421 15:38:45.502017 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.502050 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.502114 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.502147 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14421 15:38:45.502182 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.502204 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14421 15:38:45.502289 read(6, "", 4096) = 0
14421 15:38:45.502309 close(6)          = 0
14421 15:38:45.502328 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.502350 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.502388 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.502415 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14421 15:38:45.502449 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.502470 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14421 15:38:45.502758 read(6, "", 4096) = 0
14421 15:38:45.502779 close(6)          = 0
14421 15:38:45.502799 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.502821 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14421 15:38:45.502860 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14421 15:38:45.502886 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14421 15:38:45.502920 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee1000
14421 15:38:45.502942 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14421 15:38:45.503024 read(6, "", 4096) = 0
14421 15:38:45.503070 close(6)          = 0
14421 15:38:45.503093 munmap(0xb7ee1000, 4096) = 0
14421 15:38:45.503126 read(5, "", 4096) = 0
14421 15:38:45.503145 close(5)          = 0
14421 15:38:45.503163 munmap(0xb7ee7000, 4096) = 0
14421 15:38:45.503188 time(NULL)        = 1495654725
14421 15:38:45.503217 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14421 15:38:45.503256 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14421 15:38:45.503280 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14421 15:38:45.503314 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
14421 15:38:45.503336 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14421 15:38:45.503380 read(5, "", 4096) = 0
14421 15:38:45.503399 close(5)          = 0
14421 15:38:45.503418 munmap(0xb7ee7000, 4096) = 0
14421 15:38:45.503447 getuid32()        = 0
14421 15:38:45.503478 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.503506 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.503539 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14421 15:38:45.504333 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.504367 _llseek(5, 1624, [1624], SEEK_SET) = 0
14421 15:38:45.504406 munmap(0xb7ee7000, 1624) = 0
14421 15:38:45.504428 close(5)          = 0
14421 15:38:45.504474 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.504508 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.504530 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14421 15:38:45.504564 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.504587 _llseek(5, 1233, [1233], SEEK_SET) = 0
14421 15:38:45.504627 munmap(0xb7ee7000, 1233) = 0
14421 15:38:45.504648 close(5)          = 0
14421 15:38:45.504683 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.504710 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.504731 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14421 15:38:45.504750 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.504750 _llseek(5, 1624, [1624], SEEK_SET) = 0
14421 15:38:45.504751 munmap(0xb7ee7000, 1624) = 0
14421 15:38:45.504751 close(5)          = 0
14421 15:38:45.504766 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.504793 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.504814 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14421 15:38:45.504848 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.504870 _llseek(5, 1233, [1233], SEEK_SET) = 0
14421 15:38:45.504906 munmap(0xb7ee7000, 1233) = 0
14421 15:38:45.504926 close(5)          = 0
14421 15:38:45.505393 getuid32()        = 0
14421 15:38:45.505418 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.505444 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.505465 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14421 15:38:45.505523 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.505552 _llseek(5, 1624, [1624], SEEK_SET) = 0
14421 15:38:45.505591 munmap(0xb7ee7000, 1624) = 0
14421 15:38:45.505614 close(5)          = 0
14421 15:38:45.505644 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.505673 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.505704 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14421 15:38:45.505738 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.505759 _llseek(5, 1233, [1233], SEEK_SET) = 0
14421 15:38:45.505795 munmap(0xb7ee7000, 1233) = 0
14421 15:38:45.505815 close(5)          = 0
14421 15:38:45.505838 time(NULL)        = 1495654725
14421 15:38:45.505868 munmap(0xb7ee4000, 12164) = 0
14421 15:38:45.505894 munmap(0xb7ee2000, 7136) = 0
14421 15:38:45.505921 munmap(0xb7d17000, 95428) = 0
14421 15:38:45.505943 munmap(0xb7cdd000, 201052) = 0
14421 15:38:45.505966 munmap(0xb7cc4000, 101180) = 0
14421 15:38:45.506033 gettimeofday({1495654725, 506044}, NULL) = 0
14421 15:38:45.506059 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf939aa4) = -1 ENOENT (No such file or directory)
14421 15:38:45.506089 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14421 15:38:45.506139 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf939bf4) = 0
14421 15:38:45.506179 write(3, "Wed May 24 15:38:45 2017 [pid 14421] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14421 15:38:45.506214 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf939bfc) = 0
14421 15:38:45.506241 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14421 15:38:45.506271 write(4, "\1", 1 <unfinished ...>
14422 15:38:45.506290 <... read resumed> "\1", 1) = 1
14421 15:38:45.506301 <... write resumed> ) = 1
14422 15:38:45.506317 exit_group(0)     = ?
14421 15:38:45.506381 --- SIGCHLD (Child exited) @ 0 (0) ---
14421 15:38:45.506396 sigreturn()       = ? (mask now [])
14421 15:38:45.506433 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14422
14421 15:38:45.506458 close(4)          = 0
14421 15:38:45.506493 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14421 15:38:45.506565 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14421 15:38:45.506595 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14421 15:38:45.506624 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d4d6f8) = 14423
14423 15:38:45.506717 prctl(0x1, 0x9, 0, 0, 0) = 0
14423 15:38:45.506744 close(4)          = 0
14423 15:38:45.506793 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14423 15:38:45.506826 _llseek(4, 0, [0], SEEK_CUR) = 0
14423 15:38:45.506856 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14423 15:38:45.506894 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee7000
14423 15:38:45.506918 _llseek(4, 1624, [1624], SEEK_SET) = 0
14423 15:38:45.506963 munmap(0xb7ee7000, 1624) = 0
14423 15:38:45.506986 close(4)          = 0
14423 15:38:45.507012 getuid32()        = 0
14423 15:38:45.507033 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14423 15:38:45.507059 _llseek(4, 0, [0], SEEK_CUR) = 0
14423 15:38:45.507080 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14423 15:38:45.507114 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee7000
14423 15:38:45.507137 _llseek(4, 1624, [1624], SEEK_SET) = 0
14423 15:38:45.507171 munmap(0xb7ee7000, 1624) = 0
14423 15:38:45.507191 close(4)          = 0
14423 15:38:45.507239 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14423 15:38:45.507279 read(4, "65536\n", 31) = 6
14423 15:38:45.507304 close(4)          = 0
14423 15:38:45.507332 socket(PF_FILE, SOCK_STREAM, 0) = 4
14423 15:38:45.507376 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14423 15:38:45.507406 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14423 15:38:45.507456 close(4)          = 0
14423 15:38:45.507501 socket(PF_FILE, SOCK_STREAM, 0) = 4
14423 15:38:45.507526 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14423 15:38:45.507550 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14423 15:38:45.507595 close(4)          = 0
14423 15:38:45.507647 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14423 15:38:45.507681 _llseek(4, 0, [0], SEEK_CUR) = 0
14423 15:38:45.507706 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14423 15:38:45.507742 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee7000
14423 15:38:45.507769 _llseek(4, 886, [886], SEEK_SET) = 0
14423 15:38:45.507826 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14423 15:38:45.507871 munmap(0xb7ee7000, 886) = 0
14423 15:38:45.507898 close(4)          = 0
14423 15:38:45.507922 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14423 15:38:45.507964 geteuid32()       = 0
14423 15:38:45.507991 getegid32()       = 0
14423 15:38:45.508017 setregid32(-1, 1000) = 0
14423 15:38:45.508042 setreuid32(-1, 1000) = 0
14423 15:38:45.508069 chdir("/home/msfadmin") = 0
14423 15:38:45.508098 setreuid32(-1, 0) = 0
14423 15:38:45.508121 setregid32(-1, 0) = 0
14423 15:38:45.508149 setgid32(1000)    = 0
14423 15:38:45.508174 setuid32(1000)    = 0
14423 15:38:45.508198 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14423 15:38:45.508242 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee5000
14423 15:38:45.508271 mprotect(0xb7ee7000, 4096, PROT_NONE) = 0
14423 15:38:45.508299 mprotect(0xb7ee5000, 4096, PROT_NONE) = 0
14423 15:38:45.508327 getcwd("/home/msfadmin", 4096) = 15
14423 15:38:45.508361 umask(022)        = 077
14423 15:38:45.508385 getcwd("/home/msfadmin", 4096) = 15
14423 15:38:45.508419 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14423 15:38:45.508602 write(0, "230 Login successful.\r\n", 23) = 23
14423 15:38:45.508736 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14423 15:38:45.508764 alarm(300)        = 0
14423 15:38:45.508780 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee2000
14423 15:38:45.508797 mprotect(0xb7ee4000, 4096, PROT_NONE) = 0
14423 15:38:45.508814 mprotect(0xb7ee2000, 4096, PROT_NONE) = 0
14423 15:38:45.508834 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
14423 15:38:45.508852 read(0, "QUIT\r\n", 6) = 6
14423 15:38:45.508875 shutdown(0, 0 /* receive */) = 0
14423 15:38:45.508892 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
14423 15:38:45.508907 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14423 15:38:45.508921 write(0, "221 Goodbye.\r\n", 14) = 14
14423 15:38:45.508994 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
14423 15:38:45.509011 fcntl64(0, F_SETFL, O_RDWR) = 0
14423 15:38:45.509026 shutdown(0, 2 /* send and receive */) = 0
14423 15:38:45.509054 exit_group(0)     = ?
14421 15:38:45.509103 --- SIGCHLD (Child exited) @ 0 (0) ---
14421 15:38:45.509125 alarm(1)          = 0
14421 15:38:45.509143 sigreturn()       = ? (mask now [])
14421 15:38:45.509172 close(5)          = 0
14421 15:38:45.509193 getuid32()        = 0
14421 15:38:45.509216 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14421 15:38:45.509238 _llseek(5, 0, [0], SEEK_CUR) = 0
14421 15:38:45.509256 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14421 15:38:45.509282 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee7000
14421 15:38:45.509299 _llseek(5, 1624, [1624], SEEK_SET) = 0
14421 15:38:45.509325 munmap(0xb7ee7000, 1624) = 0
14421 15:38:45.509341 close(5)          = 0
14421 15:38:45.509360 setgroups32(0, []) = 0
14421 15:38:45.509375 chdir("/usr/share/empty") = 0
14421 15:38:45.509394 chroot(".")       = 0
14421 15:38:45.509409 capset(NULL, NULL) = -1 EFAULT (Bad address)
14421 15:38:45.509427 prctl(0x8, 0, 0xbf939bd8, 0x80549a6, 0xbf939bc0) = 0
14421 15:38:45.509442 prctl(0x8, 0x1, 0xbf939bd8, 0x8054a49, 0xbf939bc0) = 0
14421 15:38:45.509456 setgid32(65534)   = 0
14421 15:38:45.509471 setuid32(65534)   = 0
14421 15:38:45.509485 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14421 15:38:45.509505 read(4, "", 1)    = 0
14421 15:38:45.509535 alarm(0)          = 1
14421 15:38:45.509554 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14423
14421 15:38:45.509576 exit_group(0)     = ?
4439  15:38:45.509629 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:38:45.509639 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:38:45.509650 write(4, "\21", 1) = 1
4439  15:38:45.509670 sigreturn()       = ? (mask now [])
4439  15:38:45.509717 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:38:45.509743 ioctl(3, FIONREAD, [1]) = 0
4439  15:38:45.509762 read(3, "\21", 1) = 1
4439  15:38:45.509780 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 14421
4439  15:38:45.509804 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:38:45.509823 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:38:45.509838 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:38:46.054544 accept(5, {sa_family=AF_INET, sin_port=htons(50629), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:38:46.054842 time(NULL)        = 1495654726
4439  15:38:46.054904 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 14424
14424 15:38:46.055368 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
14424 15:38:46.055467 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
14424 15:38:46.055519 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
14424 15:38:46.055566 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
14424 15:38:46.055624 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
14424 15:38:46.055809 close(3)          = 0
14424 15:38:46.055863 close(4)          = 0
14424 15:38:46.055890 open("/dev/null", O_RDONLY) = 3
14424 15:38:46.055964 dup2(3, 0)        = 0
14424 15:38:46.056014 dup2(3, 1)        = 1
14424 15:38:46.056039 dup2(3, 2)        = 2
14424 15:38:46.056062 close(3)          = 0
14424 15:38:46.056097 setgid32(0)       = 0
14424 15:38:46.056131 setgroups32(0, []) = 0
14424 15:38:46.056159 setuid32(0)       = 0
14424 15:38:46.056189 getpriority(PRIO_PROCESS, 0) = 20
14424 15:38:46.056215 setpriority(PRIO_PROCESS, 0, 10) = 0
14424 15:38:46.056241 getpriority(PRIO_PROCESS, 0) = 10
14424 15:38:46.056339 getpeername(13, {sa_family=AF_INET, sin_port=htons(50629), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
14424 15:38:46.056401 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
14424 15:38:46.056471 open("/etc/hosts.allow", O_RDONLY) = 3
14424 15:38:46.056520 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
14424 15:38:46.056569 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
14424 15:38:46.056604 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
14424 15:38:46.056824 close(3)          = 0
14424 15:38:46.056856 munmap(0xb7f61000, 4096) = 0
14424 15:38:46.056925 fcntl64(13, F_SETFD, 0) = 0
14424 15:38:46.056960 close(7)          = 0
14424 15:38:46.056987 dup2(13, 0)       = 0
14424 15:38:46.057012 dup2(13, 1)       = 1
14424 15:38:46.057035 dup2(13, 2)       = 2
14424 15:38:46.057060 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
14424 15:38:46.057090 close(13)         = 0
14424 15:38:46.057116 setsid()          = 14424
14424 15:38:46.057143 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
14424 15:38:46.057334 brk(0)            = 0x8064000
14424 15:38:46.057384 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14424 15:38:46.057428 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f80000
14424 15:38:46.057464 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
14424 15:38:46.057503 open("/etc/ld.so.cache", O_RDONLY) = 3
14424 15:38:46.057536 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
14424 15:38:46.057581 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f78000
14424 15:38:46.057608 close(3)          = 0
14424 15:38:46.057778 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14424 15:38:46.057829 open("/lib/libpam.so.0", O_RDONLY) = 3
