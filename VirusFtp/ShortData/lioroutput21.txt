8390  14:36:56.904050 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8390  14:36:56.904114 read(6, "", 4096) = 0
8390  14:36:56.904129 close(6)          = 0
8390  14:36:56.904142 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.904158 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8390  14:36:56.904185 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8390  14:36:56.904204 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8390  14:36:56.904238 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
8390  14:36:56.904258 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8390  14:36:56.904316 read(6, "", 4096) = 0
8390  14:36:56.904330 close(6)          = 0
8390  14:36:56.904344 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.904360 read(5, "", 4096) = 0
8390  14:36:56.904373 close(5)          = 0
8390  14:36:56.904387 munmap(0xb7f2f000, 4096) = 0
8390  14:36:56.904402 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
8390  14:36:56.904421 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
8390  14:36:56.904445 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
8390  14:36:56.904460 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
8390  14:36:56.904526 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8390  14:36:56.904553 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
8390  14:36:56.904571 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
8390  14:36:56.904595 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
8390  14:36:56.904610 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
8390  14:36:56.904679 read(6, "", 4096) = 0
8390  14:36:56.904693 close(6)          = 0
8390  14:36:56.904707 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.904736 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8390  14:36:56.904768 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
8390  14:36:56.904788 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
8390  14:36:56.904812 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
8390  14:36:56.904827 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8390  14:36:56.904892 read(6, "", 4096) = 0
8390  14:36:56.904907 close(6)          = 0
8390  14:36:56.904921 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.904937 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8390  14:36:56.904964 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
8390  14:36:56.904983 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
8390  14:36:56.905006 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
8390  14:36:56.905021 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
8390  14:36:56.905190 read(6, "", 4096) = 0
8390  14:36:56.905205 close(6)          = 0
8390  14:36:56.905230 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.905250 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8390  14:36:56.905278 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8390  14:36:56.905297 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8390  14:36:56.905320 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f29000
8390  14:36:56.905336 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8390  14:36:56.905393 read(6, "", 4096) = 0
8390  14:36:56.905408 close(6)          = 0
8390  14:36:56.905422 munmap(0xb7f29000, 4096) = 0
8390  14:36:56.905437 read(5, "", 4096) = 0
8390  14:36:56.905451 close(5)          = 0
8390  14:36:56.905464 munmap(0xb7f2f000, 4096) = 0
8390  14:36:56.905485 time(NULL)        = 1495651016
8390  14:36:56.905502 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8390  14:36:56.905530 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
8390  14:36:56.905547 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8390  14:36:56.905570 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2f000
8390  14:36:56.905585 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
8390  14:36:56.905621 read(5, "", 4096) = 0
8390  14:36:56.905635 close(5)          = 0
8390  14:36:56.905648 munmap(0xb7f2f000, 4096) = 0
8390  14:36:56.905672 getuid32()        = 0
8390  14:36:56.905698 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.905746 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.905764 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8390  14:36:56.905788 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.905805 _llseek(5, 1624, [1624], SEEK_SET) = 0
8390  14:36:56.905835 munmap(0xb7f2f000, 1624) = 0
8390  14:36:56.905851 close(5)          = 0
8390  14:36:56.905891 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.905918 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.905933 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8390  14:36:56.905957 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.905973 _llseek(5, 1233, [1233], SEEK_SET) = 0
8390  14:36:56.906002 munmap(0xb7f2f000, 1233) = 0
8390  14:36:56.906026 close(5)          = 0
8390  14:36:56.906052 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.906069 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.906082 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8390  14:36:56.906103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.906117 _llseek(5, 1624, [1624], SEEK_SET) = 0
8390  14:36:56.906137 munmap(0xb7f2f000, 1624) = 0
8390  14:36:56.906149 close(5)          = 0
8390  14:36:56.906165 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.906182 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.906195 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8390  14:36:56.906229 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.906244 _llseek(5, 1233, [1233], SEEK_SET) = 0
8390  14:36:56.906266 munmap(0xb7f2f000, 1233) = 0
8390  14:36:56.906279 close(5)          = 0
8390  14:36:56.906583 getuid32()        = 0
8390  14:36:56.906597 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.906614 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.906628 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8390  14:36:56.906648 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.906662 _llseek(5, 1624, [1624], SEEK_SET) = 0
8390  14:36:56.906682 munmap(0xb7f2f000, 1624) = 0
8390  14:36:56.906694 close(5)          = 0
8390  14:36:56.906721 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.906740 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.906753 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8390  14:36:56.906774 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.906788 _llseek(5, 1233, [1233], SEEK_SET) = 0
8390  14:36:56.906810 munmap(0xb7f2f000, 1233) = 0
8390  14:36:56.906822 close(5)          = 0
8390  14:36:56.906837 time(NULL)        = 1495651016
8390  14:36:56.906858 munmap(0xb7f2c000, 12164) = 0
8390  14:36:56.906876 munmap(0xb7f2a000, 7136) = 0
8390  14:36:56.906896 munmap(0xb7d5f000, 95428) = 0
8390  14:36:56.906911 munmap(0xb7d25000, 201052) = 0
8390  14:36:56.906926 munmap(0xb7d0c000, 101180) = 0
8390  14:36:56.906949 gettimeofday({1495651016, 906955}, NULL) = 0
8390  14:36:56.906965 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8ffa74) = -1 ENOENT (No such file or directory)
8390  14:36:56.906985 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
8390  14:36:56.907023 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8ffbc4) = 0
8390  14:36:56.907047 write(3, "Wed May 24 14:36:56 2017 [pid 8390] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 76) = 76
8390  14:36:56.907069 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8ffbcc) = 0
8390  14:36:56.907086 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8390  14:36:56.907106 write(4, "\1", 1 <unfinished ...>
8391  14:36:56.907127 <... read resumed> "\1", 1) = 1
8390  14:36:56.907135 <... write resumed> ) = 1
8391  14:36:56.907147 exit_group(0)     = ?
8390  14:36:56.907236 --- SIGCHLD (Child exited) @ 0 (0) ---
8390  14:36:56.907262 sigreturn()       = ? (mask now [])
8390  14:36:56.907301 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 8391
8390  14:36:56.907323 close(4)          = 0
8390  14:36:56.907347 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
8390  14:36:56.907378 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8390  14:36:56.907410 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8390  14:36:56.907442 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d956f8) = 8392
8392  14:36:56.907560 prctl(0x1, 0x9, 0, 0, 0) = 0
8392  14:36:56.907594 close(4)          = 0
8392  14:36:56.907633 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8392  14:36:56.907656 _llseek(4, 0, [0], SEEK_CUR) = 0
8392  14:36:56.907677 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8392  14:36:56.907740 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2f000
8392  14:36:56.907769 _llseek(4, 1624, [1624], SEEK_SET) = 0
8392  14:36:56.907821 munmap(0xb7f2f000, 1624) = 0
8392  14:36:56.907853 close(4)          = 0
8392  14:36:56.907872 getuid32()        = 0
8392  14:36:56.907885 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8392  14:36:56.907903 _llseek(4, 0, [0], SEEK_CUR) = 0
8392  14:36:56.907917 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8392  14:36:56.907938 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2f000
8392  14:36:56.907953 _llseek(4, 1624, [1624], SEEK_SET) = 0
8392  14:36:56.907973 munmap(0xb7f2f000, 1624) = 0
8392  14:36:56.907986 close(4)          = 0
8392  14:36:56.908023 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
8392  14:36:56.908050 read(4, "65536\n", 31) = 6
8392  14:36:56.908081 close(4)          = 0
8392  14:36:56.908102 socket(PF_FILE, SOCK_STREAM, 0) = 4
8392  14:36:56.908128 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8392  14:36:56.908143 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8392  14:36:56.908173 close(4)          = 0
8392  14:36:56.908206 socket(PF_FILE, SOCK_STREAM, 0) = 4
8392  14:36:56.908224 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8392  14:36:56.908238 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8392  14:36:56.908263 close(4)          = 0
8392  14:36:56.908296 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
8392  14:36:56.908315 _llseek(4, 0, [0], SEEK_CUR) = 0
8392  14:36:56.908329 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8392  14:36:56.908351 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f2f000
8392  14:36:56.908365 _llseek(4, 886, [886], SEEK_SET) = 0
8392  14:36:56.908398 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8392  14:36:56.908420 munmap(0xb7f2f000, 886) = 0
8392  14:36:56.908433 close(4)          = 0
8392  14:36:56.908446 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
8392  14:36:56.908468 geteuid32()       = 0
8392  14:36:56.908482 getegid32()       = 0
8392  14:36:56.908497 setregid32(-1, 1000) = 0
8392  14:36:56.908510 setreuid32(-1, 1000) = 0
8392  14:36:56.908525 chdir("/home/msfadmin") = 0
8392  14:36:56.908541 setreuid32(-1, 0) = 0
8392  14:36:56.908553 setregid32(-1, 0) = 0
8392  14:36:56.908567 setgid32(1000)    = 0
8392  14:36:56.908580 setuid32(1000)    = 0
8392  14:36:56.908593 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
8392  14:36:56.908611 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2d000
8392  14:36:56.908626 mprotect(0xb7f2f000, 4096, PROT_NONE) = 0
8392  14:36:56.908641 mprotect(0xb7f2d000, 4096, PROT_NONE) = 0
8392  14:36:56.908656 getcwd("/home/msfadmin", 4096) = 15
8392  14:36:56.908674 umask(022)        = 077
8392  14:36:56.908698 getcwd("/home/msfadmin", 4096) = 15
8392  14:36:56.908725 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
8392  14:36:56.908757 write(0, "230 Login successful.\r\n", 23) = 23
8392  14:36:56.908898 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.908921 alarm(300)        = 0
8392  14:36:56.908936 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2a000
8392  14:36:56.908951 mprotect(0xb7f2c000, 4096, PROT_NONE) = 0
8392  14:36:56.908966 mprotect(0xb7f2a000, 4096, PROT_NONE) = 0
8392  14:36:56.908983 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
8392  14:36:56.909000 read(0, "TYPE I\r\n", 8) = 8
8392  14:36:56.909022 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
8392  14:36:56.909072 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.909091 alarm(300)        = 300
8392  14:36:56.909106 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
8392  14:36:56.909120 read(0, "PASV\r\n", 6) = 6
8392  14:36:56.909136 write(5, "\n", 1) = 1
8392  14:36:56.909151 read(5,  <unfinished ...>
8390  14:36:56.909167 close(5)          = 0
8390  14:36:56.909211 getuid32()        = 0
8390  14:36:56.909234 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8390  14:36:56.909256 _llseek(5, 0, [0], SEEK_CUR) = 0
8390  14:36:56.909274 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8390  14:36:56.909300 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f2f000
8390  14:36:56.909316 _llseek(5, 1624, [1624], SEEK_SET) = 0
8390  14:36:56.909342 munmap(0xb7f2f000, 1624) = 0
8390  14:36:56.909359 close(5)          = 0
8390  14:36:56.909383 setgroups32(0, []) = 0
8390  14:36:56.909400 chdir("/usr/share/empty") = 0
8390  14:36:56.909419 chroot(".")       = 0
8390  14:36:56.909435 capset(NULL, NULL) = -1 EFAULT (Bad address)
8390  14:36:56.909456 prctl(0x8, 0, 0xbf8ffba8, 0x80549a6, 0xbf8ffb90) = 0
8390  14:36:56.909472 prctl(0x8, 0x1, 0xbf8ffba8, 0x8054a49, 0xbf8ffb90) = 0
8390  14:36:56.909487 setgid32(65534)   = 0
8390  14:36:56.909502 setuid32(65534)   = 0
8390  14:36:56.909516 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
8390  14:36:56.909536 read(4, "\n", 1)  = 1
8390  14:36:56.909555 write(4, "\1", 1) = 1
8392  14:36:56.909571 <... read resumed> "\1", 1) = 1
8392  14:36:56.909583 write(5, "\f", 1) = 1
8392  14:36:56.909598 read(5,  <unfinished ...>
8390  14:36:56.909608 read(4, "\f", 1)  = 1
8390  14:36:56.909626 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
8390  14:36:56.909647 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
8390  14:36:56.909664 gettimeofday({1495651016, 909669}, NULL) = 0
8390  14:36:56.909751 bind(5, {sa_family=AF_INET, sin_port=htons(39946), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
8390  14:36:56.909798 listen(5, 1)      = 0
8390  14:36:56.909827 write(4, "\n\234\0\0", 4) = 4
8392  14:36:56.909856 <... read resumed> "\n\234\0\0", 4) = 4
8392  14:36:56.909892 write(0, "227 Entering Passive Mode (127,0,0,1,156,10).\r\n", 47) = 47
8392  14:36:56.910139 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.910170 alarm(300)        = 300
8392  14:36:56.910170 recv(0, "STOR myfile21\r\n", 4096, MSG_PEEK) = 15
8392  14:36:56.910185 read(0, "STOR myfile21\r\n", 15) = 15
8392  14:36:56.910210 write(5, "\v", 1) = 1
8392  14:36:56.910227 read(5,  <unfinished ...>
8390  14:36:56.910238 read(4, "\v", 1)  = 1
8390  14:36:56.910256 write(4, "\1\0\0\0", 4) = 4
8392  14:36:56.910272 <... read resumed> "\1\0\0\0", 4) = 4
8392  14:36:56.910286 gettimeofday({1495651016, 910291}, NULL) = 0
8392  14:36:56.910302 getcwd("/home/msfadmin", 4096) = 15
8392  14:36:56.910321 open("myfile21", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
8392  14:36:56.910343 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
8392  14:36:56.910369 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
8392  14:36:56.910386 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
8392  14:36:56.910401 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8ffaf4) = 0
8392  14:36:56.910426 ftruncate64(4, 0) = 0
8392  14:36:56.910465 _llseek(4, 0, [0], SEEK_SET) = 0
8392  14:36:56.910482 write(5, "\v", 1) = 1
8392  14:36:56.910498 read(5,  <unfinished ...>
8390  14:36:56.910509 read(4, "\v", 1)  = 1
8390  14:36:56.910525 write(4, "\1\0\0\0", 4) = 4
8392  14:36:56.910541 <... read resumed> "\1\0\0\0", 4) = 4
8392  14:36:56.910677 write(5, "\v", 1) = 1
8392  14:36:56.910696 read(5,  <unfinished ...>
8390  14:36:56.910706 read(4, "\v", 1)  = 1
8390  14:36:56.910723 write(4, "\1\0\0\0", 4) = 4
8392  14:36:56.910738 <... read resumed> "\1\0\0\0", 4) = 4
8392  14:36:56.910749 write(5, "\r", 1) = 1
8392  14:36:56.910764 read(5,  <unfinished ...>
8390  14:36:56.910774 read(4, "\r", 1)  = 1
8390  14:36:56.910793 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
8390  14:36:56.910819 accept(5, {sa_family=AF_INET, sin_port=htons(42925), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
8390  14:36:56.910853 write(4, "\1", 1) = 1
8392  14:36:56.910868 <... read resumed> "\1", 1) = 1
8392  14:36:56.910883 recvmsg(5,  <unfinished ...>
8390  14:36:56.910898 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
8392  14:36:56.910924 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
8392  14:36:56.910944 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
8392  14:36:56.910962 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
8392  14:36:56.910980 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
8392  14:36:56.910997 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.911017 alarm(300)        = 300
8392  14:36:56.911037 write(0, "150 Ok to send data.\r\n", 22) = 22
8392  14:36:56.911159 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d64000
8392  14:36:56.911160 mprotect(0xb7d76000, 4096, PROT_NONE) = 0
8392  14:36:56.911160 mprotect(0xb7d64000, 4096, PROT_NONE) = 0
8392  14:36:56.911160 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
8392  14:36:56.911160 write(4, "assasaaa\na\na\na\na\n", 17) = 17
8392  14:36:56.911161 read(6, "", 65536) = 0
8392  14:36:56.911161 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.911161 alarm(300)        = 300
8392  14:36:56.911161 close(6)          = 0
8392  14:36:56.911171 alarm(0)          = 300
8392  14:36:56.911185 gettimeofday({1495651016, 911190}, NULL) = 0
8392  14:36:56.911214 getpid()          = 8392
8392  14:36:56.911233 gettimeofday({1495651016, 911239}, NULL) = 0
8392  14:36:56.911260 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8ffa94) = 0
8392  14:36:56.911283 write(3, "Wed May 24 14:36:56 2017 [pid 8392] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile21\", 17 bytes, 17.51Kbyte/sec\n", 130) = 130
8392  14:36:56.911314 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8ffa9c) = 0
8392  14:36:56.911351 write(0, "226 Transfer complete.\r\n", 24) = 24
8392  14:36:56.911429 write(5, "\n", 1) = 1
8392  14:36:56.911447 read(5,  <unfinished ...>
8390  14:36:56.911459 close(6)          = 0
8390  14:36:56.911487 read(4, "\n", 1)  = 1
8390  14:36:56.911504 close(5)          = 0
8390  14:36:56.911521 write(4, "\1", 1) = 1
8392  14:36:56.911537 <... read resumed> "\1", 1) = 1
8392  14:36:56.911548 close(4)          = 0
8392  14:36:56.911564 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8392  14:36:56.911584 alarm(300)        = 0
8392  14:36:56.911601 recv(0,  <unfinished ...>
8390  14:36:56.911613 read(4,  <unfinished ...>
4439  14:36:56.916558 <... select resumed> ) = 1 (in [5])
4439  14:36:56.916635 accept(5, {sa_family=AF_INET, sin_port=htons(36529), sin_addr=inet_addr("10.0.2.8")}, [16]) = 13
4439  14:36:56.916723 time(NULL)        = 1495651016
4439  14:36:56.916750 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 8393
8393  14:36:56.916935 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
8393  14:36:56.916965 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
8393  14:36:56.916989 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
8393  14:36:56.917013 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
8393  14:36:56.917041 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
8393  14:36:56.917066 close(3)          = 0
8393  14:36:56.917085 close(4)          = 0
8393  14:36:56.917103 open("/dev/null", O_RDONLY) = 3
8393  14:36:56.917132 dup2(3, 0)        = 0
8393  14:36:56.917151 dup2(3, 1)        = 1
8393  14:36:56.917168 dup2(3, 2)        = 2
8393  14:36:56.917185 close(3)          = 0
8393  14:36:56.917207 setgid32(0)       = 0
8393  14:36:56.917231 setgroups32(0, []) = 0
8393  14:36:56.917250 setuid32(0)       = 0
8393  14:36:56.917272 getpriority(PRIO_PROCESS, 0) = 20
8393  14:36:56.917291 setpriority(PRIO_PROCESS, 0, 10) = 0
8393  14:36:56.917346 getpriority(PRIO_PROCESS, 0) = 10
8393  14:36:56.917426 getpeername(13, {sa_family=AF_INET, sin_port=htons(36529), sin_addr=inet_addr("10.0.2.8")}, [16]) = 0
8393  14:36:56.917473 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("10.0.2.11")}, [16]) = 0
8393  14:36:56.917527 open("/etc/hosts.allow", O_RDONLY) = 3
