18881 16:33:49.233211 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d68000
18881 16:33:49.233254 mmap2(0xb7d73000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d73000
18881 16:33:49.233303 mmap2(0xb7d74000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d74000
18881 16:33:49.233344 close(7)          = 0
18881 16:33:49.233388 open("/etc/ld.so.cache", O_RDONLY) = 7
18881 16:33:49.233432 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
18881 16:33:49.233484 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d60000
18881 16:33:49.233523 close(7)          = 0
18881 16:33:49.233562 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18881 16:33:49.233615 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
18881 16:33:49.233664 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
18881 16:33:49.233916 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
18881 16:33:49.233977 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d2e000
18881 16:33:49.234019 mmap2(0xb7d37000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d37000
18881 16:33:49.234070 mmap2(0xb7d39000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d39000
18881 16:33:49.234121 close(7)          = 0
18881 16:33:49.234165 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
18881 16:33:49.234214 open("/lib/libselinux.so.1", O_RDONLY) = 7
18881 16:33:49.234258 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
18881 16:33:49.234474 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
18881 16:33:49.234530 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d15000
18881 16:33:49.234571 mmap2(0xb7d2c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d2c000
18881 16:33:49.234624 close(7)          = 0
18881 16:33:49.234893 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18881 16:33:49.234972 statfs64("/selinux", 84, 0xbfe0209c) = -1 ENOENT (No such file or directory)
18881 16:33:49.235017 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
18881 16:33:49.235084 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
18881 16:33:49.235139 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f31000
18881 16:33:49.235181 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
18881 16:33:49.235389 read(7, "", 1024) = 0
18881 16:33:49.235429 close(7)          = 0
18881 16:33:49.235467 munmap(0xb7f31000, 4096) = 0
18881 16:33:49.235518 munmap(0xb7d60000, 29913) = 0
18881 16:33:49.235565 read(6, "", 4096) = 0
18881 16:33:49.235606 close(6)          = 0
18881 16:33:49.235643 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.235684 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.235789 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.235840 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18881 16:33:49.235893 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.235934 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18881 16:33:49.236044 read(6, "", 4096) = 0
18881 16:33:49.236083 close(6)          = 0
18881 16:33:49.236120 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236160 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.236219 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.236264 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18881 16:33:49.236316 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.236356 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18881 16:33:49.236357 read(6, "", 4096) = 0
18881 16:33:49.236357 close(6)          = 0
18881 16:33:49.236357 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236357 read(5, "", 4096) = 0
18881 16:33:49.236357 close(5)          = 0
18881 16:33:49.236357 munmap(0xb7f38000, 4096) = 0
18881 16:33:49.236357 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
18881 16:33:49.236357 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f38000
18881 16:33:49.236357 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
18881 16:33:49.236357 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.236357 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.236357 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.236357 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
18881 16:33:49.236357 read(6, "", 4096) = 0
18881 16:33:49.236357 close(6)          = 0
18881 16:33:49.236357 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236357 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.236357 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.236357 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.236357 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18881 16:33:49.236357 read(6, "", 4096) = 0
18881 16:33:49.236357 close(6)          = 0
18881 16:33:49.236357 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236357 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.236357 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.236357 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.236357 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
18881 16:33:49.236357 read(6, "", 4096) = 0
18881 16:33:49.236357 close(6)          = 0
18881 16:33:49.236357 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236357 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18881 16:33:49.236357 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18881 16:33:49.236357 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f32000
18881 16:33:49.236357 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18881 16:33:49.236357 read(6, "", 4096) = 0
18881 16:33:49.236357 close(6)          = 0
18881 16:33:49.236357 munmap(0xb7f32000, 4096) = 0
18881 16:33:49.236357 read(5, "", 4096) = 0
18881 16:33:49.236357 close(5)          = 0
18881 16:33:49.236357 munmap(0xb7f38000, 4096) = 0
18881 16:33:49.236357 time(NULL)        = 1495658029
18881 16:33:49.236357 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18881 16:33:49.236357 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
18881 16:33:49.236357 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f38000
18881 16:33:49.236357 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
18881 16:33:49.236357 read(5, "", 4096) = 0
18881 16:33:49.236357 close(5)          = 0
18881 16:33:49.236357 munmap(0xb7f38000, 4096) = 0
18881 16:33:49.236357 getuid32()        = 0
18881 16:33:49.236357 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.236357 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.236357 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.236357 _llseek(5, 1624, [1624], SEEK_SET) = 0
18881 16:33:49.236357 munmap(0xb7f38000, 1624) = 0
18881 16:33:49.236357 close(5)          = 0
18881 16:33:49.236357 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.236357 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.236357 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18881 16:33:49.236357 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.236357 _llseek(5, 1233, [1233], SEEK_SET) = 0
18881 16:33:49.236357 munmap(0xb7f38000, 1233) = 0
18881 16:33:49.236357 close(5)          = 0
18881 16:33:49.240188 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.240247 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.240286 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18881 16:33:49.240339 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.240380 _llseek(5, 1624, [1624], SEEK_SET) = 0
18881 16:33:49.240499 munmap(0xb7f38000, 1624) = 0
18881 16:33:49.240555 close(5)          = 0
18881 16:33:49.240603 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.240650 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.240690 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18881 16:33:49.240743 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.240783 _llseek(5, 1233, [1233], SEEK_SET) = 0
18881 16:33:49.240838 munmap(0xb7f38000, 1233) = 0
18881 16:33:49.240876 close(5)          = 0
18881 16:33:49.241525 getuid32()        = 0
18881 16:33:49.241582 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.241632 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.241673 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18881 16:33:49.241726 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.241767 _llseek(5, 1624, [1624], SEEK_SET) = 0
18881 16:33:49.241820 munmap(0xb7f38000, 1624) = 0
18881 16:33:49.241859 close(5)          = 0
18881 16:33:49.241907 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.242002 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.242041 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18881 16:33:49.242094 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.242135 _llseek(5, 1233, [1233], SEEK_SET) = 0
18881 16:33:49.242190 munmap(0xb7f38000, 1233) = 0
18881 16:33:49.242228 close(5)          = 0
18881 16:33:49.242272 time(NULL)        = 1495658029
18881 16:33:49.242325 munmap(0xb7f35000, 12164) = 0
18881 16:33:49.242373 munmap(0xb7f33000, 7136) = 0
18881 16:33:49.242421 munmap(0xb7d68000, 95428) = 0
18881 16:33:49.242494 munmap(0xb7d2e000, 201052) = 0
18881 16:33:49.242535 munmap(0xb7d15000, 101180) = 0
18881 16:33:49.242591 gettimeofday({1495658029, 242628}, NULL) = 0
18881 16:33:49.242663 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe03f74) = -1 ENOENT (No such file or directory)
18881 16:33:49.242715 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
18881 16:33:49.242795 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe040c4) = 0
18881 16:33:49.242852 write(3, "Wed May 24 16:33:49 2017 [pid 18881] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
18881 16:33:49.242906 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe040cc) = 0
18881 16:33:49.251905 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18881 16:33:49.252017 write(4, "\1", 1 <unfinished ...>
18882 16:33:49.252053 <... read resumed> "\1", 1) = 1
18881 16:33:49.252075 <... write resumed> ) = 1
18882 16:33:49.252103 exit_group(0)     = ?
18881 16:33:49.252181 --- SIGCHLD (Child exited) @ 0 (0) ---
18881 16:33:49.252208 sigreturn()       = ? (mask now [])
18881 16:33:49.252254 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18882
18881 16:33:49.252291 close(4)          = 0
18881 16:33:49.252324 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
18881 16:33:49.252362 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18881 16:33:49.252400 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18881 16:33:49.252460 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d9e6f8) = 18883
18883 16:33:49.252587 prctl(0x1, 0x9, 0, 0, 0) = 0
18883 16:33:49.252624 close(4)          = 0
18883 16:33:49.252690 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18883 16:33:49.252728 _llseek(4, 0, [0], SEEK_CUR) = 0
18883 16:33:49.252762 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18883 16:33:49.252799 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
18883 16:33:49.252827 _llseek(4, 1624, [1624], SEEK_SET) = 0
18883 16:33:49.252872 munmap(0xb7f38000, 1624) = 0
18883 16:33:49.252901 close(4)          = 0
18883 16:33:49.252950 getuid32()        = 0
18883 16:33:49.252978 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18883 16:33:49.253008 _llseek(4, 0, [0], SEEK_CUR) = 0
18883 16:33:49.253034 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18883 16:33:49.253069 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
18883 16:33:49.253095 _llseek(4, 1624, [1624], SEEK_SET) = 0
18883 16:33:49.253129 munmap(0xb7f38000, 1624) = 0
18883 16:33:49.253154 close(4)          = 0
18883 16:33:49.253205 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
18883 16:33:49.253248 read(4, "65536\n", 31) = 6
18883 16:33:49.253276 close(4)          = 0
18883 16:33:49.253307 socket(PF_FILE, SOCK_STREAM, 0) = 4
18883 16:33:49.253336 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18883 16:33:49.253363 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18883 16:33:49.253405 close(4)          = 0
18883 16:33:49.253455 socket(PF_FILE, SOCK_STREAM, 0) = 4
18883 16:33:49.253481 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18883 16:33:49.253507 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18883 16:33:49.253545 close(4)          = 0
18883 16:33:49.253593 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
18883 16:33:49.253627 _llseek(4, 0, [0], SEEK_CUR) = 0
18883 16:33:49.253658 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18883 16:33:49.253688 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f38000
18883 16:33:49.253710 _llseek(4, 886, [886], SEEK_SET) = 0
18883 16:33:49.253752 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18883 16:33:49.253780 munmap(0xb7f38000, 886) = 0
18883 16:33:49.253780 close(4)          = 0
18883 16:33:49.254037 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
18883 16:33:49.254072 geteuid32()       = 0
18883 16:33:49.254094 getegid32()       = 0
18883 16:33:49.254117 setregid32(-1, 1000) = 0
18883 16:33:49.254145 setreuid32(-1, 1000) = 0
18883 16:33:49.254168 chdir("/home/msfadmin") = 0
18883 16:33:49.254192 setreuid32(-1, 0) = 0
18883 16:33:49.254212 setregid32(-1, 0) = 0
18883 16:33:49.254234 setgid32(1000)    = 0
18883 16:33:49.254255 setuid32(1000)    = 0
18883 16:33:49.254277 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
18883 16:33:49.254303 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f36000
18883 16:33:49.254326 mprotect(0xb7f38000, 4096, PROT_NONE) = 0
18883 16:33:49.254350 mprotect(0xb7f36000, 4096, PROT_NONE) = 0
18883 16:33:49.254373 getcwd("/home/msfadmin", 4096) = 15
18883 16:33:49.254399 umask(022)        = 077
18883 16:33:49.254420 getcwd("/home/msfadmin", 4096) = 15
18883 16:33:49.254445 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18883 16:33:49.254484 write(0, "230 Login successful.\r\n", 23) = 23
18883 16:33:49.254642 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18883 16:33:49.254674 alarm(300)        = 0
18883 16:33:49.254714 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f33000
18883 16:33:49.254736 mprotect(0xb7f35000, 4096, PROT_NONE) = 0
18883 16:33:49.254760 mprotect(0xb7f33000, 4096, PROT_NONE) = 0
18883 16:33:49.254785 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
18883 16:33:49.254810 read(0, "QUIT\r\n", 6) = 6
18883 16:33:49.254838 shutdown(0, 0 /* receive */) = 0
18883 16:33:49.254863 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
18883 16:33:49.254885 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18883 16:33:49.254906 write(0, "221 Goodbye.\r\n", 14) = 14
18883 16:33:49.254998 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
18883 16:33:49.255039 fcntl64(0, F_SETFL, O_RDWR) = 0
18883 16:33:49.255062 shutdown(0, 2 /* send and receive */) = 0
18883 16:33:49.255115 exit_group(0)     = ?
18881 16:33:49.255157 --- SIGCHLD (Child exited) @ 0 (0) ---
18881 16:33:49.255184 alarm(1)          = 0
18881 16:33:49.255224 sigreturn()       = ? (mask now [])
18881 16:33:49.255258 close(5)          = 0
18881 16:33:49.255284 getuid32()        = 0
18881 16:33:49.255313 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18881 16:33:49.255340 _llseek(5, 0, [0], SEEK_CUR) = 0
18881 16:33:49.255364 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18881 16:33:49.255396 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f38000
18881 16:33:49.255419 _llseek(5, 1624, [1624], SEEK_SET) = 0
18881 16:33:49.255450 munmap(0xb7f38000, 1624) = 0
18881 16:33:49.255473 close(5)          = 0
18881 16:33:49.255497 setgroups32(0, []) = 0
18881 16:33:49.255552 chdir("/usr/share/empty") = 0
18881 16:33:49.255588 chroot(".")       = 0
18881 16:33:49.255610 capset(NULL, NULL) = -1 EFAULT (Bad address)
18881 16:33:49.255635 prctl(0x8, 0, 0xbfe040a8, 0x80549a6, 0xbfe04090) = 0
18881 16:33:49.255657 prctl(0x8, 0x1, 0xbfe040a8, 0x8054a49, 0xbfe04090) = 0
18881 16:33:49.255677 setgid32(65534)   = 0
18881 16:33:49.255698 setuid32(65534)   = 0
18881 16:33:49.255719 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
18881 16:33:49.255745 read(4, "", 1)    = 0
18881 16:33:49.255767 alarm(0)          = 1
18881 16:33:49.255797 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18883
18881 16:33:49.255822 exit_group(0)     = ?
4439  16:33:49.255878 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  16:33:49.255895 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  16:33:49.255914 write(4, "\21", 1) = 1
4439  16:33:49.255940 sigreturn()       = ? (mask now [])
4439  16:33:49.255990 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  16:33:49.256056 ioctl(3, FIONREAD, [1]) = 0
4439  16:33:49.256094 read(3, "\21", 1) = 1
4439  16:33:49.256119 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 18881
4439  16:33:49.256149 close(-1)         = -1 EBADF (Bad file descriptor)
4439  16:33:49.256173 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  16:33:49.256194 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  16:33:49.781283 accept(5, {sa_family=AF_INET, sin_port=htons(49379), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  16:33:49.781547 time(NULL)        = 1495658029
4439  16:33:49.781640 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 18884
18884 16:33:49.782190 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
18884 16:33:49.782294 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
18884 16:33:49.782375 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
18884 16:33:49.782519 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
18884 16:33:49.782657 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
18884 16:33:49.782743 close(3)          = 0
18884 16:33:49.782811 close(4)          = 0
18884 16:33:49.782880 open("/dev/null", O_RDONLY) = 3
18884 16:33:49.782970 dup2(3, 0)        = 0
18884 16:33:49.783093 dup2(3, 1)        = 1
18884 16:33:49.783172 dup2(3, 2)        = 2
18884 16:33:49.783238 close(3)          = 0
18884 16:33:49.783317 setgid32(0)       = 0
18884 16:33:49.783399 setgroups32(0, []) = 0
18884 16:33:49.783472 setuid32(0)       = 0
18884 16:33:49.783547 getpriority(PRIO_PROCESS, 0) = 20
18884 16:33:49.783615 setpriority(PRIO_PROCESS, 0, 10) = 0
18884 16:33:49.783684 getpriority(PRIO_PROCESS, 0) = 10
18884 16:33:49.783865 getpeername(13, {sa_family=AF_INET, sin_port=htons(49379), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
18884 16:33:49.783992 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
18884 16:33:49.784150 open("/etc/hosts.allow", O_RDONLY) = 3
