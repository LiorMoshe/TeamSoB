10917 15:02:55.167430 close(7)          = 0
10917 15:02:55.167451 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10917 15:02:55.167474 open("/lib/libselinux.so.1", O_RDONLY) = 7
10917 15:02:55.167495 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
10917 15:02:55.167634 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
10917 15:02:55.167674 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cd7000
10917 15:02:55.167698 mmap2(0xb7cee000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7cee000
10917 15:02:55.167727 close(7)          = 0
10917 15:02:55.167905 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10917 15:02:55.167949 statfs64("/selinux", 84, 0xbf9623fc) = -1 ENOENT (No such file or directory)
10917 15:02:55.167970 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
10917 15:02:55.168008 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
10917 15:02:55.168036 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef3000
10917 15:02:55.168054 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
10917 15:02:55.168185 read(7, "", 1024) = 0
10917 15:02:55.168202 close(7)          = 0
10917 15:02:55.168219 munmap(0xb7ef3000, 4096) = 0
10917 15:02:55.168246 munmap(0xb7d22000, 29913) = 0
10917 15:02:55.168269 read(6, "", 4096) = 0
10917 15:02:55.168287 close(6)          = 0
10917 15:02:55.168303 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.168321 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.168353 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.168381 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10917 15:02:55.168407 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.168425 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10917 15:02:55.168490 read(6, "", 4096) = 0
10917 15:02:55.168507 close(6)          = 0
10917 15:02:55.168523 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.168541 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.168571 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.168591 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10917 15:02:55.168618 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.168635 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10917 15:02:55.168697 read(6, "", 4096) = 0
10917 15:02:55.168713 close(6)          = 0
10917 15:02:55.168729 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.168746 read(5, "", 4096) = 0
10917 15:02:55.168762 close(5)          = 0
10917 15:02:55.168778 munmap(0xb7efa000, 4096) = 0
10917 15:02:55.168795 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
10917 15:02:55.168816 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
10917 15:02:55.168858 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
10917 15:02:55.168877 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
10917 15:02:55.168950 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.168981 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.169002 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
10917 15:02:55.169028 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.169046 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
10917 15:02:55.169121 read(6, "", 4096) = 0
10917 15:02:55.169138 close(6)          = 0
10917 15:02:55.169154 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.169172 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.169202 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.169223 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10917 15:02:55.169249 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.169271 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10917 15:02:55.169335 read(6, "", 4096) = 0
10917 15:02:55.169351 close(6)          = 0
10917 15:02:55.169367 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.169385 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.169414 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.169435 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
10917 15:02:55.169461 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.169478 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
10917 15:02:55.169663 read(6, "", 4096) = 0
10917 15:02:55.169680 close(6)          = 0
10917 15:02:55.169696 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.169714 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10917 15:02:55.169743 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10917 15:02:55.169763 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10917 15:02:55.169790 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
10917 15:02:55.169819 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10917 15:02:55.169883 read(6, "", 4096) = 0
10917 15:02:55.169899 close(6)          = 0
10917 15:02:55.169915 munmap(0xb7ef4000, 4096) = 0
10917 15:02:55.169932 read(5, "", 4096) = 0
10917 15:02:55.169948 close(5)          = 0
10917 15:02:55.169964 munmap(0xb7efa000, 4096) = 0
10917 15:02:55.169984 time(NULL)        = 1495652575
10917 15:02:55.170003 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10917 15:02:55.170033 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
10917 15:02:55.170053 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10917 15:02:55.170084 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
10917 15:02:55.170101 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
10917 15:02:55.170136 read(5, "", 4096) = 0
10917 15:02:55.170152 close(5)          = 0
10917 15:02:55.170167 munmap(0xb7efa000, 4096) = 0
10917 15:02:55.170193 getuid32()        = 0
10917 15:02:55.170219 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.170243 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.170261 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10917 15:02:55.170287 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.170305 _llseek(5, 1624, [1624], SEEK_SET) = 0
10917 15:02:55.170336 munmap(0xb7efa000, 1624) = 0
10917 15:02:55.170354 close(5)          = 0
10917 15:02:55.170393 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.170420 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.170438 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10917 15:02:55.170464 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.170482 _llseek(5, 1233, [1233], SEEK_SET) = 0
10917 15:02:55.170514 munmap(0xb7efa000, 1233) = 0
10917 15:02:55.170530 close(5)          = 0
10917 15:02:55.170560 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.170582 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.170599 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10917 15:02:55.170625 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.170642 _llseek(5, 1624, [1624], SEEK_SET) = 0
10917 15:02:55.170668 munmap(0xb7efa000, 1624) = 0
10917 15:02:55.170684 close(5)          = 0
10917 15:02:55.170705 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.170726 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.170743 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10917 15:02:55.170782 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.170802 _llseek(5, 1233, [1233], SEEK_SET) = 0
10917 15:02:55.170830 munmap(0xb7efa000, 1233) = 0
10917 15:02:55.170846 close(5)          = 0
10917 15:02:55.171216 getuid32()        = 0
10917 15:02:55.171235 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.171256 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.171273 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10917 15:02:55.171299 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.171316 _llseek(5, 1624, [1624], SEEK_SET) = 0
10917 15:02:55.171342 munmap(0xb7efa000, 1624) = 0
10917 15:02:55.171358 close(5)          = 0
10917 15:02:55.171379 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.171400 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.171417 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10917 15:02:55.171443 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.171460 _llseek(5, 1233, [1233], SEEK_SET) = 0
10917 15:02:55.171487 munmap(0xb7efa000, 1233) = 0
10917 15:02:55.171503 close(5)          = 0
10917 15:02:55.171522 time(NULL)        = 1495652575
10917 15:02:55.171547 munmap(0xb7ef7000, 12164) = 0
10917 15:02:55.171569 munmap(0xb7ef5000, 7136) = 0
10917 15:02:55.171591 munmap(0xb7d2a000, 95428) = 0
10917 15:02:55.171610 munmap(0xb7cf0000, 201052) = 0
10917 15:02:55.171628 munmap(0xb7cd7000, 101180) = 0
10917 15:02:55.171654 gettimeofday({1495652575, 171661}, NULL) = 0
10917 15:02:55.171674 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9642d4) = -1 ENOENT (No such file or directory)
10917 15:02:55.171697 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
10917 15:02:55.171749 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf964424) = 0
10917 15:02:55.171780 write(3, "Wed May 24 15:02:55 2017 [pid 10917] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
10917 15:02:55.171808 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf96442c) = 0
10917 15:02:55.171836 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10917 15:02:55.171859 write(4, "\1", 1 <unfinished ...>
10918 15:02:55.171875 <... read resumed> "\1", 1) = 1
10917 15:02:55.171884 <... write resumed> ) = 1
10918 15:02:55.171900 exit_group(0)     = ?
10917 15:02:55.171950 --- SIGCHLD (Child exited) @ 0 (0) ---
10917 15:02:55.171962 sigreturn()       = ? (mask now [])
10917 15:02:55.171993 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10918
10917 15:02:55.172015 close(4)          = 0
10917 15:02:55.172036 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
10917 15:02:55.172060 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10917 15:02:55.172083 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10917 15:02:55.172105 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d606f8) = 10919
10919 15:02:55.172188 prctl(0x1, 0x9, 0, 0, 0) = 0
10919 15:02:55.172211 close(4)          = 0
10919 15:02:55.172257 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10919 15:02:55.172285 _llseek(4, 0, [0], SEEK_CUR) = 0
10919 15:02:55.172310 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10919 15:02:55.172340 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
10919 15:02:55.172359 _llseek(4, 1624, [1624], SEEK_SET) = 0
10919 15:02:55.172398 munmap(0xb7efa000, 1624) = 0
10919 15:02:55.172417 close(4)          = 0
10919 15:02:55.172439 getuid32()        = 0
10919 15:02:55.172457 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10919 15:02:55.172477 _llseek(4, 0, [0], SEEK_CUR) = 0
10919 15:02:55.172494 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10919 15:02:55.172521 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
10919 15:02:55.172539 _llseek(4, 1624, [1624], SEEK_SET) = 0
10919 15:02:55.172575 munmap(0xb7efa000, 1624) = 0
10919 15:02:55.172600 close(4)          = 0
10919 15:02:55.172651 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
10919 15:02:55.172686 read(4, "65536\n", 31) = 6
10919 15:02:55.172732 close(4)          = 0
10919 15:02:55.172759 socket(PF_FILE, SOCK_STREAM, 0) = 4
10919 15:02:55.172779 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10919 15:02:55.172797 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10919 15:02:55.172833 close(4)          = 0
10919 15:02:55.172854 socket(PF_FILE, SOCK_STREAM, 0) = 4
10919 15:02:55.172871 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10919 15:02:55.172888 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10919 15:02:55.172918 close(4)          = 0
10919 15:02:55.172961 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
10919 15:02:55.172985 _llseek(4, 0, [0], SEEK_CUR) = 0
10919 15:02:55.173003 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10919 15:02:55.173030 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efa000
10919 15:02:55.173048 _llseek(4, 886, [886], SEEK_SET) = 0
10919 15:02:55.173088 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10919 15:02:55.173116 munmap(0xb7efa000, 886) = 0
10919 15:02:55.173133 close(4)          = 0
10919 15:02:55.173150 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
10919 15:02:55.173177 geteuid32()       = 0
10919 15:02:55.173195 getegid32()       = 0
10919 15:02:55.173199 setregid32(-1, 1000) = 0
10919 15:02:55.173199 setreuid32(-1, 1000) = 0
10919 15:02:55.173199 chdir("/home/msfadmin") = 0
10919 15:02:55.173200 setreuid32(-1, 0) = 0
10919 15:02:55.173200 setregid32(-1, 0) = 0
10919 15:02:55.173200 setgid32(1000)    = 0
10919 15:02:55.173200 setuid32(1000)    = 0
10919 15:02:55.173201 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
10919 15:02:55.173201 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef8000
10919 15:02:55.173212 mprotect(0xb7efa000, 4096, PROT_NONE) = 0
10919 15:02:55.173231 mprotect(0xb7ef8000, 4096, PROT_NONE) = 0
10919 15:02:55.173257 getcwd("/home/msfadmin", 4096) = 15
10919 15:02:55.173280 umask(022)        = 077
10919 15:02:55.173296 getcwd("/home/msfadmin", 4096) = 15
10919 15:02:55.173342 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10919 15:02:55.173382 write(0, "230 Login successful.\r\n", 23) = 23
10919 15:02:55.173507 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10919 15:02:55.173534 alarm(300)        = 0
10919 15:02:55.173553 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef5000
10919 15:02:55.173572 mprotect(0xb7ef7000, 4096, PROT_NONE) = 0
10919 15:02:55.173590 mprotect(0xb7ef5000, 4096, PROT_NONE) = 0
10919 15:02:55.173612 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
10919 15:02:55.173633 read(0, "QUIT\r\n", 6) = 6
10919 15:02:55.173657 shutdown(0, 0 /* receive */) = 0
10919 15:02:55.173678 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
10919 15:02:55.173695 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10919 15:02:55.173711 write(0, "221 Goodbye.\r\n", 14) = 14
10919 15:02:55.173788 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
10919 15:02:55.173808 fcntl64(0, F_SETFL, O_RDWR) = 0
10919 15:02:55.173825 shutdown(0, 2 /* send and receive */) = 0
10919 15:02:55.173855 exit_group(0)     = ?
10917 15:02:55.173901 --- SIGCHLD (Child exited) @ 0 (0) ---
10917 15:02:55.173924 alarm(1)          = 0
10917 15:02:55.173944 sigreturn()       = ? (mask now [])
10917 15:02:55.173976 close(5)          = 0
10917 15:02:55.173999 getuid32()        = 0
10917 15:02:55.174025 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10917 15:02:55.174049 _llseek(5, 0, [0], SEEK_CUR) = 0
10917 15:02:55.174069 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10917 15:02:55.174098 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efa000
10917 15:02:55.174117 _llseek(5, 1624, [1624], SEEK_SET) = 0
10917 15:02:55.174146 munmap(0xb7efa000, 1624) = 0
10917 15:02:55.174164 close(5)          = 0
10917 15:02:55.174185 setgroups32(0, []) = 0
10917 15:02:55.174203 chdir("/usr/share/empty") = 0
10917 15:02:55.174224 chroot(".")       = 0
10917 15:02:55.174242 capset(NULL, NULL) = -1 EFAULT (Bad address)
10917 15:02:55.174262 prctl(0x8, 0, 0xbf964408, 0x80549a6, 0xbf9643f0) = 0
10917 15:02:55.174278 prctl(0x8, 0x1, 0xbf964408, 0x8054a49, 0xbf9643f0) = 0
10917 15:02:55.174324 setgid32(65534)   = 0
10917 15:02:55.174344 setuid32(65534)   = 0
10917 15:02:55.174360 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
10917 15:02:55.174384 read(4, "", 1)    = 0
10917 15:02:55.174402 alarm(0)          = 1
10917 15:02:55.174418 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10919
10917 15:02:55.174440 exit_group(0)     = ?
4439  15:02:55.174498 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:02:55.174510 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:02:55.174522 write(4, "\21", 1) = 1
4439  15:02:55.174545 sigreturn()       = ? (mask now [])
4439  15:02:55.174598 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:02:55.174627 ioctl(3, FIONREAD, [1]) = 0
4439  15:02:55.174648 read(3, "\21", 1) = 1
4439  15:02:55.174670 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 10917
4439  15:02:55.174696 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:02:55.174717 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:02:55.174735 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:02:55.689505 accept(5, {sa_family=AF_INET, sin_port=htons(44784), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:02:55.689690 time(NULL)        = 1495652575
4439  15:02:55.689727 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 10920
10920 15:02:55.690027 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
10920 15:02:55.690074 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
10920 15:02:55.690108 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
10920 15:02:55.690142 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
10920 15:02:55.690249 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
10920 15:02:55.690288 close(3)          = 0
10920 15:02:55.690315 close(4)          = 0
10920 15:02:55.690342 open("/dev/null", O_RDONLY) = 3
10920 15:02:55.690382 dup2(3, 0)        = 0
10920 15:02:55.690409 dup2(3, 1)        = 1
10920 15:02:55.690434 dup2(3, 2)        = 2
10920 15:02:55.690459 close(3)          = 0
10920 15:02:55.690490 setgid32(0)       = 0
10920 15:02:55.690524 setgroups32(0, []) = 0
10920 15:02:55.690553 setuid32(0)       = 0
10920 15:02:55.690585 getpriority(PRIO_PROCESS, 0) = 20
10920 15:02:55.690611 setpriority(PRIO_PROCESS, 0, 10) = 0
10920 15:02:55.690638 getpriority(PRIO_PROCESS, 0) = 10
10920 15:02:55.690737 getpeername(13, {sa_family=AF_INET, sin_port=htons(44784), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
10920 15:02:55.690799 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
10920 15:02:55.690871 open("/etc/hosts.allow", O_RDONLY) = 3
10920 15:02:55.690921 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
10920 15:02:55.691001 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
10920 15:02:55.691040 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
10920 15:02:55.691233 close(3)          = 0
10920 15:02:55.691264 munmap(0xb7f61000, 4096) = 0
10920 15:02:55.691333 fcntl64(13, F_SETFD, 0) = 0
10920 15:02:55.691369 close(7)          = 0
10920 15:02:55.691398 dup2(13, 0)       = 0
10920 15:02:55.691425 dup2(13, 1)       = 1
10920 15:02:55.691450 dup2(13, 2)       = 2
10920 15:02:55.691478 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
10920 15:02:55.691509 close(13)         = 0
10920 15:02:55.691536 setsid()          = 10920
10920 15:02:55.691565 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
10920 15:02:55.691755 brk(0)            = 0x8064000
10920 15:02:55.691808 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10920 15:02:55.691853 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f69000
10920 15:02:55.691890 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
10920 15:02:55.691964 open("/etc/ld.so.cache", O_RDONLY) = 3
10920 15:02:55.692000 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
10920 15:02:55.692047 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f61000
10920 15:02:55.692076 close(3)          = 0
10920 15:02:55.692106 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
10920 15:02:55.692147 open("/lib/libpam.so.0", O_RDONLY) = 3
10920 15:02:55.692183 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
10920 15:02:55.692432 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
10920 15:02:55.692481 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f57000
10920 15:02:55.692515 mmap2(0xb7f60000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7f60000
