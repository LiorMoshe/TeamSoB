19055 16:36:04.369162 close(7)          = 0
19055 16:36:04.369194 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
19055 16:36:04.369246 open("/lib/libselinux.so.1", O_RDONLY) = 7
19055 16:36:04.369281 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
19055 16:36:04.369437 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
19055 16:36:04.369477 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d1e000
19055 16:36:04.369507 mmap2(0xb7d35000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d35000
19055 16:36:04.369547 close(7)          = 0
19055 16:36:04.369723 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
19055 16:36:04.369776 statfs64("/selinux", 84, 0xbfeb614c) = -1 ENOENT (No such file or directory)
19055 16:36:04.369809 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
19055 16:36:04.369859 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
19055 16:36:04.369899 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3a000
19055 16:36:04.369928 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
19055 16:36:04.370076 read(7, "", 1024) = 0
19055 16:36:04.370103 close(7)          = 0
19055 16:36:04.370132 munmap(0xb7f3a000, 4096) = 0
19055 16:36:04.370169 munmap(0xb7d69000, 29913) = 0
19055 16:36:04.370223 read(6, "", 4096) = 0
19055 16:36:04.370254 close(6)          = 0
19055 16:36:04.370280 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.370310 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.370354 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.370388 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
19055 16:36:04.370432 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.370434 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
19055 16:36:04.370434 read(6, "", 4096) = 0
19055 16:36:04.370434 close(6)          = 0
19055 16:36:04.370434 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.370434 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.370434 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.370434 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
19055 16:36:04.370434 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.370434 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
19055 16:36:04.370434 read(6, "", 4096) = 0
19055 16:36:04.370434 close(6)          = 0
19055 16:36:04.370434 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.370434 read(5, "", 4096) = 0
19055 16:36:04.370434 close(5)          = 0
19055 16:36:04.370434 munmap(0xb7f41000, 4096) = 0
19055 16:36:04.370434 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
19055 16:36:04.370434 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
19055 16:36:04.370434 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
19055 16:36:04.370434 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
19055 16:36:04.370434 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.370434 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.370434 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
19055 16:36:04.370434 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.370434 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
19055 16:36:04.370434 read(6, "", 4096) = 0
19055 16:36:04.370434 close(6)          = 0
19055 16:36:04.370434 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.370434 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.370434 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.370434 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
19055 16:36:04.370434 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.370434 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
19055 16:36:04.370434 read(6, "", 4096) = 0
19055 16:36:04.370434 close(6)          = 0
19055 16:36:04.370434 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.370434 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.370434 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.370434 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
19055 16:36:04.371992 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.372047 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
19055 16:36:04.372276 read(6, "", 4096) = 0
19055 16:36:04.372305 close(6)          = 0
19055 16:36:04.372331 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.372361 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
19055 16:36:04.372403 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
19055 16:36:04.372435 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
19055 16:36:04.372473 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3b000
19055 16:36:04.372500 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
19055 16:36:04.372576 read(6, "", 4096) = 0
19055 16:36:04.372603 close(6)          = 0
19055 16:36:04.372629 munmap(0xb7f3b000, 4096) = 0
19055 16:36:04.372657 read(5, "", 4096) = 0
19055 16:36:04.372683 close(5)          = 0
19055 16:36:04.372709 munmap(0xb7f41000, 4096) = 0
19055 16:36:04.372741 time(NULL)        = 1495658164
19055 16:36:04.372771 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
19055 16:36:04.372811 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
19055 16:36:04.372841 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
19055 16:36:04.372879 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
19055 16:36:04.372913 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
19055 16:36:04.372959 read(5, "", 4096) = 0
19055 16:36:04.372985 close(5)          = 0
19055 16:36:04.373011 munmap(0xb7f41000, 4096) = 0
19055 16:36:04.373070 getuid32()        = 0
19055 16:36:04.373113 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.373148 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.373177 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19055 16:36:04.373214 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.373244 _llseek(5, 1624, [1624], SEEK_SET) = 0
19055 16:36:04.373287 munmap(0xb7f41000, 1624) = 0
19055 16:36:04.373316 close(5)          = 0
19055 16:36:04.373368 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.373407 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.373436 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19055 16:36:04.373473 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.373502 _llseek(5, 1233, [1233], SEEK_SET) = 0
19055 16:36:04.373545 munmap(0xb7f41000, 1233) = 0
19055 16:36:04.373572 close(5)          = 0
19055 16:36:04.373614 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.373647 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.373675 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19055 16:36:04.373712 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.373740 _llseek(5, 1624, [1624], SEEK_SET) = 0
19055 16:36:04.373777 munmap(0xb7f41000, 1624) = 0
19055 16:36:04.373804 close(5)          = 0
19055 16:36:04.373835 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.373866 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.373894 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19055 16:36:04.373931 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.373959 _llseek(5, 1233, [1233], SEEK_SET) = 0
19055 16:36:04.373996 munmap(0xb7f41000, 1233) = 0
19055 16:36:04.374043 close(5)          = 0
19055 16:36:04.374441 getuid32()        = 0
19055 16:36:04.374470 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.374502 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.374530 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19055 16:36:04.374567 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.374596 _llseek(5, 1624, [1624], SEEK_SET) = 0
19055 16:36:04.374633 munmap(0xb7f41000, 1624) = 0
19055 16:36:04.374658 close(5)          = 0
19055 16:36:04.374690 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.374722 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.374750 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
19055 16:36:04.374787 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.374815 _llseek(5, 1233, [1233], SEEK_SET) = 0
19055 16:36:04.374853 munmap(0xb7f41000, 1233) = 0
19055 16:36:04.374879 close(5)          = 0
19055 16:36:04.374908 time(NULL)        = 1495658164
19055 16:36:04.374944 munmap(0xb7f3e000, 12164) = 0
19055 16:36:04.374997 munmap(0xb7f3c000, 7136) = 0
19055 16:36:04.375039 munmap(0xb7d71000, 95428) = 0
19055 16:36:04.375069 munmap(0xb7d37000, 201052) = 0
19055 16:36:04.375099 munmap(0xb7d1e000, 101180) = 0
19055 16:36:04.375136 gettimeofday({1495658164, 375155}, NULL) = 0
19055 16:36:04.375179 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfeb8024) = -1 ENOENT (No such file or directory)
19055 16:36:04.375214 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
19055 16:36:04.375269 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfeb8174) = 0
19055 16:36:04.375306 write(3, "Wed May 24 16:36:04 2017 [pid 19055] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
19055 16:36:04.375344 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfeb817c) = 0
19055 16:36:04.375383 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19055 16:36:04.375418 write(4, "\1", 1 <unfinished ...>
19056 16:36:04.375443 <... read resumed> "\1", 1) = 1
19055 16:36:04.375462 <... write resumed> ) = 1
19056 16:36:04.375486 exit_group(0)     = ?
19055 16:36:04.375545 --- SIGCHLD (Child exited) @ 0 (0) ---
19055 16:36:04.375574 sigreturn()       = ? (mask now [])
19055 16:36:04.375615 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 19056
19055 16:36:04.375647 close(4)          = 0
19055 16:36:04.375678 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
19055 16:36:04.375712 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19055 16:36:04.375746 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19055 16:36:04.375779 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7da76f8) = 19057
19057 16:36:04.375886 prctl(0x1, 0x9, 0, 0, 0) = 0
19057 16:36:04.375921 close(4)          = 0
19057 16:36:04.376118 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
19057 16:36:04.376161 _llseek(4, 0, [0], SEEK_CUR) = 0
19057 16:36:04.376197 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19057 16:36:04.376239 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f41000
19057 16:36:04.376270 _llseek(4, 1624, [1624], SEEK_SET) = 0
19057 16:36:04.376319 munmap(0xb7f41000, 1624) = 0
19057 16:36:04.376349 close(4)          = 0
19057 16:36:04.376382 getuid32()        = 0
19057 16:36:04.376466 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
19057 16:36:04.376507 _llseek(4, 0, [0], SEEK_CUR) = 0
19057 16:36:04.376536 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19057 16:36:04.376574 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f41000
19057 16:36:04.376604 _llseek(4, 1624, [1624], SEEK_SET) = 0
19057 16:36:04.376641 munmap(0xb7f41000, 1624) = 0
19057 16:36:04.376669 close(4)          = 0
19057 16:36:04.376726 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
19057 16:36:04.376772 read(4, "65536\n", 31) = 6
19057 16:36:04.376804 close(4)          = 0
19057 16:36:04.376839 socket(PF_FILE, SOCK_STREAM, 0) = 4
19057 16:36:04.376871 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
19057 16:36:04.376900 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
19057 16:36:04.376947 close(4)          = 0
19057 16:36:04.376978 socket(PF_FILE, SOCK_STREAM, 0) = 4
19057 16:36:04.377007 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
19057 16:36:04.377083 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
19057 16:36:04.377150 close(4)          = 0
19057 16:36:04.377214 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
19057 16:36:04.377251 _llseek(4, 0, [0], SEEK_CUR) = 0
19057 16:36:04.377279 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
19057 16:36:04.377318 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f41000
19057 16:36:04.377348 _llseek(4, 886, [886], SEEK_SET) = 0
19057 16:36:04.377400 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
19057 16:36:04.377440 munmap(0xb7f41000, 886) = 0
19057 16:36:04.377468 close(4)          = 0
19057 16:36:04.377495 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
19057 16:36:04.377535 geteuid32()       = 0
19057 16:36:04.377564 getegid32()       = 0
19057 16:36:04.377593 setregid32(-1, 1000) = 0
19057 16:36:04.377620 setreuid32(-1, 1000) = 0
19057 16:36:04.377649 chdir("/home/msfadmin") = 0
19057 16:36:04.377680 setreuid32(-1, 0) = 0
19057 16:36:04.377706 setregid32(-1, 0) = 0
19057 16:36:04.377734 setgid32(1000)    = 0
19057 16:36:04.377761 setuid32(1000)    = 0
19057 16:36:04.377789 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
19057 16:36:04.377822 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3f000
19057 16:36:04.377852 mprotect(0xb7f41000, 4096, PROT_NONE) = 0
19057 16:36:04.377882 mprotect(0xb7f3f000, 4096, PROT_NONE) = 0
19057 16:36:04.377910 getcwd("/home/msfadmin", 4096) = 15
19057 16:36:04.377952 umask(022)        = 077
19057 16:36:04.377981 getcwd("/home/msfadmin", 4096) = 15
19057 16:36:04.378101 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
19057 16:36:04.378161 write(0, "230 Login successful.\r\n", 23) = 23
19057 16:36:04.378368 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19057 16:36:04.378410 alarm(300)        = 0
19057 16:36:04.378462 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3c000
19057 16:36:04.378493 mprotect(0xb7f3e000, 4096, PROT_NONE) = 0
19057 16:36:04.378523 mprotect(0xb7f3c000, 4096, PROT_NONE) = 0
19057 16:36:04.378557 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
19057 16:36:04.378589 read(0, "TYPE I\r\n", 8) = 8
19057 16:36:04.378629 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
19057 16:36:04.378731 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19057 16:36:04.378767 alarm(300)        = 300
19057 16:36:04.378819 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
19057 16:36:04.378848 read(0, "PASV\r\n", 6) = 6
19057 16:36:04.378879 write(5, "\n", 1) = 1
19057 16:36:04.378908 read(5,  <unfinished ...>
19055 16:36:04.378941 close(5)          = 0
19055 16:36:04.378973 getuid32()        = 0
19055 16:36:04.379015 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
19055 16:36:04.379050 _llseek(5, 0, [0], SEEK_CUR) = 0
19055 16:36:04.379082 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
19055 16:36:04.379122 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f41000
19055 16:36:04.379152 _llseek(5, 1624, [1624], SEEK_SET) = 0
19055 16:36:04.379194 munmap(0xb7f41000, 1624) = 0
19055 16:36:04.379225 close(5)          = 0
19055 16:36:04.379263 setgroups32(0, []) = 0
19055 16:36:04.379293 chdir("/usr/share/empty") = 0
19055 16:36:04.379325 chroot(".")       = 0
19055 16:36:04.379354 capset(NULL, NULL) = -1 EFAULT (Bad address)
19055 16:36:04.379389 prctl(0x8, 0, 0xbfeb8158, 0x80549a6, 0xbfeb8140) = 0
19055 16:36:04.379418 prctl(0x8, 0x1, 0xbfeb8158, 0x8054a49, 0xbfeb8140) = 0
19055 16:36:04.379445 setgid32(65534)   = 0
19055 16:36:04.379472 setuid32(65534)   = 0
19055 16:36:04.379499 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
19055 16:36:04.379531 read(4, "\n", 1)  = 1
19055 16:36:04.379564 write(4, "\1", 1) = 1
19057 16:36:04.379593 <... read resumed> "\1", 1) = 1
19057 16:36:04.379617 write(5, "\f", 1) = 1
19057 16:36:04.379644 read(5,  <unfinished ...>
19055 16:36:04.379666 read(4, "\f", 1)  = 1
19055 16:36:04.379697 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
19055 16:36:04.379731 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
19055 16:36:04.379761 gettimeofday({1495658164, 379779}, NULL) = 0
19055 16:36:04.379811 bind(5, {sa_family=AF_INET, sin_port=htons(38978), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
19055 16:36:04.379849 listen(5, 1)      = 0
19055 16:36:04.379881 write(4, "B\230\0\0", 4) = 4
19057 16:36:04.379909 <... read resumed> "B\230\0\0", 4) = 4
19057 16:36:04.379944 write(0, "227 Entering Passive Mode (127,0,0,1,152,66).\r\n", 47) = 47
19057 16:36:04.380239 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19057 16:36:04.380280 alarm(300)        = 300
19057 16:36:04.380332 recv(0, "STOR myfile9\r\n", 4096, MSG_PEEK) = 14
19057 16:36:04.380363 read(0, "STOR myfile9\r\n", 14) = 14
19057 16:36:04.380400 write(5, "\v", 1) = 1
19057 16:36:04.380428 read(5,  <unfinished ...>
19055 16:36:04.380435 read(4, "\v", 1)  = 1
19055 16:36:04.380435 write(4, "\1\0\0\0", 4) = 4
19057 16:36:04.380435 <... read resumed> "\1\0\0\0", 4) = 4
19057 16:36:04.380435 gettimeofday({1495658164, 380435}, NULL) = 0
19057 16:36:04.380435 getcwd("/home/msfadmin", 4096) = 15
19057 16:36:04.380435 open("myfile9", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
19057 16:36:04.380435 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
19057 16:36:04.380435 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
19057 16:36:04.380435 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
19057 16:36:04.380435 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfeb80a4) = 0
19057 16:36:04.380435 ftruncate64(4, 0) = 0
19057 16:36:04.380435 _llseek(4, 0, [0], SEEK_SET) = 0
19057 16:36:04.380435 write(5, "\v", 1) = 1
19057 16:36:04.380435 read(5,  <unfinished ...>
19055 16:36:04.380435 read(4, "\v", 1)  = 1
19055 16:36:04.380435 write(4, "\1\0\0\0", 4) = 4
19057 16:36:04.380435 <... read resumed> "\1\0\0\0", 4) = 4
19057 16:36:04.380435 write(5, "\v", 1) = 1
19057 16:36:04.380435 read(5,  <unfinished ...>
19055 16:36:04.380435 read(4, "\v", 1)  = 1
19055 16:36:04.380435 write(4, "\1\0\0\0", 4) = 4
19057 16:36:04.380435 <... read resumed> "\1\0\0\0", 4) = 4
19057 16:36:04.380435 write(5, "\r", 1) = 1
19057 16:36:04.380435 read(5,  <unfinished ...>
19055 16:36:04.380435 read(4, "\r", 1)  = 1
19055 16:36:04.380435 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
19055 16:36:04.380435 accept(5, {sa_family=AF_INET, sin_port=htons(34762), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
19055 16:36:04.380435 write(4, "\1", 1) = 1
19057 16:36:04.380435 <... read resumed> "\1", 1) = 1
19057 16:36:04.380435 recvmsg(5,  <unfinished ...>
19055 16:36:04.380435 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
19057 16:36:04.380435 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
19057 16:36:04.380435 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
19057 16:36:04.380435 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
19057 16:36:04.380435 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
19057 16:36:04.380435 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
19057 16:36:04.380435 alarm(300)        = 300
19057 16:36:04.380435 write(0, "150 Ok to send data.\r\n", 22) = 22
19057 16:36:04.380435 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d76000
19057 16:36:04.380435 mprotect(0xb7d88000, 4096, PROT_NONE) = 0
19057 16:36:04.381997 mprotect(0xb7d76000, 4096, PROT_NONE) = 0
19057 16:36:04.382034 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
19057 16:36:04.382068 write(4, "assasaaa\na\na\na\na\n", 17) = 17
19057 16:36:04.382106 read(6, "", 65536) = 0
