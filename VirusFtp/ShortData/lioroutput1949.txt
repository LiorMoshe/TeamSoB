13670 15:30:59.455703 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
13670 15:30:59.455739 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.455771 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13670 15:30:59.455863 read(6, "", 4096) = 0
13670 15:30:59.455885 close(6)          = 0
13670 15:30:59.455905 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.455929 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13670 15:30:59.455986 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13670 15:30:59.456016 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13670 15:30:59.456053 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.456076 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13670 15:30:59.456166 read(6, "", 4096) = 0
13670 15:30:59.456187 close(6)          = 0
13670 15:30:59.456207 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.456230 read(5, "", 4096) = 0
13670 15:30:59.456252 close(5)          = 0
13670 15:30:59.456272 munmap(0xb7f58000, 4096) = 0
13670 15:30:59.456294 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
13670 15:30:59.456323 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
13670 15:30:59.456360 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f58000
13670 15:30:59.456382 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
13670 15:30:59.456620 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13670 15:30:59.456663 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
13670 15:30:59.456691 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
13670 15:30:59.456727 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.456750 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
13670 15:30:59.456858 read(6, "", 4096) = 0
13670 15:30:59.456879 close(6)          = 0
13670 15:30:59.456900 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.456923 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13670 15:30:59.456964 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
13670 15:30:59.456992 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
13670 15:30:59.457029 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.457051 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13670 15:30:59.457162 read(6, "", 4096) = 0
13670 15:30:59.457185 close(6)          = 0
13670 15:30:59.457205 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.457229 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13670 15:30:59.457270 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
13670 15:30:59.457299 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
13670 15:30:59.457335 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.457358 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
13670 15:30:59.458410 read(6, "", 4096) = 0
13670 15:30:59.458478 close(6)          = 0
13670 15:30:59.458527 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.458573 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13670 15:30:59.458637 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13670 15:30:59.458682 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13670 15:30:59.458719 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f52000
13670 15:30:59.458743 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13670 15:30:59.458848 read(6, "", 4096) = 0
13670 15:30:59.458870 close(6)          = 0
13670 15:30:59.458891 munmap(0xb7f52000, 4096) = 0
13670 15:30:59.458913 read(5, "", 4096) = 0
13670 15:30:59.458934 close(5)          = 0
13670 15:30:59.458954 munmap(0xb7f58000, 4096) = 0
13670 15:30:59.458983 time(NULL)        = 1495654259
13670 15:30:59.459009 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13670 15:30:59.459050 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
13670 15:30:59.459076 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13670 15:30:59.459112 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f58000
13670 15:30:59.459135 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
13670 15:30:59.459191 read(5, "", 4096) = 0
13670 15:30:59.459211 close(5)          = 0
13670 15:30:59.459231 munmap(0xb7f58000, 4096) = 0
13670 15:30:59.459264 getuid32()        = 0
13670 15:30:59.459312 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.459345 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.459370 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13670 15:30:59.459407 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.459431 _llseek(5, 1624, [1624], SEEK_SET) = 0
13670 15:30:59.459474 munmap(0xb7f58000, 1624) = 0
13670 15:30:59.459497 close(5)          = 0
13670 15:30:59.459548 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.459584 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.459607 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13670 15:30:59.459644 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.459667 _llseek(5, 1233, [1233], SEEK_SET) = 0
13670 15:30:59.459711 munmap(0xb7f58000, 1233) = 0
13670 15:30:59.459732 close(5)          = 0
13670 15:30:59.459771 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.459812 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.459836 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13670 15:30:59.459873 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.459896 _llseek(5, 1624, [1624], SEEK_SET) = 0
13670 15:30:59.459933 munmap(0xb7f58000, 1624) = 0
13670 15:30:59.459955 close(5)          = 0
13670 15:30:59.459982 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.460009 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.460032 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13670 15:30:59.460068 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.460091 _llseek(5, 1233, [1233], SEEK_SET) = 0
13670 15:30:59.460129 munmap(0xb7f58000, 1233) = 0
13670 15:30:59.460150 close(5)          = 0
13670 15:30:59.460636 getuid32()        = 0
13670 15:30:59.460661 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.460689 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.460711 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13670 15:30:59.460748 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.460771 _llseek(5, 1624, [1624], SEEK_SET) = 0
13670 15:30:59.460775 munmap(0xb7f58000, 1624) = 0
13670 15:30:59.460776 close(5)          = 0
13670 15:30:59.460776 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.460776 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.460776 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13670 15:30:59.460812 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.460836 _llseek(5, 1233, [1233], SEEK_SET) = 0
13670 15:30:59.460875 munmap(0xb7f58000, 1233) = 0
13670 15:30:59.460896 close(5)          = 0
13670 15:30:59.460920 time(NULL)        = 1495654259
13670 15:30:59.460953 munmap(0xb7f55000, 12164) = 0
13670 15:30:59.460980 munmap(0xb7f53000, 7136) = 0
13670 15:30:59.461026 munmap(0xb7d88000, 95428) = 0
13670 15:30:59.461054 munmap(0xb7d4e000, 201052) = 0
13670 15:30:59.461078 munmap(0xb7d35000, 101180) = 0
13670 15:30:59.461115 gettimeofday({1495654259, 461124}, NULL) = 0
13670 15:30:59.461140 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa65bd4) = -1 ENOENT (No such file or directory)
13670 15:30:59.461172 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
13670 15:30:59.461229 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa65d24) = 0
13670 15:30:59.461264 write(3, "Wed May 24 15:30:59 2017 [pid 13670] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
13670 15:30:59.461302 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa65d2c) = 0
13670 15:30:59.461330 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13670 15:30:59.461372 write(4, "\1", 1 <unfinished ...>
13671 15:30:59.461396 <... read resumed> "\1", 1) = 1
13670 15:30:59.461409 <... write resumed> ) = 1
13671 15:30:59.461427 exit_group(0)     = ?
13670 15:30:59.461517 --- SIGCHLD (Child exited) @ 0 (0) ---
13670 15:30:59.461540 sigreturn()       = ? (mask now [])
13670 15:30:59.461582 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 13671
13670 15:30:59.461610 close(4)          = 0
13670 15:30:59.461637 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
13670 15:30:59.461667 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13670 15:30:59.461697 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13670 15:30:59.461728 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dbe6f8) = 13672
13672 15:30:59.461833 prctl(0x1, 0x9, 0, 0, 0) = 0
13672 15:30:59.461861 close(4)          = 0
13672 15:30:59.461916 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13672 15:30:59.461951 _llseek(4, 0, [0], SEEK_CUR) = 0
13672 15:30:59.461983 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13672 15:30:59.462041 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f58000
13672 15:30:59.462068 _llseek(4, 1624, [1624], SEEK_SET) = 0
13672 15:30:59.462118 munmap(0xb7f58000, 1624) = 0
13672 15:30:59.462142 close(4)          = 0
13672 15:30:59.462170 getuid32()        = 0
13672 15:30:59.462192 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13672 15:30:59.462219 _llseek(4, 0, [0], SEEK_CUR) = 0
13672 15:30:59.462242 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13672 15:30:59.462279 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f58000
13672 15:30:59.462302 _llseek(4, 1624, [1624], SEEK_SET) = 0
13672 15:30:59.462339 munmap(0xb7f58000, 1624) = 0
13672 15:30:59.462359 close(4)          = 0
13672 15:30:59.462413 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
13672 15:30:59.462455 read(4, "65536\n", 31) = 6
13672 15:30:59.462482 close(4)          = 0
13672 15:30:59.462528 socket(PF_FILE, SOCK_STREAM, 0) = 4
13672 15:30:59.462554 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13672 15:30:59.462577 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13672 15:30:59.462626 close(4)          = 0
13672 15:30:59.462651 socket(PF_FILE, SOCK_STREAM, 0) = 4
13672 15:30:59.462673 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13672 15:30:59.462695 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13672 15:30:59.462736 close(4)          = 0
13672 15:30:59.462785 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
13672 15:30:59.462815 _llseek(4, 0, [0], SEEK_CUR) = 0
13672 15:30:59.462838 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13672 15:30:59.462875 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f58000
13672 15:30:59.462898 _llseek(4, 886, [886], SEEK_SET) = 0
13672 15:30:59.462954 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13672 15:30:59.463005 munmap(0xb7f58000, 886) = 0
13672 15:30:59.463029 close(4)          = 0
13672 15:30:59.463051 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
13672 15:30:59.463088 geteuid32()       = 0
13672 15:30:59.463111 getegid32()       = 0
13672 15:30:59.463134 setregid32(-1, 1000) = 0
13672 15:30:59.463157 setreuid32(-1, 1000) = 0
13672 15:30:59.463180 chdir("/home/msfadmin") = 0
13672 15:30:59.463205 setreuid32(-1, 0) = 0
13672 15:30:59.463225 setregid32(-1, 0) = 0
13672 15:30:59.463247 setgid32(1000)    = 0
13672 15:30:59.463269 setuid32(1000)    = 0
13672 15:30:59.463290 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
13672 15:30:59.463319 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f56000
13672 15:30:59.463344 mprotect(0xb7f58000, 4096, PROT_NONE) = 0
13672 15:30:59.463368 mprotect(0xb7f56000, 4096, PROT_NONE) = 0
13672 15:30:59.463392 getcwd("/home/msfadmin", 4096) = 15
13672 15:30:59.463420 umask(022)        = 077
13672 15:30:59.463450 getcwd("/home/msfadmin", 4096) = 15
13672 15:30:59.463499 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
13672 15:30:59.463552 write(0, "230 Login successful.\r\n", 23) = 23
13672 15:30:59.463746 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.463783 alarm(300)        = 0
13672 15:30:59.463807 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f53000
13672 15:30:59.463831 mprotect(0xb7f55000, 4096, PROT_NONE) = 0
13672 15:30:59.463856 mprotect(0xb7f53000, 4096, PROT_NONE) = 0
13672 15:30:59.463884 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
13672 15:30:59.463911 read(0, "TYPE I\r\n", 8) = 8
13672 15:30:59.463945 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
13672 15:30:59.464044 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.464078 alarm(300)        = 300
13672 15:30:59.464102 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
13672 15:30:59.464127 read(0, "PASV\r\n", 6) = 6
13672 15:30:59.464152 write(5, "\n", 1) = 1
13672 15:30:59.464176 read(5,  <unfinished ...>
13670 15:30:59.464201 close(5)          = 0
13670 15:30:59.464226 getuid32()        = 0
13670 15:30:59.464256 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13670 15:30:59.464285 _llseek(5, 0, [0], SEEK_CUR) = 0
13670 15:30:59.464312 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13670 15:30:59.464350 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f58000
13670 15:30:59.464375 _llseek(5, 1624, [1624], SEEK_SET) = 0
13670 15:30:59.464413 munmap(0xb7f58000, 1624) = 0
13670 15:30:59.464436 close(5)          = 0
13670 15:30:59.464483 setgroups32(0, []) = 0
13670 15:30:59.464511 chdir("/usr/share/empty") = 0
13670 15:30:59.464538 chroot(".")       = 0
13670 15:30:59.464561 capset(NULL, NULL) = -1 EFAULT (Bad address)
13670 15:30:59.464591 prctl(0x8, 0, 0xbfa65d08, 0x80549a6, 0xbfa65cf0) = 0
13670 15:30:59.464614 prctl(0x8, 0x1, 0xbfa65d08, 0x8054a49, 0xbfa65cf0) = 0
13670 15:30:59.464636 setgid32(65534)   = 0
13670 15:30:59.464658 setuid32(65534)   = 0
13670 15:30:59.464679 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
13670 15:30:59.464707 read(4, "\n", 1)  = 1
13670 15:30:59.464735 write(4, "\1", 1) = 1
13672 15:30:59.464758 <... read resumed> "\1", 1) = 1
13672 15:30:59.464775 write(5, "\f", 1) = 1
13672 15:30:59.464797 read(5,  <unfinished ...>
13670 15:30:59.464812 read(4, "\f", 1)  = 1
13670 15:30:59.464839 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
13670 15:30:59.464867 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
13670 15:30:59.464892 gettimeofday({1495654259, 464900}, NULL) = 0
13670 15:30:59.464927 bind(5, {sa_family=AF_INET, sin_port=htons(34436), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
13670 15:30:59.464959 listen(5, 1)      = 0
13670 15:30:59.465002 write(4, "\204\206\0\0", 4) = 4
13672 15:30:59.465027 <... read resumed> "\204\206\0\0", 4) = 4
13672 15:30:59.465056 write(0, "227 Entering Passive Mode (127,0,0,1,134,132).\r\n", 48) = 48
13672 15:30:59.465256 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.465291 alarm(300)        = 300
13672 15:30:59.465316 recv(0, "STOR myfile26\r\n", 4096, MSG_PEEK) = 15
13672 15:30:59.465342 read(0, "STOR myfile26\r\n", 15) = 15
13672 15:30:59.465373 write(5, "\v", 1) = 1
13672 15:30:59.465396 read(5,  <unfinished ...>
13670 15:30:59.465412 read(4, "\v", 1)  = 1
13670 15:30:59.465436 write(4, "\1\0\0\0", 4) = 4
13672 15:30:59.465475 <... read resumed> "\1\0\0\0", 4) = 4
13672 15:30:59.465499 gettimeofday({1495654259, 465507}, NULL) = 0
13672 15:30:59.465522 getcwd("/home/msfadmin", 4096) = 15
13672 15:30:59.465550 open("myfile26", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
13672 15:30:59.465578 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
13672 15:30:59.465616 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
13672 15:30:59.465640 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
13672 15:30:59.465661 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa65c54) = 0
13672 15:30:59.465705 ftruncate64(4, 0) = 0
13672 15:30:59.465745 _llseek(4, 0, [0], SEEK_SET) = 0
13672 15:30:59.465769 write(5, "\v", 1) = 1
13672 15:30:59.465792 read(5,  <unfinished ...>
13670 15:30:59.465807 read(4, "\v", 1)  = 1
13670 15:30:59.465831 write(4, "\1\0\0\0", 4) = 4
13672 15:30:59.465855 <... read resumed> "\1\0\0\0", 4) = 4
13672 15:30:59.465871 write(5, "\v", 1) = 1
13672 15:30:59.465893 read(5,  <unfinished ...>
13670 15:30:59.465907 read(4, "\v", 1)  = 1
13670 15:30:59.465931 write(4, "\1\0\0\0", 4) = 4
13672 15:30:59.465966 <... read resumed> "\1\0\0\0", 4) = 4
13672 15:30:59.465987 write(5, "\r", 1) = 1
13672 15:30:59.466009 read(5,  <unfinished ...>
13670 15:30:59.466024 read(4, "\r", 1)  = 1
13670 15:30:59.466052 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
13670 15:30:59.466087 accept(5, {sa_family=AF_INET, sin_port=htons(56839), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
13670 15:30:59.466136 write(4, "\1", 1) = 1
13672 15:30:59.466158 <... read resumed> "\1", 1) = 1
13672 15:30:59.466179 recvmsg(5,  <unfinished ...>
13670 15:30:59.466199 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13672 15:30:59.466236 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
13672 15:30:59.466266 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
13672 15:30:59.466293 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
13672 15:30:59.466319 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
13672 15:30:59.466343 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.466372 alarm(300)        = 300
13672 15:30:59.466398 write(0, "150 Ok to send data.\r\n", 22) = 22
13672 15:30:59.466559 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d8d000
13672 15:30:59.466588 mprotect(0xb7d9f000, 4096, PROT_NONE) = 0
13672 15:30:59.466613 mprotect(0xb7d8d000, 4096, PROT_NONE) = 0
13672 15:30:59.466635 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
13672 15:30:59.466664 write(4, "assasaaa\na\na\na\na\n", 17) = 17
13672 15:30:59.466698 read(6, "", 65536) = 0
13672 15:30:59.466720 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.466750 alarm(300)        = 300
13672 15:30:59.466771 close(6)          = 0
13672 15:30:59.466791 alarm(0)          = 300
13672 15:30:59.466812 gettimeofday({1495654259, 466820}, NULL) = 0
13672 15:30:59.466849 getpid()          = 13672
13672 15:30:59.466874 gettimeofday({1495654259, 466882}, NULL) = 0
13672 15:30:59.466910 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa65bf4) = 0
13672 15:30:59.466941 write(3, "Wed May 24 15:30:59 2017 [pid 13672] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile26\", 17 bytes, 12.07Kbyte/sec\n", 131) = 131
13672 15:30:59.467043 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa65bfc) = 0
13672 15:30:59.467079 write(0, "226 Transfer complete.\r\n", 24) = 24
13672 15:30:59.467188 write(5, "\n", 1) = 1
13672 15:30:59.467218 read(5,  <unfinished ...>
13670 15:30:59.467236 close(6)          = 0
13670 15:30:59.467279 read(4, "\n", 1)  = 1
13670 15:30:59.467306 close(5)          = 0
13670 15:30:59.467332 write(4, "\1", 1) = 1
13672 15:30:59.467359 <... read resumed> "\1", 1) = 1
13672 15:30:59.467377 close(4)          = 0
13672 15:30:59.467402 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13672 15:30:59.467435 alarm(300)        = 0
13672 15:30:59.467439 recv(0,  <unfinished ...>
13670 15:30:59.467439 read(4,  <unfinished ...>
4439  15:30:59.519276 <... select resumed> ) = 1 (in [5])
4439  15:30:59.519333 accept(5, {sa_family=AF_INET, sin_port=htons(46329), sin_addr=inet_addr("10.0.2.8")}, [16]) = 13
4439  15:30:59.519413 time(NULL)        = 1495654259
4439  15:30:59.519433 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 13673
13673 15:30:59.519596 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
13673 15:30:59.519620 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
13673 15:30:59.519655 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
13673 15:30:59.519675 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
13673 15:30:59.519698 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
13673 15:30:59.519718 close(3)          = 0
13673 15:30:59.519733 close(4)          = 0
13673 15:30:59.519747 open("/dev/null", O_RDONLY) = 3
13673 15:30:59.519770 dup2(3, 0)        = 0
13673 15:30:59.519784 dup2(3, 1)        = 1
13673 15:30:59.519797 dup2(3, 2)        = 2
13673 15:30:59.519810 close(3)          = 0
13673 15:30:59.519827 setgid32(0)       = 0
13673 15:30:59.519846 setgroups32(0, []) = 0
13673 15:30:59.519862 setuid32(0)       = 0
13673 15:30:59.519879 getpriority(PRIO_PROCESS, 0) = 20
13673 15:30:59.519893 setpriority(PRIO_PROCESS, 0, 10) = 0
13673 15:30:59.519908 getpriority(PRIO_PROCESS, 0) = 10
