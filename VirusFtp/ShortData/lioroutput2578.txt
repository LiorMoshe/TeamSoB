15794 15:54:17.020492 statfs64("/selinux", 84, 0xbfc1e6bc) = -1 ENOENT (No such file or directory)
15794 15:54:17.020532 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
15794 15:54:17.020589 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
15794 15:54:17.020655 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efb000
15794 15:54:17.020686 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
15794 15:54:17.021086 read(7, "", 1024) = 0
15794 15:54:17.021117 close(7)          = 0
15794 15:54:17.021144 munmap(0xb7efb000, 4096) = 0
15794 15:54:17.021190 munmap(0xb7d2a000, 29913) = 0
15794 15:54:17.021230 read(6, "", 4096) = 0
15794 15:54:17.021269 close(6)          = 0
15794 15:54:17.021296 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.021329 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.021408 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.021451 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15794 15:54:17.021518 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.021548 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15794 15:54:17.021733 read(6, "", 4096) = 0
15794 15:54:17.021761 close(6)          = 0
15794 15:54:17.021787 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.021819 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.021895 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.021937 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15794 15:54:17.022020 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.022054 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15794 15:54:17.022232 read(6, "", 4096) = 0
15794 15:54:17.022260 close(6)          = 0
15794 15:54:17.022286 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.022317 read(5, "", 4096) = 0
15794 15:54:17.022344 close(5)          = 0
15794 15:54:17.022370 munmap(0xb7f02000, 4096) = 0
15794 15:54:17.022401 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15794 15:54:17.022441 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15794 15:54:17.022508 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
15794 15:54:17.022537 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15794 15:54:17.022760 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.022857 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.022898 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15794 15:54:17.022965 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.022998 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15794 15:54:17.023216 read(6, "", 4096) = 0
15794 15:54:17.023246 close(6)          = 0
15794 15:54:17.023272 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.023305 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.023381 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.023429 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15794 15:54:17.023496 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.023526 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15794 15:54:17.023705 read(6, "", 4096) = 0
15794 15:54:17.023733 close(6)          = 0
15794 15:54:17.023759 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.023791 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.023867 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.023909 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15794 15:54:17.023996 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.024026 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15794 15:54:17.024637 read(6, "", 4096) = 0
15794 15:54:17.024665 close(6)          = 0
15794 15:54:17.024691 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.024723 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15794 15:54:17.024788 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15794 15:54:17.024788 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
15794 15:54:17.024788 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15794 15:54:17.024788 read(6, "", 4096) = 0
15794 15:54:17.024788 close(6)          = 0
15794 15:54:17.024788 munmap(0xb7efc000, 4096) = 0
15794 15:54:17.024788 read(5, "", 4096) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 munmap(0xb7f02000, 4096) = 0
15794 15:54:17.024788 time(NULL)        = 1495655657
15794 15:54:17.024788 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15794 15:54:17.024788 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f02000
15794 15:54:17.024788 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15794 15:54:17.024788 read(5, "", 4096) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 munmap(0xb7f02000, 4096) = 0
15794 15:54:17.024788 getuid32()        = 0
15794 15:54:17.024788 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1624, [1624], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1624) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1233, [1233], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1233) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1624, [1624], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1624) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1233, [1233], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1233) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 getuid32()        = 0
15794 15:54:17.024788 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1624, [1624], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1624) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.024788 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.024788 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15794 15:54:17.024788 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.024788 _llseek(5, 1233, [1233], SEEK_SET) = 0
15794 15:54:17.024788 munmap(0xb7f02000, 1233) = 0
15794 15:54:17.024788 close(5)          = 0
15794 15:54:17.024788 time(NULL)        = 1495655657
15794 15:54:17.024788 munmap(0xb7eff000, 12164) = 0
15794 15:54:17.028185 munmap(0xb7efd000, 7136) = 0
15794 15:54:17.028298 munmap(0xb7d32000, 95428) = 0
15794 15:54:17.028335 munmap(0xb7cf8000, 201052) = 0
15794 15:54:17.028368 munmap(0xb7cdf000, 101180) = 0
15794 15:54:17.028413 gettimeofday({1495655657, 28434}, NULL) = 0
15794 15:54:17.028462 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfc20594) = -1 ENOENT (No such file or directory)
15794 15:54:17.028511 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15794 15:54:17.028596 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc206e4) = 0
15794 15:54:17.028646 write(3, "Wed May 24 15:54:17 2017 [pid 15794] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15794 15:54:17.028709 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc206ec) = 0
15794 15:54:17.028752 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15794 15:54:17.028796 write(4, "\1", 1 <unfinished ...>
15795 15:54:17.028827 <... read resumed> "\1", 1) = 1
15794 15:54:17.028868 <... write resumed> ) = 1
15795 15:54:17.028894 exit_group(0)     = ?
15794 15:54:17.028965 --- SIGCHLD (Child exited) @ 0 (0) ---
15794 15:54:17.028988 sigreturn()       = ? (mask now [])
15794 15:54:17.029058 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15795
15794 15:54:17.029094 close(4)          = 0
15794 15:54:17.029131 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15794 15:54:17.029171 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15794 15:54:17.029214 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15794 15:54:17.029255 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d686f8) = 15796
15796 15:54:17.029387 prctl(0x1, 0x9, 0, 0, 0) = 0
15796 15:54:17.029422 close(4)          = 0
15796 15:54:17.029479 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15796 15:54:17.029520 _llseek(4, 0, [0], SEEK_CUR) = 0
15796 15:54:17.029557 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15796 15:54:17.029598 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f02000
15796 15:54:17.029629 _llseek(4, 1624, [1624], SEEK_SET) = 0
15796 15:54:17.029678 munmap(0xb7f02000, 1624) = 0
15796 15:54:17.029708 close(4)          = 0
15796 15:54:17.029742 getuid32()        = 0
15796 15:54:17.029769 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15796 15:54:17.029800 _llseek(4, 0, [0], SEEK_CUR) = 0
15796 15:54:17.029851 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15796 15:54:17.029888 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f02000
15796 15:54:17.029918 _llseek(4, 1624, [1624], SEEK_SET) = 0
15796 15:54:17.029955 munmap(0xb7f02000, 1624) = 0
15796 15:54:17.029982 close(4)          = 0
15796 15:54:17.030038 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15796 15:54:17.030084 read(4, "65536\n", 31) = 6
15796 15:54:17.030115 close(4)          = 0
15796 15:54:17.030149 socket(PF_FILE, SOCK_STREAM, 0) = 4
15796 15:54:17.030179 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15796 15:54:17.030208 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15796 15:54:17.030255 close(4)          = 0
15796 15:54:17.030285 socket(PF_FILE, SOCK_STREAM, 0) = 4
15796 15:54:17.030313 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15796 15:54:17.030341 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15796 15:54:17.030381 close(4)          = 0
15796 15:54:17.030432 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15796 15:54:17.030468 _llseek(4, 0, [0], SEEK_CUR) = 0
15796 15:54:17.030497 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15796 15:54:17.030535 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f02000
15796 15:54:17.030563 _llseek(4, 886, [886], SEEK_SET) = 0
15796 15:54:17.030619 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15796 15:54:17.030660 munmap(0xb7f02000, 886) = 0
15796 15:54:17.030689 close(4)          = 0
15796 15:54:17.030716 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15796 15:54:17.030754 geteuid32()       = 0
15796 15:54:17.030810 getegid32()       = 0
15796 15:54:17.030842 setregid32(-1, 1000) = 0
15796 15:54:17.030872 setreuid32(-1, 1000) = 0
15796 15:54:17.030900 chdir("/home/msfadmin") = 0
15796 15:54:17.030931 setreuid32(-1, 0) = 0
15796 15:54:17.030957 setregid32(-1, 0) = 0
15796 15:54:17.030986 setgid32(1000)    = 0
15796 15:54:17.031013 setuid32(1000)    = 0
15796 15:54:17.031041 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15796 15:54:17.031081 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f00000
15796 15:54:17.031112 mprotect(0xb7f02000, 4096, PROT_NONE) = 0
15796 15:54:17.031142 mprotect(0xb7f00000, 4096, PROT_NONE) = 0
15796 15:54:17.031172 getcwd("/home/msfadmin", 4096) = 15
15796 15:54:17.031206 umask(022)        = 077
15796 15:54:17.031233 getcwd("/home/msfadmin", 4096) = 15
15796 15:54:17.031266 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15796 15:54:17.031314 write(0, "230 Login successful.\r\n", 23) = 23
15796 15:54:17.031510 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15796 15:54:17.031551 alarm(300)        = 0
15796 15:54:17.031603 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15796 15:54:17.031633 mprotect(0xb7eff000, 4096, PROT_NONE) = 0
15796 15:54:17.031663 mprotect(0xb7efd000, 4096, PROT_NONE) = 0
15796 15:54:17.031695 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15796 15:54:17.031728 read(0, "TYPE I\r\n", 8) = 8
15796 15:54:17.031797 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15796 15:54:17.031904 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15796 15:54:17.031941 alarm(300)        = 300
15796 15:54:17.031992 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15796 15:54:17.032023 read(0, "PASV\r\n", 6) = 6
15796 15:54:17.032054 write(5, "\n", 1) = 1
15796 15:54:17.032083 read(5,  <unfinished ...>
15794 15:54:17.032116 close(5)          = 0
15794 15:54:17.032148 getuid32()        = 0
15794 15:54:17.032185 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15794 15:54:17.032223 _llseek(5, 0, [0], SEEK_CUR) = 0
15794 15:54:17.032259 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15794 15:54:17.032329 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f02000
15794 15:54:17.032359 _llseek(5, 1624, [1624], SEEK_SET) = 0
15794 15:54:17.032404 munmap(0xb7f02000, 1624) = 0
15794 15:54:17.032436 close(5)          = 0
15794 15:54:17.032476 setgroups32(0, []) = 0
15794 15:54:17.032506 chdir("/usr/share/empty") = 0
15794 15:54:17.032545 chroot(".")       = 0
15794 15:54:17.032577 capset(NULL, NULL) = -1 EFAULT (Bad address)
15794 15:54:17.032611 prctl(0x8, 0, 0xbfc206c8, 0x80549a6, 0xbfc206b0) = 0
15794 15:54:17.032640 prctl(0x8, 0x1, 0xbfc206c8, 0x8054a49, 0xbfc206b0) = 0
15794 15:54:17.032668 setgid32(65534)   = 0
15794 15:54:17.032695 setuid32(65534)   = 0
15794 15:54:17.032746 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15794 15:54:17.032789 read(4, "\n", 1)  = 1
15794 15:54:17.032828 write(4, "\1", 1) = 1
15796 15:54:17.032860 <... read resumed> "\1", 1) = 1
15796 15:54:17.032885 write(5, "\f", 1) = 1
15796 15:54:17.032933 read(5,  <unfinished ...>
15794 15:54:17.032956 read(4, "\f", 1)  = 1
15794 15:54:17.032995 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15794 15:54:17.033037 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15794 15:54:17.033071 gettimeofday({1495655657, 33089}, NULL) = 0
15794 15:54:17.033129 bind(5, {sa_family=AF_INET, sin_port=htons(21435), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15794 15:54:17.033176 listen(5, 1)      = 0
15794 15:54:17.033210 write(4, "\273S\0\0", 4) = 4
15796 15:54:17.033243 <... read resumed> "\273S\0\0", 4) = 4
15796 15:54:17.033277 write(0, "227 Entering Passive Mode (127,0,0,1,83,187).\r\n", 47) = 47
15796 15:54:17.033535 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15796 15:54:17.033574 alarm(300)        = 300
15796 15:54:17.033626 recv(0, "STOR myfile27\r\n", 4096, MSG_PEEK) = 15
15796 15:54:17.033658 read(0, "STOR myfile27\r\n", 15) = 15
15796 15:54:17.033720 write(5, "\v", 1) = 1
15796 15:54:17.033751 read(5,  <unfinished ...>
15794 15:54:17.033775 read(4, "\v", 1)  = 1
15794 15:54:17.033807 write(4, "\1\0\0\0", 4) = 4
15796 15:54:17.033839 <... read resumed> "\1\0\0\0", 4) = 4
15796 15:54:17.033865 gettimeofday({1495655657, 33883}, NULL) = 0
15796 15:54:17.033906 getcwd("/home/msfadmin", 4096) = 15
15796 15:54:17.033946 open("myfile27", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15796 15:54:17.033980 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15796 15:54:17.034019 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15796 15:54:17.034047 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15796 15:54:17.034074 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc20614) = 0
15796 15:54:17.034110 ftruncate64(4, 0) = 0
15796 15:54:17.034152 _llseek(4, 0, [0], SEEK_SET) = 0
15796 15:54:17.034182 write(5, "\v", 1) = 1
15796 15:54:17.034210 read(5,  <unfinished ...>
15794 15:54:17.034232 read(4, "\v", 1)  = 1
15794 15:54:17.034265 write(4, "\1\0\0\0", 4) = 4
15796 15:54:17.034297 <... read resumed> "\1\0\0\0", 4) = 4
15796 15:54:17.034320 write(5, "\v", 1) = 1
15796 15:54:17.034347 read(5,  <unfinished ...>
15794 15:54:17.034369 read(4, "\v", 1)  = 1
15794 15:54:17.034401 write(4, "\1\0\0\0", 4) = 4
15796 15:54:17.034432 <... read resumed> "\1\0\0\0", 4) = 4
15796 15:54:17.034455 write(5, "\r", 1) = 1
15796 15:54:17.034482 read(5,  <unfinished ...>
15794 15:54:17.034504 read(4, "\r", 1)  = 1
15794 15:54:17.034538 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15794 15:54:17.034593 accept(5, {sa_family=AF_INET, sin_port=htons(52923), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15794 15:54:17.034704 write(4, "\1", 1) = 1
15796 15:54:17.034738 <... read resumed> "\1", 1) = 1
15796 15:54:17.034765 recvmsg(5,  <unfinished ...>
15794 15:54:17.034788 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15796 15:54:17.034788 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15796 15:54:17.034788 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15796 15:54:17.034788 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15796 15:54:17.034788 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15796 15:54:17.034788 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15796 15:54:17.034788 alarm(300)        = 300
15796 15:54:17.034788 write(0, "150 Ok to send data.\r\n", 22) = 22
15796 15:54:17.034788 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d37000
15796 15:54:17.034788 mprotect(0xb7d49000, 4096, PROT_NONE) = 0
15796 15:54:17.034788 mprotect(0xb7d37000, 4096, PROT_NONE) = 0
15796 15:54:17.034788 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15796 15:54:17.034788 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15796 15:54:17.034788 read(6, "", 65536) = 0
15796 15:54:17.034788 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15796 15:54:17.034788 alarm(300)        = 300
15796 15:54:17.034788 close(6)          = 0
15796 15:54:17.034788 alarm(0)          = 300
15796 15:54:17.034788 gettimeofday({1495655657, 34788}, NULL) = 0
15796 15:54:17.034788 getpid()          = 15796
15796 15:54:17.034788 gettimeofday({1495655657, 34788}, NULL) = 0
15796 15:54:17.034788 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc205b4) = 0
15796 15:54:17.034788 write(3, "Wed May 24 15:54:17 2017 [pid 15796] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile27\", 17 bytes, 18.34Kbyte/sec\n", 131) = 131
15796 15:54:17.034788 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc205bc) = 0
15796 15:54:17.034788 write(0, "226 Transfer complete.\r\n", 24) = 24
15796 15:54:17.034788 write(5, "\n", 1) = 1
15796 15:54:17.034788 read(5,  <unfinished ...>
15794 15:54:17.034788 close(6)          = 0
15794 15:54:17.034788 read(4, "\n", 1)  = 1
15794 15:54:17.034788 close(5)          = 0
15794 15:54:17.034788 write(4, "\1", 1) = 1
15796 15:54:17.034788 <... read resumed> "\1", 1) = 1
15796 15:54:17.034788 close(4)          = 0
15796 15:54:17.034788 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
