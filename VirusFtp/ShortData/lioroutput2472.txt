15181 15:46:23.620505 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15181 15:46:23.620505 statfs64("/selinux", 84, 0xbf97e41c) = -1 ENOENT (No such file or directory)
15181 15:46:23.620505 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
15181 15:46:23.620505 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
15181 15:46:23.620505 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f48000
15181 15:46:23.620505 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
15181 15:46:23.620505 read(7, "", 1024) = 0
15181 15:46:23.620505 close(7)          = 0
15181 15:46:23.620505 munmap(0xb7f48000, 4096) = 0
15181 15:46:23.620505 munmap(0xb7d77000, 29913) = 0
15181 15:46:23.620505 read(6, "", 4096) = 0
15181 15:46:23.621818 close(6)          = 0
15181 15:46:23.621887 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.621933 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.622001 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.622051 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15181 15:46:23.622109 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.622153 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15181 15:46:23.622300 read(6, "", 4096) = 0
15181 15:46:23.622344 close(6)          = 0
15181 15:46:23.622383 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.622428 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.622493 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.622543 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15181 15:46:23.622600 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.622645 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15181 15:46:23.622742 read(6, "", 4096) = 0
15181 15:46:23.622773 close(6)          = 0
15181 15:46:23.622801 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.622831 read(5, "", 4096) = 0
15181 15:46:23.622859 close(5)          = 0
15181 15:46:23.622886 munmap(0xb7f4f000, 4096) = 0
15181 15:46:23.622916 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15181 15:46:23.622950 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15181 15:46:23.622989 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4f000
15181 15:46:23.623019 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15181 15:46:23.623106 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.623150 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.623330 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15181 15:46:23.623372 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.623403 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15181 15:46:23.623507 read(6, "", 4096) = 0
15181 15:46:23.623537 close(6)          = 0
15181 15:46:23.623566 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.623599 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.623641 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.623676 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15181 15:46:23.623714 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.623744 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15181 15:46:23.623825 read(6, "", 4096) = 0
15181 15:46:23.623854 close(6)          = 0
15181 15:46:23.623881 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.623912 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.623954 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.623987 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15181 15:46:23.624027 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.624056 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15181 15:46:23.624290 read(6, "", 4096) = 0
15181 15:46:23.624327 close(6)          = 0
15181 15:46:23.624355 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.624386 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15181 15:46:23.624432 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15181 15:46:23.624467 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15181 15:46:23.624505 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
15181 15:46:23.624536 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15181 15:46:23.624622 read(6, "", 4096) = 0
15181 15:46:23.624650 close(6)          = 0
15181 15:46:23.624678 munmap(0xb7f49000, 4096) = 0
15181 15:46:23.624708 read(5, "", 4096) = 0
15181 15:46:23.624737 close(5)          = 0
15181 15:46:23.624764 munmap(0xb7f4f000, 4096) = 0
15181 15:46:23.624802 time(NULL)        = 1495655183
15181 15:46:23.624835 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15181 15:46:23.624878 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15181 15:46:23.624909 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15181 15:46:23.624948 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4f000
15181 15:46:23.624977 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15181 15:46:23.625025 read(5, "", 4096) = 0
15181 15:46:23.625054 close(5)          = 0
15181 15:46:23.625080 munmap(0xb7f4f000, 4096) = 0
15181 15:46:23.625123 getuid32()        = 0
15181 15:46:23.625168 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.625209 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.625265 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15181 15:46:23.625305 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.625336 _llseek(5, 1624, [1624], SEEK_SET) = 0
15181 15:46:23.625382 munmap(0xb7f4f000, 1624) = 0
15181 15:46:23.625413 close(5)          = 0
15181 15:46:23.625471 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.625514 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.625544 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15181 15:46:23.625582 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.625613 _llseek(5, 1233, [1233], SEEK_SET) = 0
15181 15:46:23.625658 munmap(0xb7f4f000, 1233) = 0
15181 15:46:23.625686 close(5)          = 0
15181 15:46:23.625732 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.625766 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.625794 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15181 15:46:23.625833 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.625861 _llseek(5, 1624, [1624], SEEK_SET) = 0
15181 15:46:23.625900 munmap(0xb7f4f000, 1624) = 0
15181 15:46:23.625928 close(5)          = 0
15181 15:46:23.625961 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.625995 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.626023 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15181 15:46:23.626062 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.626090 _llseek(5, 1233, [1233], SEEK_SET) = 0
15181 15:46:23.626130 munmap(0xb7f4f000, 1233) = 0
15181 15:46:23.626157 close(5)          = 0
15181 15:46:23.626583 getuid32()        = 0
15181 15:46:23.626618 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.626653 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.626682 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15181 15:46:23.626720 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.626750 _llseek(5, 1624, [1624], SEEK_SET) = 0
15181 15:46:23.626788 munmap(0xb7f4f000, 1624) = 0
15181 15:46:23.626816 close(5)          = 0
15181 15:46:23.626850 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.626885 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.626913 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15181 15:46:23.626951 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.626980 _llseek(5, 1233, [1233], SEEK_SET) = 0
15181 15:46:23.627020 munmap(0xb7f4f000, 1233) = 0
15181 15:46:23.627047 close(5)          = 0
15181 15:46:23.627079 time(NULL)        = 1495655183
15181 15:46:23.627117 munmap(0xb7f4c000, 12164) = 0
15181 15:46:23.627152 munmap(0xb7f4a000, 7136) = 0
15181 15:46:23.627213 munmap(0xb7d7f000, 95428) = 0
15181 15:46:23.627244 munmap(0xb7d45000, 201052) = 0
15181 15:46:23.627275 munmap(0xb7d2c000, 101180) = 0
15181 15:46:23.627327 gettimeofday({1495655183, 627347}, NULL) = 0
15181 15:46:23.627373 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9802f4) = -1 ENOENT (No such file or directory)
15181 15:46:23.627411 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15181 15:46:23.627473 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf980444) = 0
15181 15:46:23.627515 write(3, "Wed May 24 15:46:23 2017 [pid 15181] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15181 15:46:23.627556 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf98044c) = 0
15181 15:46:23.627590 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15181 15:46:23.627638 write(4, "\1", 1 <unfinished ...>
15182 15:46:23.627685 <... read resumed> "\1", 1) = 1
15181 15:46:23.627714 <... write resumed> ) = 1
15182 15:46:23.627751 exit_group(0)     = ?
15181 15:46:23.627859 --- SIGCHLD (Child exited) @ 0 (0) ---
15181 15:46:23.627892 sigreturn()       = ? (mask now [])
15181 15:46:23.627953 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15182
15181 15:46:23.627999 close(4)          = 0
15181 15:46:23.628044 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15181 15:46:23.628093 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15181 15:46:23.628170 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15181 15:46:23.628222 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7db56f8) = 15183
15183 15:46:23.628388 prctl(0x1, 0x9, 0, 0, 0) = 0
15183 15:46:23.628438 close(4)          = 0
15183 15:46:23.628522 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15183 15:46:23.628582 _llseek(4, 0, [0], SEEK_CUR) = 0
15183 15:46:23.628623 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15183 15:46:23.628667 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4f000
15183 15:46:23.628701 _llseek(4, 1624, [1624], SEEK_SET) = 0
15183 15:46:23.628755 munmap(0xb7f4f000, 1624) = 0
15183 15:46:23.628786 close(4)          = 0
15183 15:46:23.628823 getuid32()        = 0
15183 15:46:23.628852 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15183 15:46:23.628888 _llseek(4, 0, [0], SEEK_CUR) = 0
15183 15:46:23.628934 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15183 15:46:23.628987 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4f000
15183 15:46:23.629019 _llseek(4, 1624, [1624], SEEK_SET) = 0
15183 15:46:23.629059 munmap(0xb7f4f000, 1624) = 0
15183 15:46:23.629088 close(4)          = 0
15183 15:46:23.629210 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15183 15:46:23.629278 read(4, "65536\n", 31) = 6
15183 15:46:23.629317 close(4)          = 0
15183 15:46:23.629360 socket(PF_FILE, SOCK_STREAM, 0) = 4
15183 15:46:23.629397 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15183 15:46:23.629433 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15183 15:46:23.629493 close(4)          = 0
15183 15:46:23.629531 socket(PF_FILE, SOCK_STREAM, 0) = 4
15183 15:46:23.629563 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15183 15:46:23.629598 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15183 15:46:23.629649 close(4)          = 0
15183 15:46:23.629713 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15183 15:46:23.629755 _llseek(4, 0, [0], SEEK_CUR) = 0
15183 15:46:23.629790 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15183 15:46:23.629837 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4f000
15183 15:46:23.629873 _llseek(4, 886, [886], SEEK_SET) = 0
15183 15:46:23.629937 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15183 15:46:23.629986 munmap(0xb7f4f000, 886) = 0
15183 15:46:23.630020 close(4)          = 0
15183 15:46:23.630088 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15183 15:46:23.630146 geteuid32()       = 0
15183 15:46:23.630191 getegid32()       = 0
15183 15:46:23.630236 setregid32(-1, 1000) = 0
15183 15:46:23.630269 setreuid32(-1, 1000) = 0
15183 15:46:23.630303 chdir("/home/msfadmin") = 0
15183 15:46:23.630339 setreuid32(-1, 0) = 0
15183 15:46:23.630369 setregid32(-1, 0) = 0
15183 15:46:23.630402 setgid32(1000)    = 0
15183 15:46:23.630433 setuid32(1000)    = 0
15183 15:46:23.630466 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15183 15:46:23.630505 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4d000
15183 15:46:23.630505 mprotect(0xb7f4f000, 4096, PROT_NONE) = 0
15183 15:46:23.630505 mprotect(0xb7f4d000, 4096, PROT_NONE) = 0
15183 15:46:23.630505 getcwd("/home/msfadmin", 4096) = 15
15183 15:46:23.630505 umask(022)        = 077
15183 15:46:23.630505 getcwd("/home/msfadmin", 4096) = 15
15183 15:46:23.630505 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15183 15:46:23.630505 write(0, "230 Login successful.\r\n", 23) = 23
15183 15:46:23.630505 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.630505 alarm(300)        = 0
15183 15:46:23.630505 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
15183 15:46:23.630505 mprotect(0xb7f4c000, 4096, PROT_NONE) = 0
15183 15:46:23.630505 mprotect(0xb7f4a000, 4096, PROT_NONE) = 0
15183 15:46:23.630505 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15183 15:46:23.630505 read(0, "TYPE I\r\n", 8) = 8
15183 15:46:23.630505 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15183 15:46:23.630505 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.630505 alarm(300)        = 300
15183 15:46:23.630505 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15183 15:46:23.630505 read(0, "PASV\r\n", 6) = 6
15183 15:46:23.630505 write(5, "\n", 1) = 1
15183 15:46:23.630505 read(5,  <unfinished ...>
15181 15:46:23.631804 close(5)          = 0
15181 15:46:23.631855 getuid32()        = 0
15181 15:46:23.631890 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15181 15:46:23.631924 _llseek(5, 0, [0], SEEK_CUR) = 0
15181 15:46:23.631954 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15181 15:46:23.632010 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4f000
15181 15:46:23.632039 _llseek(5, 1624, [1624], SEEK_SET) = 0
15181 15:46:23.632079 munmap(0xb7f4f000, 1624) = 0
15181 15:46:23.632107 close(5)          = 0
15181 15:46:23.632144 setgroups32(0, []) = 0
15181 15:46:23.632172 chdir("/usr/share/empty") = 0
15181 15:46:23.632203 chroot(".")       = 0
15181 15:46:23.632229 capset(NULL, NULL) = -1 EFAULT (Bad address)
15181 15:46:23.632260 prctl(0x8, 0, 0xbf980428, 0x80549a6, 0xbf980410) = 0
15181 15:46:23.632287 prctl(0x8, 0x1, 0xbf980428, 0x8054a49, 0xbf980410) = 0
15181 15:46:23.632313 setgid32(65534)   = 0
15181 15:46:23.632338 setuid32(65534)   = 0
15181 15:46:23.632363 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15181 15:46:23.632394 read(4, "\n", 1)  = 1
15181 15:46:23.632430 write(4, "\1", 1) = 1
15183 15:46:23.632472 <... read resumed> "\1", 1) = 1
15183 15:46:23.632508 write(5, "\f", 1) = 1
15183 15:46:23.632547 read(5,  <unfinished ...>
15181 15:46:23.632578 read(4, "\f", 1)  = 1
15181 15:46:23.632625 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15181 15:46:23.632683 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15181 15:46:23.632722 gettimeofday({1495655183, 632744}, NULL) = 0
15181 15:46:23.632799 bind(5, {sa_family=AF_INET, sin_port=htons(59802), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15181 15:46:23.632863 listen(5, 1)      = 0
15181 15:46:23.632903 write(4, "\232\351\0\0", 4) = 4
15183 15:46:23.632943 <... read resumed> "\232\351\0\0", 4) = 4
15183 15:46:23.632990 write(0, "227 Entering Passive Mode (127,0,0,1,233,154).\r\n", 48) = 48
15183 15:46:23.633316 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.633362 alarm(300)        = 300
15183 15:46:23.633422 recv(0, "STOR myfile27\r\n", 4096, MSG_PEEK) = 15
15183 15:46:23.633459 read(0, "STOR myfile27\r\n", 15) = 15
15183 15:46:23.633513 write(5, "\v", 1) = 1
15183 15:46:23.633547 read(5,  <unfinished ...>
15181 15:46:23.633573 read(4, "\v", 1)  = 1
15181 15:46:23.633607 write(4, "\1\0\0\0", 4) = 4
15183 15:46:23.633641 <... read resumed> "\1\0\0\0", 4) = 4
15183 15:46:23.633670 gettimeofday({1495655183, 633691}, NULL) = 0
15183 15:46:23.633717 getcwd("/home/msfadmin", 4096) = 15
15183 15:46:23.633754 open("myfile27", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15183 15:46:23.633818 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15183 15:46:23.633865 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15183 15:46:23.633899 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15183 15:46:23.634048 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf980374) = 0
15183 15:46:23.634093 ftruncate64(4, 0) = 0
15183 15:46:23.634143 _llseek(4, 0, [0], SEEK_SET) = 0
15183 15:46:23.634176 write(5, "\v", 1) = 1
15183 15:46:23.634208 read(5,  <unfinished ...>
15181 15:46:23.634234 read(4, "\v", 1)  = 1
15181 15:46:23.634269 write(4, "\1\0\0\0", 4) = 4
15183 15:46:23.634302 <... read resumed> "\1\0\0\0", 4) = 4
15183 15:46:23.634331 write(5, "\v", 1) = 1
15183 15:46:23.634363 read(5,  <unfinished ...>
15181 15:46:23.634389 read(4, "\v", 1)  = 1
15181 15:46:23.634423 write(4, "\1\0\0\0", 4) = 4
15183 15:46:23.634455 <... read resumed> "\1\0\0\0", 4) = 4
15183 15:46:23.634482 write(5, "\r", 1) = 1
15183 15:46:23.634514 read(5,  <unfinished ...>
15181 15:46:23.634539 read(4, "\r", 1)  = 1
15181 15:46:23.634577 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15181 15:46:23.634622 accept(5, {sa_family=AF_INET, sin_port=htons(34833), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15181 15:46:23.634678 write(4, "\1", 1) = 1
15183 15:46:23.634712 <... read resumed> "\1", 1) = 1
15183 15:46:23.634743 recvmsg(5,  <unfinished ...>
15181 15:46:23.634773 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15183 15:46:23.634818 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15183 15:46:23.634857 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15183 15:46:23.634893 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15183 15:46:23.634929 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15183 15:46:23.634962 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.635035 alarm(300)        = 300
15183 15:46:23.635108 write(0, "150 Ok to send data.\r\n", 22) = 22
15183 15:46:23.635285 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d84000
15183 15:46:23.635324 mprotect(0xb7d96000, 4096, PROT_NONE) = 0
15183 15:46:23.635360 mprotect(0xb7d84000, 4096, PROT_NONE) = 0
15183 15:46:23.635392 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15183 15:46:23.635430 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15183 15:46:23.635472 read(6, "", 65536) = 0
15183 15:46:23.635506 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.635545 alarm(300)        = 300
15183 15:46:23.635601 close(6)          = 0
15183 15:46:23.635631 alarm(0)          = 300
15183 15:46:23.635675 gettimeofday({1495655183, 635694}, NULL) = 0
15183 15:46:23.635734 getpid()          = 15183
15183 15:46:23.635770 gettimeofday({1495655183, 635790}, NULL) = 0
15183 15:46:23.635827 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf980314) = 0
15183 15:46:23.635868 write(3, "Wed May 24 15:46:23 2017 [pid 15183] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile27\", 17 bytes, 7.91Kbyte/sec\n", 130) = 130
15183 15:46:23.635932 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf98031c) = 0
15183 15:46:23.636010 write(0, "226 Transfer complete.\r\n", 24) = 24
15183 15:46:23.636138 write(5, "\n", 1) = 1
15183 15:46:23.636174 read(5,  <unfinished ...>
15181 15:46:23.636200 close(6)          = 0
15181 15:46:23.636316 read(4, "\n", 1)  = 1
15181 15:46:23.636352 close(5)          = 0
15181 15:46:23.636386 write(4, "\1", 1) = 1
15183 15:46:23.636418 <... read resumed> "\1", 1) = 1
15183 15:46:23.636445 close(4)          = 0
15183 15:46:23.636478 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15183 15:46:23.636516 alarm(300)        = 0
15183 15:46:23.636575 recv(0,  <unfinished ...>
15181 15:46:23.636601 read(4,  <unfinished ...>
4439  15:46:23.636601 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:46:23.636601 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:46:23.636601 write(4, "\21", 1) = 1
