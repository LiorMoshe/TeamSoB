13280 15:27:08.682237 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef6000
13280 15:27:08.682251 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
13280 15:27:08.682307 read(6, "", 4096) = 0
13280 15:27:08.682321 close(6)          = 0
13280 15:27:08.682334 munmap(0xb7ef6000, 4096) = 0
13280 15:27:08.682349 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13280 15:27:08.682375 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
13280 15:27:08.682393 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
13280 15:27:08.682416 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef6000
13280 15:27:08.682431 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
13280 15:27:08.682597 read(6, "", 4096) = 0
13280 15:27:08.682611 close(6)          = 0
13280 15:27:08.682628 munmap(0xb7ef6000, 4096) = 0
13280 15:27:08.682644 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
13280 15:27:08.682670 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
13280 15:27:08.682688 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
13280 15:27:08.682711 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef6000
13280 15:27:08.682726 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
13280 15:27:08.682780 read(6, "", 4096) = 0
13280 15:27:08.682794 close(6)          = 0
13280 15:27:08.682807 munmap(0xb7ef6000, 4096) = 0
13280 15:27:08.682822 read(5, "", 4096) = 0
13280 15:27:08.682835 close(5)          = 0
13280 15:27:08.682848 munmap(0xb7efc000, 4096) = 0
13280 15:27:08.682867 time(NULL)        = 1495654028
13280 15:27:08.682884 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13280 15:27:08.682941 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
13280 15:27:08.682970 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
13280 15:27:08.683007 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
13280 15:27:08.683024 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
13280 15:27:08.683056 read(5, "", 4096) = 0
13280 15:27:08.683070 close(5)          = 0
13280 15:27:08.683083 munmap(0xb7efc000, 4096) = 0
13280 15:27:08.683108 getuid32()        = 0
13280 15:27:08.683132 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.683153 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.683169 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13280 15:27:08.683192 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.683208 _llseek(5, 1624, [1624], SEEK_SET) = 0
13280 15:27:08.683236 munmap(0xb7efc000, 1624) = 0
13280 15:27:08.683251 close(5)          = 0
13280 15:27:08.683288 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.683312 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.683327 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13280 15:27:08.683350 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.683365 _llseek(5, 1233, [1233], SEEK_SET) = 0
13280 15:27:08.683394 munmap(0xb7efc000, 1233) = 0
13280 15:27:08.683408 close(5)          = 0
13280 15:27:08.683434 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.683452 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.683467 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13280 15:27:08.683490 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.683505 _llseek(5, 1624, [1624], SEEK_SET) = 0
13280 15:27:08.683528 munmap(0xb7efc000, 1624) = 0
13280 15:27:08.683541 close(5)          = 0
13280 15:27:08.683559 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.683577 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.683591 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13280 15:27:08.683614 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.683629 _llseek(5, 1233, [1233], SEEK_SET) = 0
13280 15:27:08.683652 munmap(0xb7efc000, 1233) = 0
13280 15:27:08.683666 close(5)          = 0
13280 15:27:08.684131 getuid32()        = 0
13280 15:27:08.684150 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.684170 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.684185 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13280 15:27:08.684208 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.684224 _llseek(5, 1624, [1624], SEEK_SET) = 0
13280 15:27:08.684253 munmap(0xb7efc000, 1624) = 0
13280 15:27:08.684268 close(5)          = 0
13280 15:27:08.684287 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.684306 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.684320 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
13280 15:27:08.684343 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.684358 _llseek(5, 1233, [1233], SEEK_SET) = 0
13280 15:27:08.684382 munmap(0xb7efc000, 1233) = 0
13280 15:27:08.684395 close(5)          = 0
13280 15:27:08.684411 time(NULL)        = 1495654028
13280 15:27:08.684433 munmap(0xb7ef9000, 12164) = 0
13280 15:27:08.684452 munmap(0xb7ef7000, 7136) = 0
13280 15:27:08.684471 munmap(0xb7d2c000, 95428) = 0
13280 15:27:08.684488 munmap(0xb7cf2000, 201052) = 0
13280 15:27:08.684504 munmap(0xb7cd9000, 101180) = 0
13280 15:27:08.684527 gettimeofday({1495654028, 684533}, NULL) = 0
13280 15:27:08.684544 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfdb3f24) = -1 ENOENT (No such file or directory)
13280 15:27:08.684565 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
13280 15:27:08.684603 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdb4074) = 0
13280 15:27:08.684627 write(3, "Wed May 24 15:27:08 2017 [pid 13280] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
13280 15:27:08.684652 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdb407c) = 0
13280 15:27:08.684671 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13280 15:27:08.684692 write(4, "\1", 1 <unfinished ...>
13281 15:27:08.684706 <... read resumed> "\1", 1) = 1
13280 15:27:08.684713 <... write resumed> ) = 1
13281 15:27:08.684724 exit_group(0)     = ?
13280 15:27:08.684771 --- SIGCHLD (Child exited) @ 0 (0) ---
13280 15:27:08.684782 sigreturn()       = ? (mask now [])
13280 15:27:08.684809 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 13281
13280 15:27:08.684828 close(4)          = 0
13280 15:27:08.684846 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
13280 15:27:08.684866 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13280 15:27:08.684886 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13280 15:27:08.684906 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d626f8) = 13282
13282 15:27:08.684997 prctl(0x1, 0x9, 0, 0, 0) = 0
13282 15:27:08.685017 close(4)          = 0
13282 15:27:08.685060 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13282 15:27:08.685085 _llseek(4, 0, [0], SEEK_CUR) = 0
13282 15:27:08.685107 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13282 15:27:08.685133 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efc000
13282 15:27:08.685150 _llseek(4, 1624, [1624], SEEK_SET) = 0
13282 15:27:08.685182 munmap(0xb7efc000, 1624) = 0
13282 15:27:08.685198 close(4)          = 0
13282 15:27:08.685217 getuid32()        = 0
13282 15:27:08.685232 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
13282 15:27:08.685250 _llseek(4, 0, [0], SEEK_CUR) = 0
13282 15:27:08.685265 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13282 15:27:08.685288 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efc000
13282 15:27:08.685304 _llseek(4, 1624, [1624], SEEK_SET) = 0
13282 15:27:08.685326 munmap(0xb7efc000, 1624) = 0
13282 15:27:08.685339 close(4)          = 0
13282 15:27:08.685376 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
13282 15:27:08.685405 read(4, "65536\n", 31) = 6
13282 15:27:08.685423 close(4)          = 0
13282 15:27:08.685444 socket(PF_FILE, SOCK_STREAM, 0) = 4
13282 15:27:08.685461 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13282 15:27:08.685477 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13282 15:27:08.685508 close(4)          = 0
13282 15:27:08.685524 socket(PF_FILE, SOCK_STREAM, 0) = 4
13282 15:27:08.685539 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13282 15:27:08.685553 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
13282 15:27:08.685586 close(4)          = 0
13282 15:27:08.685620 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
13282 15:27:08.685641 _llseek(4, 0, [0], SEEK_CUR) = 0
13282 15:27:08.685656 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13282 15:27:08.685679 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7efc000
13282 15:27:08.685695 _llseek(4, 886, [886], SEEK_SET) = 0
13282 15:27:08.685731 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
13282 15:27:08.685755 munmap(0xb7efc000, 886) = 0
13282 15:27:08.685770 close(4)          = 0
13282 15:27:08.685784 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
13282 15:27:08.685807 geteuid32()       = 0
13282 15:27:08.685823 getegid32()       = 0
13282 15:27:08.685838 setregid32(-1, 1000) = 0
13282 15:27:08.685853 setreuid32(-1, 1000) = 0
13282 15:27:08.685868 chdir("/home/msfadmin") = 0
13282 15:27:08.685885 setreuid32(-1, 0) = 0
13282 15:27:08.685898 setregid32(-1, 0) = 0
13282 15:27:08.685926 setgid32(1000)    = 0
13282 15:27:08.685942 setuid32(1000)    = 0
13282 15:27:08.685956 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
13282 15:27:08.685977 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efa000
13282 15:27:08.685993 mprotect(0xb7efc000, 4096, PROT_NONE) = 0
13282 15:27:08.686010 mprotect(0xb7efa000, 4096, PROT_NONE) = 0
13282 15:27:08.686026 getcwd("/home/msfadmin", 4096) = 15
13282 15:27:08.686045 umask(022)        = 077
13282 15:27:08.686060 getcwd("/home/msfadmin", 4096) = 15
13282 15:27:08.686079 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
13282 15:27:08.686111 write(0, "230 Login successful.\r\n", 23) = 23
13282 15:27:08.686304 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
13282 15:27:08.686342 alarm(300)        = 0
13282 15:27:08.686366 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ef7000
13282 15:27:08.686394 mprotect(0xb7ef9000, 4096, PROT_NONE) = 0
13282 15:27:08.686420 mprotect(0xb7ef7000, 4096, PROT_NONE) = 0
13282 15:27:08.686451 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
13282 15:27:08.686480 read(0, "QUIT\r\n", 6) = 6
13282 15:27:08.686579 shutdown(0, 0 /* receive */) = 0
13282 15:27:08.686617 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
13282 15:27:08.686640 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13282 15:27:08.686656 write(0, "221 Goodbye.\r\n", 14) = 14
13282 15:27:08.686739 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
13282 15:27:08.686757 fcntl64(0, F_SETFL, O_RDWR) = 0
13282 15:27:08.686772 shutdown(0, 2 /* send and receive */) = 0
13282 15:27:08.686799 exit_group(0)     = ?
13280 15:27:08.686844 --- SIGCHLD (Child exited) @ 0 (0) ---
13280 15:27:08.686881 alarm(1)          = 0
13280 15:27:08.686901 sigreturn()       = ? (mask now [])
13280 15:27:08.686972 close(5)          = 0
13280 15:27:08.686997 getuid32()        = 0
13280 15:27:08.687020 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
13280 15:27:08.687042 _llseek(5, 0, [0], SEEK_CUR) = 0
13280 15:27:08.687060 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
13280 15:27:08.687086 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7efc000
13280 15:27:08.687103 _llseek(5, 1624, [1624], SEEK_SET) = 0
13280 15:27:08.687130 munmap(0xb7efc000, 1624) = 0
13280 15:27:08.687146 close(5)          = 0
13280 15:27:08.687165 setgroups32(0, []) = 0
13280 15:27:08.687180 chdir("/usr/share/empty") = 0
13280 15:27:08.687198 chroot(".")       = 0
13280 15:27:08.687214 capset(NULL, NULL) = -1 EFAULT (Bad address)
13280 15:27:08.687231 prctl(0x8, 0, 0xbfdb4058, 0x80549a6, 0xbfdb4040) = 0
13280 15:27:08.687246 prctl(0x8, 0x1, 0xbfdb4058, 0x8054a49, 0xbfdb4040) = 0
13280 15:27:08.687261 setgid32(65534)   = 0
13280 15:27:08.687276 setuid32(65534)   = 0
13280 15:27:08.687290 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
13280 15:27:08.687308 read(4, "", 1)    = 0
13280 15:27:08.687323 alarm(0)          = 1
13280 15:27:08.687346 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 13282
13280 15:27:08.687366 exit_group(0)     = ?
4439  15:27:08.687418 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:27:08.687428 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:27:08.687439 write(4, "\21", 1) = 1
4439  15:27:08.687459 sigreturn()       = ? (mask now [])
4439  15:27:08.687506 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:27:08.687531 ioctl(3, FIONREAD, [1]) = 0
4439  15:27:08.687550 read(3, "\21", 1) = 1
4439  15:27:08.687569 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 13280
4439  15:27:08.687591 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:27:08.687611 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:27:08.687626 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:27:09.189791 accept(5, {sa_family=AF_INET, sin_port=htons(43400), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:27:09.189958 time(NULL)        = 1495654029
4439  15:27:09.190054 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 13283
13283 15:27:09.190236 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
13283 15:27:09.190259 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
13283 15:27:09.190277 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
13283 15:27:09.190294 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
13283 15:27:09.190315 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
13283 15:27:09.190335 close(3)          = 0
13283 15:27:09.190348 close(4)          = 0
13283 15:27:09.190362 open("/dev/null", O_RDONLY) = 3
13283 15:27:09.190385 dup2(3, 0)        = 0
13283 15:27:09.190399 dup2(3, 1)        = 1
13283 15:27:09.190411 dup2(3, 2)        = 2
13283 15:27:09.190424 close(3)          = 0
13283 15:27:09.190441 setgid32(0)       = 0
13283 15:27:09.190459 setgroups32(0, []) = 0
13283 15:27:09.190474 setuid32(0)       = 0
13283 15:27:09.190491 getpriority(PRIO_PROCESS, 0) = 20
13283 15:27:09.190505 setpriority(PRIO_PROCESS, 0, 10) = 0
13283 15:27:09.190518 getpriority(PRIO_PROCESS, 0) = 10
13283 15:27:09.190573 getpeername(13, {sa_family=AF_INET, sin_port=htons(43400), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
13283 15:27:09.190629 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
13283 15:27:09.190671 open("/etc/hosts.allow", O_RDONLY) = 3
13283 15:27:09.190699 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
13283 15:27:09.190726 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
13283 15:27:09.190745 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
13283 15:27:09.190850 close(3)          = 0
13283 15:27:09.190865 munmap(0xb7f61000, 4096) = 0
13283 15:27:09.190902 fcntl64(13, F_SETFD, 0) = 0
13283 15:27:09.190921 close(7)          = 0
13283 15:27:09.190936 dup2(13, 0)       = 0
13283 15:27:09.190949 dup2(13, 1)       = 1
13283 15:27:09.190961 dup2(13, 2)       = 2
13283 15:27:09.190975 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
13283 15:27:09.190991 close(13)         = 0
13283 15:27:09.191005 setsid()          = 13283
13283 15:27:09.191020 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
13283 15:27:09.191129 brk(0)            = 0x8064000
13283 15:27:09.191158 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.191182 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
13283 15:27:09.191212 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.191234 open("/etc/ld.so.cache", O_RDONLY) = 3
13283 15:27:09.191252 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
13283 15:27:09.191277 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f39000
13283 15:27:09.191292 close(3)          = 0
13283 15:27:09.191307 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.191329 open("/lib/libpam.so.0", O_RDONLY) = 3
13283 15:27:09.191348 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
13283 15:27:09.191478 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
13283 15:27:09.191502 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f2f000
13283 15:27:09.191520 mmap2(0xb7f38000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7f38000
13283 15:27:09.191541 close(3)          = 0
13283 15:27:09.191558 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.191589 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 3
13283 15:27:09.191612 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
13283 15:27:09.191739 fstat64(3, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
13283 15:27:09.191764 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f2b000
13283 15:27:09.191780 mmap2(0xb7f2d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7f2d000
13283 15:27:09.191804 close(3)          = 0
13283 15:27:09.191821 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.191840 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 3
13283 15:27:09.191860 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
13283 15:27:09.191996 fstat64(3, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
13283 15:27:09.192020 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f2a000
13283 15:27:09.192039 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f12000
13283 15:27:09.192055 mmap2(0xb7f26000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13) = 0xb7f26000
13283 15:27:09.192076 mmap2(0xb7f28000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f28000
13283 15:27:09.192097 close(3)          = 0
13283 15:27:09.192115 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.192135 open("/lib/tls/i686/cmov/libresolv.so.2", O_RDONLY) = 3
13283 15:27:09.192156 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@!\0\0004\0\0\0\310\2\1\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\264\346\0\0\264\346\0\0\264\346\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0H\355\0\0H\355\0\0\5\0\0\0\0\20\0\0\1\0\0\0h\372\0\0h\372\0\0h\372\0\0X\7\0\0\\.\0\0\6\0\0\0\0\20\0\0\2\0\0\0\0\377\0\0\0\377\0\0\0\377\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345tdh\372\0\0h\372\0\0h\372\0\0\214\5\0\0\214\5\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\235\0\0\0;\0\0\0\20\0\0\0\t\0\0\0\244RH\260<\23\340\6\200\4\24\227\221\3\366\225\2@\20\0B\201\205A\20\6\30@A\20U\205\0B\0@\220\204\10\n\0J\0\25\4\21\200\2$\210\4\4P\220\0\2\"]\260D\4\221\t\31;\0\0\0\0\0\0\0\0\0\0\0<\0\0\0>\0\0\0?\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0@\0\0\0B\0\0\0C\0\0\0D\0\0\0\0\0\0\0E\0\0\0F\0\0\0\0\0\0\0H\0\0\0\0\0\0\0", 512) = 512
13283 15:27:09.192281 fstat64(3, {st_mode=S_IFREG|0644, st_size=67408, ...}) = 0
13283 15:27:09.192306 mmap2(NULL, 75972, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7eff000
13283 15:27:09.192321 mmap2(0xb7f0e000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf) = 0xb7f0e000
13283 15:27:09.192342 mmap2(0xb7f10000, 6340, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f10000
13283 15:27:09.192363 close(3)          = 0
13283 15:27:09.192386 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.192408 open("/lib/tls/i686/cmov/libutil.so.1", O_RDONLY) = 3
13283 15:27:09.192429 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\n\0\0004\0\0\0\200!\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0R\23\0\0R\23\0\0R\23\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\25\0\0`\25\0\0\5\0\0\0\0\20\0\0\1\0\0\0\364\36\0\0\364.\0\0\364.\0\0\230\1\0\0\234\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\10\37\0\0\10/\0\0\10/\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\364\36\0\0\364.\0\0\364.\0\0\0\1\0\0\0\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\r\0\0\0#\0\0\0\2\0\0\0\6\0\0\0\0\240\344\300\204\200\20@\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0$\0\0\0&\0\0\0\'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0\217\365\310\207\364\361\253\272_+\337\v\325=l\366\237<\300|\365\243\343p\277\370\337\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0S\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0/\1\0\0\0\0\0\0z\0\0\0\22\0\0\0\226\0\0\0\0\0\0\0*\0\0\0\22\0\0\0v\0\0\0", 512) = 512
13283 15:27:09.192578 fstat64(3, {st_mode=S_IFREG|0644, st_size=9696, ...}) = 0
13283 15:27:09.192604 mmap2(NULL, 12432, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7efb000
13283 15:27:09.192621 mmap2(0xb7efd000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7efd000
13283 15:27:09.192646 close(3)          = 0
13283 15:27:09.192664 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.192683 open("/lib/libcap.so.1", O_RDONLY) = 3
13283 15:27:09.192701 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\220\t\0\0004\0\0\0d$\0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\250!\0\0\250!\0\0\5\0\0\0\0\20\0\0\1\0\0\0\250!\0\0\2501\0\0\2501\0\0\354\1\0\0L\4\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274!\0\0\2741\0\0\2741\0\0\320\0\0\0\320\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\21\0\0\0$\0\0\0\1\0\0\0\r\0\0\0\0\0\0\0\10\0\0\0\v\0\0\0\0\0\0\0\f\0\0\0\33\0\0\0\"\0\0\0\17\0\0\0\21\0\0\0\20\0\0\0\t\0\0\0\23\0\0\0\22\0\0\0\25\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\34\0\0\0\6\0\0\0\2\0\0\0\0\0\0\0\37\0\0\0\27\0\0\0\0\0\0\0\24\0\0\0\26\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0#\0\0\0\36\0\0\0\35\0\0\0!\0\0\0\3\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\32\0\0\0\31\0\0\0\7\0\0\0\16\0\0\0\0\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\16\0\0\0\4\0\0\0\7\0\0\0\10\33\260\200\210\32\1\t\10\204\10\243\246\4\22$\0\0\0\0\16\0\0\0\17\0\0\0\20\0\0\0\23\0\0\0\24\0\0\0\25\0\0\0\26\0\0\0\30\0\0\0\34\0\0\0\35\0\0\0\36\0\0\0\0\0\0\0 \0\0\0\0\0\0\0!\0\0\0#\0\0\0\353\323\357\16\271\215\361\16\330qX\34", 512) = 512
13283 15:27:09.192829 fstat64(3, {st_mode=S_IFREG|0644, st_size=10316, ...}) = 0
13283 15:27:09.192853 mmap2(NULL, 13812, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7ef7000
13283 15:27:09.192869 mmap2(0xb7efa000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x2) = 0xb7efa000
13283 15:27:09.192889 close(3)          = 0
13283 15:27:09.192906 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
13283 15:27:09.192924 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 3
13283 15:27:09.192944 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
13283 15:27:09.193068 fstat64(3, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
13283 15:27:09.193094 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7da8000
13283 15:27:09.193110 mmap2(0xb7ef1000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x149) = 0xb7ef1000
13283 15:27:09.193137 mmap2(0xb7ef4000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7ef4000
13283 15:27:09.193159 close(3)          = 0
13283 15:27:09.193192 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da7000
13283 15:27:09.193217 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7da6000
13283 15:27:09.193233 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7da66b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
13283 15:27:09.193306 mprotect(0xb7ef1000, 4096, PROT_READ) = 0
13283 15:27:09.193351 munmap(0xb7f39000, 29913) = 0
13283 15:27:09.193437 brk(0)            = 0x8064000
13283 15:27:09.193451 brk(0x8085000)    = 0x8085000
13283 15:27:09.193473 stat64("/etc/vsftpd.conf", {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
13283 15:27:09.193523 open("/etc/vsftpd.conf", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 3
13283 15:27:09.193554 fstat64(3, {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
13283 15:27:09.193584 mmap2(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f3d000
13283 15:27:09.193600 mprotect(0xb7f40000, 4096, PROT_NONE) = 0
13283 15:27:09.193617 mprotect(0xb7f3d000, 4096, PROT_NONE) = 0
13283 15:27:09.193634 read(3, "# Example config file /etc/vsftpd.conf\n#\n# The default compiled in settings are fairly paranoid. This sample file\n# loosens things up a bit, to make the ftp daemon more usable.\n# Please see vsftpd.conf.5 for all compiled in defaults.\n#\n# READ THIS: This example file is NOT an exhaustive list of vsftpd options.\n# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd\'s\n# capabilities.\n#\n# Allow anonymous FTP? (Beware - allowed by default if you comment this out).\nanonymous_enable=YES\n\n#\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n\n#\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n\n#\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd\'s)\nlocal_umask=022\n\n#\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=YES\n\n#\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=YES\n\n#\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n#\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n#\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n#\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n#\n# You may override where the log file goes if you like. The default is shown\n# below.\n#xferlog_file=/var/log/vsftpd.log\n#\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\n#xferlog_std_format=YES\n#\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n#\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120\n#\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n#\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n#\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\n#ascii_upload_enable=YES\n#ascii_download_enable=YES\n#\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n#\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n#\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n#chroot_local_user=YES\n#chroot_list_enable=YES\n# (default follows)\n#chroot_list_file=/etc/vsftpd.chroot_list\n#\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\nls_recurse_enable=YES\n\n#\n# When \"listen\" directive is enabled, vsftpd runs in standalone mode and\n# listens on IPv4 sockets. This directive cannot be used in conjunction\n# with the listen_ipv6 directive.\nlisten=NO\n\n#\n# This directive enables listening on IPv6 sockets. To listen on IPv4 and IPv6\n# sockets, you must run two copies of vsftpd with two configuration files.\n# Make sure, that one of the listen options is commented !!\n#listen_ipv6=YES\n", 4430) = 4430
13283 15:27:09.194065 mprotect(0xb7f3d000, 4096, PROT_READ) = 0
13283 15:27:09.194081 munmap(0xb7f3d000, 16384) = 0
13283 15:27:09.194098 close(3)          = 0
13283 15:27:09.194113 stat64("/etc/vsftpd.conf", {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
13283 15:27:09.194140 getuid32()        = 0
13283 15:27:09.194218 getuid32()        = 0
13283 15:27:09.194234 fstat64(0, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
13283 15:27:09.194261 getpeername(0, {sa_family=AF_INET, sin_port=htons(43400), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
13283 15:27:09.194292 getsockname(0, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
13283 15:27:09.194327 socket(PF_FILE, SOCK_STREAM, 0) = 3
13283 15:27:09.194346 fcntl64(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
13283 15:27:09.194362 connect(3, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
