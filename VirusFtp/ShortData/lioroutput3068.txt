18911 16:34:08.673379 mmap2(0xb7d71000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d71000
18911 16:34:08.673437 close(7)          = 0
18911 16:34:08.673726 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18911 16:34:08.673814 statfs64("/selinux", 84, 0xbf9c5c5c) = -1 ENOENT (No such file or directory)
18911 16:34:08.673896 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
18911 16:34:08.673971 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
18911 16:34:08.674032 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f76000
18911 16:34:08.674078 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
18911 16:34:08.674308 read(7, "", 1024) = 0
18911 16:34:08.674352 close(7)          = 0
18911 16:34:08.674394 munmap(0xb7f76000, 4096) = 0
18911 16:34:08.674449 munmap(0xb7da5000, 29913) = 0
18911 16:34:08.674538 read(6, "", 4096) = 0
18911 16:34:08.674586 close(6)          = 0
18911 16:34:08.674626 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.674671 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.674741 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.674793 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18911 16:34:08.674851 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.674896 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18911 16:34:08.675016 read(6, "", 4096) = 0
18911 16:34:08.675058 close(6)          = 0
18911 16:34:08.675098 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.675143 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.675208 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.675259 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18911 16:34:08.675316 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.675360 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18911 16:34:08.675624 read(6, "", 4096) = 0
18911 16:34:08.675669 close(6)          = 0
18911 16:34:08.675709 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.675754 read(5, "", 4096) = 0
18911 16:34:08.675795 close(5)          = 0
18911 16:34:08.675834 munmap(0xb7f7d000, 4096) = 0
18911 16:34:08.675877 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
18911 16:34:08.675928 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
18911 16:34:08.675987 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7d000
18911 16:34:08.676030 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
18911 16:34:08.676160 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.676225 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.676274 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
18911 16:34:08.676332 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.676376 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
18911 16:34:08.676520 read(6, "", 4096) = 0
18911 16:34:08.676570 close(6)          = 0
18911 16:34:08.676610 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.676656 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.676721 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.676770 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18911 16:34:08.676828 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.676872 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18911 16:34:08.676944 read(6, "", 4096) = 0
18911 16:34:08.676944 close(6)          = 0
18911 16:34:08.676944 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.676944 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.676944 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.676944 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.676944 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
18911 16:34:08.676944 read(6, "", 4096) = 0
18911 16:34:08.676944 close(6)          = 0
18911 16:34:08.676944 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.676944 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18911 16:34:08.676944 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18911 16:34:08.676944 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
18911 16:34:08.676944 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18911 16:34:08.676944 read(6, "", 4096) = 0
18911 16:34:08.676944 close(6)          = 0
18911 16:34:08.676944 munmap(0xb7f77000, 4096) = 0
18911 16:34:08.676944 read(5, "", 4096) = 0
18911 16:34:08.676944 close(5)          = 0
18911 16:34:08.676944 munmap(0xb7f7d000, 4096) = 0
18911 16:34:08.676944 time(NULL)        = 1495658048
18911 16:34:08.676944 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18911 16:34:08.676944 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
18911 16:34:08.676944 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7d000
18911 16:34:08.676944 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
18911 16:34:08.676944 read(5, "", 4096) = 0
18911 16:34:08.676944 close(5)          = 0
18911 16:34:08.676944 munmap(0xb7f7d000, 4096) = 0
18911 16:34:08.676944 getuid32()        = 0
18911 16:34:08.676944 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.676944 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.676944 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.676944 _llseek(5, 1624, [1624], SEEK_SET) = 0
18911 16:34:08.676944 munmap(0xb7f7d000, 1624) = 0
18911 16:34:08.676944 close(5)          = 0
18911 16:34:08.676944 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.676944 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.676944 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.676944 _llseek(5, 1233, [1233], SEEK_SET) = 0
18911 16:34:08.676944 munmap(0xb7f7d000, 1233) = 0
18911 16:34:08.676944 close(5)          = 0
18911 16:34:08.676944 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.676944 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.676944 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.676944 _llseek(5, 1624, [1624], SEEK_SET) = 0
18911 16:34:08.676944 munmap(0xb7f7d000, 1624) = 0
18911 16:34:08.676944 close(5)          = 0
18911 16:34:08.676944 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.676944 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.676944 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18911 16:34:08.676944 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.676944 _llseek(5, 1233, [1233], SEEK_SET) = 0
18911 16:34:08.680456 munmap(0xb7f7d000, 1233) = 0
18911 16:34:08.680534 close(5)          = 0
18911 16:34:08.681131 getuid32()        = 0
18911 16:34:08.681177 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.681228 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.681280 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18911 16:34:08.681339 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.681383 _llseek(5, 1624, [1624], SEEK_SET) = 0
18911 16:34:08.681441 munmap(0xb7f7d000, 1624) = 0
18911 16:34:08.681483 close(5)          = 0
18911 16:34:08.681533 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.681583 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.681626 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18911 16:34:08.681684 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.681727 _llseek(5, 1233, [1233], SEEK_SET) = 0
18911 16:34:08.681786 munmap(0xb7f7d000, 1233) = 0
18911 16:34:08.681828 close(5)          = 0
18911 16:34:08.681874 time(NULL)        = 1495658048
18911 16:34:08.681928 munmap(0xb7f7a000, 12164) = 0
18911 16:34:08.681979 munmap(0xb7f78000, 7136) = 0
18911 16:34:08.682032 munmap(0xb7dad000, 95428) = 0
18911 16:34:08.682077 munmap(0xb7d73000, 201052) = 0
18911 16:34:08.682121 munmap(0xb7d5a000, 101180) = 0
18911 16:34:08.682189 gettimeofday({1495658048, 682249}, NULL) = 0
18911 16:34:08.682289 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9c7b34) = -1 ENOENT (No such file or directory)
18911 16:34:08.682346 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
18911 16:34:08.682429 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9c7c84) = 0
18911 16:34:08.682488 write(3, "Wed May 24 16:34:08 2017 [pid 18911] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
18911 16:34:08.682548 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9c7c8c) = 0
18911 16:34:08.682597 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18911 16:34:08.682651 write(4, "\1", 1 <unfinished ...>
18912 16:34:08.682692 <... read resumed> "\1", 1) = 1
18911 16:34:08.682723 <... write resumed> ) = 1
18912 16:34:08.682758 exit_group(0)     = ?
18911 16:34:08.682848 --- SIGCHLD (Child exited) @ 0 (0) ---
18911 16:34:08.682884 sigreturn()       = ? (mask now [])
18911 16:34:08.682948 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18912
18911 16:34:08.682998 close(4)          = 0
18911 16:34:08.683045 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
18911 16:34:08.683097 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18911 16:34:08.683150 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18911 16:34:08.683237 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7de36f8) = 18913
18913 16:34:08.683403 prctl(0x1, 0x9, 0, 0, 0) = 0
18913 16:34:08.683454 close(4)          = 0
18913 16:34:08.683538 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18913 16:34:08.683600 _llseek(4, 0, [0], SEEK_CUR) = 0
18913 16:34:08.683657 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18913 16:34:08.683722 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7d000
18913 16:34:08.683768 _llseek(4, 1624, [1624], SEEK_SET) = 0
18913 16:34:08.683876 munmap(0xb7f7d000, 1624) = 0
18913 16:34:08.683924 close(4)          = 0
18913 16:34:08.683975 getuid32()        = 0
18913 16:34:08.684017 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18913 16:34:08.684067 _llseek(4, 0, [0], SEEK_CUR) = 0
18913 16:34:08.684111 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18913 16:34:08.684202 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7d000
18913 16:34:08.684249 _llseek(4, 1624, [1624], SEEK_SET) = 0
18913 16:34:08.684308 munmap(0xb7f7d000, 1624) = 0
18913 16:34:08.684352 close(4)          = 0
18913 16:34:08.684435 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
18913 16:34:08.684503 read(4, "65536\n", 31) = 6
18913 16:34:08.684551 close(4)          = 0
18913 16:34:08.684604 socket(PF_FILE, SOCK_STREAM, 0) = 4
18913 16:34:08.684652 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18913 16:34:08.684696 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18913 16:34:08.684769 close(4)          = 0
18913 16:34:08.684815 socket(PF_FILE, SOCK_STREAM, 0) = 4
18913 16:34:08.684857 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18913 16:34:08.684900 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18913 16:34:08.684964 close(4)          = 0
18913 16:34:08.685039 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
18913 16:34:08.685093 _llseek(4, 0, [0], SEEK_CUR) = 0
18913 16:34:08.685172 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18913 16:34:08.685231 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7d000
18913 16:34:08.685276 _llseek(4, 886, [886], SEEK_SET) = 0
18913 16:34:08.685355 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18913 16:34:08.685416 munmap(0xb7f7d000, 886) = 0
18913 16:34:08.685458 close(4)          = 0
18913 16:34:08.685500 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
18913 16:34:08.685563 geteuid32()       = 0
18913 16:34:08.685607 getegid32()       = 0
18913 16:34:08.685659 setregid32(-1, 1000) = 0
18913 16:34:08.685703 setreuid32(-1, 1000) = 0
18913 16:34:08.685746 chdir("/home/msfadmin") = 0
18913 16:34:08.685793 setreuid32(-1, 0) = 0
18913 16:34:08.685832 setregid32(-1, 0) = 0
18913 16:34:08.685875 setgid32(1000)    = 0
18913 16:34:08.685916 setuid32(1000)    = 0
18913 16:34:08.685957 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
18913 16:34:08.686007 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7b000
18913 16:34:08.686053 mprotect(0xb7f7d000, 4096, PROT_NONE) = 0
18913 16:34:08.686244 mprotect(0xb7f7b000, 4096, PROT_NONE) = 0
18913 16:34:08.686291 getcwd("/home/msfadmin", 4096) = 15
18913 16:34:08.686343 umask(022)        = 077
18913 16:34:08.686384 getcwd("/home/msfadmin", 4096) = 15
18913 16:34:08.686436 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18913 16:34:08.686509 write(0, "230 Login successful.\r\n", 23) = 23
18913 16:34:08.686854 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.686916 alarm(300)        = 0
18913 16:34:08.686944 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
18913 16:34:08.686944 mprotect(0xb7f7a000, 4096, PROT_NONE) = 0
18913 16:34:08.686944 mprotect(0xb7f78000, 4096, PROT_NONE) = 0
18913 16:34:08.686944 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
18913 16:34:08.686944 read(0, "TYPE I\r\n", 8) = 8
18913 16:34:08.686944 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
18913 16:34:08.686944 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.686944 alarm(300)        = 300
18913 16:34:08.686944 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
18913 16:34:08.686944 read(0, "PASV\r\n", 6) = 6
18913 16:34:08.686944 write(5, "\n", 1) = 1
18913 16:34:08.686944 read(5,  <unfinished ...>
18911 16:34:08.686944 close(5)          = 0
18911 16:34:08.692113 getuid32()        = 0
18911 16:34:08.692161 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18911 16:34:08.692209 _llseek(5, 0, [0], SEEK_CUR) = 0
18911 16:34:08.692250 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18911 16:34:08.692303 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7d000
18911 16:34:08.692342 _llseek(5, 1624, [1624], SEEK_SET) = 0
18911 16:34:08.692395 munmap(0xb7f7d000, 1624) = 0
18911 16:34:08.692436 close(5)          = 0
18911 16:34:08.692486 setgroups32(0, []) = 0
18911 16:34:08.692525 chdir("/usr/share/empty") = 0
18911 16:34:08.692566 chroot(".")       = 0
18911 16:34:08.692603 capset(NULL, NULL) = -1 EFAULT (Bad address)
18911 16:34:08.692646 prctl(0x8, 0, 0xbf9c7c68, 0x80549a6, 0xbf9c7c50) = 0
18911 16:34:08.692683 prctl(0x8, 0x1, 0xbf9c7c68, 0x8054a49, 0xbf9c7c50) = 0
18911 16:34:08.692718 setgid32(65534)   = 0
18911 16:34:08.692752 setuid32(65534)   = 0
18911 16:34:08.692793 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
18911 16:34:08.692829 read(4, "\n", 1)  = 1
18911 16:34:08.692866 write(4, "\1", 1) = 1
18913 16:34:08.692899 <... read resumed> "\1", 1) = 1
18913 16:34:08.692925 write(5, "\f", 1) = 1
18913 16:34:08.692960 read(5,  <unfinished ...>
18911 16:34:08.692985 read(4, "\f", 1)  = 1
18911 16:34:08.693019 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
18911 16:34:08.693057 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
18911 16:34:08.693089 gettimeofday({1495658048, 693109}, NULL) = 0
18911 16:34:08.693145 bind(5, {sa_family=AF_INET, sin_port=htons(58372), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
18911 16:34:08.693186 listen(5, 1)      = 0
18911 16:34:08.693221 write(4, "\4\344\0\0", 4) = 4
18913 16:34:08.693253 <... read resumed> "\4\344\0\0", 4) = 4
18913 16:34:08.693291 write(0, "227 Entering Passive Mode (127,0,0,1,228,4).\r\n", 46) = 46
18913 16:34:08.693582 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.693625 alarm(300)        = 300
18913 16:34:08.693681 recv(0, "STOR myfile22\r\n", 4096, MSG_PEEK) = 15
18913 16:34:08.693716 read(0, "STOR myfile22\r\n", 15) = 15
18913 16:34:08.693756 write(5, "\v", 1) = 1
18913 16:34:08.693829 read(5,  <unfinished ...>
18911 16:34:08.693850 read(4, "\v", 1)  = 1
18911 16:34:08.693877 write(4, "\1\0\0\0", 4) = 4
18913 16:34:08.693920 <... read resumed> "\1\0\0\0", 4) = 4
18913 16:34:08.693947 gettimeofday({1495658048, 693963}, NULL) = 0
18913 16:34:08.693984 getcwd("/home/msfadmin", 4096) = 15
18913 16:34:08.694015 open("myfile22", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
18913 16:34:08.694045 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
18913 16:34:08.694080 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
18913 16:34:08.694106 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
18913 16:34:08.694130 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9c7bb4) = 0
18913 16:34:08.694165 ftruncate64(4, 0) = 0
18913 16:34:08.694202 _llseek(4, 0, [0], SEEK_SET) = 0
18913 16:34:08.694228 write(5, "\v", 1) = 1
18913 16:34:08.694254 read(5,  <unfinished ...>
18911 16:34:08.694274 read(4, "\v", 1)  = 1
18911 16:34:08.694301 write(4, "\1\0\0\0", 4) = 4
18913 16:34:08.694326 <... read resumed> "\1\0\0\0", 4) = 4
18913 16:34:08.694348 write(5, "\v", 1) = 1
18913 16:34:08.694372 read(5,  <unfinished ...>
18911 16:34:08.694392 read(4, "\v", 1)  = 1
18911 16:34:08.694418 write(4, "\1\0\0\0", 4) = 4
18913 16:34:08.694443 <... read resumed> "\1\0\0\0", 4) = 4
18913 16:34:08.694465 write(5, "\r", 1) = 1
18913 16:34:08.694489 read(5,  <unfinished ...>
18911 16:34:08.694508 read(4, "\r", 1)  = 1
18911 16:34:08.694538 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
18911 16:34:08.694574 accept(5, {sa_family=AF_INET, sin_port=htons(44801), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
18911 16:34:08.694618 write(4, "\1", 1) = 1
18913 16:34:08.694644 <... read resumed> "\1", 1) = 1
18913 16:34:08.694669 recvmsg(5,  <unfinished ...>
18911 16:34:08.694693 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18913 16:34:08.694730 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18913 16:34:08.694761 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
18913 16:34:08.694797 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
18913 16:34:08.694822 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
18913 16:34:08.694846 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.694891 alarm(300)        = 300
18913 16:34:08.694935 write(0, "150 Ok to send data.\r\n", 22) = 22
18913 16:34:08.695067 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7db2000
18913 16:34:08.695094 mprotect(0xb7dc4000, 4096, PROT_NONE) = 0
18913 16:34:08.695118 mprotect(0xb7db2000, 4096, PROT_NONE) = 0
18913 16:34:08.695140 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
18913 16:34:08.695166 write(4, "assasaaa\na\na\na\na\n", 17) = 17
18913 16:34:08.695196 read(6, "", 65536) = 0
18913 16:34:08.695219 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.695246 alarm(300)        = 300
18913 16:34:08.695284 close(6)          = 0
18913 16:34:08.695304 alarm(0)          = 300
18913 16:34:08.695335 gettimeofday({1495658048, 695348}, NULL) = 0
18913 16:34:08.695377 getpid()          = 18913
18913 16:34:08.695402 gettimeofday({1495658048, 695415}, NULL) = 0
18913 16:34:08.695444 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9c7b54) = 0
18913 16:34:08.695472 write(3, "Wed May 24 16:34:08 2017 [pid 18913] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile22\", 17 bytes, 11.43Kbyte/sec\n", 131) = 131
18913 16:34:08.695507 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9c7b5c) = 0
18913 16:34:08.695536 write(0, "226 Transfer complete.\r\n", 24) = 24
18913 16:34:08.695619 write(5, "\n", 1) = 1
18913 16:34:08.695645 read(5,  <unfinished ...>
18911 16:34:08.695662 close(6)          = 0
18911 16:34:08.695717 read(4, "\n", 1)  = 1
18911 16:34:08.695742 close(5)          = 0
18911 16:34:08.695765 write(4, "\1", 1) = 1
18913 16:34:08.695788 <... read resumed> "\1", 1) = 1
18913 16:34:08.695806 close(4)          = 0
18913 16:34:08.695829 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18913 16:34:08.695874 alarm(300)        = 0
18913 16:34:08.695926 recv(0,  <unfinished ...>
