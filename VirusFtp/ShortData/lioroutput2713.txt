16641 16:05:24.942094 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f49000
16641 16:05:24.942146 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
16641 16:05:24.942378 read(7, "", 1024) = 0
16641 16:05:24.942436 close(7)          = 0
16641 16:05:24.942483 munmap(0xb7f49000, 4096) = 0
16641 16:05:24.942575 munmap(0xb7d78000, 29913) = 0
16641 16:05:24.942640 read(6, "", 4096) = 0
16641 16:05:24.942691 close(6)          = 0
16641 16:05:24.942736 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.942784 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.942858 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.942914 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16641 16:05:24.942975 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.943072 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16641 16:05:24.943207 read(6, "", 4096) = 0
16641 16:05:24.943254 close(6)          = 0
16641 16:05:24.943298 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.943383 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.943455 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.943538 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16641 16:05:24.943603 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.943650 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16641 16:05:24.943774 read(6, "", 4096) = 0
16641 16:05:24.943821 close(6)          = 0
16641 16:05:24.943864 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.943911 read(5, "", 4096) = 0
16641 16:05:24.943957 close(5)          = 0
16641 16:05:24.944026 munmap(0xb7f50000, 4096) = 0
16641 16:05:24.944079 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
16641 16:05:24.944135 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
16641 16:05:24.944196 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f50000
16641 16:05:24.944242 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
16641 16:05:24.944381 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.944449 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.944534 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
16641 16:05:24.944599 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.944646 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
16641 16:05:24.944791 read(6, "", 4096) = 0
16641 16:05:24.944848 close(6)          = 0
16641 16:05:24.944892 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.944939 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.944939 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.944939 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16641 16:05:24.944939 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.944939 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16641 16:05:24.944939 read(6, "", 4096) = 0
16641 16:05:24.944939 close(6)          = 0
16641 16:05:24.944939 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.944939 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.944939 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.944939 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
16641 16:05:24.944939 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.944939 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
16641 16:05:24.944939 read(6, "", 4096) = 0
16641 16:05:24.944939 close(6)          = 0
16641 16:05:24.944939 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.944939 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16641 16:05:24.944939 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16641 16:05:24.944939 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16641 16:05:24.944939 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4a000
16641 16:05:24.944939 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16641 16:05:24.944939 read(6, "", 4096) = 0
16641 16:05:24.944939 close(6)          = 0
16641 16:05:24.944939 munmap(0xb7f4a000, 4096) = 0
16641 16:05:24.944939 read(5, "", 4096) = 0
16641 16:05:24.944939 close(5)          = 0
16641 16:05:24.944939 munmap(0xb7f50000, 4096) = 0
16641 16:05:24.944939 time(NULL)        = 1495656324
16641 16:05:24.944939 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16641 16:05:24.944939 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
16641 16:05:24.947227 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16641 16:05:24.947308 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f50000
16641 16:05:24.947346 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
16641 16:05:24.947405 read(5, "", 4096) = 0
16641 16:05:24.947438 close(5)          = 0
16641 16:05:24.947472 munmap(0xb7f50000, 4096) = 0
16641 16:05:24.947520 getuid32()        = 0
16641 16:05:24.947633 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.947683 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.947720 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16641 16:05:24.947765 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.947789 _llseek(5, 1624, [1624], SEEK_SET) = 0
16641 16:05:24.947825 munmap(0xb7f50000, 1624) = 0
16641 16:05:24.947848 close(5)          = 0
16641 16:05:24.947893 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.947927 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.947949 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16641 16:05:24.947979 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.948001 _llseek(5, 1233, [1233], SEEK_SET) = 0
16641 16:05:24.948036 munmap(0xb7f50000, 1233) = 0
16641 16:05:24.948061 close(5)          = 0
16641 16:05:24.948095 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.948122 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.948144 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16641 16:05:24.948173 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.948196 _llseek(5, 1624, [1624], SEEK_SET) = 0
16641 16:05:24.948225 munmap(0xb7f50000, 1624) = 0
16641 16:05:24.948247 close(5)          = 0
16641 16:05:24.948272 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.948297 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.948363 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16641 16:05:24.948394 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.948416 _llseek(5, 1233, [1233], SEEK_SET) = 0
16641 16:05:24.948447 munmap(0xb7f50000, 1233) = 0
16641 16:05:24.948468 close(5)          = 0
16641 16:05:24.948793 getuid32()        = 0
16641 16:05:24.948819 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.948845 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.948867 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16641 16:05:24.948897 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.948919 _llseek(5, 1624, [1624], SEEK_SET) = 0
16641 16:05:24.948949 munmap(0xb7f50000, 1624) = 0
16641 16:05:24.948970 close(5)          = 0
16641 16:05:24.948996 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.949021 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.949075 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16641 16:05:24.949115 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.949138 _llseek(5, 1233, [1233], SEEK_SET) = 0
16641 16:05:24.949168 munmap(0xb7f50000, 1233) = 0
16641 16:05:24.949190 close(5)          = 0
16641 16:05:24.949214 time(NULL)        = 1495656324
16641 16:05:24.949244 munmap(0xb7f4d000, 12164) = 0
16641 16:05:24.949271 munmap(0xb7f4b000, 7136) = 0
16641 16:05:24.949300 munmap(0xb7d80000, 95428) = 0
16641 16:05:24.949324 munmap(0xb7d46000, 201052) = 0
16641 16:05:24.949347 munmap(0xb7d2d000, 101180) = 0
16641 16:05:24.949379 gettimeofday({1495656324, 949394}, NULL) = 0
16641 16:05:24.949419 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa54bc4) = -1 ENOENT (No such file or directory)
16641 16:05:24.949450 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
16641 16:05:24.949497 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa54d14) = 0
16641 16:05:24.949559 write(3, "Wed May 24 16:05:24 2017 [pid 16641] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
16641 16:05:24.949600 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa54d1c) = 0
16641 16:05:24.949630 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16641 16:05:24.949662 write(4, "\1", 1 <unfinished ...>
16642 16:05:24.949695 <... read resumed> "\1", 1) = 1
16641 16:05:24.949711 <... write resumed> ) = 1
16642 16:05:24.949732 exit_group(0)     = ?
16641 16:05:24.949793 --- SIGCHLD (Child exited) @ 0 (0) ---
16641 16:05:24.949813 sigreturn()       = ? (mask now [])
16641 16:05:24.949846 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 16642
16641 16:05:24.949872 close(4)          = 0
16641 16:05:24.949897 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
16641 16:05:24.949925 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16641 16:05:24.949952 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16641 16:05:24.949978 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7db66f8) = 16643
16643 16:05:24.950082 prctl(0x1, 0x9, 0, 0, 0) = 0
16643 16:05:24.950111 close(4)          = 0
16643 16:05:24.950156 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16643 16:05:24.950188 _llseek(4, 0, [0], SEEK_CUR) = 0
16643 16:05:24.950217 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16643 16:05:24.950251 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
16643 16:05:24.950274 _llseek(4, 1624, [1624], SEEK_SET) = 0
16643 16:05:24.950314 munmap(0xb7f50000, 1624) = 0
16643 16:05:24.950337 close(4)          = 0
16643 16:05:24.950364 getuid32()        = 0
16643 16:05:24.950387 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16643 16:05:24.950412 _llseek(4, 0, [0], SEEK_CUR) = 0
16643 16:05:24.950434 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16643 16:05:24.950464 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
16643 16:05:24.950486 _llseek(4, 1624, [1624], SEEK_SET) = 0
16643 16:05:24.950527 munmap(0xb7f50000, 1624) = 0
16643 16:05:24.950553 close(4)          = 0
16643 16:05:24.950598 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
16643 16:05:24.950636 read(4, "65536\n", 31) = 6
16643 16:05:24.950661 close(4)          = 0
16643 16:05:24.950688 socket(PF_FILE, SOCK_STREAM, 0) = 4
16643 16:05:24.950713 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16643 16:05:24.950736 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16643 16:05:24.950774 close(4)          = 0
16643 16:05:24.950797 socket(PF_FILE, SOCK_STREAM, 0) = 4
16643 16:05:24.950820 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16643 16:05:24.950842 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16643 16:05:24.950874 close(4)          = 0
16643 16:05:24.950914 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
16643 16:05:24.950942 _llseek(4, 0, [0], SEEK_CUR) = 0
16643 16:05:24.950965 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16643 16:05:24.950995 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f50000
16643 16:05:24.951051 _llseek(4, 886, [886], SEEK_SET) = 0
16643 16:05:24.951106 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16643 16:05:24.951137 munmap(0xb7f50000, 886) = 0
16643 16:05:24.951159 close(4)          = 0
16643 16:05:24.951181 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
16643 16:05:24.951213 geteuid32()       = 0
16643 16:05:24.951236 getegid32()       = 0
16643 16:05:24.951259 setregid32(-1, 1000) = 0
16643 16:05:24.951282 setreuid32(-1, 1000) = 0
16643 16:05:24.951304 chdir("/home/msfadmin") = 0
16643 16:05:24.951335 setreuid32(-1, 0) = 0
16643 16:05:24.951355 setregid32(-1, 0) = 0
16643 16:05:24.951378 setgid32(1000)    = 0
16643 16:05:24.951401 setuid32(1000)    = 0
16643 16:05:24.951423 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
16643 16:05:24.951449 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4e000
16643 16:05:24.951474 mprotect(0xb7f50000, 4096, PROT_NONE) = 0
16643 16:05:24.951498 mprotect(0xb7f4e000, 4096, PROT_NONE) = 0
16643 16:05:24.951524 getcwd("/home/msfadmin", 4096) = 15
16643 16:05:24.951551 umask(022)        = 077
16643 16:05:24.951573 getcwd("/home/msfadmin", 4096) = 15
16643 16:05:24.951599 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
16643 16:05:24.951638 write(0, "230 Login successful.\r\n", 23) = 23
16643 16:05:24.951810 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.951842 alarm(300)        = 0
16643 16:05:24.951883 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4b000
16643 16:05:24.951907 mprotect(0xb7f4d000, 4096, PROT_NONE) = 0
16643 16:05:24.951930 mprotect(0xb7f4b000, 4096, PROT_NONE) = 0
16643 16:05:24.951956 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
16643 16:05:24.951982 read(0, "TYPE I\r\n", 8) = 8
16643 16:05:24.952030 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
16643 16:05:24.952116 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.952144 alarm(300)        = 300
16643 16:05:24.952184 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
16643 16:05:24.952209 read(0, "PASV\r\n", 6) = 6
16643 16:05:24.952233 write(5, "\n", 1) = 1
16643 16:05:24.952316 read(5,  <unfinished ...>
16641 16:05:24.952347 close(5)          = 0
16641 16:05:24.952375 getuid32()        = 0
16641 16:05:24.952407 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16641 16:05:24.952439 _llseek(5, 0, [0], SEEK_CUR) = 0
16641 16:05:24.952467 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16641 16:05:24.952519 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f50000
16641 16:05:24.952547 _llseek(5, 1624, [1624], SEEK_SET) = 0
16641 16:05:24.952584 munmap(0xb7f50000, 1624) = 0
16641 16:05:24.952612 close(5)          = 0
16641 16:05:24.952646 setgroups32(0, []) = 0
16641 16:05:24.952674 chdir("/usr/share/empty") = 0
16641 16:05:24.952702 chroot(".")       = 0
16641 16:05:24.952728 capset(NULL, NULL) = -1 EFAULT (Bad address)
16641 16:05:24.952758 prctl(0x8, 0, 0xbfa54cf8, 0x80549a6, 0xbfa54ce0) = 0
16641 16:05:24.952785 prctl(0x8, 0x1, 0xbfa54cf8, 0x8054a49, 0xbfa54ce0) = 0
16641 16:05:24.952810 setgid32(65534)   = 0
16641 16:05:24.952834 setuid32(65534)   = 0
16641 16:05:24.952857 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
16641 16:05:24.952896 read(4, "\n", 1)  = 1
16641 16:05:24.952929 write(4, "\1", 1) = 1
16643 16:05:24.952965 <... read resumed> "\1", 1) = 1
16643 16:05:24.952984 write(5, "\f", 1) = 1
16643 16:05:24.953008 read(5,  <unfinished ...>
16641 16:05:24.953026 read(4, "\f", 1)  = 1
16641 16:05:24.953052 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
16641 16:05:24.953079 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
16641 16:05:24.953104 gettimeofday({1495656324, 953117}, NULL) = 0
16641 16:05:24.953143 bind(5, {sa_family=AF_INET, sin_port=htons(32056), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
16641 16:05:24.953173 listen(5, 1)      = 0
16641 16:05:24.953199 write(4, "8}\0\0", 4) = 4
16643 16:05:24.953222 <... read resumed> "8}\0\0", 4) = 4
16643 16:05:24.953250 write(0, "227 Entering Passive Mode (127,0,0,1,125,56).\r\n", 47) = 47
16643 16:05:24.953528 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.953564 alarm(300)        = 300
16643 16:05:24.953611 recv(0, "STOR myfile15\r\n", 4096, MSG_PEEK) = 15
16643 16:05:24.953639 read(0, "STOR myfile15\r\n", 15) = 15
16643 16:05:24.953674 write(5, "\v", 1) = 1
16643 16:05:24.953700 read(5,  <unfinished ...>
16641 16:05:24.953729 read(4, "\v", 1)  = 1
16641 16:05:24.953760 write(4, "\1\0\0\0", 4) = 4
16643 16:05:24.953783 <... read resumed> "\1\0\0\0", 4) = 4
16643 16:05:24.953804 gettimeofday({1495656324, 953818}, NULL) = 0
16643 16:05:24.953836 getcwd("/home/msfadmin", 4096) = 15
16643 16:05:24.953862 open("myfile15", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
16643 16:05:24.953889 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
16643 16:05:24.953920 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
16643 16:05:24.953943 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
16643 16:05:24.953964 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa54c44) = 0
16643 16:05:24.954010 ftruncate64(4, 0) = 0
16643 16:05:24.954045 _llseek(4, 0, [0], SEEK_SET) = 0
16643 16:05:24.954069 write(5, "\v", 1) = 1
16643 16:05:24.954092 read(5,  <unfinished ...>
16641 16:05:24.954109 read(4, "\v", 1)  = 1
16641 16:05:24.954133 write(4, "\1\0\0\0", 4) = 4
16643 16:05:24.954156 <... read resumed> "\1\0\0\0", 4) = 4
16643 16:05:24.954175 write(5, "\v", 1) = 1
16643 16:05:24.954196 read(5,  <unfinished ...>
16641 16:05:24.954213 read(4, "\v", 1)  = 1
16641 16:05:24.954236 write(4, "\1\0\0\0", 4) = 4
16643 16:05:24.954258 <... read resumed> "\1\0\0\0", 4) = 4
16643 16:05:24.954276 write(5, "\r", 1) = 1
16643 16:05:24.954297 read(5,  <unfinished ...>
16641 16:05:24.954315 read(4, "\r", 1)  = 1
16641 16:05:24.954340 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
16641 16:05:24.954371 accept(5, {sa_family=AF_INET, sin_port=htons(44696), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
16641 16:05:24.954409 write(4, "\1", 1) = 1
16643 16:05:24.954431 <... read resumed> "\1", 1) = 1
16643 16:05:24.954453 recvmsg(5,  <unfinished ...>
16641 16:05:24.954477 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
16643 16:05:24.954509 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
16643 16:05:24.954535 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
16643 16:05:24.954560 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
16643 16:05:24.954584 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
16643 16:05:24.954607 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.954633 alarm(300)        = 300
16643 16:05:24.954675 write(0, "150 Ok to send data.\r\n", 22) = 22
16643 16:05:24.954807 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d85000
16643 16:05:24.954834 mprotect(0xb7d97000, 4096, PROT_NONE) = 0
16643 16:05:24.954859 mprotect(0xb7d85000, 4096, PROT_NONE) = 0
16643 16:05:24.954881 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
16643 16:05:24.954907 write(4, "assasaaa\na\na\na\na\n", 17) = 17
16643 16:05:24.954937 read(6, "", 65536) = 0
16643 16:05:24.954939 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.954939 alarm(300)        = 300
16643 16:05:24.954939 close(6)          = 0
16643 16:05:24.954939 alarm(0)          = 300
16643 16:05:24.954939 gettimeofday({1495656324, 954939}, NULL) = 0
16643 16:05:24.954939 getpid()          = 16643
16643 16:05:24.954939 gettimeofday({1495656324, 954939}, NULL) = 0
16643 16:05:24.954939 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa54be4) = 0
16643 16:05:24.954939 write(3, "Wed May 24 16:05:24 2017 [pid 16643] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile15\", 17 bytes, 14.81Kbyte/sec\n", 131) = 131
16643 16:05:24.954939 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa54bec) = 0
16643 16:05:24.954939 write(0, "226 Transfer complete.\r\n", 24) = 24
16643 16:05:24.954939 write(5, "\n", 1) = 1
16643 16:05:24.954939 read(5,  <unfinished ...>
16641 16:05:24.954939 close(6)          = 0
16641 16:05:24.954939 read(4, "\n", 1)  = 1
16641 16:05:24.954939 close(5)          = 0
16641 16:05:24.954939 write(4, "\1", 1) = 1
16643 16:05:24.954939 <... read resumed> "\1", 1) = 1
16643 16:05:24.954939 close(4)          = 0
16643 16:05:24.954939 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:24.954939 alarm(300)        = 0
16643 16:05:24.954939 recv(0,  <unfinished ...>
16641 16:05:24.954939 read(4,  <unfinished ...>
16643 16:05:25.478438 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
16643 16:05:25.478715 read(0, "TYPE I\r\n", 8) = 8
16643 16:05:25.478985 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
16643 16:05:25.479491 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16643 16:05:25.479674 alarm(300)        = 299
16643 16:05:25.479822 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
16643 16:05:25.479906 read(0, "PASV\r\n", 6) = 6
16643 16:05:25.479989 write(5, "\n", 1) = 1
16643 16:05:25.480070 read(5,  <unfinished ...>
