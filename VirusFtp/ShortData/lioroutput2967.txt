18189 16:24:50.120092 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
18189 16:24:50.120092 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
18189 16:24:50.120092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efc000
18189 16:24:50.120092 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
18189 16:24:50.120092 read(7, "", 1024) = 0
18189 16:24:50.120092 close(7)          = 0
18189 16:24:50.120092 munmap(0xb7efc000, 4096) = 0
18189 16:24:50.120092 munmap(0xb7d2b000, 29913) = 0
18189 16:24:50.120092 read(6, "", 4096) = 0
18189 16:24:50.120092 close(6)          = 0
18189 16:24:50.120092 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.120092 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.120092 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.120092 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18189 16:24:50.120092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.120092 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18189 16:24:50.120092 read(6, "", 4096) = 0
18189 16:24:50.120092 close(6)          = 0
18189 16:24:50.120092 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.120092 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.120092 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.120092 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18189 16:24:50.120092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.120092 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18189 16:24:50.120092 read(6, "", 4096) = 0
18189 16:24:50.120092 close(6)          = 0
18189 16:24:50.120092 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.120092 read(5, "", 4096) = 0
18189 16:24:50.120092 close(5)          = 0
18189 16:24:50.120092 munmap(0xb7f03000, 4096) = 0
18189 16:24:50.120092 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
18189 16:24:50.120092 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
18189 16:24:50.120092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f03000
18189 16:24:50.120092 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
18189 16:24:50.120092 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.120092 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.120092 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
18189 16:24:50.120092 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.120092 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
18189 16:24:50.122904 read(6, "", 4096) = 0
18189 16:24:50.122958 close(6)          = 0
18189 16:24:50.122985 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.123016 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.123062 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.123094 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18189 16:24:50.123132 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.123161 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18189 16:24:50.123236 read(6, "", 4096) = 0
18189 16:24:50.123264 close(6)          = 0
18189 16:24:50.123290 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.123318 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.123358 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.123390 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
18189 16:24:50.123428 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.123456 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
18189 16:24:50.123655 read(6, "", 4096) = 0
18189 16:24:50.123683 close(6)          = 0
18189 16:24:50.123709 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.123737 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18189 16:24:50.123778 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18189 16:24:50.123809 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18189 16:24:50.123847 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
18189 16:24:50.123875 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18189 16:24:50.123953 read(6, "", 4096) = 0
18189 16:24:50.123981 close(6)          = 0
18189 16:24:50.124010 munmap(0xb7efd000, 4096) = 0
18189 16:24:50.124037 read(5, "", 4096) = 0
18189 16:24:50.124063 close(5)          = 0
18189 16:24:50.124088 munmap(0xb7f03000, 4096) = 0
18189 16:24:50.124121 time(NULL)        = 1495657490
18189 16:24:50.124150 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18189 16:24:50.124191 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
18189 16:24:50.124222 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18189 16:24:50.124259 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f03000
18189 16:24:50.124287 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
18189 16:24:50.124332 read(5, "", 4096) = 0
18189 16:24:50.124358 close(5)          = 0
18189 16:24:50.124383 munmap(0xb7f03000, 4096) = 0
18189 16:24:50.124419 getuid32()        = 0
18189 16:24:50.124459 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.124494 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.124523 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18189 16:24:50.124560 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.124589 _llseek(5, 1624, [1624], SEEK_SET) = 0
18189 16:24:50.124631 munmap(0xb7f03000, 1624) = 0
18189 16:24:50.124661 close(5)          = 0
18189 16:24:50.124713 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.124752 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.124781 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18189 16:24:50.124818 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.124846 _llseek(5, 1233, [1233], SEEK_SET) = 0
18189 16:24:50.124890 munmap(0xb7f03000, 1233) = 0
18189 16:24:50.124916 close(5)          = 0
18189 16:24:50.125099 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.125137 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.125165 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18189 16:24:50.125202 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.125231 _llseek(5, 1624, [1624], SEEK_SET) = 0
18189 16:24:50.125268 munmap(0xb7f03000, 1624) = 0
18189 16:24:50.125295 close(5)          = 0
18189 16:24:50.125327 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.125359 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.125387 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18189 16:24:50.125423 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.125451 _llseek(5, 1233, [1233], SEEK_SET) = 0
18189 16:24:50.125489 munmap(0xb7f03000, 1233) = 0
18189 16:24:50.125516 close(5)          = 0
18189 16:24:50.125909 getuid32()        = 0
18189 16:24:50.125938 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.125969 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.125997 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18189 16:24:50.126034 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.126086 _llseek(5, 1624, [1624], SEEK_SET) = 0
18189 16:24:50.126124 munmap(0xb7f03000, 1624) = 0
18189 16:24:50.126152 close(5)          = 0
18189 16:24:50.126184 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.126216 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.126244 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18189 16:24:50.126281 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.126309 _llseek(5, 1233, [1233], SEEK_SET) = 0
18189 16:24:50.126347 munmap(0xb7f03000, 1233) = 0
18189 16:24:50.126373 close(5)          = 0
18189 16:24:50.126402 time(NULL)        = 1495657490
18189 16:24:50.126438 munmap(0xb7f00000, 12164) = 0
18189 16:24:50.126471 munmap(0xb7efe000, 7136) = 0
18189 16:24:50.126505 munmap(0xb7d33000, 95428) = 0
18189 16:24:50.126534 munmap(0xb7cf9000, 201052) = 0
18189 16:24:50.126563 munmap(0xb7ce0000, 101180) = 0
18189 16:24:50.126609 gettimeofday({1495657490, 126627}, NULL) = 0
18189 16:24:50.126651 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa673d4) = -1 ENOENT (No such file or directory)
18189 16:24:50.126687 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
18189 16:24:50.126744 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa67524) = 0
18189 16:24:50.126782 write(3, "Wed May 24 16:24:50 2017 [pid 18189] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
18189 16:24:50.126831 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa6752c) = 0
18189 16:24:50.126863 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18189 16:24:50.126898 write(4, "\1", 1 <unfinished ...>
18190 16:24:50.126925 <... read resumed> "\1", 1) = 1
18189 16:24:50.126945 <... write resumed> ) = 1
18190 16:24:50.126969 exit_group(0)     = ?
18189 16:24:50.127059 --- SIGCHLD (Child exited) @ 0 (0) ---
18189 16:24:50.127085 sigreturn()       = ? (mask now [])
18189 16:24:50.127129 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18190
18189 16:24:50.127161 close(4)          = 0
18189 16:24:50.127192 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
18189 16:24:50.127226 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18189 16:24:50.127260 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18189 16:24:50.127294 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d696f8) = 18191
18191 16:24:50.127406 prctl(0x1, 0x9, 0, 0, 0) = 0
18191 16:24:50.127473 close(4)          = 0
18191 16:24:50.127530 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18191 16:24:50.127571 _llseek(4, 0, [0], SEEK_CUR) = 0
18191 16:24:50.127608 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18191 16:24:50.127649 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
18191 16:24:50.127680 _llseek(4, 1624, [1624], SEEK_SET) = 0
18191 16:24:50.127728 munmap(0xb7f03000, 1624) = 0
18191 16:24:50.127758 close(4)          = 0
18191 16:24:50.127791 getuid32()        = 0
18191 16:24:50.127818 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18191 16:24:50.127850 _llseek(4, 0, [0], SEEK_CUR) = 0
18191 16:24:50.127877 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18191 16:24:50.127914 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
18191 16:24:50.127943 _llseek(4, 1624, [1624], SEEK_SET) = 0
18191 16:24:50.128000 munmap(0xb7f03000, 1624) = 0
18191 16:24:50.128031 close(4)          = 0
18191 16:24:50.128086 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
18191 16:24:50.128131 read(4, "65536\n", 31) = 6
18191 16:24:50.128162 close(4)          = 0
18191 16:24:50.128196 socket(PF_FILE, SOCK_STREAM, 0) = 4
18191 16:24:50.128227 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18191 16:24:50.128255 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18191 16:24:50.128302 close(4)          = 0
18191 16:24:50.128333 socket(PF_FILE, SOCK_STREAM, 0) = 4
18191 16:24:50.128360 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18191 16:24:50.128388 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18191 16:24:50.128429 close(4)          = 0
18191 16:24:50.128479 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
18191 16:24:50.128518 _llseek(4, 0, [0], SEEK_CUR) = 0
18191 16:24:50.128548 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18191 16:24:50.128586 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
18191 16:24:50.128615 _llseek(4, 886, [886], SEEK_SET) = 0
18191 16:24:50.128667 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18191 16:24:50.128706 munmap(0xb7f03000, 886) = 0
18191 16:24:50.128733 close(4)          = 0
18191 16:24:50.128760 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
18191 16:24:50.128798 geteuid32()       = 0
18191 16:24:50.128827 getegid32()       = 0
18191 16:24:50.128862 setregid32(-1, 1000) = 0
18191 16:24:50.128890 setreuid32(-1, 1000) = 0
18191 16:24:50.128918 chdir("/home/msfadmin") = 0
18191 16:24:50.128970 setreuid32(-1, 0) = 0
18191 16:24:50.128996 setregid32(-1, 0) = 0
18191 16:24:50.129026 setgid32(1000)    = 0
18191 16:24:50.129052 setuid32(1000)    = 0
18191 16:24:50.129079 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
18191 16:24:50.129113 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f01000
18191 16:24:50.129143 mprotect(0xb7f03000, 4096, PROT_NONE) = 0
18191 16:24:50.129172 mprotect(0xb7f01000, 4096, PROT_NONE) = 0
18191 16:24:50.129202 getcwd("/home/msfadmin", 4096) = 15
18191 16:24:50.129235 umask(022)        = 077
18191 16:24:50.129262 getcwd("/home/msfadmin", 4096) = 15
18191 16:24:50.129295 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18191 16:24:50.129342 write(0, "230 Login successful.\r\n", 23) = 23
18191 16:24:50.129536 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.129576 alarm(300)        = 0
18191 16:24:50.129627 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efe000
18191 16:24:50.129658 mprotect(0xb7f00000, 4096, PROT_NONE) = 0
18191 16:24:50.129687 mprotect(0xb7efe000, 4096, PROT_NONE) = 0
18191 16:24:50.129720 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
18191 16:24:50.129751 read(0, "TYPE I\r\n", 8) = 8
18191 16:24:50.129791 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
18191 16:24:50.129891 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.129984 alarm(300)        = 300
18191 16:24:50.130037 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
18191 16:24:50.130068 read(0, "PASV\r\n", 6) = 6
18191 16:24:50.130093 write(5, "\n", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 close(5)          = 0
18189 16:24:50.130093 getuid32()        = 0
18189 16:24:50.130093 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18189 16:24:50.130093 _llseek(5, 0, [0], SEEK_CUR) = 0
18189 16:24:50.130093 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18189 16:24:50.130093 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
18189 16:24:50.130093 _llseek(5, 1624, [1624], SEEK_SET) = 0
18189 16:24:50.130093 munmap(0xb7f03000, 1624) = 0
18189 16:24:50.130093 close(5)          = 0
18189 16:24:50.130093 setgroups32(0, []) = 0
18189 16:24:50.130093 chdir("/usr/share/empty") = 0
18189 16:24:50.130093 chroot(".")       = 0
18189 16:24:50.130093 capset(NULL, NULL) = -1 EFAULT (Bad address)
18189 16:24:50.130093 prctl(0x8, 0, 0xbfa67508, 0x80549a6, 0xbfa674f0) = 0
18189 16:24:50.130093 prctl(0x8, 0x1, 0xbfa67508, 0x8054a49, 0xbfa674f0) = 0
18189 16:24:50.130093 setgid32(65534)   = 0
18189 16:24:50.130093 setuid32(65534)   = 0
18189 16:24:50.130093 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
18189 16:24:50.130093 read(4, "\n", 1)  = 1
18189 16:24:50.130093 write(4, "\1", 1) = 1
18191 16:24:50.130093 <... read resumed> "\1", 1) = 1
18191 16:24:50.130093 write(5, "\f", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 read(4, "\f", 1)  = 1
18189 16:24:50.130093 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
18189 16:24:50.130093 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
18189 16:24:50.130093 gettimeofday({1495657490, 130093}, NULL) = 0
18189 16:24:50.130093 bind(5, {sa_family=AF_INET, sin_port=htons(18291), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
18189 16:24:50.130093 listen(5, 1)      = 0
18189 16:24:50.130093 write(4, "sG\0\0", 4) = 4
18191 16:24:50.130093 <... read resumed> "sG\0\0", 4) = 4
18191 16:24:50.130093 write(0, "227 Entering Passive Mode (127,0,0,1,71,115).\r\n", 47) = 47
18191 16:24:50.130093 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.130093 alarm(300)        = 300
18191 16:24:50.130093 recv(0, "STOR myfile3\r\n", 4096, MSG_PEEK) = 14
18191 16:24:50.130093 read(0, "STOR myfile3\r\n", 14) = 14
18191 16:24:50.130093 write(5, "\v", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 read(4, "\v", 1)  = 1
18189 16:24:50.130093 write(4, "\1\0\0\0", 4) = 4
18191 16:24:50.130093 <... read resumed> "\1\0\0\0", 4) = 4
18191 16:24:50.130093 gettimeofday({1495657490, 130093}, NULL) = 0
18191 16:24:50.130093 getcwd("/home/msfadmin", 4096) = 15
18191 16:24:50.130093 open("myfile3", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
18191 16:24:50.130093 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
18191 16:24:50.130093 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
18191 16:24:50.130093 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
18191 16:24:50.130093 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa67454) = 0
18191 16:24:50.130093 ftruncate64(4, 0) = 0
18191 16:24:50.130093 _llseek(4, 0, [0], SEEK_SET) = 0
18191 16:24:50.130093 write(5, "\v", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 read(4, "\v", 1)  = 1
18189 16:24:50.130093 write(4, "\1\0\0\0", 4) = 4
18191 16:24:50.130093 <... read resumed> "\1\0\0\0", 4) = 4
18191 16:24:50.130093 write(5, "\v", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 read(4, "\v", 1)  = 1
18189 16:24:50.130093 write(4, "\1\0\0\0", 4) = 4
18191 16:24:50.130093 <... read resumed> "\1\0\0\0", 4) = 4
18191 16:24:50.130093 write(5, "\r", 1) = 1
18191 16:24:50.130093 read(5,  <unfinished ...>
18189 16:24:50.130093 read(4, "\r", 1)  = 1
18189 16:24:50.130093 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
18189 16:24:50.130093 accept(5, {sa_family=AF_INET, sin_port=htons(60556), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
18189 16:24:50.130093 write(4, "\1", 1) = 1
18191 16:24:50.130093 <... read resumed> "\1", 1) = 1
18191 16:24:50.130093 recvmsg(5,  <unfinished ...>
18189 16:24:50.130093 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18191 16:24:50.130093 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18191 16:24:50.130093 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
18191 16:24:50.130093 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
18191 16:24:50.130093 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
18191 16:24:50.130093 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.130093 alarm(300)        = 300
18191 16:24:50.132904 write(0, "150 Ok to send data.\r\n", 22) = 22
18191 16:24:50.133158 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d38000
18191 16:24:50.133194 mprotect(0xb7d4a000, 4096, PROT_NONE) = 0
18191 16:24:50.133225 mprotect(0xb7d38000, 4096, PROT_NONE) = 0
18191 16:24:50.133252 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
18191 16:24:50.133287 write(4, "assasaaa\na\na\na\na\n", 17) = 17
18191 16:24:50.133323 read(6, "", 65536) = 0
18191 16:24:50.133352 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.133386 alarm(300)        = 300
18191 16:24:50.133436 close(6)          = 0
18191 16:24:50.133462 alarm(0)          = 300
18191 16:24:50.133499 gettimeofday({1495657490, 133516}, NULL) = 0
18191 16:24:50.133552 getpid()          = 18191
18191 16:24:50.133583 gettimeofday({1495657490, 133600}, NULL) = 0
18191 16:24:50.133633 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa673f4) = 0
18191 16:24:50.133669 write(3, "Wed May 24 16:24:50 2017 [pid 18191] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile3\", 17 bytes, 4.73Kbyte/sec\n", 129) = 129
18191 16:24:50.133723 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa673fc) = 0
18191 16:24:50.133799 write(0, "226 Transfer complete.\r\n", 24) = 24
18191 16:24:50.133919 write(5, "\n", 1) = 1
18191 16:24:50.133952 read(5,  <unfinished ...>
18189 16:24:50.133976 close(6)          = 0
18189 16:24:50.134048 read(4, "\n", 1)  = 1
18189 16:24:50.134080 close(5)          = 0
18189 16:24:50.134110 write(4, "\1", 1) = 1
18191 16:24:50.134138 <... read resumed> "\1", 1) = 1
18191 16:24:50.134161 close(4)          = 0
18191 16:24:50.134190 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.134224 alarm(300)        = 0
18191 16:24:50.134275 recv(0,  <unfinished ...>
18189 16:24:50.134299 read(4,  <unfinished ...>
18191 16:24:50.644454 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
18191 16:24:50.644730 read(0, "TYPE I\r\n", 8) = 8
18191 16:24:50.645012 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
18191 16:24:50.645492 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18191 16:24:50.645638 alarm(300)        = 299
18191 16:24:50.645779 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
18191 16:24:50.645859 read(0, "PASV\r\n", 6) = 6
