14313 15:37:39.675131 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
14313 15:37:39.675206 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5a000
14313 15:37:39.675260 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
14313 15:37:39.675607 read(7, "", 1024) = 0
14313 15:37:39.675653 close(7)          = 0
14313 15:37:39.675699 munmap(0xb7f5a000, 4096) = 0
14313 15:37:39.675770 munmap(0xb7d89000, 29913) = 0
14313 15:37:39.675873 read(6, "", 4096) = 0
14313 15:37:39.675934 close(6)          = 0
14313 15:37:39.675978 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.676031 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.676143 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.676206 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14313 15:37:39.676278 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.676326 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14313 15:37:39.676504 read(6, "", 4096) = 0
14313 15:37:39.676550 close(6)          = 0
14313 15:37:39.676592 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.676640 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.676723 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.676780 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14313 15:37:39.676914 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.676963 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14313 15:37:39.677138 read(6, "", 4096) = 0
14313 15:37:39.677182 close(6)          = 0
14313 15:37:39.677225 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.677272 read(5, "", 4096) = 0
14313 15:37:39.677315 close(5)          = 0
14313 15:37:39.677356 munmap(0xb7f61000, 4096) = 0
14313 15:37:39.677403 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14313 15:37:39.677462 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14313 15:37:39.677534 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
14313 15:37:39.677580 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14313 15:37:39.677818 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.677906 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.677964 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14313 15:37:39.678035 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.678082 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14313 15:37:39.678288 read(6, "", 4096) = 0
14313 15:37:39.678332 close(6)          = 0
14313 15:37:39.678375 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.678424 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.678506 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.678563 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14313 15:37:39.678634 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.678700 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14313 15:37:39.678919 read(6, "", 4096) = 0
14313 15:37:39.678966 close(6)          = 0
14313 15:37:39.679008 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.679059 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.679142 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.679201 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14313 15:37:39.679271 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.679318 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14313 15:37:39.679911 read(6, "", 4096) = 0
14313 15:37:39.679964 close(6)          = 0
14313 15:37:39.680008 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.680062 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14313 15:37:39.680150 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14313 15:37:39.680213 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14313 15:37:39.680285 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
14313 15:37:39.680337 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14313 15:37:39.680515 read(6, "", 4096) = 0
14313 15:37:39.680561 close(6)          = 0
14313 15:37:39.680606 munmap(0xb7f5b000, 4096) = 0
14313 15:37:39.680655 read(5, "", 4096) = 0
14313 15:37:39.680855 close(5)          = 0
14313 15:37:39.680923 munmap(0xb7f61000, 4096) = 0
14313 15:37:39.681027 time(NULL)        = 1495654659
14313 15:37:39.681108 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14313 15:37:39.681231 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14313 15:37:39.681322 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14313 15:37:39.681396 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
14313 15:37:39.681451 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14313 15:37:39.681551 read(5, "", 4096) = 0
14313 15:37:39.681595 close(5)          = 0
14313 15:37:39.681872 munmap(0xb7f61000, 4096) = 0
14313 15:37:39.681980 getuid32()        = 0
14313 15:37:39.682063 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.682137 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.682188 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14313 15:37:39.682263 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.682318 _llseek(5, 1624, [1624], SEEK_SET) = 0
14313 15:37:39.682407 munmap(0xb7f61000, 1624) = 0
14313 15:37:39.683424 close(5)          = 0
14313 15:37:39.683567 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.683653 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.683703 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14313 15:37:39.683777 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.683828 _llseek(5, 1233, [1233], SEEK_SET) = 0
14313 15:37:39.683919 munmap(0xb7f61000, 1233) = 0
14313 15:37:39.683964 close(5)          = 0
14313 15:37:39.684055 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.684117 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.684164 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14313 15:37:39.684238 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.684286 _llseek(5, 1624, [1624], SEEK_SET) = 0
14313 15:37:39.684562 munmap(0xb7f61000, 1624) = 0
14313 15:37:39.684610 close(5)          = 0
14313 15:37:39.684675 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.684739 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.684787 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14313 15:37:39.684861 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.684911 _llseek(5, 1233, [1233], SEEK_SET) = 0
14313 15:37:39.684990 munmap(0xb7f61000, 1233) = 0
14313 15:37:39.685036 close(5)          = 0
14313 15:37:39.686184 getuid32()        = 0
14313 15:37:39.686270 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.686413 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.686485 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14313 15:37:39.686559 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.686611 _llseek(5, 1624, [1624], SEEK_SET) = 0
14313 15:37:39.686686 munmap(0xb7f61000, 1624) = 0
14313 15:37:39.686732 close(5)          = 0
14313 15:37:39.686795 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.686855 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.686900 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14313 15:37:39.686970 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.687016 _llseek(5, 1233, [1233], SEEK_SET) = 0
14313 15:37:39.687090 munmap(0xb7f61000, 1233) = 0
14313 15:37:39.687133 close(5)          = 0
14313 15:37:39.687185 time(NULL)        = 1495654659
14313 15:37:39.687262 munmap(0xb7f5e000, 12164) = 0
14313 15:37:39.687416 munmap(0xb7f5c000, 7136) = 0
14313 15:37:39.687489 munmap(0xb7d91000, 95428) = 0
14313 15:37:39.687540 munmap(0xb7d57000, 201052) = 0
14313 15:37:39.687590 munmap(0xb7d3e000, 101180) = 0
14313 15:37:39.687670 gettimeofday({1495654659, 687688}, NULL) = 0
14313 15:37:39.687722 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfbf2d64) = -1 ENOENT (No such file or directory)
14313 15:37:39.687791 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14313 15:37:39.687911 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbf2eb4) = 0
14313 15:37:39.687985 write(3, "Wed May 24 15:37:39 2017 [pid 14313] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14313 15:37:39.688084 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbf2ebc) = 0
14313 15:37:39.688143 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14313 15:37:39.688207 write(4, "\1", 1 <unfinished ...>
14314 15:37:39.688256 <... read resumed> "\1", 1) = 1
14313 15:37:39.688409 <... write resumed> ) = 1
14314 15:37:39.688493 exit_group(0)     = ?
14313 15:37:39.688705 --- SIGCHLD (Child exited) @ 0 (0) ---
14313 15:37:39.688754 sigreturn()       = ? (mask now [])
14313 15:37:39.688881 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14314
14313 15:37:39.688965 close(4)          = 0
14313 15:37:39.689043 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14313 15:37:39.689134 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14313 15:37:39.689281 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14313 15:37:39.689390 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dc76f8) = 14315
14315 15:37:39.689700 prctl(0x1, 0x9, 0, 0, 0) = 0
14315 15:37:39.689786 close(4)          = 0
14315 15:37:39.689957 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14315 15:37:39.690069 _llseek(4, 0, [0], SEEK_CUR) = 0
14315 15:37:39.690165 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14315 15:37:39.690349 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f61000
14315 15:37:39.690431 _llseek(4, 1624, [1624], SEEK_SET) = 0
14315 15:37:39.690588 munmap(0xb7f61000, 1624) = 0
14315 15:37:39.690664 close(4)          = 0
14315 15:37:39.690752 getuid32()        = 0
14315 15:37:39.690819 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14315 15:37:39.690906 _llseek(4, 0, [0], SEEK_CUR) = 0
14315 15:37:39.690976 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14315 15:37:39.691090 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f61000
14315 15:37:39.691278 _llseek(4, 1624, [1624], SEEK_SET) = 0
14315 15:37:39.691413 munmap(0xb7f61000, 1624) = 0
14315 15:37:39.691486 close(4)          = 0
14315 15:37:39.691649 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14315 15:37:39.691779 read(4, "65536\n", 31) = 6
14315 15:37:39.691861 close(4)          = 0
14315 15:37:39.691953 socket(PF_FILE, SOCK_STREAM, 0) = 4
14315 15:37:39.692028 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14315 15:37:39.692101 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14315 15:37:39.692320 close(4)          = 0
14315 15:37:39.692401 socket(PF_FILE, SOCK_STREAM, 0) = 4
14315 15:37:39.692470 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14315 15:37:39.692540 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14315 15:37:39.692667 close(4)          = 0
14315 15:37:39.692813 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14315 15:37:39.692973 _llseek(4, 0, [0], SEEK_CUR) = 0
14315 15:37:39.693049 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14315 15:37:39.693166 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f61000
14315 15:37:39.693243 _llseek(4, 886, [886], SEEK_SET) = 0
14315 15:37:39.693414 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14315 15:37:39.693534 munmap(0xb7f61000, 886) = 0
14315 15:37:39.693603 close(4)          = 0
14315 15:37:39.693669 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14315 15:37:39.693781 geteuid32()       = 0
14315 15:37:39.693906 getegid32()       = 0
14315 15:37:39.693981 setregid32(-1, 1000) = 0
14315 15:37:39.694051 setreuid32(-1, 1000) = 0
14315 15:37:39.694123 chdir("/home/msfadmin") = 0
14315 15:37:39.694202 setreuid32(-1, 0) = 0
14315 15:37:39.694265 setregid32(-1, 0) = 0
14315 15:37:39.694335 setgid32(1000)    = 0
14315 15:37:39.694400 setuid32(1000)    = 0
14315 15:37:39.694468 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14315 15:37:39.694556 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
14315 15:37:39.694660 mprotect(0xb7f61000, 4096, PROT_NONE) = 0
14315 15:37:39.694736 mprotect(0xb7f5f000, 4096, PROT_NONE) = 0
14315 15:37:39.695001 getcwd("/home/msfadmin", 4096) = 15
14315 15:37:39.695097 umask(022)        = 077
14315 15:37:39.695167 getcwd("/home/msfadmin", 4096) = 15
14315 15:37:39.695256 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14315 15:37:39.695403 write(0, "230 Login successful.\r\n", 23) = 23
14315 15:37:39.696149 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14315 15:37:39.696274 alarm(300)        = 0
14315 15:37:39.696349 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
14315 15:37:39.696427 mprotect(0xb7f5e000, 4096, PROT_NONE) = 0
14315 15:37:39.696502 mprotect(0xb7f5c000, 4096, PROT_NONE) = 0
14315 15:37:39.696589 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
14315 15:37:39.696675 read(0, "TYPE I\r\n", 8) = 8
14315 15:37:39.696782 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
14315 15:37:39.697103 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14315 15:37:39.697206 alarm(300 <unfinished ...>
14313 15:37:39.697277 close(5 <unfinished ...>
14315 15:37:39.697324 <... alarm resumed> ) = 300
14315 15:37:39.697375 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
14315 15:37:39.697451 read(0, "PASV\r\n", 6) = 6
14313 15:37:39.697519 <... close resumed> ) = 0
14315 15:37:39.697570 write(5, "\n", 1 <unfinished ...>
14313 15:37:39.697632 getuid32( <unfinished ...>
14315 15:37:39.697679 <... write resumed> ) = 1
14313 15:37:39.697720 <... getuid32 resumed> ) = 0
14315 15:37:39.697763 read(5,  <unfinished ...>
14313 15:37:39.697926 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14313 15:37:39.698039 _llseek(5, 0, [0], SEEK_CUR) = 0
14313 15:37:39.698120 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14313 15:37:39.698242 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f61000
14313 15:37:39.698318 _llseek(5, 1624, [1624], SEEK_SET) = 0
14313 15:37:39.698437 munmap(0xb7f61000, 1624) = 0
14313 15:37:39.698512 close(5)          = 0
14313 15:37:39.698613 setgroups32(0, []) = 0
14313 15:37:39.698687 chdir("/usr/share/empty") = 0
14313 15:37:39.698832 chroot(".")       = 0
14313 15:37:39.698917 capset(NULL, NULL) = -1 EFAULT (Bad address)
14313 15:37:39.699002 prctl(0x8, 0, 0xbfbf2e98, 0x80549a6, 0xbfbf2e80) = 0
14313 15:37:39.699075 prctl(0x8, 0x1, 0xbfbf2e98, 0x8054a49, 0xbfbf2e80) = 0
14313 15:37:39.699143 setgid32(65534)   = 0
14313 15:37:39.699210 setuid32(65534)   = 0
14313 15:37:39.699275 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14313 15:37:39.699363 read(4, "\n", 1)  = 1
14313 15:37:39.699448 write(4, "\1", 1) = 1
14315 15:37:39.699522 <... read resumed> "\1", 1) = 1
14315 15:37:39.699571 write(5, "\f", 1) = 1
14315 15:37:39.699639 read(5,  <unfinished ...>
14313 15:37:39.699685 read(4, "\f", 1)  = 1
14313 15:37:39.699831 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
14313 15:37:39.699923 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
14313 15:37:39.699999 gettimeofday({1495654659, 700024}, NULL) = 0
14313 15:37:39.700103 bind(5, {sa_family=AF_INET, sin_port=htons(23309), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
14313 15:37:39.700204 listen(5, 1)      = 0
14313 15:37:39.700285 write(4, "\r[\0\0", 4) = 4
14315 15:37:39.700365 <... read resumed> "\r[\0\0", 4) = 4
14315 15:37:39.700454 write(0, "227 Entering Passive Mode (127,0,0,1,91,13).\r\n", 46) = 46
14315 15:37:39.701110 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14315 15:37:39.701220 alarm(300)        = 300
14315 15:37:39.701297 recv(0, "STOR myfile32\r\n", 4096, MSG_PEEK) = 15
14315 15:37:39.701379 read(0, "STOR myfile32\r\n", 15) = 15
14315 15:37:39.701477 write(5, "\v", 1) = 1
14315 15:37:39.701549 read(5,  <unfinished ...>
14313 15:37:39.701597 read(4, "\v", 1)  = 1
14313 15:37:39.701740 write(4, "\1\0\0\0", 4) = 4
14315 15:37:39.701829 <... read resumed> "\1\0\0\0", 4) = 4
14315 15:37:39.701887 gettimeofday({1495654659, 701913}, NULL) = 0
14315 15:37:39.701987 getcwd("/home/msfadmin", 4096) = 15
14315 15:37:39.702070 open("myfile32", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
14315 15:37:39.702159 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
14315 15:37:39.702276 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
14315 15:37:39.702347 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
14315 15:37:39.702414 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbf2de4) = 0
14315 15:37:39.702765 ftruncate64(4, 0) = 0
14315 15:37:39.702827 _llseek(4, 0, [0], SEEK_SET) = 0
14315 15:37:39.702864 write(5, "\v", 1) = 1
14315 15:37:39.702899 read(5,  <unfinished ...>
14313 15:37:39.702922 read(4, "\v", 1)  = 1
14313 15:37:39.702958 write(4, "\1\0\0\0", 4) = 4
14315 15:37:39.702992 <... read resumed> "\1\0\0\0", 4) = 4
14315 15:37:39.703016 write(5, "\v", 1) = 1
14315 15:37:39.703047 read(5,  <unfinished ...>
14313 15:37:39.703069 read(4, "\v", 1)  = 1
14313 15:37:39.703102 write(4, "\1\0\0\0", 4) = 4
14315 15:37:39.703135 <... read resumed> "\1\0\0\0", 4) = 4
14315 15:37:39.703159 write(5, "\r", 1) = 1
14315 15:37:39.703190 read(5,  <unfinished ...>
14313 15:37:39.703211 read(4, "\r", 1)  = 1
14313 15:37:39.703250 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
14313 15:37:39.703302 accept(5, {sa_family=AF_INET, sin_port=htons(53393), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
14313 15:37:39.703372 write(4, "\1", 1) = 1
14315 15:37:39.703405 <... read resumed> "\1", 1) = 1
14315 15:37:39.703435 recvmsg(5,  <unfinished ...>
14313 15:37:39.703464 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14315 15:37:39.703517 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14315 15:37:39.703608 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
14315 15:37:39.703655 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
14315 15:37:39.703690 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
14315 15:37:39.703724 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14315 15:37:39.703755 alarm(300)        = 300
14315 15:37:39.703780 write(0, "150 Ok to send data.\r\n", 22) = 22
14315 15:37:39.703912 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d96000
14315 15:37:39.703938 mprotect(0xb7da8000, 4096, PROT_NONE) = 0
14315 15:37:39.703961 mprotect(0xb7d96000, 4096, PROT_NONE) = 0
14315 15:37:39.703980 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
14315 15:37:39.704006 write(4, "assasaaa\na\na\na\na\n", 17) = 17
14315 15:37:39.704037 read(6, "", 65536) = 0
14315 15:37:39.704056 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14315 15:37:39.704082 alarm(300)        = 300
14315 15:37:39.704101 close(6)          = 0
14315 15:37:39.704118 alarm(0)          = 300
14315 15:37:39.704136 gettimeofday({1495654659, 704142}, NULL) = 0
14315 15:37:39.704171 getpid()          = 14315
14315 15:37:39.704194 gettimeofday({1495654659, 704201}, NULL) = 0
14315 15:37:39.704225 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbf2d84) = 0
14315 15:37:39.704252 write(3, "Wed May 24 15:37:39 2017 [pid 14315] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile32\", 17 bytes, 7.26Kbyte/sec\n", 130) = 130
14315 15:37:39.704290 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbf2d8c) = 0
14315 15:37:39.704317 write(0, "226 Transfer complete.\r\n", 24) = 24
14315 15:37:39.704393 write(5, "\n", 1) = 1
14315 15:37:39.704414 read(5,  <unfinished ...>
14313 15:37:39.704428 close(6)          = 0
14313 15:37:39.704460 read(4, "\n", 1)  = 1
14313 15:37:39.704482 close(5)          = 0
14313 15:37:39.704502 write(4, "\1", 1) = 1
14315 15:37:39.704522 <... read resumed> "\1", 1) = 1
