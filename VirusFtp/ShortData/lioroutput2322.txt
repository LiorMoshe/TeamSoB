14678 15:41:02.604820 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.604848 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.604904 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.605507 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14678 15:41:02.605552 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.605582 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14678 15:41:02.605687 read(6, "", 4096) = 0
14678 15:41:02.605713 close(6)          = 0
14678 15:41:02.605737 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.605766 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.605814 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.605852 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14678 15:41:02.605918 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.605950 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14678 15:41:02.606051 read(6, "", 4096) = 0
14678 15:41:02.606076 close(6)          = 0
14678 15:41:02.606100 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.606126 read(5, "", 4096) = 0
14678 15:41:02.606150 close(5)          = 0
14678 15:41:02.606172 munmap(0xb7f8c000, 4096) = 0
14678 15:41:02.606198 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14678 15:41:02.606232 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14678 15:41:02.606278 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
14678 15:41:02.606306 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14678 15:41:02.606419 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.606466 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.606499 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14678 15:41:02.606539 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.606569 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14678 15:41:02.606689 read(6, "", 4096) = 0
14678 15:41:02.606714 close(6)          = 0
14678 15:41:02.606738 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.606765 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.606812 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.606861 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14678 15:41:02.606919 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.606957 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14678 15:41:02.607062 read(6, "", 4096) = 0
14678 15:41:02.607088 close(6)          = 0
14678 15:41:02.607112 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.607140 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.607187 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.607222 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14678 15:41:02.607262 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.607290 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14678 15:41:02.607579 read(6, "", 4096) = 0
14678 15:41:02.607604 close(6)          = 0
14678 15:41:02.607628 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.607655 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14678 15:41:02.607701 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14678 15:41:02.607734 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14678 15:41:02.607774 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f86000
14678 15:41:02.607801 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14678 15:41:02.607921 read(6, "", 4096) = 0
14678 15:41:02.607946 close(6)          = 0
14678 15:41:02.607970 munmap(0xb7f86000, 4096) = 0
14678 15:41:02.608004 read(5, "", 4096) = 0
14678 15:41:02.608040 close(5)          = 0
14678 15:41:02.608074 munmap(0xb7f8c000, 4096) = 0
14678 15:41:02.608122 time(NULL)        = 1495654862
14678 15:41:02.608167 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14678 15:41:02.608241 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14678 15:41:02.608289 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14678 15:41:02.608304 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8c000
14678 15:41:02.608304 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14678 15:41:02.608396 read(5, "", 4096) = 0
14678 15:41:02.608432 close(5)          = 0
14678 15:41:02.608489 munmap(0xb7f8c000, 4096) = 0
14678 15:41:02.608566 getuid32()        = 0
14678 15:41:02.608615 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.608668 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.608708 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14678 15:41:02.608770 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.608811 _llseek(5, 1624, [1624], SEEK_SET) = 0
14678 15:41:02.608881 munmap(0xb7f8c000, 1624) = 0
14678 15:41:02.608921 close(5)          = 0
14678 15:41:02.609004 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.609065 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.609135 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14678 15:41:02.609196 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.609225 _llseek(5, 1233, [1233], SEEK_SET) = 0
14678 15:41:02.609278 munmap(0xb7f8c000, 1233) = 0
14678 15:41:02.609305 close(5)          = 0
14678 15:41:02.609354 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.609389 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.609415 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14678 15:41:02.609456 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.609634 _llseek(5, 1624, [1624], SEEK_SET) = 0
14678 15:41:02.609682 munmap(0xb7f8c000, 1624) = 0
14678 15:41:02.609708 close(5)          = 0
14678 15:41:02.609742 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.609776 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.609801 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14678 15:41:02.609842 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.609870 _llseek(5, 1233, [1233], SEEK_SET) = 0
14678 15:41:02.609913 munmap(0xb7f8c000, 1233) = 0
14678 15:41:02.609938 close(5)          = 0
14678 15:41:02.610523 getuid32()        = 0
14678 15:41:02.610552 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.610623 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.610651 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14678 15:41:02.610692 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.610721 _llseek(5, 1624, [1624], SEEK_SET) = 0
14678 15:41:02.610762 munmap(0xb7f8c000, 1624) = 0
14678 15:41:02.610788 close(5)          = 0
14678 15:41:02.610823 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.610856 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.610882 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14678 15:41:02.610923 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.610950 _llseek(5, 1233, [1233], SEEK_SET) = 0
14678 15:41:02.610993 munmap(0xb7f8c000, 1233) = 0
14678 15:41:02.611018 close(5)          = 0
14678 15:41:02.611048 time(NULL)        = 1495654862
14678 15:41:02.611091 munmap(0xb7f89000, 12164) = 0
14678 15:41:02.611126 munmap(0xb7f87000, 7136) = 0
14678 15:41:02.611165 munmap(0xb7dbc000, 95428) = 0
14678 15:41:02.611195 munmap(0xb7d82000, 201052) = 0
14678 15:41:02.611224 munmap(0xb7d69000, 101180) = 0
14678 15:41:02.611269 gettimeofday({1495654862, 611279}, NULL) = 0
14678 15:41:02.611300 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfbe8554) = -1 ENOENT (No such file or directory)
14678 15:41:02.611339 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14678 15:41:02.611410 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbe86a4) = 0
14678 15:41:02.611454 write(3, "Wed May 24 15:41:02 2017 [pid 14678] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14678 15:41:02.611513 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbe86ac) = 0
14678 15:41:02.611598 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14678 15:41:02.611661 write(4, "\1", 1 <unfinished ...>
14679 15:41:02.611708 <... read resumed> "\1", 1) = 1
14678 15:41:02.611730 <... write resumed> ) = 1
14679 15:41:02.611764 exit_group(0)     = ?
14678 15:41:02.611896 --- SIGCHLD (Child exited) @ 0 (0) ---
14678 15:41:02.611926 sigreturn()       = ? (mask now [])
14678 15:41:02.611999 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14679
14678 15:41:02.612049 close(4)          = 0
14678 15:41:02.612097 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14678 15:41:02.612150 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14678 15:41:02.612204 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14678 15:41:02.612256 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7df26f8) = 14680
14680 15:41:02.612463 prctl(0x1, 0x9, 0, 0, 0) = 0
14680 15:41:02.612580 close(4)          = 0
14680 15:41:02.612698 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14680 15:41:02.612777 _llseek(4, 0, [0], SEEK_CUR) = 0
14680 15:41:02.612845 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14680 15:41:02.612927 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f8c000
14680 15:41:02.612981 _llseek(4, 1624, [1624], SEEK_SET) = 0
14680 15:41:02.613083 munmap(0xb7f8c000, 1624) = 0
14680 15:41:02.613138 close(4)          = 0
14680 15:41:02.613198 getuid32()        = 0
14680 15:41:02.613242 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14680 15:41:02.613302 _llseek(4, 0, [0], SEEK_CUR) = 0
14680 15:41:02.613349 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14680 15:41:02.613416 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f8c000
14680 15:41:02.613521 _llseek(4, 1624, [1624], SEEK_SET) = 0
14680 15:41:02.613606 munmap(0xb7f8c000, 1624) = 0
14680 15:41:02.613654 close(4)          = 0
14680 15:41:02.613784 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14680 15:41:02.613876 read(4, "65536\n", 31) = 6
14680 15:41:02.613931 close(4)          = 0
14680 15:41:02.613990 socket(PF_FILE, SOCK_STREAM, 0) = 4
14680 15:41:02.614049 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14680 15:41:02.614098 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14680 15:41:02.614193 close(4)          = 0
14680 15:41:02.614245 socket(PF_FILE, SOCK_STREAM, 0) = 4
14680 15:41:02.614295 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14680 15:41:02.614342 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14680 15:41:02.614483 close(4)          = 0
14680 15:41:02.614647 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14680 15:41:02.614713 _llseek(4, 0, [0], SEEK_CUR) = 0
14680 15:41:02.614771 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14680 15:41:02.614844 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f8c000
14680 15:41:02.614896 _llseek(4, 886, [886], SEEK_SET) = 0
14680 15:41:02.614967 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14680 15:41:02.614968 munmap(0xb7f8c000, 886) = 0
14680 15:41:02.614991 close(4)          = 0
14680 15:41:02.615034 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14680 15:41:02.615179 geteuid32()       = 0
14680 15:41:02.615233 getegid32()       = 0
14680 15:41:02.615279 setregid32(-1, 1000) = 0
14680 15:41:02.615329 setreuid32(-1, 1000) = 0
14680 15:41:02.615378 chdir("/home/msfadmin") = 0
14680 15:41:02.615430 setreuid32(-1, 0) = 0
14680 15:41:02.615467 setregid32(-1, 0) = 0
14680 15:41:02.615516 setgid32(1000)    = 0
14680 15:41:02.615557 setuid32(1000)    = 0
14680 15:41:02.615598 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14680 15:41:02.615657 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f8a000
14680 15:41:02.615712 mprotect(0xb7f8c000, 4096, PROT_NONE) = 0
14680 15:41:02.615791 mprotect(0xb7f8a000, 4096, PROT_NONE) = 0
14680 15:41:02.615845 getcwd("/home/msfadmin", 4096) = 15
14680 15:41:02.615909 umask(022)        = 077
14680 15:41:02.615951 getcwd("/home/msfadmin", 4096) = 15
14680 15:41:02.616013 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14680 15:41:02.616194 write(0, "230 Login successful.\r\n", 23) = 23
14680 15:41:02.616533 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.616589 alarm(300)        = 0
14680 15:41:02.616622 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f87000
14680 15:41:02.616657 mprotect(0xb7f89000, 4096, PROT_NONE) = 0
14680 15:41:02.616688 mprotect(0xb7f87000, 4096, PROT_NONE) = 0
14680 15:41:02.616725 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
14680 15:41:02.616762 read(0, "TYPE I\r\n", 8) = 8
14680 15:41:02.616813 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
14680 15:41:02.616953 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.616994 alarm(300)        = 300
14680 15:41:02.617085 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
14680 15:41:02.617119 read(0, "PASV\r\n", 6) = 6
14680 15:41:02.617151 write(5, "\n", 1) = 1
14680 15:41:02.617181 read(5,  <unfinished ...>
14678 15:41:02.617217 close(5)          = 0
14678 15:41:02.617251 getuid32()        = 0
14678 15:41:02.617292 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14678 15:41:02.617336 _llseek(5, 0, [0], SEEK_CUR) = 0
14678 15:41:02.617370 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14678 15:41:02.617417 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f8c000
14678 15:41:02.617451 _llseek(5, 1624, [1624], SEEK_SET) = 0
14678 15:41:02.617500 munmap(0xb7f8c000, 1624) = 0
14678 15:41:02.617532 close(5)          = 0
14678 15:41:02.617577 setgroups32(0, []) = 0
14678 15:41:02.617608 chdir("/usr/share/empty") = 0
14678 15:41:02.617641 chroot(".")       = 0
14678 15:41:02.617669 capset(NULL, NULL) = -1 EFAULT (Bad address)
14678 15:41:02.617704 prctl(0x8, 0, 0xbfbe8688, 0x80549a6, 0xbfbe8670) = 0
14678 15:41:02.617733 prctl(0x8, 0x1, 0xbfbe8688, 0x8054a49, 0xbfbe8670) = 0
14678 15:41:02.617759 setgid32(65534)   = 0
14678 15:41:02.617784 setuid32(65534)   = 0
14678 15:41:02.617808 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14678 15:41:02.617843 read(4, "\n", 1)  = 1
14678 15:41:02.617879 write(4, "\1", 1) = 1
14680 15:41:02.617908 <... read resumed> "\1", 1) = 1
14680 15:41:02.617928 write(5, "\f", 1) = 1
14680 15:41:02.617953 read(5,  <unfinished ...>
14678 15:41:02.618002 read(4, "\f", 1)  = 1
14678 15:41:02.618065 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
14678 15:41:02.618122 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
14678 15:41:02.618168 gettimeofday({1495654862, 618178}, NULL) = 0
14678 15:41:02.618211 bind(5, {sa_family=AF_INET, sin_port=htons(50499), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
14678 15:41:02.618253 listen(5, 1)      = 0
14678 15:41:02.618286 write(4, "C\305\0\0", 4) = 4
14680 15:41:02.618316 <... read resumed> "C\305\0\0", 4) = 4
14680 15:41:02.618355 write(0, "227 Entering Passive Mode (127,0,0,1,197,67).\r\n", 47) = 47
14680 15:41:02.619258 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.619379 alarm(300)        = 300
14680 15:41:02.619459 recv(0, "STOR myfile30\r\n", 4096, MSG_PEEK) = 15
14680 15:41:02.619548 read(0, "STOR myfile30\r\n", 15) = 15
14680 15:41:02.619602 write(5, "\v", 1) = 1
14680 15:41:02.619629 read(5,  <unfinished ...>
14678 15:41:02.619648 read(4, "\v", 1)  = 1
14678 15:41:02.619676 write(4, "\1\0\0\0", 4) = 4
14680 15:41:02.619704 <... read resumed> "\1\0\0\0", 4) = 4
14680 15:41:02.619726 gettimeofday({1495654862, 619735}, NULL) = 0
14680 15:41:02.619753 getcwd("/home/msfadmin", 4096) = 15
14680 15:41:02.619785 open("myfile30", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
14680 15:41:02.619820 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
14680 15:41:02.619862 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
14680 15:41:02.619904 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
14680 15:41:02.619930 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbe85d4) = 0
14680 15:41:02.619970 ftruncate64(4, 0) = 0
14680 15:41:02.620014 _llseek(4, 0, [0], SEEK_SET) = 0
14680 15:41:02.620042 write(5, "\v", 1) = 1
14680 15:41:02.620068 read(5,  <unfinished ...>
14678 15:41:02.620086 read(4, "\v", 1)  = 1
14678 15:41:02.620114 write(4, "\1\0\0\0", 4) = 4
14680 15:41:02.620141 <... read resumed> "\1\0\0\0", 4) = 4
14680 15:41:02.620160 write(5, "\v", 1) = 1
14680 15:41:02.620185 read(5,  <unfinished ...>
14678 15:41:02.620202 read(4, "\v", 1)  = 1
14678 15:41:02.620229 write(4, "\1\0\0\0", 4) = 4
14680 15:41:02.620255 <... read resumed> "\1\0\0\0", 4) = 4
14680 15:41:02.620274 write(5, "\r", 1) = 1
14680 15:41:02.620299 read(5,  <unfinished ...>
14678 15:41:02.620316 read(4, "\r", 1)  = 1
14678 15:41:02.620348 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
14678 15:41:02.620392 accept(5, {sa_family=AF_INET, sin_port=htons(57319), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
14678 15:41:02.620447 write(4, "\1", 1) = 1
14680 15:41:02.620474 <... read resumed> "\1", 1) = 1
14680 15:41:02.620637 recvmsg(5,  <unfinished ...>
14678 15:41:02.620669 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14680 15:41:02.620715 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
14680 15:41:02.620749 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
14680 15:41:02.620780 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
14680 15:41:02.620810 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
14680 15:41:02.620839 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.620873 alarm(300)        = 300
14678 15:41:02.620900 close(6)          = 0
14680 15:41:02.620931 write(0, "150 Ok to send data.\r\n", 22 <unfinished ...>
14678 15:41:02.620954 read(4,  <unfinished ...>
14680 15:41:02.621092 <... write resumed> ) = 22
14680 15:41:02.621120 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7dc1000
14680 15:41:02.621152 mprotect(0xb7dd3000, 4096, PROT_NONE) = 0
14680 15:41:02.621184 mprotect(0xb7dc1000, 4096, PROT_NONE) = 0
14680 15:41:02.621210 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
14680 15:41:02.621244 write(4, "assasaaa\na\na\na\na\n", 17) = 17
14680 15:41:02.621283 read(6, "", 65536) = 0
14680 15:41:02.621309 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.621344 alarm(300)        = 300
14680 15:41:02.621370 close(6)          = 0
14680 15:41:02.621413 alarm(0)          = 300
14680 15:41:02.621439 gettimeofday({1495654862, 621448}, NULL) = 0
14680 15:41:02.621486 getpid()          = 14680
14680 15:41:02.621516 gettimeofday({1495654862, 621525}, NULL) = 0
14680 15:41:02.621558 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbe8574) = 0
14680 15:41:02.621629 write(3, "Wed May 24 15:41:02 2017 [pid 14680] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile30\", 17 bytes, 9.27Kbyte/sec\n", 130) = 130
14680 15:41:02.621684 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfbe857c) = 0
14680 15:41:02.621722 write(0, "226 Transfer complete.\r\n", 24) = 24
14680 15:41:02.621829 write(5, "\n", 1) = 1
14678 15:41:02.621860 <... read resumed> "\n", 1) = 1
14678 15:41:02.621878 close(5)          = 0
14678 15:41:02.621908 write(4, "\1", 1) = 1
14678 15:41:02.621936 read(4,  <unfinished ...>
14680 15:41:02.621954 read(5, "\1", 1)  = 1
14680 15:41:02.621982 close(4)          = 0
14680 15:41:02.622010 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14680 15:41:02.622044 alarm(300)        = 0
14680 15:41:02.622073 recv(0,  <unfinished ...>
14675 15:41:02.848102 <... read resumed> "\n", 1) = 1
14675 15:41:02.848244 stat64(".", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14675 15:41:02.848285 stat64("/sbin/nohup", 0xbf850998) = -1 ENOENT (No such file or directory)
14675 15:41:02.848307 stat64("/bin/nohup", 0xbf850998) = -1 ENOENT (No such file or directory)
14675 15:41:02.848325 stat64("/usr/sbin/nohup", 0xbf850998) = -1 ENOENT (No such file or directory)
14675 15:41:02.848343 stat64("/usr/bin/nohup", {st_mode=S_IFREG|0755, st_size=26336, ...}) = 0
14675 15:41:02.848370 stat64("/usr/bin/nohup", {st_mode=S_IFREG|0755, st_size=26336, ...}) = 0
14675 15:41:02.848406 rt_sigprocmask(SIG_BLOCK, [INT CHLD], [], 8) = 0
14675 15:41:02.848429 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d6e6f8) = 14681
14681 15:41:02.848518 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
