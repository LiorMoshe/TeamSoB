18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.414070 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18789 16:32:33.414070 read(6, "", 4096) = 0
18789 16:32:33.414070 close(6)          = 0
18789 16:32:33.414070 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.414070 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18789 16:32:33.414070 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18789 16:32:33.414070 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.414070 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18789 16:32:33.414070 read(6, "", 4096) = 0
18789 16:32:33.414070 close(6)          = 0
18789 16:32:33.414070 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.414070 read(5, "", 4096) = 0
18789 16:32:33.414070 close(5)          = 0
18789 16:32:33.414070 munmap(0xb7f47000, 4096) = 0
18789 16:32:33.414070 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
18789 16:32:33.414070 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
18789 16:32:33.414070 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
18789 16:32:33.414070 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18789 16:32:33.414070 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
18789 16:32:33.414070 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.414070 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
18789 16:32:33.414070 read(6, "", 4096) = 0
18789 16:32:33.414070 close(6)          = 0
18789 16:32:33.414070 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.414070 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18789 16:32:33.414070 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
18789 16:32:33.414070 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.414070 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
18789 16:32:33.414070 read(6, "", 4096) = 0
18789 16:32:33.414070 close(6)          = 0
18789 16:32:33.414070 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.414070 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18789 16:32:33.414070 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
18789 16:32:33.414070 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
18789 16:32:33.414070 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.414070 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
18789 16:32:33.414070 read(6, "", 4096) = 0
18789 16:32:33.419147 close(6)          = 0
18789 16:32:33.419181 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.419212 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
18789 16:32:33.419254 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
18789 16:32:33.419288 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
18789 16:32:33.419325 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f41000
18789 16:32:33.419354 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
18789 16:32:33.419430 read(6, "", 4096) = 0
18789 16:32:33.419462 close(6)          = 0
18789 16:32:33.419489 munmap(0xb7f41000, 4096) = 0
18789 16:32:33.419518 read(5, "", 4096) = 0
18789 16:32:33.419544 close(5)          = 0
18789 16:32:33.419570 munmap(0xb7f47000, 4096) = 0
18789 16:32:33.419601 time(NULL)        = 1495657953
18789 16:32:33.419632 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18789 16:32:33.419673 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
18789 16:32:33.419703 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
18789 16:32:33.419741 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
18789 16:32:33.419768 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
18789 16:32:33.419813 read(5, "", 4096) = 0
18789 16:32:33.419839 close(5)          = 0
18789 16:32:33.419866 munmap(0xb7f47000, 4096) = 0
18789 16:32:33.419902 getuid32()        = 0
18789 16:32:33.419941 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.419977 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.420026 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18789 16:32:33.420067 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.420096 _llseek(5, 1624, [1624], SEEK_SET) = 0
18789 16:32:33.420139 munmap(0xb7f47000, 1624) = 0
18789 16:32:33.420169 close(5)          = 0
18789 16:32:33.420222 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.420263 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.420292 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18789 16:32:33.420330 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.420358 _llseek(5, 1233, [1233], SEEK_SET) = 0
18789 16:32:33.420402 munmap(0xb7f47000, 1233) = 0
18789 16:32:33.420429 close(5)          = 0
18789 16:32:33.420471 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.420505 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.420533 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18789 16:32:33.420569 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.420598 _llseek(5, 1624, [1624], SEEK_SET) = 0
18789 16:32:33.420636 munmap(0xb7f47000, 1624) = 0
18789 16:32:33.420662 close(5)          = 0
18789 16:32:33.420694 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.420727 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.420755 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18789 16:32:33.420792 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.420819 _llseek(5, 1233, [1233], SEEK_SET) = 0
18789 16:32:33.420858 munmap(0xb7f47000, 1233) = 0
18789 16:32:33.420884 close(5)          = 0
18789 16:32:33.421297 getuid32()        = 0
18789 16:32:33.421330 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.421363 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.421391 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18789 16:32:33.421428 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.421457 _llseek(5, 1624, [1624], SEEK_SET) = 0
18789 16:32:33.421494 munmap(0xb7f47000, 1624) = 0
18789 16:32:33.421521 close(5)          = 0
18789 16:32:33.421553 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.421586 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.421614 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
18789 16:32:33.421651 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.421679 _llseek(5, 1233, [1233], SEEK_SET) = 0
18789 16:32:33.421718 munmap(0xb7f47000, 1233) = 0
18789 16:32:33.421744 close(5)          = 0
18789 16:32:33.421775 time(NULL)        = 1495657953
18789 16:32:33.421810 munmap(0xb7f44000, 12164) = 0
18789 16:32:33.421843 munmap(0xb7f42000, 7136) = 0
18789 16:32:33.421877 munmap(0xb7d77000, 95428) = 0
18789 16:32:33.421906 munmap(0xb7d3d000, 201052) = 0
18789 16:32:33.421957 munmap(0xb7d24000, 101180) = 0
18789 16:32:33.422002 gettimeofday({1495657953, 422027}, NULL) = 0
18789 16:32:33.422051 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfda6f14) = -1 ENOENT (No such file or directory)
18789 16:32:33.422088 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
18789 16:32:33.422143 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfda7064) = 0
18789 16:32:33.422181 write(3, "Wed May 24 16:32:33 2017 [pid 18789] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
18789 16:32:33.422220 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfda706c) = 0
18789 16:32:33.422252 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18789 16:32:33.422287 write(4, "\1", 1 <unfinished ...>
18790 16:32:33.422314 <... read resumed> "\1", 1) = 1
18789 16:32:33.422356 <... write resumed> ) = 1
18790 16:32:33.422381 exit_group(0)     = ?
18789 16:32:33.422442 --- SIGCHLD (Child exited) @ 0 (0) ---
18789 16:32:33.422465 sigreturn()       = ? (mask now [])
18789 16:32:33.422506 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 18790
18789 16:32:33.422538 close(4)          = 0
18789 16:32:33.422569 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
18789 16:32:33.422603 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18789 16:32:33.422637 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18789 16:32:33.422671 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dad6f8) = 18791
18791 16:32:33.422779 prctl(0x1, 0x9, 0, 0, 0) = 0
18791 16:32:33.422814 close(4)          = 0
18791 16:32:33.422873 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18791 16:32:33.422931 _llseek(4, 0, [0], SEEK_CUR) = 0
18791 16:32:33.422970 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18791 16:32:33.423011 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f47000
18791 16:32:33.423042 _llseek(4, 1624, [1624], SEEK_SET) = 0
18791 16:32:33.423090 munmap(0xb7f47000, 1624) = 0
18791 16:32:33.423121 close(4)          = 0
18791 16:32:33.423154 getuid32()        = 0
18791 16:32:33.423182 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
18791 16:32:33.423214 _llseek(4, 0, [0], SEEK_CUR) = 0
18791 16:32:33.423243 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18791 16:32:33.423280 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f47000
18791 16:32:33.423309 _llseek(4, 1624, [1624], SEEK_SET) = 0
18791 16:32:33.423345 munmap(0xb7f47000, 1624) = 0
18791 16:32:33.423372 close(4)          = 0
18791 16:32:33.423427 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
18791 16:32:33.423471 read(4, "65536\n", 31) = 6
18791 16:32:33.423502 close(4)          = 0
18791 16:32:33.423536 socket(PF_FILE, SOCK_STREAM, 0) = 4
18791 16:32:33.423566 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18791 16:32:33.423596 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18791 16:32:33.423643 close(4)          = 0
18791 16:32:33.423673 socket(PF_FILE, SOCK_STREAM, 0) = 4
18791 16:32:33.423701 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
18791 16:32:33.423728 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
18791 16:32:33.423769 close(4)          = 0
18791 16:32:33.423820 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
18791 16:32:33.423856 _llseek(4, 0, [0], SEEK_CUR) = 0
18791 16:32:33.423908 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18791 16:32:33.423946 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f47000
18791 16:32:33.423975 _llseek(4, 886, [886], SEEK_SET) = 0
18791 16:32:33.424027 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
18791 16:32:33.424067 munmap(0xb7f47000, 886) = 0
18791 16:32:33.424070 close(4)          = 0
18791 16:32:33.424070 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
18791 16:32:33.424070 geteuid32()       = 0
18791 16:32:33.424070 getegid32()       = 0
18791 16:32:33.424070 setregid32(-1, 1000) = 0
18791 16:32:33.424070 setreuid32(-1, 1000) = 0
18791 16:32:33.424070 chdir("/home/msfadmin") = 0
18791 16:32:33.424070 setreuid32(-1, 0) = 0
18791 16:32:33.424070 setregid32(-1, 0) = 0
18791 16:32:33.424070 setgid32(1000)    = 0
18791 16:32:33.424070 setuid32(1000)    = 0
18791 16:32:33.424070 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
18791 16:32:33.424070 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f45000
18791 16:32:33.424070 mprotect(0xb7f47000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 mprotect(0xb7f45000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 getcwd("/home/msfadmin", 4096) = 15
18791 16:32:33.424070 umask(022)        = 077
18791 16:32:33.424070 getcwd("/home/msfadmin", 4096) = 15
18791 16:32:33.424070 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
18791 16:32:33.424070 write(0, "230 Login successful.\r\n", 23) = 23
18791 16:32:33.424070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.424070 alarm(300)        = 0
18791 16:32:33.424070 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f42000
18791 16:32:33.424070 mprotect(0xb7f44000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 mprotect(0xb7f42000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
18791 16:32:33.424070 read(0, "TYPE I\r\n", 8) = 8
18791 16:32:33.424070 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
18791 16:32:33.424070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.424070 alarm(300)        = 300
18791 16:32:33.424070 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
18791 16:32:33.424070 read(0, "PASV\r\n", 6) = 6
18791 16:32:33.424070 write(5, "\n", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 close(5)          = 0
18789 16:32:33.424070 getuid32()        = 0
18789 16:32:33.424070 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
18789 16:32:33.424070 _llseek(5, 0, [0], SEEK_CUR) = 0
18789 16:32:33.424070 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
18789 16:32:33.424070 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f47000
18789 16:32:33.424070 _llseek(5, 1624, [1624], SEEK_SET) = 0
18789 16:32:33.424070 munmap(0xb7f47000, 1624) = 0
18789 16:32:33.424070 close(5)          = 0
18789 16:32:33.424070 setgroups32(0, []) = 0
18789 16:32:33.424070 chdir("/usr/share/empty") = 0
18789 16:32:33.424070 chroot(".")       = 0
18789 16:32:33.424070 capset(NULL, NULL) = -1 EFAULT (Bad address)
18789 16:32:33.424070 prctl(0x8, 0, 0xbfda7048, 0x80549a6, 0xbfda7030) = 0
18789 16:32:33.424070 prctl(0x8, 0x1, 0xbfda7048, 0x8054a49, 0xbfda7030) = 0
18789 16:32:33.424070 setgid32(65534)   = 0
18789 16:32:33.424070 setuid32(65534)   = 0
18789 16:32:33.424070 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
18789 16:32:33.424070 read(4, "\n", 1)  = 1
18789 16:32:33.424070 write(4, "\1", 1) = 1
18791 16:32:33.424070 <... read resumed> "\1", 1) = 1
18791 16:32:33.424070 write(5, "\f", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 read(4, "\f", 1)  = 1
18789 16:32:33.424070 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
18789 16:32:33.424070 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
18789 16:32:33.424070 gettimeofday({1495657953, 424070}, NULL) = 0
18789 16:32:33.424070 bind(5, {sa_family=AF_INET, sin_port=htons(49757), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
18789 16:32:33.424070 listen(5, 1)      = 0
18789 16:32:33.424070 write(4, "]\302\0\0", 4) = 4
18791 16:32:33.424070 <... read resumed> "]\302\0\0", 4) = 4
18791 16:32:33.424070 write(0, "227 Entering Passive Mode (127,0,0,1,194,93).\r\n", 47) = 47
18791 16:32:33.424070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.424070 alarm(300)        = 300
18791 16:32:33.424070 recv(0, "STOR myfile29\r\n", 4096, MSG_PEEK) = 15
18791 16:32:33.424070 read(0, "STOR myfile29\r\n", 15) = 15
18791 16:32:33.424070 write(5, "\v", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 read(4, "\v", 1)  = 1
18789 16:32:33.424070 write(4, "\1\0\0\0", 4) = 4
18791 16:32:33.424070 <... read resumed> "\1\0\0\0", 4) = 4
18791 16:32:33.424070 gettimeofday({1495657953, 424070}, NULL) = 0
18791 16:32:33.424070 getcwd("/home/msfadmin", 4096) = 15
18791 16:32:33.424070 open("myfile29", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
18791 16:32:33.424070 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
18791 16:32:33.424070 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
18791 16:32:33.424070 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
18791 16:32:33.424070 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfda6f94) = 0
18791 16:32:33.424070 ftruncate64(4, 0) = 0
18791 16:32:33.424070 _llseek(4, 0, [0], SEEK_SET) = 0
18791 16:32:33.424070 write(5, "\v", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 read(4, "\v", 1)  = 1
18789 16:32:33.424070 write(4, "\1\0\0\0", 4) = 4
18791 16:32:33.424070 <... read resumed> "\1\0\0\0", 4) = 4
18791 16:32:33.424070 write(5, "\v", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 read(4, "\v", 1)  = 1
18789 16:32:33.424070 write(4, "\1\0\0\0", 4) = 4
18791 16:32:33.424070 <... read resumed> "\1\0\0\0", 4) = 4
18791 16:32:33.424070 write(5, "\r", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.424070 read(4, "\r", 1)  = 1
18789 16:32:33.424070 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
18789 16:32:33.424070 accept(5, {sa_family=AF_INET, sin_port=htons(34273), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
18789 16:32:33.424070 write(4, "\1", 1) = 1
18791 16:32:33.424070 <... read resumed> "\1", 1) = 1
18791 16:32:33.424070 recvmsg(5,  <unfinished ...>
18789 16:32:33.424070 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18791 16:32:33.424070 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
18791 16:32:33.424070 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
18791 16:32:33.424070 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
18791 16:32:33.424070 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
18791 16:32:33.424070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.424070 alarm(300)        = 300
18791 16:32:33.424070 write(0, "150 Ok to send data.\r\n", 22) = 22
18791 16:32:33.424070 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d7c000
18791 16:32:33.424070 mprotect(0xb7d8e000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 mprotect(0xb7d7c000, 4096, PROT_NONE) = 0
18791 16:32:33.424070 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
18791 16:32:33.424070 write(4, "assasaaa\na\na\na\na\n", 17) = 17
18791 16:32:33.424070 read(6, "", 65536) = 0
18791 16:32:33.424070 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.424070 alarm(300)        = 300
18791 16:32:33.424070 close(6)          = 0
18791 16:32:33.424070 alarm(0)          = 300
18791 16:32:33.424070 gettimeofday({1495657953, 424070}, NULL) = 0
18791 16:32:33.424070 getpid()          = 18791
18791 16:32:33.424070 gettimeofday({1495657953, 424070}, NULL) = 0
18791 16:32:33.424070 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfda6f34) = 0
18791 16:32:33.424070 write(3, "Wed May 24 16:32:33 2017 [pid 18791] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile29\", 17 bytes, 0.17Kbyte/sec\n", 130) = 130
18791 16:32:33.424070 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfda6f3c) = 0
18791 16:32:33.424070 write(0, "226 Transfer complete.\r\n", 24) = 24
18791 16:32:33.424070 write(5, "\n", 1) = 1
18791 16:32:33.424070 read(5,  <unfinished ...>
18789 16:32:33.429153 close(6)          = 0
18789 16:32:33.429245 read(4, "\n", 1)  = 1
18789 16:32:33.429283 close(5)          = 0
18789 16:32:33.429313 write(4, "\1", 1) = 1
18791 16:32:33.429343 <... read resumed> "\1", 1) = 1
18791 16:32:33.429365 close(4)          = 0
18791 16:32:33.429394 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.429427 alarm(300)        = 0
18791 16:32:33.429479 recv(0,  <unfinished ...>
18789 16:32:33.429503 read(4,  <unfinished ...>
18791 16:32:33.930612 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
18791 16:32:33.930936 read(0, "TYPE I\r\n", 8) = 8
18791 16:32:33.931266 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
18791 16:32:33.931760 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.931912 alarm(300)        = 299
18791 16:32:33.932069 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
18791 16:32:33.932150 read(0, "PASV\r\n", 6) = 6
18791 16:32:33.932233 write(5, "\n", 1) = 1
18791 16:32:33.932313 read(5,  <unfinished ...>
18789 16:32:33.932433 <... read resumed> "\n", 1) = 1
18789 16:32:33.932512 write(4, "\1", 1) = 1
18791 16:32:33.932595 <... read resumed> "\1", 1) = 1
18791 16:32:33.932685 write(5, "\f", 1) = 1
18791 16:32:33.932761 read(5,  <unfinished ...>
18789 16:32:33.932819 read(4, "\f", 1)  = 1
18789 16:32:33.932900 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
18789 16:32:33.932990 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
18789 16:32:33.933080 bind(5, {sa_family=AF_INET, sin_port=htons(6502), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
18789 16:32:33.933175 listen(5, 1)      = 0
18789 16:32:33.933259 write(4, "f\31\0\0", 4) = 4
18791 16:32:33.933385 <... read resumed> "f\31\0\0", 4) = 4
18791 16:32:33.933527 write(0, "227 Entering Passive Mode (127,0,0,1,25,102).\r\n", 47) = 47
18791 16:32:33.934086 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
18791 16:32:33.934086 alarm(300)        = 300
18791 16:32:33.934086 recv(0, "STOR myfile30\r\n", 4096, MSG_PEEK) = 15
18791 16:32:33.934086 read(0, "STOR myfile30\r\n", 15) = 15
18791 16:32:33.934086 write(5, "\v", 1) = 1
18791 16:32:33.934086 read(5,  <unfinished ...>
18789 16:32:33.934086 read(4, "\v", 1)  = 1
18789 16:32:33.934086 write(4, "\1\0\0\0", 4) = 4
18791 16:32:33.934086 <... read resumed> "\1\0\0\0", 4) = 4
18791 16:32:33.934086 gettimeofday({1495657953, 934086}, NULL) = 0
18791 16:32:33.934086 getcwd("/home/msfadmin", 4096) = 15
18791 16:32:33.934086 open("myfile30", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
