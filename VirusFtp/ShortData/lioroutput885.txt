10835 15:02:05.108720 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
10835 15:02:05.108761 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
10835 15:02:05.108789 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f77000
10835 15:02:05.108808 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
10835 15:02:05.108944 read(7, "", 1024) = 0
10835 15:02:05.108964 close(7)          = 0
10835 15:02:05.108981 munmap(0xb7f77000, 4096) = 0
10835 15:02:05.109008 munmap(0xb7da6000, 29913) = 0
10835 15:02:05.109032 read(6, "", 4096) = 0
10835 15:02:05.109050 close(6)          = 0
10835 15:02:05.109065 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.109083 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.109122 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.109145 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10835 15:02:05.109172 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.109190 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10835 15:02:05.109257 read(6, "", 4096) = 0
10835 15:02:05.109274 close(6)          = 0
10835 15:02:05.109289 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.109307 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.109338 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.109359 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10835 15:02:05.109405 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.109423 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10835 15:02:05.109489 read(6, "", 4096) = 0
10835 15:02:05.109505 close(6)          = 0
10835 15:02:05.109521 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.109538 read(5, "", 4096) = 0
10835 15:02:05.109553 close(5)          = 0
10835 15:02:05.109568 munmap(0xb7f7e000, 4096) = 0
10835 15:02:05.109585 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
10835 15:02:05.109606 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
10835 15:02:05.109633 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7e000
10835 15:02:05.109650 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
10835 15:02:05.109724 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.109754 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.109775 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
10835 15:02:05.109801 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.109818 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
10835 15:02:05.109912 read(6, "", 4096) = 0
10835 15:02:05.109931 close(6)          = 0
10835 15:02:05.109946 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.109964 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.109995 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.110016 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
10835 15:02:05.110048 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.110065 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
10835 15:02:05.110130 read(6, "", 4096) = 0
10835 15:02:05.110146 close(6)          = 0
10835 15:02:05.110161 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.110179 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.110209 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.110230 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
10835 15:02:05.110256 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.110273 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
10835 15:02:05.110487 read(6, "", 4096) = 0
10835 15:02:05.110506 close(6)          = 0
10835 15:02:05.110521 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.110539 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10835 15:02:05.110570 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10835 15:02:05.110592 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10835 15:02:05.110618 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
10835 15:02:05.110635 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10835 15:02:05.110698 read(6, "", 4096) = 0
10835 15:02:05.110714 close(6)          = 0
10835 15:02:05.110729 munmap(0xb7f78000, 4096) = 0
10835 15:02:05.110746 read(5, "", 4096) = 0
10835 15:02:05.110761 close(5)          = 0
10835 15:02:05.110776 munmap(0xb7f7e000, 4096) = 0
10835 15:02:05.110797 time(NULL)        = 1495652525
10835 15:02:05.110816 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10835 15:02:05.110868 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
10835 15:02:05.110891 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10835 15:02:05.110918 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7e000
10835 15:02:05.110935 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
10835 15:02:05.110970 read(5, "", 4096) = 0
10835 15:02:05.110986 close(5)          = 0
10835 15:02:05.111001 munmap(0xb7f7e000, 4096) = 0
10835 15:02:05.111028 getuid32()        = 0
10835 15:02:05.111056 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.111080 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.111098 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10835 15:02:05.111125 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.111143 _llseek(5, 1624, [1624], SEEK_SET) = 0
10835 15:02:05.111176 munmap(0xb7f7e000, 1624) = 0
10835 15:02:05.111193 close(5)          = 0
10835 15:02:05.111235 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.111264 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.111281 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10835 15:02:05.111307 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.111325 _llseek(5, 1233, [1233], SEEK_SET) = 0
10835 15:02:05.111374 munmap(0xb7f7e000, 1233) = 0
10835 15:02:05.111394 close(5)          = 0
10835 15:02:05.111427 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.111449 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.111466 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10835 15:02:05.111492 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.111510 _llseek(5, 1624, [1624], SEEK_SET) = 0
10835 15:02:05.111536 munmap(0xb7f7e000, 1624) = 0
10835 15:02:05.111552 close(5)          = 0
10835 15:02:05.111572 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.111593 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.111610 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10835 15:02:05.111636 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.111653 _llseek(5, 1233, [1233], SEEK_SET) = 0
10835 15:02:05.111680 munmap(0xb7f7e000, 1233) = 0
10835 15:02:05.111695 close(5)          = 0
10835 15:02:05.112097 getuid32()        = 0
10835 15:02:05.112119 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.112144 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.112161 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10835 15:02:05.112187 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.112205 _llseek(5, 1624, [1624], SEEK_SET) = 0
10835 15:02:05.112231 munmap(0xb7f7e000, 1624) = 0
10835 15:02:05.112247 close(5)          = 0
10835 15:02:05.112268 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.112289 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.112306 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10835 15:02:05.112345 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.112368 _llseek(5, 1233, [1233], SEEK_SET) = 0
10835 15:02:05.112396 munmap(0xb7f7e000, 1233) = 0
10835 15:02:05.112412 close(5)          = 0
10835 15:02:05.112432 time(NULL)        = 1495652525
10835 15:02:05.112457 munmap(0xb7f7b000, 12164) = 0
10835 15:02:05.112479 munmap(0xb7f79000, 7136) = 0
10835 15:02:05.112501 munmap(0xb7dae000, 95428) = 0
10835 15:02:05.112519 munmap(0xb7d74000, 201052) = 0
10835 15:02:05.112537 munmap(0xb7d5b000, 101180) = 0
10835 15:02:05.112565 gettimeofday({1495652525, 112572}, NULL) = 0
10835 15:02:05.112584 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfdd4f44) = -1 ENOENT (No such file or directory)
10835 15:02:05.112609 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
10835 15:02:05.112655 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdd5094) = 0
10835 15:02:05.112683 write(3, "Wed May 24 15:02:05 2017 [pid 10835] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
10835 15:02:05.112717 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdd509c) = 0
10835 15:02:05.112739 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10835 15:02:05.112763 write(4, "\1", 1 <unfinished ...>
10836 15:02:05.112779 <... read resumed> "\1", 1) = 1
10835 15:02:05.112788 <... write resumed> ) = 1
10836 15:02:05.112800 exit_group(0)     = ?
10835 15:02:05.112884 --- SIGCHLD (Child exited) @ 0 (0) ---
10835 15:02:05.112898 sigreturn()       = ? (mask now [])
10835 15:02:05.112931 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10836
10835 15:02:05.112953 close(4)          = 0
10835 15:02:05.112972 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
10835 15:02:05.112995 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10835 15:02:05.113018 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10835 15:02:05.113041 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7de46f8) = 10837
10837 15:02:05.113128 prctl(0x1, 0x9, 0, 0, 0) = 0
10837 15:02:05.113150 close(4)          = 0
10837 15:02:05.113198 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10837 15:02:05.113226 _llseek(4, 0, [0], SEEK_CUR) = 0
10837 15:02:05.113251 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10837 15:02:05.113281 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7e000
10837 15:02:05.113300 _llseek(4, 1624, [1624], SEEK_SET) = 0
10837 15:02:05.113353 munmap(0xb7f7e000, 1624) = 0
10837 15:02:05.113374 close(4)          = 0
10837 15:02:05.113396 getuid32()        = 0
10837 15:02:05.113413 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10837 15:02:05.113434 _llseek(4, 0, [0], SEEK_CUR) = 0
10837 15:02:05.113451 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10837 15:02:05.113478 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7e000
10837 15:02:05.113496 _llseek(4, 1624, [1624], SEEK_SET) = 0
10837 15:02:05.113521 munmap(0xb7f7e000, 1624) = 0
10837 15:02:05.113537 close(4)          = 0
10837 15:02:05.113580 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
10837 15:02:05.113613 read(4, "65536\n", 31) = 6
10837 15:02:05.113633 close(4)          = 0
10837 15:02:05.113657 socket(PF_FILE, SOCK_STREAM, 0) = 4
10837 15:02:05.113676 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10837 15:02:05.113694 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10837 15:02:05.113730 close(4)          = 0
10837 15:02:05.113748 socket(PF_FILE, SOCK_STREAM, 0) = 4
10837 15:02:05.113765 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10837 15:02:05.113782 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10837 15:02:05.113812 close(4)          = 0
10837 15:02:05.113989 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
10837 15:02:05.114013 _llseek(4, 0, [0], SEEK_CUR) = 0
10837 15:02:05.114031 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10837 15:02:05.114058 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f7e000
10837 15:02:05.114076 _llseek(4, 886, [886], SEEK_SET) = 0
10837 15:02:05.114116 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10837 15:02:05.114144 munmap(0xb7f7e000, 886) = 0
10837 15:02:05.114161 close(4)          = 0
10837 15:02:05.114177 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
10837 15:02:05.114204 geteuid32()       = 0
10837 15:02:05.114221 getegid32()       = 0
10837 15:02:05.114238 setregid32(-1, 1000) = 0
10837 15:02:05.114255 setreuid32(-1, 1000) = 0
10837 15:02:05.114273 chdir("/home/msfadmin") = 0
10837 15:02:05.114292 setreuid32(-1, 0) = 0
10837 15:02:05.114307 setregid32(-1, 0) = 0
10837 15:02:05.114324 setgid32(1000)    = 0
10837 15:02:05.114340 setuid32(1000)    = 0
10837 15:02:05.114356 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
10837 15:02:05.114379 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f7c000
10837 15:02:05.114404 mprotect(0xb7f7e000, 4096, PROT_NONE) = 0
10837 15:02:05.114423 mprotect(0xb7f7c000, 4096, PROT_NONE) = 0
10837 15:02:05.114460 getcwd("/home/msfadmin", 4096) = 15
10837 15:02:05.114496 umask(022)        = 077
10837 15:02:05.114519 getcwd("/home/msfadmin", 4096) = 15
10837 15:02:05.114542 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10837 15:02:05.114581 write(0, "230 Login successful.\r\n", 23) = 23
10837 15:02:05.114744 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.114774 alarm(300)        = 0
10837 15:02:05.114792 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f79000
10837 15:02:05.114811 mprotect(0xb7f7b000, 4096, PROT_NONE) = 0
10837 15:02:05.114830 mprotect(0xb7f79000, 4096, PROT_NONE) = 0
10837 15:02:05.114851 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
10837 15:02:05.114871 read(0, "TYPE I\r\n", 8) = 8
10837 15:02:05.114899 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
10837 15:02:05.115456 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.115516 alarm(300)        = 300
10837 15:02:05.115560 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
10837 15:02:05.115595 read(0, "PASV\r\n", 6) = 6
10837 15:02:05.115617 write(5, "\n", 1) = 1
10837 15:02:05.115637 read(5,  <unfinished ...>
10835 15:02:05.115660 close(5)          = 0
10835 15:02:05.115683 getuid32()        = 0
10835 15:02:05.115717 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10835 15:02:05.115753 _llseek(5, 0, [0], SEEK_CUR) = 0
10835 15:02:05.115782 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10835 15:02:05.115825 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f7e000
10835 15:02:05.115853 _llseek(5, 1624, [1624], SEEK_SET) = 0
10835 15:02:05.115923 munmap(0xb7f7e000, 1624) = 0
10835 15:02:05.115952 close(5)          = 0
10835 15:02:05.115988 setgroups32(0, []) = 0
10835 15:02:05.116015 chdir("/usr/share/empty") = 0
10835 15:02:05.116045 chroot(".")       = 0
10835 15:02:05.116070 capset(NULL, NULL) = -1 EFAULT (Bad address)
10835 15:02:05.116101 prctl(0x8, 0, 0xbfdd5078, 0x80549a6, 0xbfdd5060) = 0
10835 15:02:05.116127 prctl(0x8, 0x1, 0xbfdd5078, 0x8054a49, 0xbfdd5060) = 0
10835 15:02:05.116152 setgid32(65534)   = 0
10835 15:02:05.116175 setuid32(65534)   = 0
10835 15:02:05.116198 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
10835 15:02:05.116230 read(4, "\n", 1)  = 1
10835 15:02:05.116262 write(4, "\1", 1) = 1
10837 15:02:05.116289 <... read resumed> "\1", 1) = 1
10837 15:02:05.116307 write(5, "\f", 1) = 1
10837 15:02:05.116331 read(5,  <unfinished ...>
10835 15:02:05.116347 read(4, "\f", 1)  = 1
10835 15:02:05.116400 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
10835 15:02:05.116435 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10835 15:02:05.116463 gettimeofday({1495652525, 116472}, NULL) = 0
10835 15:02:05.116501 bind(5, {sa_family=AF_INET, sin_port=htons(41810), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
10835 15:02:05.116539 listen(5, 1)      = 0
10835 15:02:05.116569 write(4, "R\243\0\0", 4) = 4
10837 15:02:05.116597 <... read resumed> "R\243\0\0", 4) = 4
10837 15:02:05.116630 write(0, "227 Entering Passive Mode (127,0,0,1,163,82).\r\n", 47) = 47
10837 15:02:05.116922 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.116967 alarm(300)        = 300
10837 15:02:05.116996 recv(0, "STOR myfile9\r\n", 4096, MSG_PEEK) = 14
10837 15:02:05.117026 read(0, "STOR myfile9\r\n", 14) = 14
10837 15:02:05.117066 write(5, "\v", 1) = 1
10837 15:02:05.117115 read(5,  <unfinished ...>
10835 15:02:05.117140 read(4, "\v", 1)  = 1
10835 15:02:05.117170 write(4, "\1\0\0\0", 4) = 4
10837 15:02:05.117199 <... read resumed> "\1\0\0\0", 4) = 4
10837 15:02:05.117223 gettimeofday({1495652525, 117233}, NULL) = 0
10837 15:02:05.117251 getcwd("/home/msfadmin", 4096) = 15
10837 15:02:05.117283 open("myfile9", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
10837 15:02:05.117309 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
10837 15:02:05.117372 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
10837 15:02:05.117393 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
10837 15:02:05.117409 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdd4fc4) = 0
10837 15:02:05.117438 ftruncate64(4, 0) = 0
10837 15:02:05.117469 _llseek(4, 0, [0], SEEK_SET) = 0
10837 15:02:05.117487 write(5, "\v", 1) = 1
10837 15:02:05.117505 read(5,  <unfinished ...>
10835 15:02:05.117517 read(4, "\v", 1)  = 1
10835 15:02:05.117536 write(4, "\1\0\0\0", 4) = 4
10837 15:02:05.117553 <... read resumed> "\1\0\0\0", 4) = 4
10837 15:02:05.117565 write(5, "\v", 1) = 1
10837 15:02:05.117581 read(5,  <unfinished ...>
10835 15:02:05.117592 read(4, "\v", 1)  = 1
10835 15:02:05.117609 write(4, "\1\0\0\0", 4) = 4
10837 15:02:05.117625 <... read resumed> "\1\0\0\0", 4) = 4
10837 15:02:05.117637 write(5, "\r", 1) = 1
10837 15:02:05.117653 read(5,  <unfinished ...>
10835 15:02:05.117664 read(4, "\r", 1)  = 1
10835 15:02:05.117684 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
10835 15:02:05.117713 accept(5, {sa_family=AF_INET, sin_port=htons(56317), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
10835 15:02:05.117750 write(4, "\1", 1) = 1
10837 15:02:05.117767 <... read resumed> "\1", 1) = 1
10837 15:02:05.117783 recvmsg(5,  <unfinished ...>
10835 15:02:05.117798 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10837 15:02:05.117826 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10837 15:02:05.117866 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
10837 15:02:05.117888 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
10837 15:02:05.117907 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
10837 15:02:05.117926 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.117948 alarm(300)        = 300
10837 15:02:05.117970 write(0, "150 Ok to send data.\r\n", 22) = 22
10837 15:02:05.118093 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7db3000
10837 15:02:05.118117 mprotect(0xb7dc5000, 4096, PROT_NONE) = 0
10837 15:02:05.118137 mprotect(0xb7db3000, 4096, PROT_NONE) = 0
10837 15:02:05.118153 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
10837 15:02:05.118175 write(4, "assasaaa\na\na\na\na\n", 17) = 17
10837 15:02:05.118201 read(6, "", 65536) = 0
10837 15:02:05.118218 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.118240 alarm(300)        = 300
10837 15:02:05.118256 close(6)          = 0
10837 15:02:05.118271 alarm(0)          = 300
10837 15:02:05.118286 gettimeofday({1495652525, 118292}, NULL) = 0
10837 15:02:05.118317 getpid()          = 10837
10837 15:02:05.118360 gettimeofday({1495652525, 118371}, NULL) = 0
10837 15:02:05.118397 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdd4f64) = 0
10837 15:02:05.118422 write(3, "Wed May 24 15:02:05 2017 [pid 10837] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile9\", 17 bytes, 14.59Kbyte/sec\n", 130) = 130
10837 15:02:05.118455 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfdd4f6c) = 0
10837 15:02:05.118479 write(0, "226 Transfer complete.\r\n", 24) = 24
10837 15:02:05.118553 write(5, "\n", 1) = 1
10837 15:02:05.118573 read(5,  <unfinished ...>
10835 15:02:05.118584 close(6)          = 0
10835 15:02:05.118615 read(4, "\n", 1)  = 1
10835 15:02:05.118634 close(5)          = 0
10835 15:02:05.118651 write(4, "\1", 1) = 1
10837 15:02:05.118668 <... read resumed> "\1", 1) = 1
10837 15:02:05.118680 close(4)          = 0
10837 15:02:05.118698 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10837 15:02:05.118720 alarm(300)        = 0
