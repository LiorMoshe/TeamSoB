14636 15:40:39.499269 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
14636 15:40:39.499444 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
14636 15:40:39.499479 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d7d000
14636 15:40:39.499503 mmap2(0xb7d88000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d88000
14636 15:40:39.499537 mmap2(0xb7d89000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d89000
14636 15:40:39.499560 close(7)          = 0
14636 15:40:39.499587 open("/etc/ld.so.cache", O_RDONLY) = 7
14636 15:40:39.499612 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
14636 15:40:39.499645 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d75000
14636 15:40:39.499666 close(7)          = 0
14636 15:40:39.499688 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14636 15:40:39.499728 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
14636 15:40:39.499753 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
14636 15:40:39.499905 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
14636 15:40:39.499936 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d43000
14636 15:40:39.499955 mmap2(0xb7d4c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d4c000
14636 15:40:39.499979 mmap2(0xb7d4e000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d4e000
14636 15:40:39.500004 close(7)          = 0
14636 15:40:39.500025 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
14636 15:40:39.500049 open("/lib/libselinux.so.1", O_RDONLY) = 7
14636 15:40:39.500069 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
14636 15:40:39.500234 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
14636 15:40:39.500265 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d2a000
14636 15:40:39.500285 mmap2(0xb7d41000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d41000
14636 15:40:39.500313 close(7)          = 0
14636 15:40:39.500483 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14636 15:40:39.500526 statfs64("/selinux", 84, 0xbffac24c) = -1 ENOENT (No such file or directory)
14636 15:40:39.500547 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
14636 15:40:39.500603 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
14636 15:40:39.500633 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f46000
14636 15:40:39.500652 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
14636 15:40:39.500788 read(7, "", 1024) = 0
14636 15:40:39.500805 close(7)          = 0
14636 15:40:39.500822 munmap(0xb7f46000, 4096) = 0
14636 15:40:39.500848 munmap(0xb7d75000, 29913) = 0
14636 15:40:39.500871 read(6, "", 4096) = 0
14636 15:40:39.500889 close(6)          = 0
14636 15:40:39.500905 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.500923 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.500962 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.500985 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14636 15:40:39.501012 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.501033 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14636 15:40:39.501804 read(6, "", 4096) = 0
14636 15:40:39.501823 close(6)          = 0
14636 15:40:39.501839 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.501859 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.501890 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.501912 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14636 15:40:39.501939 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.501957 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14636 15:40:39.502025 read(6, "", 4096) = 0
14636 15:40:39.502042 close(6)          = 0
14636 15:40:39.502057 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.502074 read(5, "", 4096) = 0
14636 15:40:39.502090 close(5)          = 0
14636 15:40:39.502105 munmap(0xb7f4d000, 4096) = 0
14636 15:40:39.502123 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
14636 15:40:39.502144 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
14636 15:40:39.502171 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4d000
14636 15:40:39.502188 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
14636 15:40:39.502278 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.502310 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.502332 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
14636 15:40:39.502359 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.502377 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
14636 15:40:39.502453 read(6, "", 4096) = 0
14636 15:40:39.502470 close(6)          = 0
14636 15:40:39.502486 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.502504 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.502535 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.502558 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
14636 15:40:39.502591 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.502608 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
14636 15:40:39.502674 read(6, "", 4096) = 0
14636 15:40:39.502690 close(6)          = 0
14636 15:40:39.502706 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.502736 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.502772 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.502794 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
14636 15:40:39.502820 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.502841 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
14636 15:40:39.503033 read(6, "", 4096) = 0
14636 15:40:39.503050 close(6)          = 0
14636 15:40:39.503066 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.503084 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
14636 15:40:39.503114 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
14636 15:40:39.503135 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
14636 15:40:39.503161 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f47000
14636 15:40:39.503178 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
14636 15:40:39.503366 read(6, "", 4096) = 0
14636 15:40:39.503384 close(6)          = 0
14636 15:40:39.503399 munmap(0xb7f47000, 4096) = 0
14636 15:40:39.503417 read(5, "", 4096) = 0
14636 15:40:39.503433 close(5)          = 0
14636 15:40:39.503448 munmap(0xb7f4d000, 4096) = 0
14636 15:40:39.503469 time(NULL)        = 1495654839
14636 15:40:39.503488 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14636 15:40:39.503529 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
14636 15:40:39.503549 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
14636 15:40:39.503576 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4d000
14636 15:40:39.503593 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
14636 15:40:39.503628 read(5, "", 4096) = 0
14636 15:40:39.503644 close(5)          = 0
14636 15:40:39.503660 munmap(0xb7f4d000, 4096) = 0
14636 15:40:39.503687 getuid32()        = 0
14636 15:40:39.503715 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.503739 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.503758 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14636 15:40:39.503784 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.503804 _llseek(5, 1624, [1624], SEEK_SET) = 0
14636 15:40:39.503852 munmap(0xb7f4d000, 1624) = 0
14636 15:40:39.503871 close(5)          = 0
14636 15:40:39.503914 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.503943 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.503961 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14636 15:40:39.503988 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.504006 _llseek(5, 1233, [1233], SEEK_SET) = 0
14636 15:40:39.504038 munmap(0xb7f4d000, 1233) = 0
14636 15:40:39.504055 close(5)          = 0
14636 15:40:39.504086 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.504108 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.504125 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14636 15:40:39.504151 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.504169 _llseek(5, 1624, [1624], SEEK_SET) = 0
14636 15:40:39.504195 munmap(0xb7f4d000, 1624) = 0
14636 15:40:39.504211 close(5)          = 0
14636 15:40:39.504232 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.504253 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.504270 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14636 15:40:39.504296 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.504313 _llseek(5, 1233, [1233], SEEK_SET) = 0
14636 15:40:39.504367 munmap(0xb7f4d000, 1233) = 0
14636 15:40:39.504392 close(5)          = 0
14636 15:40:39.504784 getuid32()        = 0
14636 15:40:39.504803 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.504840 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.504859 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14636 15:40:39.504886 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.504904 _llseek(5, 1624, [1624], SEEK_SET) = 0
14636 15:40:39.504930 munmap(0xb7f4d000, 1624) = 0
14636 15:40:39.504947 close(5)          = 0
14636 15:40:39.504969 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.504991 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.505008 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
14636 15:40:39.505034 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.505051 _llseek(5, 1233, [1233], SEEK_SET) = 0
14636 15:40:39.505078 munmap(0xb7f4d000, 1233) = 0
14636 15:40:39.505094 close(5)          = 0
14636 15:40:39.505113 time(NULL)        = 1495654839
14636 15:40:39.505139 munmap(0xb7f4a000, 12164) = 0
14636 15:40:39.505160 munmap(0xb7f48000, 7136) = 0
14636 15:40:39.505184 munmap(0xb7d7d000, 95428) = 0
14636 15:40:39.505202 munmap(0xb7d43000, 201052) = 0
14636 15:40:39.505222 munmap(0xb7d2a000, 101180) = 0
14636 15:40:39.505251 gettimeofday({1495654839, 505258}, NULL) = 0
14636 15:40:39.505271 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbffae124) = -1 ENOENT (No such file or directory)
14636 15:40:39.505296 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
14636 15:40:39.505356 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbffae274) = 0
14636 15:40:39.505385 write(3, "Wed May 24 15:40:39 2017 [pid 14636] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
14636 15:40:39.505420 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbffae27c) = 0
14636 15:40:39.505442 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14636 15:40:39.505465 write(4, "\1", 1 <unfinished ...>
14637 15:40:39.505481 <... read resumed> "\1", 1) = 1
14636 15:40:39.505490 <... write resumed> ) = 1
14637 15:40:39.505503 exit_group(0)     = ?
14636 15:40:39.505561 --- SIGCHLD (Child exited) @ 0 (0) ---
14636 15:40:39.505574 sigreturn()       = ? (mask now [])
14636 15:40:39.505605 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14637
14636 15:40:39.505627 close(4)          = 0
14636 15:40:39.505646 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
14636 15:40:39.505669 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14636 15:40:39.505692 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14636 15:40:39.505714 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7db36f8) = 14638
14638 15:40:39.505798 prctl(0x1, 0x9, 0, 0, 0) = 0
14638 15:40:39.505843 close(4)          = 0
14638 15:40:39.505888 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14638 15:40:39.505917 _llseek(4, 0, [0], SEEK_CUR) = 0
14638 15:40:39.505944 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14638 15:40:39.505974 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4d000
14638 15:40:39.505994 _llseek(4, 1624, [1624], SEEK_SET) = 0
14638 15:40:39.506032 munmap(0xb7f4d000, 1624) = 0
14638 15:40:39.506051 close(4)          = 0
14638 15:40:39.506073 getuid32()        = 0
14638 15:40:39.506090 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
14638 15:40:39.506111 _llseek(4, 0, [0], SEEK_CUR) = 0
14638 15:40:39.506132 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14638 15:40:39.506161 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4d000
14638 15:40:39.506179 _llseek(4, 1624, [1624], SEEK_SET) = 0
14638 15:40:39.506209 munmap(0xb7f4d000, 1624) = 0
14638 15:40:39.506226 close(4)          = 0
14638 15:40:39.506270 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
14638 15:40:39.506320 read(4, "65536\n", 31) = 6
14638 15:40:39.506342 close(4)          = 0
14638 15:40:39.506366 socket(PF_FILE, SOCK_STREAM, 0) = 4
14638 15:40:39.506386 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14638 15:40:39.506404 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14638 15:40:39.506440 close(4)          = 0
14638 15:40:39.506458 socket(PF_FILE, SOCK_STREAM, 0) = 4
14638 15:40:39.506475 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14638 15:40:39.506494 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
14638 15:40:39.506526 close(4)          = 0
14638 15:40:39.506566 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
14638 15:40:39.506591 _llseek(4, 0, [0], SEEK_CUR) = 0
14638 15:40:39.506609 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14638 15:40:39.506636 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f4d000
14638 15:40:39.506655 _llseek(4, 886, [886], SEEK_SET) = 0
14638 15:40:39.506696 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
14638 15:40:39.506724 munmap(0xb7f4d000, 886) = 0
14638 15:40:39.506741 close(4)          = 0
14638 15:40:39.506758 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
14638 15:40:39.506785 geteuid32()       = 0
14638 15:40:39.506820 getegid32()       = 0
14638 15:40:39.506840 setregid32(-1, 1000) = 0
14638 15:40:39.506857 setreuid32(-1, 1000) = 0
14638 15:40:39.506875 chdir("/home/msfadmin") = 0
14638 15:40:39.506895 setreuid32(-1, 0) = 0
14638 15:40:39.506910 setregid32(-1, 0) = 0
14638 15:40:39.506928 setgid32(1000)    = 0
14638 15:40:39.506945 setuid32(1000)    = 0
14638 15:40:39.506962 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
14638 15:40:39.506984 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f4b000
14638 15:40:39.507010 mprotect(0xb7f4d000, 4096, PROT_NONE) = 0
14638 15:40:39.507030 mprotect(0xb7f4b000, 4096, PROT_NONE) = 0
14638 15:40:39.507048 getcwd("/home/msfadmin", 4096) = 15
14638 15:40:39.507071 umask(022)        = 077
14638 15:40:39.507091 getcwd("/home/msfadmin", 4096) = 15
14638 15:40:39.507113 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
14638 15:40:39.507150 write(0, "230 Login successful.\r\n", 23) = 23
14638 15:40:39.507254 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
14638 15:40:39.507282 alarm(300)        = 0
14638 15:40:39.507319 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f48000
14638 15:40:39.507338 mprotect(0xb7f4a000, 4096, PROT_NONE) = 0
14638 15:40:39.507357 mprotect(0xb7f48000, 4096, PROT_NONE) = 0
14638 15:40:39.507382 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
14638 15:40:39.507404 read(0, "QUIT\r\n", 6) = 6
14638 15:40:39.507429 shutdown(0, 0 /* receive */) = 0
14638 15:40:39.507449 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
14638 15:40:39.507466 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
14638 15:40:39.507482 write(0, "221 Goodbye.\r\n", 14) = 14
14638 15:40:39.507565 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
14638 15:40:39.507585 fcntl64(0, F_SETFL, O_RDWR) = 0
14638 15:40:39.507602 shutdown(0, 2 /* send and receive */) = 0
14638 15:40:39.507631 exit_group(0)     = ?
14636 15:40:39.507675 --- SIGCHLD (Child exited) @ 0 (0) ---
14636 15:40:39.507699 alarm(1)          = 0
14636 15:40:39.507719 sigreturn()       = ? (mask now [])
14636 15:40:39.507752 close(5)          = 0
14636 15:40:39.507775 getuid32()        = 0
14636 15:40:39.507816 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
14636 15:40:39.507842 _llseek(5, 0, [0], SEEK_CUR) = 0
14636 15:40:39.507862 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
14636 15:40:39.507892 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f4d000
14636 15:40:39.507912 _llseek(5, 1624, [1624], SEEK_SET) = 0
14636 15:40:39.507941 munmap(0xb7f4d000, 1624) = 0
14636 15:40:39.507963 close(5)          = 0
14636 15:40:39.507985 setgroups32(0, []) = 0
14636 15:40:39.508002 chdir("/usr/share/empty") = 0
14636 15:40:39.508023 chroot(".")       = 0
14636 15:40:39.508040 capset(NULL, NULL) = -1 EFAULT (Bad address)
14636 15:40:39.508061 prctl(0x8, 0, 0xbffae258, 0x80549a6, 0xbffae240) = 0
14636 15:40:39.508078 prctl(0x8, 0x1, 0xbffae258, 0x8054a49, 0xbffae240) = 0
14636 15:40:39.508095 setgid32(65534)   = 0
14636 15:40:39.508111 setuid32(65534)   = 0
14636 15:40:39.508127 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
14636 15:40:39.508150 read(4, "", 1)    = 0
14636 15:40:39.508167 alarm(0)          = 1
14636 15:40:39.508183 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 14638
14636 15:40:39.508205 exit_group(0)     = ?
4439  15:40:39.508266 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:40:39.508273 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:40:39.508273 write(4, "\21", 1) = 1
4439  15:40:39.508273 sigreturn()       = ? (mask now [])
4439  15:40:39.508273 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:40:39.508274 ioctl(3, FIONREAD, [1]) = 0
4439  15:40:39.508274 read(3, "\21", 1) = 1
4439  15:40:39.508274 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 14636
4439  15:40:39.508274 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:40:39.508275 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:40:39.508275 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:40:40.039729 accept(5, {sa_family=AF_INET, sin_port=htons(50846), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:40:40.040243 time(NULL)        = 1495654840
4439  15:40:40.040365 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 14639
14639 15:40:40.040902 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
14639 15:40:40.040982 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
14639 15:40:40.041060 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
14639 15:40:40.041136 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
14639 15:40:40.041231 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
14639 15:40:40.041291 close(3)          = 0
14639 15:40:40.041333 close(4)          = 0
14639 15:40:40.041375 open("/dev/null", O_RDONLY) = 3
14639 15:40:40.041438 dup2(3, 0)        = 0
14639 15:40:40.041479 dup2(3, 1)        = 1
14639 15:40:40.041517 dup2(3, 2)        = 2
14639 15:40:40.041567 close(3)          = 0
14639 15:40:40.041617 setgid32(0)       = 0
14639 15:40:40.041670 setgroups32(0, []) = 0
14639 15:40:40.041809 setuid32(0)       = 0
14639 15:40:40.041906 getpriority(PRIO_PROCESS, 0) = 20
14639 15:40:40.041973 setpriority(PRIO_PROCESS, 0, 10) = 0
14639 15:40:40.042034 getpriority(PRIO_PROCESS, 0) = 10
14639 15:40:40.042359 getpeername(13, {sa_family=AF_INET, sin_port=htons(50846), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
14639 15:40:40.042574 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
14639 15:40:40.042747 open("/etc/hosts.allow", O_RDONLY) = 3
14639 15:40:40.042918 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
14639 15:40:40.043048 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
14639 15:40:40.043108 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
14639 15:40:40.043496 close(3)          = 0
14639 15:40:40.043704 munmap(0xb7f61000, 4096) = 0
14639 15:40:40.043818 fcntl64(13, F_SETFD, 0) = 0
