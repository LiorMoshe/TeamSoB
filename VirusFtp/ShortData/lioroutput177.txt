4439  14:42:34.720553 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL <unfinished ...>
8928  14:42:34.720628 prctl(0x1, 0x9, 0, 0, 0) = 0
8928  14:42:34.720656 close(4)          = 0
8928  14:42:34.720724 lstat64("/usr/share/empty", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8928  14:42:34.720770 getuid32()        = 0
8928  14:42:34.720811 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8928  14:42:34.720840 _llseek(4, 0, [0], SEEK_CUR) = 0
8928  14:42:34.720865 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8928  14:42:34.720901 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fcd000
8928  14:42:34.720922 _llseek(4, 1624, [1624], SEEK_SET) = 0
8928  14:42:34.720968 munmap(0xb7fcd000, 1624) = 0
8928  14:42:34.720998 close(4)          = 0
8928  14:42:34.721033 setgroups32(0, []) = 0
8928  14:42:34.721061 chdir("/usr/share/empty") = 0
8928  14:42:34.721096 chroot(".")       = 0
8928  14:42:34.721126 setrlimit(RLIMIT_NOFILE, {rlim_cur=0, rlim_max=0}) = 0
8928  14:42:34.721156 setgid32(65534)   = 0
8928  14:42:34.721182 setuid32(65534)   = 0
8928  14:42:34.721206 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
8928  14:42:34.721239 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8928  14:42:34.721277 alarm(300)        = 0
8928  14:42:34.721310 gettimeofday({1495651354, 721321}, NULL) = 0
8928  14:42:34.721343 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe66fd4) = -1 ENOENT (No such file or directory)
8928  14:42:34.721508 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 EMFILE (Too many open files)
8928  14:42:34.721586 getpid()          = 8928
8928  14:42:34.721626 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe67124) = 0
8928  14:42:34.721666 write(3, "Wed May 24 14:42:34 2017 [pid 8928] CONNECT: Client \"127.0.0.1\"\n", 64) = 64
8928  14:42:34.721707 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe6712c) = 0
8928  14:42:34.721748 write(0, "220 (vsFTPd 2.3.4)\r\n", 20) = 20
8928  14:42:34.721895 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8928  14:42:34.721935 alarm(300)        = 300
8928  14:42:34.721964 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcb000
8928  14:42:34.721995 mprotect(0xb7fcd000, 4096, PROT_NONE) = 0
8928  14:42:34.722025 mprotect(0xb7fcb000, 4096, PROT_NONE) = 0
8928  14:42:34.722057 recv(0, "USER msfadmin\r\n", 4096, MSG_PEEK) = 15
8928  14:42:34.722093 read(0, "USER msfadmin\r\n", 15) = 15
8928  14:42:34.722134 write(0, "331 Please specify the password.\r\n", 34) = 34
8928  14:42:34.722231 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8928  14:42:34.722271 alarm(300)        = 300
8928  14:42:34.722302 recv(0, "PASS msfadmin\r\n", 4096, MSG_PEEK) = 15
8928  14:42:34.722335 read(0, "PASS msfadmin\r\n", 15) = 15
8928  14:42:34.722371 write(5, "\1", 1) = 1
8928  14:42:34.722402 write(5, "\10\0\0\0", 4) = 4
8928  14:42:34.722426 write(5, "msfadmin", 8) = 8
8928  14:42:34.722445 write(5, "\10\0\0\0", 4) = 4
8928  14:42:34.722490 write(5, "msfadmin", 8) = 8
8928  14:42:34.722516 write(5, "\0\0\0\0", 4) = 4
8928  14:42:34.722535 write(5, "\0\0\0\0", 4) = 4
8928  14:42:34.722554 read(5,  <unfinished ...>
8927  14:42:34.722578 close(5)          = 0
8927  14:42:34.722597 read(4, "\1", 1)  = 1
8927  14:42:34.722619 read(4, "\10\0\0\0", 4) = 4
8927  14:42:34.722653 read(4, "msfadmin", 8) = 8
8927  14:42:34.722675 read(4, "\10\0\0\0", 4) = 4
8927  14:42:34.722695 read(4, "msfadmin", 8) = 8
8927  14:42:34.722715 read(4, "\0\0\0\0", 4) = 4
8927  14:42:34.722734 read(4, "\0\0\0\0", 4) = 4
8927  14:42:34.722784 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.722828 open("/etc/pam.d/ftp", O_RDONLY|O_LARGEFILE) = 5
8927  14:42:34.722856 fstat64(5, {st_mode=S_IFREG|0644, st_size=408, ...}) = 0
8927  14:42:34.722885 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcd000
8927  14:42:34.722916 read(5, "# Standard behaviour for ftpd(8).\nauth\trequired\tpam_listfile.so item=user sense=deny file=/etc/ftpusers onerr=succeed\n\n# This line is required by ftpd(8).\nauth\tsufficient\tpam_ftp.so\n\n# Uncomment this to achieve what used to be ftpd -A.\n#auth\trequired\tpam_listfile.so item=user sense=allow file=/etc/ftpchroot onerr=fail\n\n# Standard blurb.\n@include common-auth\n@include common-account\n@include common-session\n", 4096) = 408
8927  14:42:34.723002 open("/lib/security/pam_listfile.so", O_RDONLY) = 6
8927  14:42:34.723028 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\n\0\0004\0\0\0P \0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\36\0\0\24\36\0\0\5\0\0\0\0\20\0\0\1\0\0\0\24\36\0\0\24.\0\0\24.\0\0l\1\0\0p\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0(\36\0\0(.\0\0(.\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0003\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\33\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\0\0\0\0\23\0\0\0\17\0\0\0\34\0\0\0\2\0\0\0\16\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\20\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\35\0\0\0\n\0\0\0\1\0\0\0\t\0\0\0\0\0\0\0\22\0\0\0\26\0\0\0\v\0\0\0\4\0\0\0\7\0\0\0\5\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
8927  14:42:34.723173 fstat64(6, {st_mode=S_IFREG|0644, st_size=9272, ...}) = 0
8927  14:42:34.723204 mmap2(NULL, 12164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7fca000
8927  14:42:34.723224 mmap2(0xb7fcc000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1) = 0xb7fcc000
8927  14:42:34.723250 close(6)          = 0
8927  14:42:34.723311 open("/lib/security/pam_ftp.so", O_RDONLY) = 6
8927  14:42:34.723335 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\5\0\0004\0\0\0\264\f\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\n\0\0\240\n\0\0\5\0\0\0\0\20\0\0\1\0\0\0\240\n\0\0\240\32\0\0\240\32\0\0<\1\0\0@\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274\n\0\0\274\32\0\0\274\32\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\30\0\0\0\16\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\4\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\6\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\10\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\f\0\0\0\1\0\0\0\5\0\0\0\1H@\0\f\0\0\0\r\0\0\0\301\225Y\346\313\306\36\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\354\2\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0c\0\0\0\0\0\0\0;\0\0\0\22\0\0\0\225\0\0\0\0\0\0\0.\3\0\0\22\0\0\0y\0\0\0\0\0\0\0\343\0\0\0\22\0\0\0\216\0\0\0\0\0\0\0\22\1\0\0\22\0\0\0n\0\0\0\0\0\0\0", 512) = 512
8927  14:42:34.723504 fstat64(6, {st_mode=S_IFREG|0644, st_size=4292, ...}) = 0
8927  14:42:34.723537 mmap2(NULL, 7136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7fc8000
8927  14:42:34.723558 mmap2(0xb7fc9000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0) = 0xb7fc9000
8927  14:42:34.723582 close(6)          = 0
8927  14:42:34.723619 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.723654 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.723677 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
8927  14:42:34.723705 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.723724 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
8927  14:42:34.723810 open("/lib/security/pam_unix.so", O_RDONLY) = 7
8927  14:42:34.723834 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
8927  14:42:34.723976 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
8927  14:42:34.724006 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dfd000
8927  14:42:34.724026 mmap2(0xb7e08000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7e08000
8927  14:42:34.724052 mmap2(0xb7e09000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7e09000
8927  14:42:34.724071 close(7)          = 0
8927  14:42:34.724094 open("/etc/ld.so.cache", O_RDONLY) = 7
8927  14:42:34.724116 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
8927  14:42:34.724144 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7df5000
8927  14:42:34.724162 close(7)          = 0
8927  14:42:34.724181 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8927  14:42:34.724210 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
8927  14:42:34.724237 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
8927  14:42:34.724384 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
8927  14:42:34.724429 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dc3000
8927  14:42:34.724452 mmap2(0xb7dcc000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7dcc000
8927  14:42:34.724478 mmap2(0xb7dce000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7dce000
8927  14:42:34.724504 close(7)          = 0
8927  14:42:34.724533 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
8927  14:42:34.724558 open("/lib/libselinux.so.1", O_RDONLY) = 7
8927  14:42:34.724581 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
8927  14:42:34.724726 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
8927  14:42:34.724757 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7daa000
8927  14:42:34.724776 mmap2(0xb7dc1000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7dc1000
8927  14:42:34.724805 close(7)          = 0
8927  14:42:34.724893 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
8927  14:42:34.724893 statfs64("/selinux", 84, 0xbfe650fc) = -1 ENOENT (No such file or directory)
8927  14:42:34.724893 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
8927  14:42:34.724924 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
8927  14:42:34.724955 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc6000
8927  14:42:34.724975 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
8927  14:42:34.725134 read(7, "", 1024) = 0
8927  14:42:34.725155 close(7)          = 0
8927  14:42:34.725173 munmap(0xb7fc6000, 4096) = 0
8927  14:42:34.725200 munmap(0xb7df5000, 29913) = 0
8927  14:42:34.725225 read(6, "", 4096) = 0
8927  14:42:34.725244 close(6)          = 0
8927  14:42:34.725260 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.725280 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.725314 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.725338 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
8927  14:42:34.725366 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.725386 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8927  14:42:34.725460 read(6, "", 4096) = 0
8927  14:42:34.725478 close(6)          = 0
8927  14:42:34.725494 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.725513 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.725545 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.725568 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8927  14:42:34.725596 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.725614 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8927  14:42:34.725679 read(6, "", 4096) = 0
8927  14:42:34.725696 close(6)          = 0
8927  14:42:34.725712 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.725730 read(5, "", 4096) = 0
8927  14:42:34.725746 close(5)          = 0
8927  14:42:34.725762 munmap(0xb7fcd000, 4096) = 0
8927  14:42:34.725779 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
8927  14:42:34.725802 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
8927  14:42:34.725830 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcd000
8927  14:42:34.725849 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
8927  14:42:34.725923 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.725955 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.725977 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
8927  14:42:34.726004 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.726023 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
8927  14:42:34.726141 read(6, "", 4096) = 0
8927  14:42:34.726171 close(6)          = 0
8927  14:42:34.726194 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.726222 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.726274 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.726310 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
8927  14:42:34.726354 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.726383 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
8927  14:42:34.726475 read(6, "", 4096) = 0
8927  14:42:34.726495 close(6)          = 0
8927  14:42:34.726511 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.726538 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.726571 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.726595 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
8927  14:42:34.726623 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.726642 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
8927  14:42:34.726832 read(6, "", 4096) = 0
8927  14:42:34.726850 close(6)          = 0
8927  14:42:34.726866 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.726885 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
8927  14:42:34.726916 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
8927  14:42:34.726939 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
8927  14:42:34.726967 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc7000
8927  14:42:34.726985 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
8927  14:42:34.727065 read(6, "", 4096) = 0
8927  14:42:34.727084 close(6)          = 0
8927  14:42:34.727101 munmap(0xb7fc7000, 4096) = 0
8927  14:42:34.727119 read(5, "", 4096) = 0
8927  14:42:34.727135 close(5)          = 0
8927  14:42:34.727151 munmap(0xb7fcd000, 4096) = 0
8927  14:42:34.727174 time(NULL)        = 1495651354
8927  14:42:34.727194 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8927  14:42:34.727226 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
8927  14:42:34.727248 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
8927  14:42:34.727275 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcd000
8927  14:42:34.727294 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
8927  14:42:34.727329 read(5, "", 4096) = 0
8927  14:42:34.727346 close(5)          = 0
8927  14:42:34.727362 munmap(0xb7fcd000, 4096) = 0
8927  14:42:34.727388 getuid32()        = 0
8927  14:42:34.727417 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.727448 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.727469 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8927  14:42:34.727497 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.727517 _llseek(5, 1624, [1624], SEEK_SET) = 0
8927  14:42:34.727551 munmap(0xb7fcd000, 1624) = 0
8927  14:42:34.727570 close(5)          = 0
8927  14:42:34.727613 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.727644 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.727663 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8927  14:42:34.727691 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.727711 _llseek(5, 1233, [1233], SEEK_SET) = 0
8927  14:42:34.727744 munmap(0xb7fcd000, 1233) = 0
8927  14:42:34.727762 close(5)          = 0
8927  14:42:34.727795 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.727818 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.727836 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8927  14:42:34.727864 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.727882 _llseek(5, 1624, [1624], SEEK_SET) = 0
8927  14:42:34.727910 munmap(0xb7fcd000, 1624) = 0
8927  14:42:34.727927 close(5)          = 0
8927  14:42:34.727949 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.727971 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.727989 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8927  14:42:34.728032 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.728052 _llseek(5, 1233, [1233], SEEK_SET) = 0
8927  14:42:34.728082 munmap(0xb7fcd000, 1233) = 0
8927  14:42:34.728100 close(5)          = 0
8927  14:42:34.728490 getuid32()        = 0
8927  14:42:34.728508 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.728531 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.728550 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8927  14:42:34.728577 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.728596 _llseek(5, 1624, [1624], SEEK_SET) = 0
8927  14:42:34.728623 munmap(0xb7fcd000, 1624) = 0
8927  14:42:34.728640 close(5)          = 0
8927  14:42:34.728662 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.728684 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.728703 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
8927  14:42:34.728730 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.728749 _llseek(5, 1233, [1233], SEEK_SET) = 0
8927  14:42:34.728777 munmap(0xb7fcd000, 1233) = 0
8927  14:42:34.728794 close(5)          = 0
8927  14:42:34.728814 time(NULL)        = 1495651354
8927  14:42:34.728840 munmap(0xb7fca000, 12164) = 0
8927  14:42:34.728863 munmap(0xb7fc8000, 7136) = 0
8927  14:42:34.728887 munmap(0xb7dfd000, 95428) = 0
8927  14:42:34.728907 munmap(0xb7dc3000, 201052) = 0
8927  14:42:34.728926 munmap(0xb7daa000, 101180) = 0
8927  14:42:34.728955 gettimeofday({1495651354, 728964}, NULL) = 0
8927  14:42:34.728998 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe66fd4) = -1 ENOENT (No such file or directory)
8927  14:42:34.729026 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
8927  14:42:34.729073 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe67124) = 0
8927  14:42:34.729103 write(3, "Wed May 24 14:42:34 2017 [pid 8927] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 76) = 76
8927  14:42:34.729132 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe6712c) = 0
8927  14:42:34.729155 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8927  14:42:34.729180 write(4, "\1", 1 <unfinished ...>
8928  14:42:34.729198 <... read resumed> "\1", 1) = 1
8927  14:42:34.729208 <... write resumed> ) = 1
8928  14:42:34.729222 exit_group(0)     = ?
8927  14:42:34.729282 --- SIGCHLD (Child exited) @ 0 (0) ---
8927  14:42:34.729296 sigreturn()       = ? (mask now [])
8927  14:42:34.729327 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 8928
8927  14:42:34.729357 close(4)          = 0
8927  14:42:34.729378 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
8927  14:42:34.729404 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8927  14:42:34.729428 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8927  14:42:34.729452 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e336f8) = 8929
8929  14:42:34.729583 prctl(0x1, 0x9, 0, 0, 0) = 0
8929  14:42:34.729608 close(4)          = 0
8929  14:42:34.729657 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8929  14:42:34.729688 _llseek(4, 0, [0], SEEK_CUR) = 0
8929  14:42:34.729715 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8929  14:42:34.729747 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fcd000
8929  14:42:34.729768 _llseek(4, 1624, [1624], SEEK_SET) = 0
8929  14:42:34.729807 munmap(0xb7fcd000, 1624) = 0
8929  14:42:34.729828 close(4)          = 0
8929  14:42:34.729851 getuid32()        = 0
8929  14:42:34.729869 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
8929  14:42:34.729892 _llseek(4, 0, [0], SEEK_CUR) = 0
8929  14:42:34.729911 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8929  14:42:34.729960 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fcd000
8929  14:42:34.729981 _llseek(4, 1624, [1624], SEEK_SET) = 0
8929  14:42:34.730010 munmap(0xb7fcd000, 1624) = 0
8929  14:42:34.730028 close(4)          = 0
8929  14:42:34.730073 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
8929  14:42:34.730109 read(4, "65536\n", 31) = 6
8929  14:42:34.730131 close(4)          = 0
8929  14:42:34.730156 socket(PF_FILE, SOCK_STREAM, 0) = 4
8929  14:42:34.730178 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8929  14:42:34.730197 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8929  14:42:34.730234 close(4)          = 0
8929  14:42:34.730255 socket(PF_FILE, SOCK_STREAM, 0) = 4
8929  14:42:34.730273 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
8929  14:42:34.730291 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
8929  14:42:34.730322 close(4)          = 0
8929  14:42:34.730364 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
8929  14:42:34.730389 _llseek(4, 0, [0], SEEK_CUR) = 0
8929  14:42:34.730409 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8929  14:42:34.730437 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fcd000
8929  14:42:34.730458 _llseek(4, 886, [886], SEEK_SET) = 0
8929  14:42:34.730500 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
8929  14:42:34.730529 munmap(0xb7fcd000, 886) = 0
8929  14:42:34.730547 close(4)          = 0
8929  14:42:34.730564 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
8929  14:42:34.730593 geteuid32()       = 0
8929  14:42:34.730612 getegid32()       = 0
8929  14:42:34.730631 setregid32(-1, 1000) = 0
8929  14:42:34.730649 setreuid32(-1, 1000) = 0
8929  14:42:34.730667 chdir("/home/msfadmin") = 0
8929  14:42:34.730689 setreuid32(-1, 0) = 0
8929  14:42:34.730705 setregid32(-1, 0) = 0
8929  14:42:34.730723 setgid32(1000)    = 0
8929  14:42:34.730740 setuid32(1000)    = 0
8929  14:42:34.730758 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
8929  14:42:34.730781 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcb000
8929  14:42:34.730801 mprotect(0xb7fcd000, 4096, PROT_NONE) = 0
8929  14:42:34.730821 mprotect(0xb7fcb000, 4096, PROT_NONE) = 0
8929  14:42:34.730840 getcwd("/home/msfadmin", 4096) = 15
8929  14:42:34.730863 umask(022)        = 077
8929  14:42:34.730881 getcwd("/home/msfadmin", 4096) = 15
8929  14:42:34.730920 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
8929  14:42:34.730962 write(0, "230 Login successful.\r\n", 23) = 23
8929  14:42:34.731122 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8929  14:42:34.731152 alarm(300)        = 0
8929  14:42:34.731172 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fc8000
8929  14:42:34.731198 mprotect(0xb7fca000, 4096, PROT_NONE) = 0
8929  14:42:34.731218 mprotect(0xb7fc8000, 4096, PROT_NONE) = 0
8929  14:42:34.731240 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
8929  14:42:34.731263 read(0, "TYPE I\r\n", 8) = 8
8929  14:42:34.731292 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
8929  14:42:34.731357 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
8929  14:42:34.731383 alarm(300)        = 300
8929  14:42:34.731403 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
8929  14:42:34.731423 read(0, "PASV\r\n", 6) = 6
8929  14:42:34.731444 write(5, "\n", 1) = 1
8929  14:42:34.731463 read(5,  <unfinished ...>
8927  14:42:34.731485 close(5)          = 0
8927  14:42:34.731508 getuid32()        = 0
8927  14:42:34.731534 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
8927  14:42:34.731559 _llseek(5, 0, [0], SEEK_CUR) = 0
8927  14:42:34.731581 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
8927  14:42:34.731612 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fcd000
8927  14:42:34.731632 _llseek(5, 1624, [1624], SEEK_SET) = 0
8927  14:42:34.731662 munmap(0xb7fcd000, 1624) = 0
8927  14:42:34.731683 close(5)          = 0
8927  14:42:34.731710 setgroups32(0, []) = 0
8927  14:42:34.731729 chdir("/usr/share/empty") = 0
8927  14:42:34.731752 chroot(".")       = 0
8927  14:42:34.731771 capset(NULL, NULL) = -1 EFAULT (Bad address)
8927  14:42:34.731793 prctl(0x8, 0, 0xbfe67108, 0x80549a6, 0xbfe670f0) = 0
