15256 15:47:13.371153 statfs64("/selinux", 84, 0xbff75a0c) = -1 ENOENT (No such file or directory)
15256 15:47:13.371195 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
15256 15:47:13.371257 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
15256 15:47:13.371305 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15256 15:47:13.371343 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
15256 15:47:13.371522 read(7, "", 1024) = 0
15256 15:47:13.371556 close(7)          = 0
15256 15:47:13.371590 munmap(0xb7f5f000, 4096) = 0
15256 15:47:13.371642 munmap(0xb7d8e000, 29913) = 0
15256 15:47:13.371676 read(6, "", 4096) = 0
15256 15:47:13.371706 close(6)          = 0
15256 15:47:13.371732 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.371761 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.371805 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.371845 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15256 15:47:13.371884 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.371916 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15256 15:47:13.371995 read(6, "", 4096) = 0
15256 15:47:13.372006 close(6)          = 0
15256 15:47:13.372006 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.372006 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.372006 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.372006 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15256 15:47:13.372006 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.372006 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15256 15:47:13.372006 read(6, "", 4096) = 0
15256 15:47:13.372006 close(6)          = 0
15256 15:47:13.372006 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.372006 read(5, "", 4096) = 0
15256 15:47:13.372481 close(5)          = 0
15256 15:47:13.372515 munmap(0xb7f66000, 4096) = 0
15256 15:47:13.372545 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15256 15:47:13.372579 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15256 15:47:13.372618 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f66000
15256 15:47:13.372646 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15256 15:47:13.372734 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.372776 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.372808 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15256 15:47:13.372867 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.372899 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15256 15:47:13.372988 read(6, "", 4096) = 0
15256 15:47:13.373017 close(6)          = 0
15256 15:47:13.373044 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.373073 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.373115 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.373148 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15256 15:47:13.373185 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.373214 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15256 15:47:13.373297 read(6, "", 4096) = 0
15256 15:47:13.373324 close(6)          = 0
15256 15:47:13.373350 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.373379 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.373421 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.373454 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15256 15:47:13.373490 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.373519 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15256 15:47:13.373720 read(6, "", 4096) = 0
15256 15:47:13.373769 close(6)          = 0
15256 15:47:13.373795 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.373846 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15256 15:47:13.373889 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15256 15:47:13.373921 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15256 15:47:13.373959 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15256 15:47:13.373988 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15256 15:47:13.374064 read(6, "", 4096) = 0
15256 15:47:13.374091 close(6)          = 0
15256 15:47:13.374117 munmap(0xb7f60000, 4096) = 0
15256 15:47:13.374146 read(5, "", 4096) = 0
15256 15:47:13.374172 close(5)          = 0
15256 15:47:13.374197 munmap(0xb7f66000, 4096) = 0
15256 15:47:13.374230 time(NULL)        = 1495655233
15256 15:47:13.374261 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15256 15:47:13.374302 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15256 15:47:13.374332 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15256 15:47:13.374375 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f66000
15256 15:47:13.374404 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15256 15:47:13.374450 read(5, "", 4096) = 0
15256 15:47:13.374476 close(5)          = 0
15256 15:47:13.374502 munmap(0xb7f66000, 4096) = 0
15256 15:47:13.374539 getuid32()        = 0
15256 15:47:13.374578 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.374615 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.374644 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15256 15:47:13.374682 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.374712 _llseek(5, 1624, [1624], SEEK_SET) = 0
15256 15:47:13.374755 munmap(0xb7f66000, 1624) = 0
15256 15:47:13.374803 close(5)          = 0
15256 15:47:13.374859 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.374901 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.374929 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15256 15:47:13.374966 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.374996 _llseek(5, 1233, [1233], SEEK_SET) = 0
15256 15:47:13.375038 munmap(0xb7f66000, 1233) = 0
15256 15:47:13.375066 close(5)          = 0
15256 15:47:13.375108 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.375141 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.375169 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15256 15:47:13.375206 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.375235 _llseek(5, 1624, [1624], SEEK_SET) = 0
15256 15:47:13.375271 munmap(0xb7f66000, 1624) = 0
15256 15:47:13.375298 close(5)          = 0
15256 15:47:13.375330 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.375362 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.375390 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15256 15:47:13.375427 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.375455 _llseek(5, 1233, [1233], SEEK_SET) = 0
15256 15:47:13.375493 munmap(0xb7f66000, 1233) = 0
15256 15:47:13.375519 close(5)          = 0
15256 15:47:13.375938 getuid32()        = 0
15256 15:47:13.375971 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.376005 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.376033 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15256 15:47:13.376071 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.376099 _llseek(5, 1624, [1624], SEEK_SET) = 0
15256 15:47:13.376137 munmap(0xb7f66000, 1624) = 0
15256 15:47:13.376164 close(5)          = 0
15256 15:47:13.376197 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.376229 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.376256 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15256 15:47:13.376293 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.376322 _llseek(5, 1233, [1233], SEEK_SET) = 0
15256 15:47:13.376359 munmap(0xb7f66000, 1233) = 0
15256 15:47:13.376386 close(5)          = 0
15256 15:47:13.376416 time(NULL)        = 1495655233
15256 15:47:13.376452 munmap(0xb7f63000, 12164) = 0
15256 15:47:13.376485 munmap(0xb7f61000, 7136) = 0
15256 15:47:13.376519 munmap(0xb7d96000, 95428) = 0
15256 15:47:13.376549 munmap(0xb7d5c000, 201052) = 0
15256 15:47:13.376578 munmap(0xb7d43000, 101180) = 0
15256 15:47:13.376617 gettimeofday({1495655233, 376634}, NULL) = 0
15256 15:47:13.376658 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbff778e4) = -1 ENOENT (No such file or directory)
15256 15:47:13.376695 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15256 15:47:13.376778 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77a34) = 0
15256 15:47:13.376819 write(3, "Wed May 24 15:47:13 2017 [pid 15256] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15256 15:47:13.376859 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77a3c) = 0
15256 15:47:13.376899 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15256 15:47:13.376935 write(4, "\1", 1 <unfinished ...>
15257 15:47:13.376964 <... read resumed> "\1", 1) = 1
15256 15:47:13.376984 <... write resumed> ) = 1
15257 15:47:13.377008 exit_group(0)     = ?
15256 15:47:13.377076 --- SIGCHLD (Child exited) @ 0 (0) ---
15256 15:47:13.377100 sigreturn()       = ? (mask now [])
15256 15:47:13.377142 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15257
15256 15:47:13.377175 close(4)          = 0
15256 15:47:13.377206 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15256 15:47:13.377241 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15256 15:47:13.377275 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15256 15:47:13.377309 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dcc6f8) = 15258
15258 15:47:13.377421 prctl(0x1, 0x9, 0, 0, 0) = 0
15258 15:47:13.377456 close(4)          = 0
15258 15:47:13.377512 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15258 15:47:13.377553 _llseek(4, 0, [0], SEEK_CUR) = 0
15258 15:47:13.377590 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15258 15:47:13.377632 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f66000
15258 15:47:13.377663 _llseek(4, 1624, [1624], SEEK_SET) = 0
15258 15:47:13.377739 munmap(0xb7f66000, 1624) = 0
15258 15:47:13.377769 close(4)          = 0
15258 15:47:13.377802 getuid32()        = 0
15258 15:47:13.377831 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15258 15:47:13.377864 _llseek(4, 0, [0], SEEK_CUR) = 0
15258 15:47:13.377892 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15258 15:47:13.377930 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f66000
15258 15:47:13.377959 _llseek(4, 1624, [1624], SEEK_SET) = 0
15258 15:47:13.377996 munmap(0xb7f66000, 1624) = 0
15258 15:47:13.378023 close(4)          = 0
15258 15:47:13.378078 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15258 15:47:13.378123 read(4, "65536\n", 31) = 6
15258 15:47:13.378154 close(4)          = 0
15258 15:47:13.378190 socket(PF_FILE, SOCK_STREAM, 0) = 4
15258 15:47:13.378220 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15258 15:47:13.378249 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15258 15:47:13.378296 close(4)          = 0
15258 15:47:13.378326 socket(PF_FILE, SOCK_STREAM, 0) = 4
15258 15:47:13.378354 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15258 15:47:13.378382 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15258 15:47:13.378424 close(4)          = 0
15258 15:47:13.378475 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15258 15:47:13.378510 _llseek(4, 0, [0], SEEK_CUR) = 0
15258 15:47:13.378538 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15258 15:47:13.378577 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f66000
15258 15:47:13.378605 _llseek(4, 886, [886], SEEK_SET) = 0
15258 15:47:13.378694 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15258 15:47:13.378739 munmap(0xb7f66000, 886) = 0
15258 15:47:13.378787 close(4)          = 0
15258 15:47:13.378815 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15258 15:47:13.378855 geteuid32()       = 0
15258 15:47:13.378884 getegid32()       = 0
15258 15:47:13.378913 setregid32(-1, 1000) = 0
15258 15:47:13.378941 setreuid32(-1, 1000) = 0
15258 15:47:13.378969 chdir("/home/msfadmin") = 0
15258 15:47:13.379000 setreuid32(-1, 0) = 0
15258 15:47:13.379026 setregid32(-1, 0) = 0
15258 15:47:13.379054 setgid32(1000)    = 0
15258 15:47:13.379081 setuid32(1000)    = 0
15258 15:47:13.379109 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15258 15:47:13.379143 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f64000
15258 15:47:13.379173 mprotect(0xb7f66000, 4096, PROT_NONE) = 0
15258 15:47:13.379204 mprotect(0xb7f64000, 4096, PROT_NONE) = 0
15258 15:47:13.379240 getcwd("/home/msfadmin", 4096) = 15
15258 15:47:13.379273 umask(022)        = 077
15258 15:47:13.379302 getcwd("/home/msfadmin", 4096) = 15
15258 15:47:13.379335 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15258 15:47:13.379386 write(0, "230 Login successful.\r\n", 23) = 23
15258 15:47:13.379583 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15258 15:47:13.379656 alarm(300)        = 0
15258 15:47:13.379710 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
15258 15:47:13.379740 mprotect(0xb7f63000, 4096, PROT_NONE) = 0
15258 15:47:13.379771 mprotect(0xb7f61000, 4096, PROT_NONE) = 0
15258 15:47:13.379805 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15258 15:47:13.379837 read(0, "TYPE I\r\n", 8) = 8
15258 15:47:13.379878 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15258 15:47:13.379984 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15258 15:47:13.380022 alarm(300)        = 300
15258 15:47:13.380073 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15258 15:47:13.380103 read(0, "PASV\r\n", 6) = 6
15258 15:47:13.380134 write(5, "\n", 1) = 1
15258 15:47:13.380163 read(5,  <unfinished ...>
15256 15:47:13.380195 close(5)          = 0
15256 15:47:13.380227 getuid32()        = 0
15256 15:47:13.380263 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15256 15:47:13.380299 _llseek(5, 0, [0], SEEK_CUR) = 0
15256 15:47:13.380331 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15256 15:47:13.380371 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f66000
15256 15:47:13.380401 _llseek(5, 1624, [1624], SEEK_SET) = 0
15256 15:47:13.380442 munmap(0xb7f66000, 1624) = 0
15256 15:47:13.380472 close(5)          = 0
15256 15:47:13.380509 setgroups32(0, []) = 0
15256 15:47:13.380540 chdir("/usr/share/empty") = 0
15256 15:47:13.380571 chroot(".")       = 0
15256 15:47:13.380741 capset(NULL, NULL) = -1 EFAULT (Bad address)
15256 15:47:13.380774 prctl(0x8, 0, 0xbff77a18, 0x80549a6, 0xbff77a00) = 0
15256 15:47:13.380804 prctl(0x8, 0x1, 0xbff77a18, 0x8054a49, 0xbff77a00) = 0
15256 15:47:13.380831 setgid32(65534)   = 0
15256 15:47:13.380858 setuid32(65534)   = 0
15256 15:47:13.380885 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15256 15:47:13.380919 read(4, "\n", 1)  = 1
15256 15:47:13.380952 write(4, "\1", 1) = 1
15258 15:47:13.380981 <... read resumed> "\1", 1) = 1
15258 15:47:13.381005 write(5, "\f", 1) = 1
15258 15:47:13.381033 read(5,  <unfinished ...>
15256 15:47:13.381054 read(4, "\f", 1)  = 1
15256 15:47:13.381086 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15256 15:47:13.381120 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15256 15:47:13.381150 gettimeofday({1495655233, 381167}, NULL) = 0
15256 15:47:13.381200 bind(5, {sa_family=AF_INET, sin_port=htons(48618), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15256 15:47:13.381237 listen(5, 1)      = 0
15256 15:47:13.381269 write(4, "\352\275\0\0", 4) = 4
15258 15:47:13.381298 <... read resumed> "\352\275\0\0", 4) = 4
15258 15:47:13.381333 write(0, "227 Entering Passive Mode (127,0,0,1,189,234).\r\n", 48) = 48
15258 15:47:13.381591 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15258 15:47:13.381630 alarm(300)        = 300
15258 15:47:13.381685 recv(0, "STOR myfile26\r\n", 4096, MSG_PEEK) = 15
15258 15:47:13.381717 read(0, "STOR myfile26\r\n", 15) = 15
15258 15:47:13.381754 write(5, "\v", 1) = 1
15258 15:47:13.381783 read(5,  <unfinished ...>
15256 15:47:13.381805 read(4, "\v", 1)  = 1
15256 15:47:13.381835 write(4, "\1\0\0\0", 4) = 4
15258 15:47:13.381863 <... read resumed> "\1\0\0\0", 4) = 4
15258 15:47:13.381888 gettimeofday({1495655233, 381905}, NULL) = 0
15258 15:47:13.381928 getcwd("/home/msfadmin", 4096) = 15
15258 15:47:13.381960 open("myfile26", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15258 15:47:13.381994 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15258 15:47:13.382006 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15258 15:47:13.382006 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15258 15:47:13.382006 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77964) = 0
15258 15:47:13.382006 ftruncate64(4, 0) = 0
15258 15:47:13.382006 _llseek(4, 0, [0], SEEK_SET) = 0
15258 15:47:13.382006 write(5, "\v", 1) = 1
15258 15:47:13.382006 read(5,  <unfinished ...>
15256 15:47:13.382006 read(4, "\v", 1)  = 1
15256 15:47:13.382006 write(4, "\1\0\0\0", 4) = 4
15258 15:47:13.382006 <... read resumed> "\1\0\0\0", 4) = 4
15258 15:47:13.382006 write(5, "\v", 1) = 1
15258 15:47:13.382006 read(5,  <unfinished ...>
15256 15:47:13.382006 read(4, "\v", 1)  = 1
15256 15:47:13.382472 write(4, "\1\0\0\0", 4) = 4
15258 15:47:13.382527 <... read resumed> "\1\0\0\0", 4) = 4
15258 15:47:13.382551 write(5, "\r", 1) = 1
15258 15:47:13.382578 read(5,  <unfinished ...>
15256 15:47:13.382648 read(4, "\r", 1)  = 1
15256 15:47:13.382684 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15256 15:47:13.382725 accept(5, {sa_family=AF_INET, sin_port=htons(36759), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15256 15:47:13.382773 write(4, "\1", 1) = 1
15258 15:47:13.382803 <... read resumed> "\1", 1) = 1
15258 15:47:13.382829 recvmsg(5,  <unfinished ...>
15256 15:47:13.382855 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15258 15:47:13.382895 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15258 15:47:13.382928 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15258 15:47:13.382959 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15258 15:47:13.382990 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15258 15:47:13.383020 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15258 15:47:13.383053 alarm(300)        = 300
15258 15:47:13.383108 write(0, "150 Ok to send data.\r\n", 22) = 22
15258 15:47:13.383273 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d9b000
15258 15:47:13.383307 mprotect(0xb7dad000, 4096, PROT_NONE) = 0
15258 15:47:13.383338 mprotect(0xb7d9b000, 4096, PROT_NONE) = 0
15258 15:47:13.383367 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15258 15:47:13.383400 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15258 15:47:13.383438 read(6, "", 65536) = 0
15258 15:47:13.383467 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15258 15:47:13.383501 alarm(300)        = 300
15258 15:47:13.383550 close(6)          = 0
15258 15:47:13.383581 alarm(0)          = 300
15258 15:47:13.383619 gettimeofday({1495655233, 383637}, NULL) = 0
15258 15:47:13.383672 getpid()          = 15258
15258 15:47:13.383703 gettimeofday({1495655233, 383720}, NULL) = 0
15258 15:47:13.383782 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77904) = 0
15258 15:47:13.383822 write(3, "Wed May 24 15:47:13 2017 [pid 15258] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile26\", 17 bytes, 9.15Kbyte/sec\n", 130) = 130
15258 15:47:13.383867 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbff7790c) = 0
15258 15:47:13.383902 write(0, "226 Transfer complete.\r\n", 24) = 24
15258 15:47:13.384007 write(5, "\n", 1) = 1
15258 15:47:13.384040 read(5,  <unfinished ...>
15256 15:47:13.384062 close(6)          = 0
15256 15:47:13.384127 read(4, "\n", 1)  = 1
15256 15:47:13.384158 close(5)          = 0
15256 15:47:13.384187 write(4, "\1", 1) = 1
15258 15:47:13.384217 <... read resumed> "\1", 1) = 1
15258 15:47:13.384239 close(4)          = 0
