15094 15:45:18.506630 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.506653 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15094 15:45:18.506714 read(6, "", 4096) = 0
15094 15:45:18.506737 close(6)          = 0
15094 15:45:18.506759 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.506782 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15094 15:45:18.506816 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15094 15:45:18.506842 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15094 15:45:18.506871 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.506923 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15094 15:45:18.506986 read(6, "", 4096) = 0
15094 15:45:18.507009 close(6)          = 0
15094 15:45:18.507030 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.507053 read(5, "", 4096) = 0
15094 15:45:18.507075 close(5)          = 0
15094 15:45:18.508171 munmap(0xb7f65000, 4096) = 0
15094 15:45:18.508200 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15094 15:45:18.508228 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15094 15:45:18.508259 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f65000
15094 15:45:18.508283 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15094 15:45:18.508351 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15094 15:45:18.508386 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15094 15:45:18.508412 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15094 15:45:18.508441 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.508464 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15094 15:45:18.508535 read(6, "", 4096) = 0
15094 15:45:18.508541 close(6)          = 0
15094 15:45:18.508541 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.508541 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15094 15:45:18.508541 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15094 15:45:18.508541 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.508541 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15094 15:45:18.508541 read(6, "", 4096) = 0
15094 15:45:18.508541 close(6)          = 0
15094 15:45:18.508541 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.508541 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15094 15:45:18.508541 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15094 15:45:18.508541 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.508541 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15094 15:45:18.508541 read(6, "", 4096) = 0
15094 15:45:18.508541 close(6)          = 0
15094 15:45:18.508541 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.508541 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15094 15:45:18.508541 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15094 15:45:18.508541 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
15094 15:45:18.508541 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15094 15:45:18.508541 read(6, "", 4096) = 0
15094 15:45:18.508541 close(6)          = 0
15094 15:45:18.508541 munmap(0xb7f5f000, 4096) = 0
15094 15:45:18.508541 read(5, "", 4096) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.508541 munmap(0xb7f65000, 4096) = 0
15094 15:45:18.508541 time(NULL)        = 1495655118
15094 15:45:18.508541 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15094 15:45:18.508541 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15094 15:45:18.508541 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f65000
15094 15:45:18.508541 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15094 15:45:18.508541 read(5, "", 4096) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.508541 munmap(0xb7f65000, 4096) = 0
15094 15:45:18.508541 getuid32()        = 0
15094 15:45:18.508541 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.508541 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.508541 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.508541 _llseek(5, 1624, [1624], SEEK_SET) = 0
15094 15:45:18.508541 munmap(0xb7f65000, 1624) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.508541 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.508541 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.508541 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.508541 _llseek(5, 1233, [1233], SEEK_SET) = 0
15094 15:45:18.508541 munmap(0xb7f65000, 1233) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.508541 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.508541 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.508541 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.508541 _llseek(5, 1624, [1624], SEEK_SET) = 0
15094 15:45:18.508541 munmap(0xb7f65000, 1624) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.508541 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.508541 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.508541 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15094 15:45:18.508541 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.508541 _llseek(5, 1233, [1233], SEEK_SET) = 0
15094 15:45:18.508541 munmap(0xb7f65000, 1233) = 0
15094 15:45:18.508541 close(5)          = 0
15094 15:45:18.510941 getuid32()        = 0
15094 15:45:18.510996 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.511024 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.511047 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15094 15:45:18.511077 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.511100 _llseek(5, 1624, [1624], SEEK_SET) = 0
15094 15:45:18.511130 munmap(0xb7f65000, 1624) = 0
15094 15:45:18.511153 close(5)          = 0
15094 15:45:18.511180 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.511206 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.511229 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15094 15:45:18.511259 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.511282 _llseek(5, 1233, [1233], SEEK_SET) = 0
15094 15:45:18.511312 munmap(0xb7f65000, 1233) = 0
15094 15:45:18.511334 close(5)          = 0
15094 15:45:18.511359 time(NULL)        = 1495655118
15094 15:45:18.511389 munmap(0xb7f62000, 12164) = 0
15094 15:45:18.511415 munmap(0xb7f60000, 7136) = 0
15094 15:45:18.511443 munmap(0xb7d95000, 95428) = 0
15094 15:45:18.511467 munmap(0xb7d5b000, 201052) = 0
15094 15:45:18.511491 munmap(0xb7d42000, 101180) = 0
15094 15:45:18.511522 gettimeofday({1495655118, 511536}, NULL) = 0
15094 15:45:18.511561 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbff778e4) = -1 ENOENT (No such file or directory)
15094 15:45:18.511591 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15094 15:45:18.511638 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77a34) = 0
15094 15:45:18.511669 write(3, "Wed May 24 15:45:18 2017 [pid 15094] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15094 15:45:18.511701 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77a3c) = 0
15094 15:45:18.511728 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15094 15:45:18.511756 write(4, "\1", 1 <unfinished ...>
15095 15:45:18.511777 <... read resumed> "\1", 1) = 1
15094 15:45:18.511793 <... write resumed> ) = 1
15095 15:45:18.511812 exit_group(0)     = ?
15094 15:45:18.511868 --- SIGCHLD (Child exited) @ 0 (0) ---
15094 15:45:18.511898 sigreturn()       = ? (mask now [])
15094 15:45:18.511956 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15095
15094 15:45:18.511983 close(4)          = 0
15094 15:45:18.512008 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15094 15:45:18.512036 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15094 15:45:18.512063 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15094 15:45:18.512090 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dcb6f8) = 15096
15096 15:45:18.512181 prctl(0x1, 0x9, 0, 0, 0) = 0
15096 15:45:18.512208 close(4)          = 0
15096 15:45:18.512253 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15096 15:45:18.512285 _llseek(4, 0, [0], SEEK_CUR) = 0
15096 15:45:18.512315 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15096 15:45:18.512365 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f65000
15096 15:45:18.512390 _llseek(4, 1624, [1624], SEEK_SET) = 0
15096 15:45:18.512430 munmap(0xb7f65000, 1624) = 0
15096 15:45:18.512454 close(4)          = 0
15096 15:45:18.512481 getuid32()        = 0
15096 15:45:18.512504 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15096 15:45:18.512530 _llseek(4, 0, [0], SEEK_CUR) = 0
15096 15:45:18.512553 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15096 15:45:18.512583 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f65000
15096 15:45:18.512606 _llseek(4, 1624, [1624], SEEK_SET) = 0
15096 15:45:18.512637 munmap(0xb7f65000, 1624) = 0
15096 15:45:18.512658 close(4)          = 0
15096 15:45:18.512703 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15096 15:45:18.512740 read(4, "65536\n", 31) = 6
15096 15:45:18.512765 close(4)          = 0
15096 15:45:18.512793 socket(PF_FILE, SOCK_STREAM, 0) = 4
15096 15:45:18.512818 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15096 15:45:18.512841 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15096 15:45:18.512927 close(4)          = 0
15096 15:45:18.512953 socket(PF_FILE, SOCK_STREAM, 0) = 4
15096 15:45:18.512977 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15096 15:45:18.512999 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15096 15:45:18.513033 close(4)          = 0
15096 15:45:18.513074 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15096 15:45:18.513103 _llseek(4, 0, [0], SEEK_CUR) = 0
15096 15:45:18.513125 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15096 15:45:18.513156 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f65000
15096 15:45:18.513180 _llseek(4, 886, [886], SEEK_SET) = 0
15096 15:45:18.513221 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15096 15:45:18.513253 munmap(0xb7f65000, 886) = 0
15096 15:45:18.513274 close(4)          = 0
15096 15:45:18.513297 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15096 15:45:18.513328 geteuid32()       = 0
15096 15:45:18.513351 getegid32()       = 0
15096 15:45:18.513374 setregid32(-1, 1000) = 0
15096 15:45:18.513398 setreuid32(-1, 1000) = 0
15096 15:45:18.513420 chdir("/home/msfadmin") = 0
15096 15:45:18.513451 setreuid32(-1, 0) = 0
15096 15:45:18.513472 setregid32(-1, 0) = 0
15096 15:45:18.513496 setgid32(1000)    = 0
15096 15:45:18.513517 setuid32(1000)    = 0
15096 15:45:18.513540 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15096 15:45:18.513568 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f63000
15096 15:45:18.513591 mprotect(0xb7f65000, 4096, PROT_NONE) = 0
15096 15:45:18.513615 mprotect(0xb7f63000, 4096, PROT_NONE) = 0
15096 15:45:18.513640 getcwd("/home/msfadmin", 4096) = 15
15096 15:45:18.513667 umask(022)        = 077
15096 15:45:18.513688 getcwd("/home/msfadmin", 4096) = 15
15096 15:45:18.513715 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15096 15:45:18.513754 write(0, "230 Login successful.\r\n", 23) = 23
15096 15:45:18.513957 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.513990 alarm(300)        = 0
15096 15:45:18.514031 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
15096 15:45:18.514055 mprotect(0xb7f62000, 4096, PROT_NONE) = 0
15096 15:45:18.514079 mprotect(0xb7f60000, 4096, PROT_NONE) = 0
15096 15:45:18.514106 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15096 15:45:18.514132 read(0, "TYPE I\r\n", 8) = 8
15096 15:45:18.514164 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15096 15:45:18.514244 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.514273 alarm(300)        = 300
15096 15:45:18.514314 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15096 15:45:18.514338 read(0, "PASV\r\n", 6) = 6
15096 15:45:18.514362 write(5, "\n", 1) = 1
15096 15:45:18.514386 read(5,  <unfinished ...>
15094 15:45:18.514411 close(5)          = 0
15094 15:45:18.514437 getuid32()        = 0
15094 15:45:18.514465 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15094 15:45:18.514494 _llseek(5, 0, [0], SEEK_CUR) = 0
15094 15:45:18.514519 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15094 15:45:18.514552 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f65000
15094 15:45:18.514575 _llseek(5, 1624, [1624], SEEK_SET) = 0
15094 15:45:18.514607 munmap(0xb7f65000, 1624) = 0
15094 15:45:18.514631 close(5)          = 0
15094 15:45:18.514661 setgroups32(0, []) = 0
15094 15:45:18.514687 chdir("/usr/share/empty") = 0
15094 15:45:18.514712 chroot(".")       = 0
15094 15:45:18.514735 capset(NULL, NULL) = -1 EFAULT (Bad address)
15094 15:45:18.514762 prctl(0x8, 0, 0xbff77a18, 0x80549a6, 0xbff77a00) = 0
15094 15:45:18.514786 prctl(0x8, 0x1, 0xbff77a18, 0x8054a49, 0xbff77a00) = 0
15094 15:45:18.514808 setgid32(65534)   = 0
15094 15:45:18.514873 setuid32(65534)   = 0
15094 15:45:18.514915 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15094 15:45:18.514971 read(4, "\n", 1)  = 1
15094 15:45:18.515008 write(4, "\1", 1) = 1
15096 15:45:18.515034 <... read resumed> "\1", 1) = 1
15096 15:45:18.515053 write(5, "\f", 1) = 1
15096 15:45:18.515075 read(5,  <unfinished ...>
15094 15:45:18.515094 read(4, "\f", 1)  = 1
15094 15:45:18.515120 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15094 15:45:18.515147 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15094 15:45:18.515172 gettimeofday({1495655118, 515186}, NULL) = 0
15094 15:45:18.515212 bind(5, {sa_family=AF_INET, sin_port=htons(12917), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15094 15:45:18.515242 listen(5, 1)      = 0
15094 15:45:18.515269 write(4, "u2\0\0", 4) = 4
15096 15:45:18.515292 <... read resumed> "u2\0\0", 4) = 4
15096 15:45:18.515320 write(0, "227 Entering Passive Mode (127,0,0,1,50,117).\r\n", 47) = 47
15096 15:45:18.515528 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.515560 alarm(300)        = 300
15096 15:45:18.515601 recv(0, "STOR myfile4\r\n", 4096, MSG_PEEK) = 14
15096 15:45:18.515626 read(0, "STOR myfile4\r\n", 14) = 14
15096 15:45:18.515655 write(5, "\v", 1) = 1
15096 15:45:18.515679 read(5,  <unfinished ...>
15094 15:45:18.515697 read(4, "\v", 1)  = 1
15094 15:45:18.515727 write(4, "\1\0\0\0", 4) = 4
15096 15:45:18.515751 <... read resumed> "\1\0\0\0", 4) = 4
15096 15:45:18.515771 gettimeofday({1495655118, 515784}, NULL) = 0
15096 15:45:18.515816 getcwd("/home/msfadmin", 4096) = 15
15096 15:45:18.515864 open("myfile4", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15096 15:45:18.515892 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15096 15:45:18.515923 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15096 15:45:18.515945 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15096 15:45:18.515968 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77964) = 0
15096 15:45:18.515997 ftruncate64(4, 0) = 0
15096 15:45:18.516033 _llseek(4, 0, [0], SEEK_SET) = 0
15096 15:45:18.516057 write(5, "\v", 1) = 1
15096 15:45:18.516079 read(5,  <unfinished ...>
15094 15:45:18.516098 read(4, "\v", 1)  = 1
15094 15:45:18.516121 write(4, "\1\0\0\0", 4) = 4
15096 15:45:18.516145 <... read resumed> "\1\0\0\0", 4) = 4
15096 15:45:18.516163 write(5, "\v", 1) = 1
15096 15:45:18.516185 read(5,  <unfinished ...>
15094 15:45:18.516203 read(4, "\v", 1)  = 1
15094 15:45:18.516225 write(4, "\1\0\0\0", 4) = 4
15096 15:45:18.516248 <... read resumed> "\1\0\0\0", 4) = 4
15096 15:45:18.516266 write(5, "\r", 1) = 1
15096 15:45:18.516288 read(5,  <unfinished ...>
15094 15:45:18.516306 read(4, "\r", 1)  = 1
15094 15:45:18.516332 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15094 15:45:18.516364 accept(5, {sa_family=AF_INET, sin_port=htons(60415), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15094 15:45:18.516401 write(4, "\1", 1) = 1
15096 15:45:18.516424 <... read resumed> "\1", 1) = 1
15096 15:45:18.516446 recvmsg(5,  <unfinished ...>
15094 15:45:18.516467 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15096 15:45:18.516498 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15096 15:45:18.516524 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15096 15:45:18.516549 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15096 15:45:18.516573 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15096 15:45:18.516597 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.516623 alarm(300)        = 300
15096 15:45:18.516666 write(0, "150 Ok to send data.\r\n", 22) = 22
15096 15:45:18.516843 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d9a000
15096 15:45:18.516871 mprotect(0xb7dac000, 4096, PROT_NONE) = 0
15096 15:45:18.516897 mprotect(0xb7d9a000, 4096, PROT_NONE) = 0
15096 15:45:18.516918 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15096 15:45:18.516946 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15096 15:45:18.516976 read(6, "", 65536) = 0
15096 15:45:18.517000 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.517027 alarm(300)        = 300
15096 15:45:18.517066 close(6)          = 0
15096 15:45:18.517087 alarm(0)          = 300
15096 15:45:18.517116 gettimeofday({1495655118, 517130}, NULL) = 0
15096 15:45:18.517158 getpid()          = 15096
15096 15:45:18.517183 gettimeofday({1495655118, 517197}, NULL) = 0
15096 15:45:18.517229 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbff77904) = 0
15096 15:45:18.517259 write(3, "Wed May 24 15:45:18 2017 [pid 15096] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile4\", 17 bytes, 11.75Kbyte/sec\n", 130) = 130
15096 15:45:18.517302 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbff7790c) = 0
15096 15:45:18.517331 write(0, "226 Transfer complete.\r\n", 24) = 24
15096 15:45:18.517508 write(5, "\n", 1) = 1
15096 15:45:18.517612 read(5,  <unfinished ...>
15094 15:45:18.517632 close(6)          = 0
15094 15:45:18.517685 read(4, "\n", 1)  = 1
15094 15:45:18.517711 close(5)          = 0
15094 15:45:18.517735 write(4, "\1", 1) = 1
15096 15:45:18.517811 <... read resumed> "\1", 1) = 1
15096 15:45:18.517832 close(4)          = 0
15096 15:45:18.517855 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:18.517883 alarm(300)        = 0
15096 15:45:18.517924 recv(0,  <unfinished ...>
15094 15:45:18.517943 read(4,  <unfinished ...>
15096 15:45:19.062315 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
15096 15:45:19.062448 read(0, "TYPE I\r\n", 8) = 8
15096 15:45:19.062579 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15096 15:45:19.062764 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:19.062833 alarm(300)        = 299
15096 15:45:19.062902 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15096 15:45:19.062941 read(0, "PASV\r\n", 6) = 6
15096 15:45:19.062982 write(5, "\n", 1) = 1
15096 15:45:19.063074 read(5,  <unfinished ...>
15094 15:45:19.063105 <... read resumed> "\n", 1) = 1
15094 15:45:19.063137 write(4, "\1", 1) = 1
15096 15:45:19.063174 <... read resumed> "\1", 1) = 1
15096 15:45:19.063203 write(5, "\f", 1) = 1
15096 15:45:19.063238 read(5,  <unfinished ...>
15094 15:45:19.063266 read(4, "\f", 1)  = 1
15094 15:45:19.063306 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15094 15:45:19.063351 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15094 15:45:19.063395 bind(5, {sa_family=AF_INET, sin_port=htons(20482), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15094 15:45:19.063446 listen(5, 1)      = 0
15094 15:45:19.063473 write(4, "\2P\0\0", 4) = 4
15096 15:45:19.063497 <... read resumed> "\2P\0\0", 4) = 4
15096 15:45:19.063521 write(0, "227 Entering Passive Mode (127,0,0,1,80,2).\r\n", 45) = 45
15096 15:45:19.063731 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15096 15:45:19.063763 alarm(300)        = 300
15096 15:45:19.063804 recv(0, "STOR myfile5\r\n", 4096, MSG_PEEK) = 14
15096 15:45:19.063829 read(0, "STOR myfile5\r\n", 14) = 14
15096 15:45:19.063857 write(5, "\v", 1) = 1
15096 15:45:19.063879 read(5,  <unfinished ...>
15094 15:45:19.063898 read(4, "\v", 1)  = 1
15094 15:45:19.063922 write(4, "\1\0\0\0", 4) = 4
15096 15:45:19.063945 <... read resumed> "\1\0\0\0", 4) = 4
15096 15:45:19.064016 gettimeofday({1495655119, 64033}, NULL) = 0
15096 15:45:19.064054 getcwd("/home/msfadmin", 4096) = 15
