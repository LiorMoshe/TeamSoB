16476 16:03:05.846440 open("/etc/ld.so.cache", O_RDONLY) = 7
16476 16:03:05.846482 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
16476 16:03:05.846531 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7dc2000
16476 16:03:05.846570 close(7)          = 0
16476 16:03:05.846607 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
16476 16:03:05.846658 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
16476 16:03:05.846704 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
16476 16:03:05.846947 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
16476 16:03:05.847006 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d90000
16476 16:03:05.847046 mmap2(0xb7d99000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d99000
16476 16:03:05.847097 mmap2(0xb7d9b000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d9b000
16476 16:03:05.847145 close(7)          = 0
16476 16:03:05.847188 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
16476 16:03:05.847234 open("/lib/libselinux.so.1", O_RDONLY) = 7
16476 16:03:05.847276 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
16476 16:03:05.847480 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
16476 16:03:05.847532 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d77000
16476 16:03:05.847572 mmap2(0xb7d8e000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d8e000
16476 16:03:05.847623 close(7)          = 0
16476 16:03:05.847877 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
16476 16:03:05.847950 statfs64("/selinux", 84, 0xbfeb914c) = -1 ENOENT (No such file or directory)
16476 16:03:05.847994 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
16476 16:03:05.848059 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
16476 16:03:05.848112 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f93000
16476 16:03:05.848152 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
16476 16:03:05.848347 read(7, "", 1024) = 0
16476 16:03:05.848385 close(7)          = 0
16476 16:03:05.848421 munmap(0xb7f93000, 4096) = 0
16476 16:03:05.848470 munmap(0xb7dc2000, 29913) = 0
16476 16:03:05.848516 read(6, "", 4096) = 0
16476 16:03:05.848554 close(6)          = 0
16476 16:03:05.848589 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.848628 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.848686 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.848730 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16476 16:03:05.848854 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.848911 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16476 16:03:05.849023 read(6, "", 4096) = 0
16476 16:03:05.849061 close(6)          = 0
16476 16:03:05.849098 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.849139 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.849198 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.849244 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16476 16:03:05.849294 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.849334 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16476 16:03:05.849432 read(6, "", 4096) = 0
16476 16:03:05.849469 close(6)          = 0
16476 16:03:05.849504 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.849541 read(5, "", 4096) = 0
16476 16:03:05.849576 close(5)          = 0
16476 16:03:05.849610 munmap(0xb7f9a000, 4096) = 0
16476 16:03:05.849648 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
16476 16:03:05.849691 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
16476 16:03:05.849774 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9a000
16476 16:03:05.849815 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
16476 16:03:05.849928 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.849984 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.850026 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
16476 16:03:05.850075 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.850113 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
16476 16:03:05.850238 read(6, "", 4096) = 0
16476 16:03:05.850276 close(6)          = 0
16476 16:03:05.850310 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.850349 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.850406 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.850448 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
16476 16:03:05.850497 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.850534 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
16476 16:03:05.850633 read(6, "", 4096) = 0
16476 16:03:05.850669 close(6)          = 0
16476 16:03:05.850710 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.850742 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.850742 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.850742 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.850742 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
16476 16:03:05.850742 read(6, "", 4096) = 0
16476 16:03:05.850742 close(6)          = 0
16476 16:03:05.850742 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.850742 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
16476 16:03:05.850742 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
16476 16:03:05.850742 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f94000
16476 16:03:05.850742 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
16476 16:03:05.850742 read(6, "", 4096) = 0
16476 16:03:05.850742 close(6)          = 0
16476 16:03:05.850742 munmap(0xb7f94000, 4096) = 0
16476 16:03:05.850742 read(5, "", 4096) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 4096) = 0
16476 16:03:05.850742 time(NULL)        = 1495656185
16476 16:03:05.850742 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16476 16:03:05.850742 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f9a000
16476 16:03:05.850742 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
16476 16:03:05.850742 read(5, "", 4096) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 4096) = 0
16476 16:03:05.850742 getuid32()        = 0
16476 16:03:05.850742 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1624, [1624], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1624) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1233, [1233], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1233) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1624, [1624], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1624) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1233, [1233], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1233) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 getuid32()        = 0
16476 16:03:05.850742 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1624, [1624], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1624) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.850742 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.850742 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
16476 16:03:05.850742 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.850742 _llseek(5, 1233, [1233], SEEK_SET) = 0
16476 16:03:05.850742 munmap(0xb7f9a000, 1233) = 0
16476 16:03:05.850742 close(5)          = 0
16476 16:03:05.850742 time(NULL)        = 1495656185
16476 16:03:05.850742 munmap(0xb7f97000, 12164) = 0
16476 16:03:05.850742 munmap(0xb7f95000, 7136) = 0
16476 16:03:05.850742 munmap(0xb7dca000, 95428) = 0
16476 16:03:05.850742 munmap(0xb7d90000, 201052) = 0
16476 16:03:05.850742 munmap(0xb7d77000, 101180) = 0
16476 16:03:05.850742 gettimeofday({1495656185, 850742}, NULL) = 0
16476 16:03:05.850742 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfebb024) = -1 ENOENT (No such file or directory)
16476 16:03:05.850742 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
16476 16:03:05.850742 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfebb174) = 0
16476 16:03:05.855327 write(3, "Wed May 24 16:03:05 2017 [pid 16476] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
16476 16:03:05.855528 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfebb17c) = 0
16476 16:03:05.855575 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16476 16:03:05.855622 write(4, "\1", 1 <unfinished ...>
16477 16:03:05.855658 <... read resumed> "\1", 1) = 1
16476 16:03:05.855684 <... write resumed> ) = 1
16477 16:03:05.855715 exit_group(0)     = ?
16476 16:03:05.855795 --- SIGCHLD (Child exited) @ 0 (0) ---
16476 16:03:05.855826 sigreturn()       = ? (mask now [])
16476 16:03:05.855880 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 16477
16476 16:03:05.855924 close(4)          = 0
16476 16:03:05.855964 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
16476 16:03:05.856008 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16476 16:03:05.856054 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16476 16:03:05.856098 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e006f8) = 16478
16478 16:03:05.856240 prctl(0x1, 0x9, 0, 0, 0) = 0
16478 16:03:05.856287 close(4)          = 0
16478 16:03:05.856364 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16478 16:03:05.856416 _llseek(4, 0, [0], SEEK_CUR) = 0
16478 16:03:05.856488 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16478 16:03:05.856548 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
16478 16:03:05.856589 _llseek(4, 1624, [1624], SEEK_SET) = 0
16478 16:03:05.856654 munmap(0xb7f9a000, 1624) = 0
16478 16:03:05.856694 close(4)          = 0
16478 16:03:05.856738 getuid32()        = 0
16478 16:03:05.856815 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
16478 16:03:05.856859 _llseek(4, 0, [0], SEEK_CUR) = 0
16478 16:03:05.856897 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16478 16:03:05.856948 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
16478 16:03:05.856993 _llseek(4, 1624, [1624], SEEK_SET) = 0
16478 16:03:05.857055 munmap(0xb7f9a000, 1624) = 0
16478 16:03:05.857093 close(4)          = 0
16478 16:03:05.857168 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
16478 16:03:05.857229 read(4, "65536\n", 31) = 6
16478 16:03:05.857272 close(4)          = 0
16478 16:03:05.857317 socket(PF_FILE, SOCK_STREAM, 0) = 4
16478 16:03:05.857358 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16478 16:03:05.857397 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16478 16:03:05.857493 close(4)          = 0
16478 16:03:05.857535 socket(PF_FILE, SOCK_STREAM, 0) = 4
16478 16:03:05.857573 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
16478 16:03:05.857611 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
16478 16:03:05.857665 close(4)          = 0
16478 16:03:05.857745 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
16478 16:03:05.857795 _llseek(4, 0, [0], SEEK_CUR) = 0
16478 16:03:05.857834 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16478 16:03:05.857884 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f9a000
16478 16:03:05.857924 _llseek(4, 886, [886], SEEK_SET) = 0
16478 16:03:05.857993 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
16478 16:03:05.858045 munmap(0xb7f9a000, 886) = 0
16478 16:03:05.858083 close(4)          = 0
16478 16:03:05.858119 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
16478 16:03:05.858169 geteuid32()       = 0
16478 16:03:05.858208 getegid32()       = 0
16478 16:03:05.858257 setregid32(-1, 1000) = 0
16478 16:03:05.858295 setreuid32(-1, 1000) = 0
16478 16:03:05.858333 chdir("/home/msfadmin") = 0
16478 16:03:05.858373 setreuid32(-1, 0) = 0
16478 16:03:05.858438 setregid32(-1, 0) = 0
16478 16:03:05.858480 setgid32(1000)    = 0
16478 16:03:05.858517 setuid32(1000)    = 0
16478 16:03:05.858553 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
16478 16:03:05.858598 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f98000
16478 16:03:05.858638 mprotect(0xb7f9a000, 4096, PROT_NONE) = 0
16478 16:03:05.858678 mprotect(0xb7f98000, 4096, PROT_NONE) = 0
16478 16:03:05.858718 getcwd("/home/msfadmin", 4096) = 15
16478 16:03:05.858763 umask(022)        = 077
16478 16:03:05.858798 getcwd("/home/msfadmin", 4096) = 15
16478 16:03:05.858844 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
16478 16:03:05.858909 write(0, "230 Login successful.\r\n", 23) = 23
16478 16:03:05.859165 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16478 16:03:05.859219 alarm(300)        = 0
16478 16:03:05.859287 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f95000
16478 16:03:05.859327 mprotect(0xb7f97000, 4096, PROT_NONE) = 0
16478 16:03:05.859396 mprotect(0xb7f95000, 4096, PROT_NONE) = 0
16478 16:03:05.859448 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
16478 16:03:05.859492 read(0, "TYPE I\r\n", 8) = 8
16478 16:03:05.859544 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
16478 16:03:05.859683 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16478 16:03:05.859731 alarm(300)        = 300
16478 16:03:05.859799 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
16478 16:03:05.859839 read(0, "PASV\r\n", 6) = 6
16478 16:03:05.859880 write(5, "\n", 1) = 1
16478 16:03:05.859919 read(5,  <unfinished ...>
16476 16:03:05.859962 close(5)          = 0
16476 16:03:05.860004 getuid32()        = 0
16476 16:03:05.860055 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
16476 16:03:05.860102 _llseek(5, 0, [0], SEEK_CUR) = 0
16476 16:03:05.860143 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
16476 16:03:05.860197 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f9a000
16476 16:03:05.860237 _llseek(5, 1624, [1624], SEEK_SET) = 0
16476 16:03:05.860290 munmap(0xb7f9a000, 1624) = 0
16476 16:03:05.860356 close(5)          = 0
16476 16:03:05.860412 setgroups32(0, []) = 0
16476 16:03:05.860452 chdir("/usr/share/empty") = 0
16476 16:03:05.860495 chroot(".")       = 0
16476 16:03:05.860532 capset(NULL, NULL) = -1 EFAULT (Bad address)
16476 16:03:05.860577 prctl(0x8, 0, 0xbfebb158, 0x80549a6, 0xbfebb140) = 0
16476 16:03:05.860615 prctl(0x8, 0x1, 0xbfebb158, 0x8054a49, 0xbfebb140) = 0
16476 16:03:05.860651 setgid32(65534)   = 0
16476 16:03:05.860687 setuid32(65534)   = 0
16476 16:03:05.860723 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
16476 16:03:05.860743 read(4, "\n", 1)  = 1
16476 16:03:05.860743 write(4, "\1", 1) = 1
16478 16:03:05.860743 <... read resumed> "\1", 1) = 1
16478 16:03:05.860743 write(5, "\f", 1) = 1
16478 16:03:05.860743 read(5,  <unfinished ...>
16476 16:03:05.860743 read(4, "\f", 1)  = 1
16476 16:03:05.860743 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
16476 16:03:05.860743 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
16476 16:03:05.860743 gettimeofday({1495656185, 860743}, NULL) = 0
16476 16:03:05.860743 bind(5, {sa_family=AF_INET, sin_port=htons(13818), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
16476 16:03:05.860743 listen(5, 1)      = 0
16476 16:03:05.860743 write(4, "\3725\0\0", 4) = 4
16478 16:03:05.860743 <... read resumed> "\3725\0\0", 4) = 4
16478 16:03:05.860743 write(0, "227 Entering Passive Mode (127,0,0,1,53,250).\r\n", 47) = 47
16478 16:03:05.860743 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
16478 16:03:05.860743 alarm(300)        = 300
16478 16:03:05.860743 recv(0, "STOR myfile28\r\n", 4096, MSG_PEEK) = 15
16478 16:03:05.860743 read(0, "STOR myfile28\r\n", 15) = 15
16478 16:03:05.860743 write(5, "\v", 1) = 1
16478 16:03:05.860743 read(5,  <unfinished ...>
16476 16:03:05.860743 read(4, "\v", 1)  = 1
16476 16:03:05.860743 write(4, "\1\0\0\0", 4) = 4
16478 16:03:05.860743 <... read resumed> "\1\0\0\0", 4) = 4
16478 16:03:05.860743 gettimeofday({1495656185, 860743}, NULL) = 0
16478 16:03:05.860743 getcwd("/home/msfadmin", 4096) = 15
16478 16:03:05.860743 open("myfile28", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
16478 16:03:05.860743 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
16478 16:03:05.860743 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
16478 16:03:05.860743 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
16478 16:03:05.860743 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfebb0a4) = 0
16478 16:03:05.860743 ftruncate64(4, 0) = 0
16478 16:03:05.860743 _llseek(4, 0, [0], SEEK_SET) = 0
16478 16:03:05.860743 write(5, "\v", 1) = 1
16478 16:03:05.860743 read(5,  <unfinished ...>
16476 16:03:05.860743 read(4, "\v", 1)  = 1
16476 16:03:05.860743 write(4, "\1\0\0\0", 4) = 4
16478 16:03:05.860743 <... read resumed> "\1\0\0\0", 4) = 4
16478 16:03:05.860743 write(5, "\v", 1) = 1
16478 16:03:05.860743 read(5,  <unfinished ...>
16476 16:03:05.860743 read(4, "\v", 1)  = 1
16476 16:03:05.860743 write(4, "\1\0\0\0", 4) = 4
16478 16:03:05.860743 <... read resumed> "\1\0\0\0", 4) = 4
16478 16:03:05.860743 write(5, "\r", 1) = 1
16478 16:03:05.860743 read(5,  <unfinished ...>
16476 16:03:05.860743 read(4, "\r", 1)  = 1
16476 16:03:05.860743 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
16476 16:03:05.860743 accept(5, {sa_family=AF_INET, sin_port=htons(42067), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
16476 16:03:05.860743 write(4, "\1", 1) = 1
16478 16:03:05.860743 <... read resumed> "\1", 1) = 1
16478 16:03:05.860743 recvmsg(5,  <unfinished ...>
16476 16:03:05.860743 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
16478 16:03:05.860743 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
