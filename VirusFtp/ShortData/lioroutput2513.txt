15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 read(5, "", 4096) = 0
15384 15:48:55.995102 close(5)          = 0
15384 15:48:55.995102 munmap(0xb7f03000, 4096) = 0
15384 15:48:55.995102 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15384 15:48:55.995102 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f03000
15384 15:48:55.995102 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15384 15:48:55.995102 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15384 15:48:55.995102 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efd000
15384 15:48:55.995102 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15384 15:48:55.995102 read(6, "", 4096) = 0
15384 15:48:55.995102 close(6)          = 0
15384 15:48:55.995102 munmap(0xb7efd000, 4096) = 0
15384 15:48:55.995102 read(5, "", 4096) = 0
15384 15:48:55.995102 close(5)          = 0
15384 15:48:55.995102 munmap(0xb7f03000, 4096) = 0
15384 15:48:55.995102 time(NULL)        = 1495655335
15384 15:48:55.995102 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15384 15:48:55.995102 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15384 15:48:55.995102 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f03000
15384 15:48:55.995102 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15384 15:48:55.995102 read(5, "", 4096) = 0
15384 15:48:55.995102 close(5)          = 0
15384 15:48:55.995102 munmap(0xb7f03000, 4096) = 0
15384 15:48:55.995102 getuid32()        = 0
15384 15:48:55.995102 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:55.995102 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:55.995102 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15384 15:48:55.995102 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:55.995102 _llseek(5, 1624, [1624], SEEK_SET) = 0
15384 15:48:56.003863 munmap(0xb7f03000, 1624) = 0
15384 15:48:56.004570 close(5)          = 0
15384 15:48:56.004641 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.004725 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.004761 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15384 15:48:56.004807 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.004843 _llseek(5, 1233, [1233], SEEK_SET) = 0
15384 15:48:56.004895 munmap(0xb7f03000, 1233) = 0
15384 15:48:56.004927 close(5)          = 0
15384 15:48:56.004979 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.005019 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.005051 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15384 15:48:56.005096 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.005103 _llseek(5, 1624, [1624], SEEK_SET) = 0
15384 15:48:56.005103 munmap(0xb7f03000, 1624) = 0
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.005103 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.005103 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15384 15:48:56.005103 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.005103 _llseek(5, 1233, [1233], SEEK_SET) = 0
15384 15:48:56.005103 munmap(0xb7f03000, 1233) = 0
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 getuid32()        = 0
15384 15:48:56.005103 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.005103 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.005103 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15384 15:48:56.005103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.005103 _llseek(5, 1624, [1624], SEEK_SET) = 0
15384 15:48:56.005103 munmap(0xb7f03000, 1624) = 0
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.005103 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.005103 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15384 15:48:56.005103 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.005103 _llseek(5, 1233, [1233], SEEK_SET) = 0
15384 15:48:56.005103 munmap(0xb7f03000, 1233) = 0
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 time(NULL)        = 1495655336
15384 15:48:56.005103 munmap(0xb7f00000, 12164) = 0
15384 15:48:56.005103 munmap(0xb7efe000, 7136) = 0
15384 15:48:56.005103 munmap(0xb7d33000, 95428) = 0
15384 15:48:56.005103 munmap(0xb7cf9000, 201052) = 0
15384 15:48:56.005103 munmap(0xb7ce0000, 101180) = 0
15384 15:48:56.005103 gettimeofday({1495655336, 5103}, NULL) = 0
15384 15:48:56.005103 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf89e214) = -1 ENOENT (No such file or directory)
15384 15:48:56.005103 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15384 15:48:56.005103 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf89e364) = 0
15384 15:48:56.005103 write(3, "Wed May 24 15:48:56 2017 [pid 15384] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15384 15:48:56.005103 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf89e36c) = 0
15384 15:48:56.005103 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15384 15:48:56.005103 write(4, "\1", 1 <unfinished ...>
15385 15:48:56.005103 <... read resumed> "\1", 1) = 1
15384 15:48:56.005103 <... write resumed> ) = 1
15385 15:48:56.005103 exit_group(0)     = ?
15384 15:48:56.005103 --- SIGCHLD (Child exited) @ 0 (0) ---
15384 15:48:56.005103 sigreturn()       = ? (mask now [])
15384 15:48:56.005103 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15385
15384 15:48:56.005103 close(4)          = 0
15384 15:48:56.005103 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15384 15:48:56.005103 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15384 15:48:56.005103 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15384 15:48:56.005103 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d696f8) = 15386
15386 15:48:56.005103 prctl(0x1, 0x9, 0, 0, 0) = 0
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15386 15:48:56.005103 _llseek(4, 0, [0], SEEK_CUR) = 0
15386 15:48:56.005103 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15386 15:48:56.005103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
15386 15:48:56.005103 _llseek(4, 1624, [1624], SEEK_SET) = 0
15386 15:48:56.005103 munmap(0xb7f03000, 1624) = 0
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 getuid32()        = 0
15386 15:48:56.005103 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15386 15:48:56.005103 _llseek(4, 0, [0], SEEK_CUR) = 0
15386 15:48:56.005103 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15386 15:48:56.005103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
15386 15:48:56.005103 _llseek(4, 1624, [1624], SEEK_SET) = 0
15386 15:48:56.005103 munmap(0xb7f03000, 1624) = 0
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15386 15:48:56.005103 read(4, "65536\n", 31) = 6
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 socket(PF_FILE, SOCK_STREAM, 0) = 4
15386 15:48:56.005103 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15386 15:48:56.005103 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 socket(PF_FILE, SOCK_STREAM, 0) = 4
15386 15:48:56.005103 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15386 15:48:56.005103 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15386 15:48:56.005103 _llseek(4, 0, [0], SEEK_CUR) = 0
15386 15:48:56.005103 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15386 15:48:56.005103 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f03000
15386 15:48:56.005103 _llseek(4, 886, [886], SEEK_SET) = 0
15386 15:48:56.005103 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15386 15:48:56.005103 munmap(0xb7f03000, 886) = 0
15386 15:48:56.005103 close(4)          = 0
15386 15:48:56.005103 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15386 15:48:56.005103 geteuid32()       = 0
15386 15:48:56.005103 getegid32()       = 0
15386 15:48:56.005103 setregid32(-1, 1000) = 0
15386 15:48:56.005103 setreuid32(-1, 1000) = 0
15386 15:48:56.005103 chdir("/home/msfadmin") = 0
15386 15:48:56.005103 setreuid32(-1, 0) = 0
15386 15:48:56.005103 setregid32(-1, 0) = 0
15386 15:48:56.005103 setgid32(1000)    = 0
15386 15:48:56.005103 setuid32(1000)    = 0
15386 15:48:56.005103 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15386 15:48:56.005103 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f01000
15386 15:48:56.005103 mprotect(0xb7f03000, 4096, PROT_NONE) = 0
15386 15:48:56.005103 mprotect(0xb7f01000, 4096, PROT_NONE) = 0
15386 15:48:56.005103 getcwd("/home/msfadmin", 4096) = 15
15386 15:48:56.005103 umask(022)        = 077
15386 15:48:56.005103 getcwd("/home/msfadmin", 4096) = 15
15386 15:48:56.005103 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15386 15:48:56.005103 write(0, "230 Login successful.\r\n", 23) = 23
15386 15:48:56.005103 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.005103 alarm(300)        = 0
15386 15:48:56.005103 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7efe000
15386 15:48:56.005103 mprotect(0xb7f00000, 4096, PROT_NONE) = 0
15386 15:48:56.005103 mprotect(0xb7efe000, 4096, PROT_NONE) = 0
15386 15:48:56.005103 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15386 15:48:56.005103 read(0, "TYPE I\r\n", 8) = 8
15386 15:48:56.005103 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15386 15:48:56.005103 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.005103 alarm(300)        = 300
15386 15:48:56.005103 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15386 15:48:56.005103 read(0, "PASV\r\n", 6) = 6
15386 15:48:56.005103 write(5, "\n", 1) = 1
15386 15:48:56.005103 read(5,  <unfinished ...>
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 getuid32()        = 0
15384 15:48:56.005103 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15384 15:48:56.005103 _llseek(5, 0, [0], SEEK_CUR) = 0
15384 15:48:56.005103 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15384 15:48:56.005103 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f03000
15384 15:48:56.005103 _llseek(5, 1624, [1624], SEEK_SET) = 0
15384 15:48:56.005103 munmap(0xb7f03000, 1624) = 0
15384 15:48:56.005103 close(5)          = 0
15384 15:48:56.005103 setgroups32(0, []) = 0
15384 15:48:56.005103 chdir("/usr/share/empty") = 0
15384 15:48:56.005103 chroot(".")       = 0
15384 15:48:56.005103 capset(NULL, NULL) = -1 EFAULT (Bad address)
15384 15:48:56.005103 prctl(0x8, 0, 0xbf89e348, 0x80549a6, 0xbf89e330) = 0
15384 15:48:56.005103 prctl(0x8, 0x1, 0xbf89e348, 0x8054a49, 0xbf89e330) = 0
15384 15:48:56.005103 setgid32(65534)   = 0
15384 15:48:56.005103 setuid32(65534)   = 0
15384 15:48:56.005103 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15384 15:48:56.005103 read(4, "\n", 1)  = 1
15384 15:48:56.005103 write(4, "\1", 1) = 1
15386 15:48:56.005103 <... read resumed> "\1", 1) = 1
15386 15:48:56.005103 write(5, "\f", 1) = 1
15386 15:48:56.005103 read(5,  <unfinished ...>
15384 15:48:56.005103 read(4, "\f", 1)  = 1
15384 15:48:56.005103 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15384 15:48:56.013887 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15384 15:48:56.013941 gettimeofday({1495655336, 13962}, NULL) = 0
15384 15:48:56.014002 bind(5, {sa_family=AF_INET, sin_port=htons(59936), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15384 15:48:56.014047 listen(5, 1)      = 0
15384 15:48:56.014085 write(4, " \352\0\0", 4) = 4
15386 15:48:56.014121 <... read resumed> " \352\0\0", 4) = 4
15386 15:48:56.014163 write(0, "227 Entering Passive Mode (127,0,0,1,234,32).\r\n", 47) = 47
15386 15:48:56.014553 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.014601 alarm(300)        = 300
15386 15:48:56.014662 recv(0, "STOR myfile32\r\n", 4096, MSG_PEEK) = 15
15386 15:48:56.014700 read(0, "STOR myfile32\r\n", 15) = 15
15386 15:48:56.014746 write(5, "\v", 1) = 1
15386 15:48:56.014780 read(5,  <unfinished ...>
15384 15:48:56.014816 read(4, "\v", 1)  = 1
15384 15:48:56.014851 write(4, "\1\0\0\0", 4) = 4
15386 15:48:56.014886 <... read resumed> "\1\0\0\0", 4) = 4
15386 15:48:56.014916 gettimeofday({1495655336, 14936}, NULL) = 0
15386 15:48:56.014963 getcwd("/home/msfadmin", 4096) = 15
15386 15:48:56.015001 open("myfile32", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15386 15:48:56.015039 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15386 15:48:56.015085 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15386 15:48:56.015085 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15386 15:48:56.015085 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf89e294) = 0
15386 15:48:56.015085 ftruncate64(4, 0) = 0
15386 15:48:56.015085 _llseek(4, 0, [0], SEEK_SET) = 0
15386 15:48:56.015085 write(5, "\v", 1) = 1
15386 15:48:56.015085 read(5,  <unfinished ...>
15384 15:48:56.015085 read(4, "\v", 1)  = 1
15384 15:48:56.015085 write(4, "\1\0\0\0", 4) = 4
15386 15:48:56.015085 <... read resumed> "\1\0\0\0", 4) = 4
15386 15:48:56.015085 write(5, "\v", 1) = 1
15386 15:48:56.015085 read(5,  <unfinished ...>
15384 15:48:56.015085 read(4, "\v", 1)  = 1
15384 15:48:56.015085 write(4, "\1\0\0\0", 4) = 4
15386 15:48:56.015085 <... read resumed> "\1\0\0\0", 4) = 4
15386 15:48:56.015085 write(5, "\r", 1) = 1
15386 15:48:56.015085 read(5,  <unfinished ...>
15384 15:48:56.015085 read(4, "\r", 1)  = 1
15384 15:48:56.015085 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15384 15:48:56.015085 accept(5, {sa_family=AF_INET, sin_port=htons(41724), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15384 15:48:56.015085 write(4, "\1", 1) = 1
15386 15:48:56.015085 <... read resumed> "\1", 1) = 1
15386 15:48:56.015085 recvmsg(5,  <unfinished ...>
15384 15:48:56.015085 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15386 15:48:56.015085 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15386 15:48:56.015085 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15386 15:48:56.015085 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15386 15:48:56.015085 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15386 15:48:56.015085 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.015085 alarm(300)        = 300
15386 15:48:56.015085 write(0, "150 Ok to send data.\r\n", 22) = 22
15386 15:48:56.015085 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d38000
15386 15:48:56.015085 mprotect(0xb7d4a000, 4096, PROT_NONE) = 0
15386 15:48:56.015085 mprotect(0xb7d38000, 4096, PROT_NONE) = 0
15386 15:48:56.015085 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15386 15:48:56.015085 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15386 15:48:56.015085 read(6, "", 65536) = 0
15386 15:48:56.015085 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.015085 alarm(300)        = 300
15386 15:48:56.015085 close(6)          = 0
15386 15:48:56.015085 alarm(0)          = 300
15386 15:48:56.015085 gettimeofday({1495655336, 15085}, NULL) = 0
15386 15:48:56.015085 getpid()          = 15386
15386 15:48:56.015085 gettimeofday({1495655336, 15085}, NULL) = 0
15386 15:48:56.015085 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf89e234) = 0
15386 15:48:56.015085 write(3, "Wed May 24 15:48:56 2017 [pid 15386] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile32\", 17 bytes, 111.42Kbyte/sec\n", 132) = 132
15386 15:48:56.015085 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf89e23c) = 0
15386 15:48:56.015085 write(0, "226 Transfer complete.\r\n", 24) = 24
15386 15:48:56.015085 write(5, "\n", 1) = 1
15386 15:48:56.015085 read(5,  <unfinished ...>
15384 15:48:56.015085 close(6)          = 0
15384 15:48:56.015085 read(4, "\n", 1)  = 1
15384 15:48:56.015085 close(5)          = 0
15384 15:48:56.015085 write(4, "\1", 1) = 1
15386 15:48:56.015085 <... read resumed> "\1", 1) = 1
15386 15:48:56.015085 close(4)          = 0
15386 15:48:56.015085 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.015085 alarm(300)        = 0
15386 15:48:56.015085 recv(0,  <unfinished ...>
15384 15:48:56.015085 read(4,  <unfinished ...>
15386 15:48:56.554375 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
15386 15:48:56.554494 read(0, "TYPE I\r\n", 8) = 8
15386 15:48:56.554606 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15386 15:48:56.554894 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.554997 alarm(300)        = 299
15386 15:48:56.555119 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15386 15:48:56.555119 read(0, "PASV\r\n", 6) = 6
15386 15:48:56.555119 write(5, "\n", 1) = 1
15386 15:48:56.555119 read(5,  <unfinished ...>
15384 15:48:56.555119 <... read resumed> "\n", 1) = 1
15384 15:48:56.555119 write(4, "\1", 1) = 1
15386 15:48:56.555119 <... read resumed> "\1", 1) = 1
15386 15:48:56.555119 write(5, "\f", 1) = 1
15386 15:48:56.555119 read(5,  <unfinished ...>
15384 15:48:56.555119 read(4, "\f", 1)  = 1
15384 15:48:56.555119 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15384 15:48:56.555119 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15384 15:48:56.555119 bind(5, {sa_family=AF_INET, sin_port=htons(56398), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15384 15:48:56.555119 listen(5, 1)      = 0
15384 15:48:56.555119 write(4, "N\334\0\0", 4) = 4
15386 15:48:56.555119 <... read resumed> "N\334\0\0", 4) = 4
15386 15:48:56.555119 write(0, "227 Entering Passive Mode (127,0,0,1,220,78).\r\n", 47) = 47
15386 15:48:56.555119 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15386 15:48:56.555119 alarm(300)        = 300
15386 15:48:56.555119 recv(0, "STOR myfile33\r\n", 4096, MSG_PEEK) = 15
15386 15:48:56.555119 read(0, "STOR myfile33\r\n", 15) = 15
15386 15:48:56.555119 write(5, "\v", 1) = 1
15386 15:48:56.555119 read(5,  <unfinished ...>
