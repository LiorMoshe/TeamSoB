15980 15:56:52.524012 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
15980 15:56:52.524073 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
15980 15:56:52.524336 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
15980 15:56:52.524405 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7dcd000
15980 15:56:52.524454 mmap2(0xb7dd6000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7dd6000
15980 15:56:52.524514 mmap2(0xb7dd8000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7dd8000
15980 15:56:52.524572 close(7)          = 0
15980 15:56:52.524624 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
15980 15:56:52.524681 open("/lib/libselinux.so.1", O_RDONLY) = 7
15980 15:56:52.524733 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
15980 15:56:52.525017 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
15980 15:56:52.525085 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7db4000
15980 15:56:52.525135 mmap2(0xb7dcb000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7dcb000
15980 15:56:52.525197 close(7)          = 0
15980 15:56:52.525476 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15980 15:56:52.525595 statfs64("/selinux", 84, 0xbfa0949c) = -1 ENOENT (No such file or directory)
15980 15:56:52.525647 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
15980 15:56:52.525726 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
15980 15:56:52.525792 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd0000
15980 15:56:52.525841 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
15980 15:56:52.526113 read(7, "", 1024) = 0
15980 15:56:52.526170 close(7)          = 0
15980 15:56:52.526216 munmap(0xb7fd0000, 4096) = 0
15980 15:56:52.526276 munmap(0xb7dff000, 29913) = 0
15980 15:56:52.526332 read(6, "", 4096) = 0
15980 15:56:52.526414 close(6)          = 0
15980 15:56:52.526463 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.526513 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.526585 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.526640 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15980 15:56:52.526701 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.526749 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15980 15:56:52.526905 read(6, "", 4096) = 0
15980 15:56:52.526957 close(6)          = 0
15980 15:56:52.527000 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.527048 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.527117 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.527170 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15980 15:56:52.527232 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.527278 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15980 15:56:52.527444 read(6, "", 4096) = 0
15980 15:56:52.527492 close(6)          = 0
15980 15:56:52.527536 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.527582 read(5, "", 4096) = 0
15980 15:56:52.527625 close(5)          = 0
15980 15:56:52.527666 munmap(0xb7fd7000, 4096) = 0
15980 15:56:52.527712 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15980 15:56:52.527765 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15980 15:56:52.527827 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
15980 15:56:52.528025 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15980 15:56:52.528169 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.528238 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.528291 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15980 15:56:52.528351 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.528397 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15980 15:56:52.528571 read(6, "", 4096) = 0
15980 15:56:52.528628 close(6)          = 0
15980 15:56:52.528671 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.528719 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.528787 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.528840 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15980 15:56:52.528900 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.528947 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15980 15:56:52.529077 read(6, "", 4096) = 0
15980 15:56:52.529121 close(6)          = 0
15980 15:56:52.529164 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.529211 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.529278 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.529330 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15980 15:56:52.529390 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.529436 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15980 15:56:52.530315 read(6, "", 4096) = 0
15980 15:56:52.530432 close(6)          = 0
15980 15:56:52.530479 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.530529 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15980 15:56:52.530600 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15980 15:56:52.530653 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15980 15:56:52.530714 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd1000
15980 15:56:52.530761 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15980 15:56:52.530919 read(6, "", 4096) = 0
15980 15:56:52.530994 close(6)          = 0
15980 15:56:52.531047 munmap(0xb7fd1000, 4096) = 0
15980 15:56:52.531094 read(5, "", 4096) = 0
15980 15:56:52.531137 close(5)          = 0
15980 15:56:52.531179 munmap(0xb7fd7000, 4096) = 0
15980 15:56:52.531231 time(NULL)        = 1495655812
15980 15:56:52.531280 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15980 15:56:52.531381 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15980 15:56:52.531438 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15980 15:56:52.531500 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd7000
15980 15:56:52.531546 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15980 15:56:52.531622 read(5, "", 4096) = 0
15980 15:56:52.531663 close(5)          = 0
15980 15:56:52.531706 munmap(0xb7fd7000, 4096) = 0
15980 15:56:52.531767 getuid32()        = 0
15980 15:56:52.531830 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.531916 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.531964 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15980 15:56:52.532025 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.532072 _llseek(5, 1624, [1624], SEEK_SET) = 0
15980 15:56:52.532141 munmap(0xb7fd7000, 1624) = 0
15980 15:56:52.532190 close(5)          = 0
15980 15:56:52.532275 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.532372 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.532424 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15980 15:56:52.532486 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.532533 _llseek(5, 1233, [1233], SEEK_SET) = 0
15980 15:56:52.532605 munmap(0xb7fd7000, 1233) = 0
15980 15:56:52.532652 close(5)          = 0
15980 15:56:52.532722 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.532777 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.532823 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15980 15:56:52.532916 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.532963 _llseek(5, 1624, [1624], SEEK_SET) = 0
15980 15:56:52.533025 munmap(0xb7fd7000, 1624) = 0
15980 15:56:52.533069 close(5)          = 0
15980 15:56:52.533122 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.533175 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.533221 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15980 15:56:52.533281 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.533350 _llseek(5, 1233, [1233], SEEK_SET) = 0
15980 15:56:52.533420 munmap(0xb7fd7000, 1233) = 0
15980 15:56:52.533465 close(5)          = 0
15980 15:56:52.534143 getuid32()        = 0
15980 15:56:52.534199 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.534253 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.534298 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15980 15:56:52.534364 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.534411 _llseek(5, 1624, [1624], SEEK_SET) = 0
15980 15:56:52.534472 munmap(0xb7fd7000, 1624) = 0
15980 15:56:52.534516 close(5)          = 0
15980 15:56:52.534569 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.534622 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.534667 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15980 15:56:52.534728 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.534774 _llseek(5, 1233, [1233], SEEK_SET) = 0
15980 15:56:52.534871 munmap(0xb7fd7000, 1233) = 0
15980 15:56:52.534919 close(5)          = 0
15980 15:56:52.534970 time(NULL)        = 1495655812
15980 15:56:52.535028 munmap(0xb7fd4000, 12164) = 0
15980 15:56:52.535083 munmap(0xb7fd2000, 7136) = 0
15980 15:56:52.535138 munmap(0xb7e07000, 95428) = 0
15980 15:56:52.535186 munmap(0xb7dcd000, 201052) = 0
15980 15:56:52.535233 munmap(0xb7db4000, 101180) = 0
15980 15:56:52.535295 gettimeofday({1495655812, 535359}, NULL) = 0
15980 15:56:52.535410 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfa0b374) = -1 ENOENT (No such file or directory)
15980 15:56:52.535468 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15980 15:56:52.535558 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa0b4c4) = 0
15980 15:56:52.535621 write(3, "Wed May 24 15:56:52 2017 [pid 15980] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15980 15:56:52.535685 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfa0b4cc) = 0
15980 15:56:52.535737 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15980 15:56:52.535793 write(4, "\1", 1 <unfinished ...>
15981 15:56:52.535869 <... read resumed> "\1", 1) = 1
15980 15:56:52.535901 <... write resumed> ) = 1
15981 15:56:52.535939 exit_group(0)     = ?
15980 15:56:52.536073 --- SIGCHLD (Child exited) @ 0 (0) ---
15980 15:56:52.536111 sigreturn()       = ? (mask now [])
15980 15:56:52.536180 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15981
15980 15:56:52.536233 close(4)          = 0
15980 15:56:52.536283 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15980 15:56:52.536373 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15980 15:56:52.536429 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15980 15:56:52.536484 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e3d6f8) = 15982
15982 15:56:52.536659 prctl(0x1, 0x9, 0, 0, 0) = 0
15982 15:56:52.536715 close(4)          = 0
15982 15:56:52.536833 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15982 15:56:52.536902 _llseek(4, 0, [0], SEEK_CUR) = 0
15982 15:56:52.536962 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15982 15:56:52.537030 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd7000
15982 15:56:52.537078 _llseek(4, 1624, [1624], SEEK_SET) = 0
15982 15:56:52.537158 munmap(0xb7fd7000, 1624) = 0
15982 15:56:52.537207 close(4)          = 0
15982 15:56:52.537260 getuid32()        = 0
15982 15:56:52.537334 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15982 15:56:52.537390 _llseek(4, 0, [0], SEEK_CUR) = 0
15982 15:56:52.537436 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15982 15:56:52.537497 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd7000
15982 15:56:52.537544 _llseek(4, 1624, [1624], SEEK_SET) = 0
15982 15:56:52.537604 munmap(0xb7fd7000, 1624) = 0
15982 15:56:52.537648 close(4)          = 0
15982 15:56:52.537737 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15982 15:56:52.537846 read(4, "65536\n", 31) = 6
15982 15:56:52.537901 close(4)          = 0
15982 15:56:52.537957 socket(PF_FILE, SOCK_STREAM, 0) = 4
15982 15:56:52.538006 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15982 15:56:52.538053 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15982 15:56:52.538129 close(4)          = 0
15982 15:56:52.538176 socket(PF_FILE, SOCK_STREAM, 0) = 4
15982 15:56:52.538222 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15982 15:56:52.538267 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15982 15:56:52.538338 close(4)          = 0
15982 15:56:52.538420 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15982 15:56:52.538485 _llseek(4, 0, [0], SEEK_CUR) = 0
15982 15:56:52.538534 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15982 15:56:52.538596 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd7000
15982 15:56:52.538644 _llseek(4, 886, [886], SEEK_SET) = 0
15982 15:56:52.538728 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15982 15:56:52.538850 munmap(0xb7fd7000, 886) = 0
15982 15:56:52.538888 close(4)          = 0
15982 15:56:52.538921 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15982 15:56:52.538970 geteuid32()       = 0
15982 15:56:52.539008 getegid32()       = 0
15982 15:56:52.539043 setregid32(-1, 1000) = 0
15982 15:56:52.539079 setreuid32(-1, 1000) = 0
15982 15:56:52.539115 chdir("/home/msfadmin") = 0
15982 15:56:52.539137 setreuid32(-1, 0) = 0
15982 15:56:52.539137 setregid32(-1, 0) = 0
15982 15:56:52.539423 setgid32(1000)    = 0
15982 15:56:52.539460 setuid32(1000)    = 0
15982 15:56:52.539480 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15982 15:56:52.539480 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd5000
15982 15:56:52.539480 mprotect(0xb7fd7000, 4096, PROT_NONE) = 0
15982 15:56:52.539480 mprotect(0xb7fd5000, 4096, PROT_NONE) = 0
15982 15:56:52.539480 getcwd("/home/msfadmin", 4096) = 15
15982 15:56:52.539480 umask(022)        = 077
15982 15:56:52.539480 getcwd("/home/msfadmin", 4096) = 15
15982 15:56:52.539480 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15982 15:56:52.539480 write(0, "230 Login successful.\r\n", 23) = 23
15982 15:56:52.539480 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15982 15:56:52.539480 alarm(300)        = 0
15982 15:56:52.539480 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd2000
15982 15:56:52.539480 mprotect(0xb7fd4000, 4096, PROT_NONE) = 0
15982 15:56:52.539480 mprotect(0xb7fd2000, 4096, PROT_NONE) = 0
15982 15:56:52.539480 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
15982 15:56:52.540288 read(0, "QUIT\r\n", 6) = 6
15982 15:56:52.540364 shutdown(0, 0 /* receive */) = 0
15982 15:56:52.540402 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
15982 15:56:52.540432 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15982 15:56:52.540462 write(0, "221 Goodbye.\r\n", 14) = 14
15982 15:56:52.540578 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
15982 15:56:52.540603 fcntl64(0, F_SETFL, O_RDWR) = 0
15982 15:56:52.540624 shutdown(0, 2 /* send and receive */) = 0
15982 15:56:52.540736 exit_group(0)     = ?
15980 15:56:52.540790 --- SIGCHLD (Child exited) @ 0 (0) ---
15980 15:56:52.540841 alarm(1)          = 0
15980 15:56:52.540888 sigreturn()       = ? (mask now [])
15980 15:56:52.540929 close(5)          = 0
15980 15:56:52.540976 getuid32()        = 0
15980 15:56:52.541008 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15980 15:56:52.541041 _llseek(5, 0, [0], SEEK_CUR) = 0
15980 15:56:52.541070 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15980 15:56:52.541105 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd7000
15980 15:56:52.541132 _llseek(5, 1624, [1624], SEEK_SET) = 0
15980 15:56:52.541169 munmap(0xb7fd7000, 1624) = 0
15980 15:56:52.541195 close(5)          = 0
15980 15:56:52.541225 setgroups32(0, []) = 0
15980 15:56:52.541251 chdir("/usr/share/empty") = 0
15980 15:56:52.541282 chroot(".")       = 0
15980 15:56:52.541336 capset(NULL, NULL) = -1 EFAULT (Bad address)
15980 15:56:52.541377 prctl(0x8, 0, 0xbfa0b4a8, 0x80549a6, 0xbfa0b490) = 0
15980 15:56:52.541400 prctl(0x8, 0x1, 0xbfa0b4a8, 0x8054a49, 0xbfa0b490) = 0
15980 15:56:52.541422 setgid32(65534)   = 0
15980 15:56:52.541443 setuid32(65534)   = 0
15980 15:56:52.541465 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15980 15:56:52.541493 read(4, "", 1)    = 0
15980 15:56:52.541515 alarm(0)          = 1
15980 15:56:52.541546 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15982
15980 15:56:52.541573 exit_group(0)     = ?
4439  15:56:52.541636 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:56:52.541655 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:56:52.541672 write(4, "\21", 1) = 1
4439  15:56:52.541700 sigreturn()       = ? (mask now [])
4439  15:56:52.541751 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:56:52.541783 ioctl(3, FIONREAD, [1]) = 0
4439  15:56:52.541836 read(3, "\21", 1) = 1
4439  15:56:52.541869 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 15980
4439  15:56:52.541903 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:56:52.541939 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:56:52.541962 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:56:53.051115 accept(5, {sa_family=AF_INET, sin_port=htons(34493), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:56:53.051411 time(NULL)        = 1495655813
4439  15:56:53.051497 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 15983
15983 15:56:53.051953 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
15983 15:56:53.052054 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
15983 15:56:53.052201 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
15983 15:56:53.052285 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
15983 15:56:53.052378 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
15983 15:56:53.052464 close(3)          = 0
15983 15:56:53.052534 close(4)          = 0
15983 15:56:53.052604 open("/dev/null", O_RDONLY) = 3
15983 15:56:53.052696 dup2(3, 0)        = 0
15983 15:56:53.052765 dup2(3, 1)        = 1
15983 15:56:53.052832 dup2(3, 2)        = 2
15983 15:56:53.052898 close(3)          = 0
15983 15:56:53.052975 setgid32(0)       = 0
15983 15:56:53.053060 setgroups32(0, []) = 0
15983 15:56:53.053136 setuid32(0)       = 0
15983 15:56:53.053212 getpriority(PRIO_PROCESS, 0) = 20
15983 15:56:53.053281 setpriority(PRIO_PROCESS, 0, 10) = 0
15983 15:56:53.053349 getpriority(PRIO_PROCESS, 0) = 10
15983 15:56:53.053531 getpeername(13, {sa_family=AF_INET, sin_port=htons(34493), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
15983 15:56:53.053659 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
15983 15:56:53.053801 open("/etc/hosts.allow", O_RDONLY) = 3
15983 15:56:53.053911 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
15983 15:56:53.054020 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
15983 15:56:53.054113 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
15983 15:56:53.054442 close(3)          = 0
15983 15:56:53.054595 munmap(0xb7f61000, 4096) = 0
15983 15:56:53.054738 fcntl64(13, F_SETFD, 0) = 0
15983 15:56:53.054826 close(7)          = 0
15983 15:56:53.054899 dup2(13, 0)       = 0
15983 15:56:53.054967 dup2(13, 1)       = 1
15983 15:56:53.055043 dup2(13, 2)       = 2
15983 15:56:53.055113 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
15983 15:56:53.055191 close(13)         = 0
15983 15:56:53.055260 setsid()          = 15983
15983 15:56:53.055333 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
15983 15:56:53.055353 brk(0)            = 0x8064000
15983 15:56:53.055353 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
15983 15:56:53.056083 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f0a000
