11026 15:03:59.344039 mmap2(0xb7dd6000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7dd6000
11026 15:03:59.344165 close(7)          = 0
11026 15:03:59.344225 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11026 15:03:59.344289 open("/lib/libselinux.so.1", O_RDONLY) = 7
11026 15:03:59.344344 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
11026 15:03:59.344725 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
11026 15:03:59.344800 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7db2000
11026 15:03:59.344850 mmap2(0xb7dc9000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7dc9000
11026 15:03:59.344921 close(7)          = 0
11026 15:03:59.345560 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11026 15:03:59.345683 statfs64("/selinux", 84, 0xbfb1bdbc) = -1 ENOENT (No such file or directory)
11026 15:03:59.345739 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11026 15:03:59.345835 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11026 15:03:59.345911 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fce000
11026 15:03:59.345962 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11026 15:03:59.346362 read(7, "", 1024) = 0
11026 15:03:59.346412 close(7)          = 0
11026 15:03:59.346458 munmap(0xb7fce000, 4096) = 0
11026 15:03:59.346527 munmap(0xb7dfd000, 29913) = 0
11026 15:03:59.346589 read(6, "", 4096) = 0
11026 15:03:59.346638 close(6)          = 0
11026 15:03:59.346679 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.346728 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.346814 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.346890 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11026 15:03:59.346963 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.347012 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11026 15:03:59.347230 read(6, "", 4096) = 0
11026 15:03:59.347277 close(6)          = 0
11026 15:03:59.347320 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.347370 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.347452 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.347508 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11026 15:03:59.347578 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.347625 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11026 15:03:59.347792 read(6, "", 4096) = 0
11026 15:03:59.347833 close(6)          = 0
11026 15:03:59.347874 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.347919 read(5, "", 4096) = 0
11026 15:03:59.347960 close(5)          = 0
11026 15:03:59.348000 munmap(0xb7fd5000, 4096) = 0
11026 15:03:59.348092 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11026 15:03:59.348154 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11026 15:03:59.348226 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd5000
11026 15:03:59.348272 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11026 15:03:59.348468 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.348654 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.348733 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11026 15:03:59.348805 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.348854 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11026 15:03:59.349068 read(6, "", 4096) = 0
11026 15:03:59.349120 close(6)          = 0
11026 15:03:59.349163 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.349215 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.349298 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.349355 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11026 15:03:59.349427 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.349489 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11026 15:03:59.349674 read(6, "", 4096) = 0
11026 15:03:59.349728 close(6)          = 0
11026 15:03:59.349769 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.349868 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.349962 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.350019 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11026 15:03:59.350090 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.350138 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11026 15:03:59.350644 read(6, "", 4096) = 0
11026 15:03:59.350686 close(6)          = 0
11026 15:03:59.350728 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.350830 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11026 15:03:59.350972 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11026 15:03:59.351062 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11026 15:03:59.351173 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fcf000
11026 15:03:59.351238 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11026 15:03:59.351491 read(6, "", 4096) = 0
11026 15:03:59.351542 close(6)          = 0
11026 15:03:59.351584 munmap(0xb7fcf000, 4096) = 0
11026 15:03:59.351634 read(5, "", 4096) = 0
11026 15:03:59.351677 close(5)          = 0
11026 15:03:59.351717 munmap(0xb7fd5000, 4096) = 0
11026 15:03:59.351849 time(NULL)        = 1495652639
11026 15:03:59.351905 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11026 15:03:59.351989 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11026 15:03:59.352043 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11026 15:03:59.352134 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd5000
11026 15:03:59.352184 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11026 15:03:59.352277 read(5, "", 4096) = 0
11026 15:03:59.352318 close(5)          = 0
11026 15:03:59.352359 munmap(0xb7fd5000, 4096) = 0
11026 15:03:59.352429 getuid32()        = 0
11026 15:03:59.352505 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.352570 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.352618 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11026 15:03:59.352689 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.352791 _llseek(5, 1624, [1624], SEEK_SET) = 0
11026 15:03:59.352882 munmap(0xb7fd5000, 1624) = 0
11026 15:03:59.352930 close(5)          = 0
11026 15:03:59.353041 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.353116 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.353162 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11026 15:03:59.353232 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.353279 _llseek(5, 1233, [1233], SEEK_SET) = 0
11026 15:03:59.353364 munmap(0xb7fd5000, 1233) = 0
11026 15:03:59.353407 close(5)          = 0
11026 15:03:59.353488 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.353542 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.353588 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11026 15:03:59.353657 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.353751 _llseek(5, 1624, [1624], SEEK_SET) = 0
11026 15:03:59.353829 munmap(0xb7fd5000, 1624) = 0
11026 15:03:59.353872 close(5)          = 0
11026 15:03:59.353929 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.353985 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.354029 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11026 15:03:59.354099 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.354144 _llseek(5, 1233, [1233], SEEK_SET) = 0
11026 15:03:59.354216 munmap(0xb7fd5000, 1233) = 0
11026 15:03:59.354258 close(5)          = 0
11026 15:03:59.355386 getuid32()        = 0
11026 15:03:59.355451 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.355509 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.355555 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11026 15:03:59.355803 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.355855 _llseek(5, 1624, [1624], SEEK_SET) = 0
11026 15:03:59.355927 munmap(0xb7fd5000, 1624) = 0
11026 15:03:59.355971 close(5)          = 0
11026 15:03:59.356031 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.356087 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.356132 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11026 15:03:59.356201 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.356247 _llseek(5, 1233, [1233], SEEK_SET) = 0
11026 15:03:59.356319 munmap(0xb7fd5000, 1233) = 0
11026 15:03:59.356360 close(5)          = 0
11026 15:03:59.356410 time(NULL)        = 1495652639
11026 15:03:59.356477 munmap(0xb7fd2000, 12164) = 0
11026 15:03:59.356536 munmap(0xb7fd0000, 7136) = 0
11026 15:03:59.356599 munmap(0xb7e05000, 95428) = 0
11026 15:03:59.356649 munmap(0xb7dcb000, 201052) = 0
11026 15:03:59.356756 munmap(0xb7db2000, 101180) = 0
11026 15:03:59.356795 gettimeofday({1495652639, 356803}, NULL) = 0
11026 15:03:59.356819 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb1dc94) = -1 ENOENT (No such file or directory)
11026 15:03:59.356851 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11026 15:03:59.356907 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1dde4) = 0
11026 15:03:59.356941 write(3, "Wed May 24 15:03:59 2017 [pid 11026] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11026 15:03:59.356985 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1ddec) = 0
11026 15:03:59.357013 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11026 15:03:59.357043 write(4, "\1", 1 <unfinished ...>
11027 15:03:59.357067 <... read resumed> "\1", 1) = 1
11026 15:03:59.357078 <... write resumed> ) = 1
11027 15:03:59.357095 exit_group(0)     = ?
11026 15:03:59.357168 --- SIGCHLD (Child exited) @ 0 (0) ---
11026 15:03:59.357184 sigreturn()       = ? (mask now [])
11026 15:03:59.357223 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11027
11026 15:03:59.357249 close(4)          = 0
11026 15:03:59.357274 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11026 15:03:59.357305 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11026 15:03:59.357333 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11026 15:03:59.357362 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7e3b6f8) = 11028
11028 15:03:59.357469 prctl(0x1, 0x9, 0, 0, 0) = 0
11028 15:03:59.357497 close(4)          = 0
11028 15:03:59.357557 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11028 15:03:59.357592 _llseek(4, 0, [0], SEEK_CUR) = 0
11028 15:03:59.357636 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11028 15:03:59.357680 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd5000
11028 15:03:59.357705 _llseek(4, 1624, [1624], SEEK_SET) = 0
11028 15:03:59.357752 munmap(0xb7fd5000, 1624) = 0
11028 15:03:59.357776 close(4)          = 0
11028 15:03:59.357804 getuid32()        = 0
11028 15:03:59.357825 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11028 15:03:59.357851 _llseek(4, 0, [0], SEEK_CUR) = 0
11028 15:03:59.357872 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11028 15:03:59.357906 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd5000
11028 15:03:59.357928 _llseek(4, 1624, [1624], SEEK_SET) = 0
11028 15:03:59.357960 munmap(0xb7fd5000, 1624) = 0
11028 15:03:59.357980 close(4)          = 0
11028 15:03:59.358034 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11028 15:03:59.358076 read(4, "65536\n", 31) = 6
11028 15:03:59.358101 close(4)          = 0
11028 15:03:59.358130 socket(PF_FILE, SOCK_STREAM, 0) = 4
11028 15:03:59.358155 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11028 15:03:59.358177 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11028 15:03:59.358221 close(4)          = 0
11028 15:03:59.358245 socket(PF_FILE, SOCK_STREAM, 0) = 4
11028 15:03:59.358265 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11028 15:03:59.358286 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11028 15:03:59.358323 close(4)          = 0
11028 15:03:59.358372 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11028 15:03:59.358400 _llseek(4, 0, [0], SEEK_CUR) = 0
11028 15:03:59.358429 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11028 15:03:59.358456 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7fd5000
11028 15:03:59.358474 _llseek(4, 886, [886], SEEK_SET) = 0
11028 15:03:59.358514 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11028 15:03:59.358543 munmap(0xb7fd5000, 886) = 0
11028 15:03:59.358560 close(4)          = 0
11028 15:03:59.358576 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11028 15:03:59.358614 geteuid32()       = 0
11028 15:03:59.358635 getegid32()       = 0
11028 15:03:59.358653 setregid32(-1, 1000) = 0
11028 15:03:59.358671 setreuid32(-1, 1000) = 0
11028 15:03:59.358690 chdir("/home/msfadmin") = 0
11028 15:03:59.358710 setreuid32(-1, 0) = 0
11028 15:03:59.358725 setregid32(-1, 0) = 0
11028 15:03:59.358743 setgid32(1000)    = 0
11028 15:03:59.358760 setuid32(1000)    = 0
11028 15:03:59.358777 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11028 15:03:59.358800 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd3000
11028 15:03:59.358819 mprotect(0xb7fd5000, 4096, PROT_NONE) = 0
11028 15:03:59.358845 mprotect(0xb7fd3000, 4096, PROT_NONE) = 0
11028 15:03:59.358864 getcwd("/home/msfadmin", 4096) = 15
11028 15:03:59.358887 umask(022)        = 077
11028 15:03:59.358903 getcwd("/home/msfadmin", 4096) = 15
11028 15:03:59.358926 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11028 15:03:59.358964 write(0, "230 Login successful.\r\n", 23) = 23
11028 15:03:59.359086 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11028 15:03:59.359086 alarm(300)        = 0
11028 15:03:59.359086 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7fd0000
11028 15:03:59.359086 mprotect(0xb7fd2000, 4096, PROT_NONE) = 0
11028 15:03:59.359101 mprotect(0xb7fd0000, 4096, PROT_NONE) = 0
11028 15:03:59.359124 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11028 15:03:59.359145 read(0, "TYPE I\r\n", 8) = 8
11028 15:03:59.359174 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11028 15:03:59.359240 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11028 15:03:59.359264 alarm(300)        = 300
11028 15:03:59.359283 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11028 15:03:59.359302 read(0, "PASV\r\n", 6) = 6
11028 15:03:59.359344 write(5, "\n", 1) = 1
11028 15:03:59.359367 read(5,  <unfinished ...>
11026 15:03:59.359388 close(5)          = 0
11026 15:03:59.359410 getuid32()        = 0
11026 15:03:59.359435 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11026 15:03:59.359459 _llseek(5, 0, [0], SEEK_CUR) = 0
11026 15:03:59.359480 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11026 15:03:59.359509 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7fd5000
11026 15:03:59.359528 _llseek(5, 1624, [1624], SEEK_SET) = 0
11026 15:03:59.359557 munmap(0xb7fd5000, 1624) = 0
11026 15:03:59.359608 close(5)          = 0
11026 15:03:59.359641 setgroups32(0, []) = 0
11026 15:03:59.359660 chdir("/usr/share/empty") = 0
11026 15:03:59.359681 chroot(".")       = 0
11026 15:03:59.359699 capset(NULL, NULL) = -1 EFAULT (Bad address)
11026 15:03:59.359721 prctl(0x8, 0, 0xbfb1ddc8, 0x80549a6, 0xbfb1ddb0) = 0
11026 15:03:59.359740 prctl(0x8, 0x1, 0xbfb1ddc8, 0x8054a49, 0xbfb1ddb0) = 0
11026 15:03:59.359757 setgid32(65534)   = 0
11026 15:03:59.359773 setuid32(65534)   = 0
11026 15:03:59.359790 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11026 15:03:59.359813 read(4, "\n", 1)  = 1
11026 15:03:59.359835 write(4, "\1", 1) = 1
11028 15:03:59.359854 <... read resumed> "\1", 1) = 1
11028 15:03:59.359866 write(5, "\f", 1) = 1
11028 15:03:59.359883 read(5,  <unfinished ...>
11026 15:03:59.359894 read(4, "\f", 1)  = 1
11026 15:03:59.359916 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11026 15:03:59.359939 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11026 15:03:59.359958 gettimeofday({1495652639, 359965}, NULL) = 0
11026 15:03:59.359986 bind(5, {sa_family=AF_INET, sin_port=htons(36905), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11026 15:03:59.360012 listen(5, 1)      = 0
11026 15:03:59.360034 write(4, ")\220\0\0", 4) = 4
11028 15:03:59.360053 <... read resumed> ")\220\0\0", 4) = 4
11028 15:03:59.360074 write(0, "227 Entering Passive Mode (127,0,0,1,144,41).\r\n", 47) = 47
11028 15:03:59.360251 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11028 15:03:59.360280 alarm(300)        = 300
11028 15:03:59.360352 recv(0, "STOR myfile34\r\n", 4096, MSG_PEEK) = 15
11028 15:03:59.360375 read(0, "STOR myfile34\r\n", 15) = 15
11028 15:03:59.360401 write(5, "\v", 1) = 1
11028 15:03:59.360419 read(5,  <unfinished ...>
11026 15:03:59.360431 read(4, "\v", 1)  = 1
11026 15:03:59.360450 write(4, "\1\0\0\0", 4) = 4
11028 15:03:59.360468 <... read resumed> "\1\0\0\0", 4) = 4
11028 15:03:59.360482 gettimeofday({1495652639, 360488}, NULL) = 0
11028 15:03:59.360500 getcwd("/home/msfadmin", 4096) = 15
11028 15:03:59.360521 open("myfile34", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11028 15:03:59.360544 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11028 15:03:59.360572 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11028 15:03:59.360598 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11028 15:03:59.360615 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb1dd14) = 0
11028 15:03:59.360641 ftruncate64(4, 0) = 0
11028 15:03:59.360671 _llseek(4, 0, [0], SEEK_SET) = 0
11028 15:03:59.360689 write(5, "\v", 1) = 1
11028 15:03:59.360706 read(5,  <unfinished ...>
11026 15:03:59.360718 read(4, "\v", 1)  = 1
11026 15:03:59.360737 write(4, "\1\0\0\0", 4) = 4
11028 15:03:59.360754 <... read resumed> "\1\0\0\0", 4) = 4
11028 15:03:59.360767 write(5, "\v", 1) = 1
11028 15:03:59.360783 read(5,  <unfinished ...>
11026 15:03:59.360794 read(4, "\v", 1)  = 1
11026 15:03:59.360812 write(4, "\1\0\0\0", 4) = 4
11028 15:03:59.360829 <... read resumed> "\1\0\0\0", 4) = 4
11028 15:03:59.360841 write(5, "\r", 1) = 1
11028 15:03:59.360857 read(5,  <unfinished ...>
11026 15:03:59.360868 read(4, "\r", 1)  = 1
11026 15:03:59.360889 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11026 15:03:59.360918 accept(5, {sa_family=AF_INET, sin_port=htons(59115), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11026 15:03:59.360955 write(4, "\1", 1) = 1
11028 15:03:59.360972 <... read resumed> "\1", 1) = 1
11028 15:03:59.360988 recvmsg(5,  <unfinished ...>
11026 15:03:59.361004 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11028 15:03:59.361032 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11028 15:03:59.361054 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11028 15:03:59.361075 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11028 15:03:59.361094 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11028 15:03:59.361112 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11028 15:03:59.361135 alarm(300)        = 300
11028 15:03:59.361155 write(0, "150 Ok to send data.\r\n", 22) = 22
11028 15:03:59.361269 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7e0a000
11028 15:03:59.361298 mprotect(0xb7e1c000, 4096, PROT_NONE) = 0
11028 15:03:59.361318 mprotect(0xb7e0a000, 4096, PROT_NONE) = 0
11028 15:03:59.361335 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11028 15:03:59.361358 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11028 15:03:59.361384 read(6, "", 65536) = 0
11028 15:03:59.361402 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11028 15:03:59.361424 alarm(300)        = 300
11028 15:03:59.361441 close(6)          = 0
11028 15:03:59.361456 alarm(0)          = 300
11028 15:03:59.361472 gettimeofday({1495652639, 361478}, NULL) = 0
11028 15:03:59.361501 getpid()          = 11028
