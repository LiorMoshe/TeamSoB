11213 15:06:07.142704 open("/lib/tls/i686/cmov/libc.so.6", O_RDONLY) = 3
11213 15:06:07.142765 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\260e\1\0004\0\0\0\4\307\24\0\0\0\0\0004\0 \0\n\0(\0D\0C\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0@\1\0\0@\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\2200\23\0\2200\23\0\2200\23\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0(\215\24\0(\215\24\0\5\0\0\0\0\20\0\0\1\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\260\'\0\0\204T\0\0\6\0\0\0\0\20\0\0\2\0\0\0\234\255\24\0\234\255\24\0\234\255\24\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0t\1\0\0t\1\0\0t\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0\7\0\0\0\354\221\24\0\354\221\24\0\354\221\24\0\10\0\0\0,\0\0\0\4\0\0\0\4\0\0\0P\345td\2440\23\0\2440\23\0\2440\23\0\354+\0\0\354+\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\354\221\24\0\354\221\24\0\354\221\24\0\10\36\0\0\10\36\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\363\3\0\0\n\0\0\0\0\2\0\0\16\0\0\0\2400\20D\200 \2\1\214\3\346\220AE\210\0\204\0\10\0A\200\0@\300\200\0\f\2\f\0\0010\0\10@\"\10\246\4\210H6l\240\0260\0&\204\200\216\4\10B$\2\f\246\244\32\6c\310\0\302 \1\300\0R\0!\201\10\4\n  \250\24\0\24(`\0\0P\240\312DB", 512) = 512
11213 15:06:07.143141 fstat64(3, {st_mode=S_IFREG|0755, st_size=1364388, ...}) = 0
11213 15:06:07.143221 mmap2(NULL, 1369712, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7d89000
11213 15:06:07.143271 mmap2(0xb7ed2000, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x149) = 0xb7ed2000
11213 15:06:07.143337 mmap2(0xb7ed5000, 9840, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7ed5000
11213 15:06:07.143401 close(3)          = 0
11213 15:06:07.143501 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d88000
11213 15:06:07.143674 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d87000
11213 15:06:07.143751 set_thread_area({entry_number:-1 -> 6, base_addr:0xb7d876b0, limit:1048575, seg_32bit:1, contents:0, read_exec_only:0, limit_in_pages:1, seg_not_present:0, useable:1}) = 0
11213 15:06:07.144009 mprotect(0xb7ed2000, 4096, PROT_READ) = 0
11213 15:06:07.144146 munmap(0xb7f1a000, 29913) = 0
11213 15:06:07.144398 brk(0)            = 0x8064000
11213 15:06:07.144442 brk(0x8085000)    = 0x8085000
11213 15:06:07.144682 stat64("/etc/vsftpd.conf", {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
11213 15:06:07.144794 open("/etc/vsftpd.conf", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = 3
11213 15:06:07.144855 fstat64(3, {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
11213 15:06:07.144942 mmap2(NULL, 16384, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1e000
11213 15:06:07.144995 mprotect(0xb7f21000, 4096, PROT_NONE) = 0
11213 15:06:07.145045 mprotect(0xb7f1e000, 4096, PROT_NONE) = 0
11213 15:06:07.145095 read(3, "# Example config file /etc/vsftpd.conf\n#\n# The default compiled in settings are fairly paranoid. This sample file\n# loosens things up a bit, to make the ftp daemon more usable.\n# Please see vsftpd.conf.5 for all compiled in defaults.\n#\n# READ THIS: This example file is NOT an exhaustive list of vsftpd options.\n# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd\'s\n# capabilities.\n#\n# Allow anonymous FTP? (Beware - allowed by default if you comment this out).\nanonymous_enable=YES\n\n#\n# Uncomment this to allow local users to log in.\nlocal_enable=YES\n\n#\n# Uncomment this to enable any form of FTP write command.\nwrite_enable=YES\n\n#\n# Default umask for local users is 077. You may wish to change this to 022,\n# if your users expect that (022 is used by most other ftpd\'s)\nlocal_umask=022\n\n#\n# Uncomment this to allow the anonymous FTP user to upload files. This only\n# has an effect if the above global write enable is activated. Also, you will\n# obviously need to create a directory writable by the FTP user.\nanon_upload_enable=YES\n\n#\n# Uncomment this if you want the anonymous FTP user to be able to create\n# new directories.\nanon_mkdir_write_enable=YES\n\n#\n# Activate directory messages - messages given to remote users when they\n# go into a certain directory.\ndirmessage_enable=YES\n#\n# Activate logging of uploads/downloads.\nxferlog_enable=YES\n#\n# Make sure PORT transfer connections originate from port 20 (ftp-data).\nconnect_from_port_20=YES\n#\n# If you want, you can arrange for uploaded anonymous files to be owned by\n# a different user. Note! Using \"root\" for uploaded files is not\n# recommended!\n#chown_uploads=YES\n#chown_username=whoever\n#\n# You may override where the log file goes if you like. The default is shown\n# below.\n#xferlog_file=/var/log/vsftpd.log\n#\n# If you want, you can have your log file in standard ftpd xferlog format.\n# Note that the default log file location is /var/log/xferlog in this case.\n#xferlog_std_format=YES\n#\n# You may change the default value for timing out an idle session.\n#idle_session_timeout=600\n#\n# You may change the default value for timing out a data connection.\n#data_connection_timeout=120\n#\n# It is recommended that you define on your system a unique user which the\n# ftp server can use as a totally isolated and unprivileged user.\n#nopriv_user=ftpsecure\n#\n# Enable this and the server will recognise asynchronous ABOR requests. Not\n# recommended for security (the code is non-trivial). Not enabling it,\n# however, may confuse older FTP clients.\n#async_abor_enable=YES\n#\n# By default the server will pretend to allow ASCII mode but in fact ignore\n# the request. Turn on the below options to have the server actually do ASCII\n# mangling on files when in ASCII mode.\n# Beware that on some FTP servers, ASCII support allows a denial of service\n# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd\n# predicted this attack and has always been safe, reporting the size of the\n# raw file.\n# ASCII mangling is a horrible feature of the protocol.\n#ascii_upload_enable=YES\n#ascii_download_enable=YES\n#\n# You may fully customise the login banner string:\n#ftpd_banner=Welcome to blah FTP service.\n#\n# You may specify a file of disallowed anonymous e-mail addresses. Apparently\n# useful for combatting certain DoS attacks.\n#deny_email_enable=YES\n# (default follows)\n#banned_email_file=/etc/vsftpd.banned_emails\n#\n# You may specify an explicit list of local users to chroot() to their home\n# directory. If chroot_local_user is YES, then this list becomes a list of\n# users to NOT chroot().\n#chroot_local_user=YES\n#chroot_list_enable=YES\n# (default follows)\n#chroot_list_file=/etc/vsftpd.chroot_list\n#\n# You may activate the \"-R\" option to the builtin ls. This is disabled by\n# default to avoid remote users being able to cause excessive I/O on large\n# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume\n# the presence of the \"-R\" option, so there is a strong case for enabling it.\nls_recurse_enable=YES\n\n#\n# When \"listen\" directive is enabled, vsftpd runs in standalone mode and\n# listens on IPv4 sockets. This directive cannot be used in conjunction\n# with the listen_ipv6 directive.\nlisten=NO\n\n#\n# This directive enables listening on IPv6 sockets. To listen on IPv4 and IPv6\n# sockets, you must run two copies of vsftpd with two configuration files.\n# Make sure, that one of the listen options is commented !!\n#listen_ipv6=YES\n", 4430) = 4430
11213 15:06:07.146431 mprotect(0xb7f1e000, 4096, PROT_READ) = 0
11213 15:06:07.146484 munmap(0xb7f1e000, 16384) = 0
11213 15:06:07.146585 close(3)          = 0
11213 15:06:07.146635 stat64("/etc/vsftpd.conf", {st_mode=S_IFREG|0644, st_size=4430, ...}) = 0
11213 15:06:07.146721 getuid32()        = 0
11213 15:06:07.146957 getuid32()        = 0
11213 15:06:07.147006 fstat64(0, {st_mode=S_IFSOCK|0777, st_size=0, ...}) = 0
11213 15:06:07.147088 getpeername(0, {sa_family=AF_INET, sin_port=htons(45146), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
11213 15:06:07.147184 getsockname(0, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
11213 15:06:07.147290 socket(PF_FILE, SOCK_STREAM, 0 <unfinished ...>
4439  15:06:07.147353 time(NULL)        = 1495652767
4439  15:06:07.147411 close(13 <unfinished ...>
11213 15:06:07.147448 <... socket resumed> ) = 3
4439  15:06:07.147474 <... close resumed> ) = 0
4439  15:06:07.147549 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL <unfinished ...>
11213 15:06:07.147611 fcntl64(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11213 15:06:07.147663 connect(3, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11213 15:06:07.147758 close(3)          = 0
11213 15:06:07.147810 socket(PF_FILE, SOCK_STREAM, 0) = 3
11213 15:06:07.147856 fcntl64(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11213 15:06:07.147901 connect(3, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11213 15:06:07.147980 close(3)          = 0
11213 15:06:07.148042 open("/etc/nsswitch.conf", O_RDONLY) = 3
11213 15:06:07.148111 fstat64(3, {st_mode=S_IFREG|0644, st_size=475, ...}) = 0
11213 15:06:07.148185 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
11213 15:06:07.148235 read(3, "# /etc/nsswitch.conf\n#\n# Example configuration of GNU Name Service Switch functionality.\n# If you have the `glibc-doc-reference\' and `info\' packages installed, try:\n# `info libc \"Name Service Switch\"\' for information about this file.\n\npasswd:         compat\ngroup:          compat\nshadow:         compat\n\nhosts:          files dns\nnetworks:       files\n\nprotocols:      db files\nservices:       db files\nethers:         db files\nrpc:            db files\n\nnetgroup:       nis\n", 4096) = 475
11213 15:06:07.148447 read(3, "", 4096) = 0
11213 15:06:07.148547 close(3)          = 0
11213 15:06:07.148590 munmap(0xb7f21000, 4096) = 0
11213 15:06:07.148663 open("/etc/ld.so.cache", O_RDONLY) = 3
11213 15:06:07.148719 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
11213 15:06:07.148790 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f1a000
11213 15:06:07.148836 close(3)          = 0
11213 15:06:07.148898 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11213 15:06:07.148965 open("/lib/tls/i686/cmov/libnss_compat.so.2", O_RDONLY) = 3
11213 15:06:07.149029 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\16\0\0004\0\0\0\204r\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0001a\0\0001a\0\0001a\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\274c\0\0\274c\0\0\5\0\0\0\0\20\0\0\1\0\0\0\340n\0\0\340~\0\0\340~\0\0\250\2\0\0h\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\364n\0\0\364~\0\0\364~\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\340n\0\0\340~\0\0\340~\0\0\24\1\0\0\24\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\32\0\0\0&\0\0\0\4\0\0\0\7\0\0\0Q\0\200\2@\t\21\r\0\4\33\200\21H\262\201&\0\0\0\'\0\0\0(\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0)\0\0\0*\0\0\0+\0\0\0\0\0\0\0-\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0\0\0\0\0\0\0\0\0002\0\0\0\0\0\0\0003\0\0\0004\0\0\0\0\0\0\0005\0\0\0\207[\246\22\365\33=\274\365\365K\23\0012\310%;]^\2674\10\301\346\357\37>\346\312\271\330\2749\303M%", 512) = 512
11213 15:06:07.149409 fstat64(3, {st_mode=S_IFREG|0644, st_size=30436, ...}) = 0
11213 15:06:07.149528 mmap2(NULL, 33352, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7d7e000
11213 15:06:07.149584 mmap2(0xb7d85000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x6) = 0xb7d85000
11213 15:06:07.149659 close(3)          = 0
11213 15:06:07.149743 munmap(0xb7f1a000, 29913) = 0
11213 15:06:07.149820 open("/etc/ld.so.cache", O_RDONLY) = 3
11213 15:06:07.149877 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
11213 15:06:07.149936 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f1a000
11213 15:06:07.149975 close(3)          = 0
11213 15:06:07.150023 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11213 15:06:07.150090 open("/lib/tls/i686/cmov/libnss_nis.so.2", O_RDONLY) = 3
11213 15:06:07.150152 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\31\0\0004\0\0\0\320\201\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\350x\0\0\350x\0\0\350x\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\310}\0\0\310}\0\0\5\0\0\0\0\20\0\0\1\0\0\0\334~\0\0\334\216\0\0\334\216\0\0\374\1\0\0`\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\360~\0\0\360\216\0\0\360\216\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\334~\0\0\334\216\0\0\334\216\0\0\30\1\0\0\30\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0g\0\0\0000\0\0\0\20\0\0\0\t\0\0\0\2\0\0H  \26\20\0\0@g\3\0\3\6\30\24\0248A\30&\243\301\200\212\0048\21\10 B@\310\24\344\20\311\244\10\0\4\0\0@\0P!\0\0\204\0\0\0\0@\v\0y\243\0D\202\0\0\0\0000\0\0\0001\0\0\0\0\0\0\0002\0\0\0003\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0005\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0007\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
11213 15:06:07.150589 fstat64(3, {st_mode=S_IFREG|0644, st_size=34352, ...}) = 0
11213 15:06:07.150669 mmap2(NULL, 37436, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7d74000
11213 15:06:07.150721 mmap2(0xb7d7c000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x7) = 0xb7d7c000
11213 15:06:07.150796 close(3)          = 0
11213 15:06:07.150977 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11213 15:06:07.151046 open("/lib/tls/i686/cmov/libnss_files.so.2", O_RDONLY) = 3
11213 15:06:07.151115 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\340\30\0\0004\0\0\0\254\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\330\206\0\0\330\206\0\0\330\206\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\213\0\0\240\213\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0\314\1\0\0\260\3\0\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0k\0\0\0.\0\0\0\20\0\0\0\t\0\0\0\"F\340\24\240\240\245\1\31\10\200\20\203\6\212\10\0\0\222@]\1(\nx\10 \"\220\200\20,\5\1\204\4)!\0224\0\24\0\31\0\0\2\2\210@\0\200@0\210\201@@\200\0B\0\6\300.\0\0\0\0\0\0\0\0\0\0\0/\0\0\0000\0\0\0001\0\0\0002\0\0\0003\0\0\0\0\0\0\0004\0\0\0\0\0\0\0005\0\0\0007\0\0\0008\0\0\0\0\0\0\0:\0\0\0\0\0\0\0;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
11213 15:06:07.151561 fstat64(3, {st_mode=S_IFREG|0644, st_size=38412, ...}) = 0
11213 15:06:07.151643 mmap2(NULL, 41624, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7d69000
11213 15:06:07.151695 mmap2(0xb7d72000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7d72000
11213 15:06:07.152587 close(3)          = 0
11213 15:06:07.152746 munmap(0xb7f1a000, 29913) = 0
11213 15:06:07.152883 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 3
11213 15:06:07.152984 fcntl64(3, F_GETFD) = 0x1 (flags FD_CLOEXEC)
11213 15:06:07.153043 _llseek(3, 0, [0], SEEK_CUR) = 0
11213 15:06:07.153098 fstat64(3, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11213 15:06:07.153169 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 3, 0) = 0xb7f21000
11213 15:06:07.153218 _llseek(3, 1624, [1624], SEEK_SET) = 0
11213 15:06:07.153320 munmap(0xb7f21000, 1624) = 0
11213 15:06:07.153364 close(3)          = 0
11213 15:06:07.153413 setsid()          = -1 EPERM (Operation not permitted)
11213 15:06:07.153461 getpid()          = 11213
11213 15:06:07.153504 getpgrp()         = 11213
11213 15:06:07.153547 umask(077)        = 022
11213 15:06:07.153593 time(NULL)        = 1495652767
11213 15:06:07.153645 open("/etc/localtime", O_RDONLY) = 3
11213 15:06:07.153698 fstat64(3, {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11213 15:06:07.153768 fstat64(3, {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11213 15:06:07.153881 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
11213 15:06:07.153934 read(3, "TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\4\0\0\0\4\0\0\0\0\0\0\0\353\0\0\0\4\0\0\0\20\236\246\36p\237\272\353`\240\206\0p\241\232\315`\242e\342p\243\203\351\340\244j\256p\2455\247`\246S\312\360\247\25\211`\2503\254\360\250\376\245\340\252\23\216\360\252\336\207\340\253\363p\360\254\276i\340\255\323R\360\256\236K\340\257\2634\360\260~-\340\261\234Qp\262gJ`\263|3p\264G,`\265\\\25p\266\'\16`\267;\367p\270\6\360`\271\33\331p\271\346\322`\273\4\365\360\273\306\264`\274\344\327\360\275\257\320\340\276\304\271\360\277\217\262\340\300\244\233\360\301o\224\340\302\204}\360\303Ov\340\304d_\360\305/X\340\306M|p\307\17:\340\310-^p\310\370W`\312\r@p\312\3309`\313\210\360p\322#\364p\322`\373\340\323u\344\360\324@\335\340\325U\306\360\326 \277\340\3275\250\360\330\0\241\340\331\25\212\360\331\340\203\340\332\376\247p\333\300e\340\334\336\211p\335\251\202`\336\276kp\337\211d`\340\236Mp\341iF`\342~/p\343I(`\344^\21p\345W.\340\346G-\360\3477\20\340\350\'\17\360\351\26\362\340\352\6\361\360\352\366\324\340\353\346\323\360\354\326\266\340\355\306\265\360\356\277\323`\357\257\322p\360\237\265`\361\217\264p\362\177\227`\363o\226p\364_y`\365Oxp\366?[`\367/Zp\370(w\340\371\17<p\372\10Y\340\372\370X\360\373\350;\340\374\330:\360\375\310\35\340\376\270\34\360\377\247\377\340\0\227\376\360\1\207\341\340\2w\340\360\3p\376`\4`\375p\5P\340`\6@\337p\0070\302`\7\215\31p\t\20\244`\t\255\224\360\n\360\206`\v\340\205p\f\331\242\340\r\300gp\16\271\204\340\17\251\203\360\20\231f\340\21\211e\360\22yH\340\23iG\360\24Y*\340\25I)\360\0269\f\340\27)\v\360\30\")`\31\10\355\360\32\2\v`\32\362\np\33\341\355`\34\321\354p\35\301\317`\36\261\316p\37\241\261` v\0\360!\201\223`\"U\342\360#j\257\340$5\304\360%J\221\340&\25\246\360\'*s\340\'\376\303p)\nU\340)\336\245p*\3527\340+\276\207p,\323T`-\236ip.\2636`/~Kp0\223\30`1gg\3602r\372`3GI\3604R\334`5\'+\36062\276`7\7\r\3608\33\332\3408\346\357\3609\373\274\340:\306\321\360;\333\236\340<\257\356p=\273\200\340>\217\320p?\233b\340@o\262pA\204\177`BO\224pCda`D/vpEDC`E\363\250\360G-_\340G\323\212\360I\rA\340I\263l\360J\355#\340K\234\211pL\326@`M|kpN\266\"`O\\MpP\226\4`Q</pRu\346`S\34\21pTU\310`T\373\363pV5\252`V\345\17\360X\36\306\340X\304\361\360Y\376\250\340Z\244\323\360[\336\212\340\\\204\265\360]\276l\340^d\227\360_\236N\340`M\264pa\207k`b-\226pcgM`d\rxpeG/`e\355Zpg\'\21`g\315<pi\6\363`i\255\36pj\346\325`k\226:\360l\317\361\340mv\34\360n\257\323\340oU\376\360p\217\265\340q5\340\360ro\227\340s\25\302\360tOy\340t\376\337pv8\226`v\336\301px\30x`x\276\243py\370Z`z\236\205p{\330<`|~gp}\270\36`~^Ip\177\230\0`\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\2\3\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\0\1\377\377\307\300\1\0\377\377\271\260\0\4\377\377\307\300\1\10\377\377\307\300\1\fEDT\0EST\0EWT\0EPT\0\0\0\0\1\0\0\0\1TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\5\0\0\0\0\0\0\0\354\0\0\0\5\0\0\0\24\377\377\377\377^\3\360\220\377\377\377\377\236\246\36p\377\377\377\377\237\272\353`\377\377\377\377\240\206\0p\377\377\377\377\241\232\315`\377\377\377\377\242e\342p\377\377\377\377\243\203\351\340\377\377\377\377\244j\256p\377\377\377\377\2455\247`\377\377\377\377\246S\312\360\377\377\377\377\247\25\211`\377\377\377\377\2503\254\360\377\377\377\377\250\376\245\340\377\377\377\377\252\23\216\360\377\377\377\377\252\336\207\340\377\377\377\377\253\363p\360\377\377\377\377\254\276i\340\377\377\377\377\255\323R\360\377\377\377\377\256\236K\340\377\377\377\377\257\2634\360\377\377\377\377\260~-\340\377\377\377\377\261\234Qp\377\377\377\377\262gJ`\377\377\377\377\263|3p\377\377\377\377\264G,`\377\377\377\377\265\\\25p\377\377\377\377\266\'\16`\377\377\377\377\267;\367p\377\377\377\377\270\6\360`\377\377\377\377\271\33\331p\377\377\377\377\271\346\322`\377\377\377\377\273\4\365\360\377\377\377\377\273\306\264`\377\377\377\377\274\344\327\360\377\377\377\377\275\257\320\340\377\377\377\377\276\304\271\360\377\377\377\377\277\217\262\340\377\377\377\377\300\244\233\360\377\377\377\377\301o\224\340\377\377\377\377\302\204}\360\377\377\377\377\303Ov\340\377\377\377\377\304d_\360\377\377\377\377\305/X\340\377\377\377\377\306M|p\377\377\377\377\307\17:\340\377\377\377\377\310-^p\377\377\377\377\310\370W`\377\377\377\377\312\r@p\377\377\377\377\312\3309`\377\377\377\377\313\210\360p\377\377\377\377\322#\364p\377\377\377\377\322`\373\340\377\377\377\377\323u\344\360\377\377\377\377\324@\335\340\377\377\377\377\325U\306\360\377\377\377\377\326 \277\340\377\377\377\377\3275\250\360\377\377\377\377\330\0\241\340\377\377\377\377\331\25\212\360\377\377\377\377\331\340\203\340\377\377\377\377\332\376\247p\377\377\377\377\333\300e\340\377\377\377\377\334\336\211p\377\377\377\377\335\251\202`\377\377\377\377\336\276kp\377\377\377\377\337\211d`\377\377\377\377\340\236Mp\377\377\377\377\341iF`\377\377\377\377\342~/p\377\377\377\377\343I(`\377\377\377\377\344^\21p\377\377\377\377\345W.\340\377\377\377\377\346G-\360\377\377\377\377\3477\20\340\377\377\377\377\350\'\17\360\377\377\377\377\351\26\362\340\377\377\377\377\352\6\361\360\377\377\377\377\352\366\324\340\377\377\377\377\353\346\323\360\377\377\377\377\354\326\266\340\377\377\377\377\355\306\265\360\377\377\377\377\356\277\323`\377\377\377\377\357\257\322p\377\377\377\377\360\237\265`\377\377\377\377\361\217\264p\377\377\377\377\362\177\227`\377\377\377\377\363o\226p\377\377\377\377\364_y`\377\377\377\377\365Oxp\377\377\377\377\366?[`\377\377\377\377\367/Zp\377\377\377\377\370(w\340\377\377\377\377\371\17<p\377\377\377\377\372\10Y\340\377\377\377\377\372\370X\360\377\377\377\377\373\350;\340\377\377\377\377\374\330:\360\377\377\377\377\375\310\35\340\377\377\377\377\376\270\34\360\377\377\377\377\377\247\377\340\0\0\0\0\0\227\376\360\0\0\0\0\1\207\341\340\0\0\0\0\2w\340\360\0\0\0\0\3p\376`\0\0\0\0\4`\375p\0\0\0\0\5P\340`\0\0\0\0\6@\337p\0\0\0\0\0070\302`\0\0\0\0\7\215\31p\0\0\0\0\t\20\244`\0\0\0\0\t\255\224\360\0\0\0\0\n\360\206`\0\0\0\0\v\340\205p\0\0\0\0\f\331\242\340\0\0\0\0\r\300gp\0\0\0\0\16\271\204\340\0\0\0\0\17\251\203\360\0\0\0\0\20\231f\340\0\0\0\0\21\211e\360\0\0\0\0\22yH\340\0\0\0\0\23iG\360\0\0\0\0\24Y*\340\0\0\0\0\25I)\360\0\0\0\0\0269\f\340\0\0\0\0\27)\v\360\0\0\0\0\30\")`\0\0\0\0\31\10\355\360\0\0\0\0\32\2\v`\0\0\0\0\32\362\np\0\0\0\0\33\341\355`\0\0\0\0\34\321\354p\0\0\0\0\35\301\317`\0\0\0\0\36\261\316p\0\0\0\0\37\241\261`\0\0\0\0 v\0\360\0\0\0\0!\201\223`\0\0\0\0\"U\342\360\0\0\0\0#j\257\340\0\0\0\0$5\304\360\0\0\0\0%J\221\340\0\0\0\0&\25\246\360\0\0\0\0\'*s\340\0\0\0\0\'\376\303p\0\0\0\0)\nU\340\0\0\0\0)\336\245p\0\0\0\0*\3527\340\0\0\0\0+\276\207p\0\0\0\0,\323T`\0\0\0\0-\236ip\0\0\0\0.\2636`\0\0\0\0/~Kp\0\0\0\0000\223\30`\0\0\0\0001gg\360\0\0\0\0002r\372`\0\0\0\0003GI\360\0\0\0\0004R\334`\0\0\0\0005\'+\360\0\0\0\00062\276`\0\0\0\0007\7\r\360\0\0\0\0008\33\332\340\0\0\0\0008\346\357\360\0\0\0\0009\373\274\340\0\0\0\0:\306\321\360\0\0\0\0;\333\236\340\0\0\0\0<\257\356p\0\0\0\0=\273\200\340\0\0\0\0>\217\320p\0\0\0\0?\233b\340\0\0\0\0@o\262p\0\0\0\0A\204\177`\0\0\0\0BO\224p\0\0\0\0Cda`\0\0\0\0D/vp\0\0\0\0EDC`\0\0\0\0E\363\250\360\0\0\0\0G-_\340\0\0\0\0G\323\212\360\0\0\0\0I\rA\340\0\0\0\0I\263l\360\0\0\0\0J\355#\340\0\0\0\0K\234\211p\0\0\0\0L\326@`\0\0\0\0M|kp\0\0\0\0N\266\"`\0\0\0\0O\\Mp\0\0\0\0P\226\4`\0\0\0\0Q</p\0\0\0\0Ru\346`\0\0\0\0S\34\21p\0\0\0\0TU\310`\0\0\0\0T\373\363p\0\0\0\0V5\252`\0\0\0\0V\345\17\360\0\0\0\0X\36\306\340\0\0\0\0X\304\361\360\0\0\0\0Y\376\250\340\0\0\0\0Z\244\323\360\0\0\0\0[\336\212\340\0\0\0\0\\\204\265\360\0\0\0\0]\276l\340\0\0\0\0^d\227\360\0\0\0\0_\236N\340\0\0\0\0`M\264p\0\0\0\0a\207k`\0\0\0\0b-\226p\0\0\0\0cgM`\0\0\0\0d\rxp\0\0\0\0eG/`\0\0\0\0e\355Zp\0\0\0\0g\'\21`\0\0\0\0g\315<p\0\0\0\0i\6\363`\0\0\0\0i\255\36p\0\0\0\0j\346\325`\0\0\0\0k\226:\360\0\0\0\0l\317\361\340\0\0\0\0mv\34\360\0\0\0\0n\257\323\340\0\0\0\0oU\376\360\0\0\0\0p\217\265\340\0\0\0\0q5\340\360\0\0\0\0ro\227\340\0\0\0\0s\25\302\360\0\0\0\0tOy\340\0\0\0\0t\376\337p\0\0\0\0v8\226`\0\0\0\0v\336\301p\0\0\0\0x\30x`\0\0\0\0x\276\243p\0\0\0\0y\370Z`\0\0\0\0z\236\205p\0\0\0\0{\330<`\0\0\0\0|~gp\0\0\0\0}\270\36`\0\0\0\0~^Ip\0\0\0\0\177\230\0`\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\3\4\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\1\2\377\377\272\236\0\0\377\377\307\300\1\4\377\377\271\260\0\10\377\377\307\300\1\f\377\377\307\300\1\20LMT\0EDT\0EST\0EWT\0EPT\0\0\0\0\0\1\0\0\0\0\1\nEST5EDT,M3.2.0,M11.1.0\n", 4096) = 3519
11213 15:06:07.156259 _llseek(3, -24, [3495], SEEK_CUR) = 0
11213 15:06:07.156317 read(3, "\nEST5EDT,M3.2.0,M11.1.0\n", 4096) = 24
11213 15:06:07.156377 close(3)          = 0
11213 15:06:07.156421 munmap(0xb7f21000, 4096) = 0
11213 15:06:07.156484 stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11213 15:06:07.156580 stat64("/etc/localtime", {st_mode=S_IFREG|0644, st_size=3519, ...}) = 0
11213 15:06:07.156699 rt_sigaction(SIGPIPE, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.156767 setrlimit(RLIMIT_AS, {rlim_cur=102400*1024, rlim_max=102400*1024}) = 0
11213 15:06:07.156817 open("/var/log/vsftpd.log", O_WRONLY|O_CREAT|O_APPEND|O_NONBLOCK|O_LARGEFILE, 0600) = 3
11213 15:06:07.156963 setsockopt(0, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11213 15:06:07.157038 setsockopt(0, SOL_TCP, TCP_NODELAY, [1], 4) = 0
11213 15:06:07.157093 setsockopt(0, SOL_SOCKET, SO_OOBINLINE, [1], 4) = 0
11213 15:06:07.157143 rt_sigaction(SIGTERM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.157203 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.157263 prctl(0x1, 0xf, 0, 0, 0) = 0
11213 15:06:07.157316 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11213 15:06:07.157378 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.157435 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.157492 clone(child_stack=0, flags=0x40000000|SIGCHLD) = -1 EINVAL (Invalid argument)
11213 15:06:07.157691 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d876f8) = 11214
11214 15:06:07.158001 prctl(0x1, 0x9, 0, 0, 0) = 0
11214 15:06:07.158064 close(4)          = 0
11214 15:06:07.158210 lstat64("/usr/share/empty", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11214 15:06:07.158307 getuid32()        = 0
11214 15:06:07.158385 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11214 15:06:07.158457 _llseek(4, 0, [0], SEEK_CUR) = 0
11214 15:06:07.158522 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11214 15:06:07.158601 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f21000
11214 15:06:07.158652 _llseek(4, 1624, [1624], SEEK_SET) = 0
11214 15:06:07.158820 munmap(0xb7f21000, 1624) = 0
11214 15:06:07.159092 close(4)          = 0
11214 15:06:07.159221 setgroups32(0, []) = 0
11214 15:06:07.159311 chdir("/usr/share/empty") = 0
11214 15:06:07.159414 chroot(".")       = 0
11214 15:06:07.159494 setrlimit(RLIMIT_NOFILE, {rlim_cur=0, rlim_max=0}) = 0
11214 15:06:07.159554 setgid32(65534)   = 0
11214 15:06:07.159600 setuid32(65534)   = 0
11214 15:06:07.159643 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11214 15:06:07.159699 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11214 15:06:07.159826 alarm(300)        = 0
11214 15:06:07.159891 gettimeofday({1495652767, 159909}, NULL) = 0
11214 15:06:07.159950 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe5e7d4) = -1 ENOENT (No such file or directory)
11214 15:06:07.160015 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 EMFILE (Too many open files)
11214 15:06:07.160158 getpid()          = 11214
11214 15:06:07.160236 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe5e924) = 0
11214 15:06:07.160253 write(3, "Wed May 24 15:06:07 2017 [pid 11214] CONNECT: Client \"127.0.0.1\"\n", 65) = 65
11214 15:06:07.160253 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe5e92c) = 0
11214 15:06:07.160253 write(0, "220 (vsFTPd 2.3.4)\r\n", 20) = 20
11214 15:06:07.160529 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11214 15:06:07.160598 alarm(300)        = 300
11214 15:06:07.160650 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1f000
11214 15:06:07.160703 mprotect(0xb7f21000, 4096, PROT_NONE) = 0
11214 15:06:07.160756 mprotect(0xb7f1f000, 4096, PROT_NONE) = 0
11214 15:06:07.160812 recv(0, "USER msfadmin\r\n", 4096, MSG_PEEK) = 15
11214 15:06:07.160870 read(0, "USER msfadmin\r\n", 15) = 15
11214 15:06:07.160941 write(0, "331 Please specify the password.\r\n", 34) = 34
11214 15:06:07.161098 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11214 15:06:07.161161 alarm(300)        = 300
11214 15:06:07.161283 recv(0, "PASS msfadmin\r\n", 4096, MSG_PEEK) = 15
11214 15:06:07.161342 read(0, "PASS msfadmin\r\n", 15) = 15
11214 15:06:07.161397 write(5, "\1", 1) = 1
11214 15:06:07.161448 write(5, "\10\0\0\0", 4) = 4
11214 15:06:07.161497 write(5, "msfadmin", 8) = 8
11214 15:06:07.161543 write(5, "\10\0\0\0", 4) = 4
11214 15:06:07.161589 write(5, "msfadmin", 8) = 8
11214 15:06:07.161634 write(5, "\0\0\0\0", 4) = 4
11214 15:06:07.161681 write(5, "\0\0\0\0", 4) = 4
11214 15:06:07.162120 read(5,  <unfinished ...>
11213 15:06:07.162382 close(5)          = 0
11213 15:06:07.162544 read(4, "\1", 1)  = 1
11213 15:06:07.162680 read(4, "\10\0\0\0", 4) = 4
11213 15:06:07.162807 read(4, "msfadmin", 8) = 8
11213 15:06:07.162865 read(4, "\10\0\0\0", 4) = 4
11213 15:06:07.162915 read(4, "msfadmin", 8) = 8
11213 15:06:07.162963 read(4, "\0\0\0\0", 4) = 4
11213 15:06:07.163012 read(4, "\0\0\0\0", 4) = 4
11213 15:06:07.163129 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.163241 open("/etc/pam.d/ftp", O_RDONLY|O_LARGEFILE) = 5
11213 15:06:07.163305 fstat64(5, {st_mode=S_IFREG|0644, st_size=408, ...}) = 0
11213 15:06:07.163378 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
11213 15:06:07.163430 read(5, "# Standard behaviour for ftpd(8).\nauth\trequired\tpam_listfile.so item=user sense=deny file=/etc/ftpusers onerr=succeed\n\n# This line is required by ftpd(8).\nauth\tsufficient\tpam_ftp.so\n\n# Uncomment this to achieve what used to be ftpd -A.\n#auth\trequired\tpam_listfile.so item=user sense=allow file=/etc/ftpchroot onerr=fail\n\n# Standard blurb.\n@include common-auth\n@include common-account\n@include common-session\n", 4096) = 408
11213 15:06:07.163714 open("/lib/security/pam_listfile.so", O_RDONLY) = 6
11213 15:06:07.163786 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\n\0\0004\0\0\0P \0\0\0\0\0\0004\0 \0\4\0(\0\31\0\30\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\36\0\0\24\36\0\0\5\0\0\0\0\20\0\0\1\0\0\0\24\36\0\0\24.\0\0\24.\0\0l\1\0\0p\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0(\36\0\0(.\0\0(.\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0003\0\0\0 \0\0\0\0\0\0\0\21\0\0\0\0\0\0\0\30\0\0\0\0\0\0\0\33\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0\0\0\0\0\23\0\0\0\17\0\0\0\34\0\0\0\2\0\0\0\16\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\25\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\24\0\0\0\20\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\35\0\0\0\n\0\0\0\1\0\0\0\t\0\0\0\0\0\0\0\22\0\0\0\26\0\0\0\v\0\0\0\4\0\0\0\7\0\0\0\5\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0", 512) = 512
11213 15:06:07.164168 fstat64(6, {st_mode=S_IFREG|0644, st_size=9272, ...}) = 0
11213 15:06:07.164245 mmap2(NULL, 12164, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f1e000
11213 15:06:07.164297 mmap2(0xb7f20000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0x1) = 0xb7f20000
11213 15:06:07.164359 close(6)          = 0
11213 15:06:07.164509 open("/lib/security/pam_ftp.so", O_RDONLY) = 6
11213 15:06:07.164616 read(6, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0@\5\0\0004\0\0\0\264\f\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\240\n\0\0\240\n\0\0\5\0\0\0\0\20\0\0\1\0\0\0\240\n\0\0\240\32\0\0\240\32\0\0<\1\0\0@\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\274\n\0\0\274\32\0\0\274\32\0\0\330\0\0\0\330\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\30\0\0\0\16\0\0\0\v\0\0\0\0\0\0\0\1\0\0\0\3\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\4\0\0\0\t\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\r\0\0\0\6\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\7\0\0\0\10\0\0\0\f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\5\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\f\0\0\0\1\0\0\0\5\0\0\0\1H@\0\f\0\0\0\r\0\0\0\301\225Y\346\313\306\36\377\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\354\2\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0\0\0\0\0 \0\0\0c\0\0\0\0\0\0\0;\0\0\0\22\0\0\0\225\0\0\0\0\0\0\0.\3\0\0\22\0\0\0y\0\0\0\0\0\0\0\343\0\0\0\22\0\0\0\216\0\0\0\0\0\0\0\22\1\0\0\22\0\0\0n\0\0\0\0\0\0\0", 512) = 512
11213 15:06:07.165004 fstat64(6, {st_mode=S_IFREG|0644, st_size=4292, ...}) = 0
11213 15:06:07.165081 mmap2(NULL, 7136, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 6, 0) = 0xb7f1c000
11213 15:06:07.165133 mmap2(0xb7f1d000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 6, 0) = 0xb7f1d000
11213 15:06:07.165208 close(6)          = 0
11213 15:06:07.165303 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.165390 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.165447 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11213 15:06:07.165517 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.165615 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11213 15:06:07.165826 open("/lib/security/pam_unix.so", O_RDONLY) = 7
11213 15:06:07.165883 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\20\37\0\0004\0\0\0\374\264\0\0\0\0\0\0004\0 \0\4\0(\0\32\0\31\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0x\257\0\0x\257\0\0\5\0\0\0\0\20\0\0\1\0\0\0\0\260\0\0\0\260\0\0\0\260\0\0$\4\0\0\304\304\0\0\6\0\0\0\0\20\0\0\2\0\0\0d\261\0\0d\261\0\0d\261\0\0\360\0\0\0\360\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\333\0\0\0p\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0Z\0\0\0\0\0\0\0[\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0Y\0\0\0\0\0\0\0\0\0\0\0\n\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\0\0\0]\0\0\0\30\0\0\0\0\0\0\0\5\0\0\0\36\0\0\0,\0\0\0k\0\0\0\33\0\0\0_\0\0\0\0\0\0\0\0\0\0\0U\0\0\0\0\0\0\0d\0\0\0\0\0\0\0\27\0\0\0f\0\0\0^\0\0\0\0\0\0\0\0\0\0\0B\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0a\0\0\0\10\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0`\0\0\0\t\0\0\0\35\0\0\0$\0\0\0\0\0\0\0004\0\0\0002\0\0\0\21\0\0\0W\0\0\0\r\0\0\0\0\0\0\0001\0\0\0n\0\0\0\0\0\0\0006\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\37\0\0\0\0\0\0\0\0\0\0\0.\0\0\0!\0\0\0", 512) = 512
11213 15:06:07.166255 fstat64(7, {st_mode=S_IFREG|0644, st_size=47372, ...}) = 0
11213 15:06:07.166330 mmap2(NULL, 95428, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d51000
11213 15:06:07.166381 mmap2(0xb7d5c000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0xb) = 0xb7d5c000
11213 15:06:07.166444 mmap2(0xb7d5d000, 46276, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d5d000
11213 15:06:07.166649 close(7)          = 0
11213 15:06:07.166720 open("/etc/ld.so.cache", O_RDONLY) = 7
11213 15:06:07.166776 fstat64(7, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
11213 15:06:07.166847 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 7, 0) = 0xb7d49000
11213 15:06:07.166894 close(7)          = 0
11213 15:06:07.166942 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11213 15:06:07.167014 open("/lib/tls/i686/cmov/libcrypt.so.1", O_RDONLY) = 7
11213 15:06:07.167078 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0000\7\0\0004\0\0\0<\221\0\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340\210\0\0\340\210\0\0\340\210\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\f\212\0\0\f\212\0\0\5\0\0\0\0\20\0\0\1\0\0\0\350\216\0\0\350\236\0\0\350\236\0\0`\1\0\0tr\2\0\6\0\0\0\0\20\0\0\2\0\0\0\374\216\0\0\374\236\0\0\374\236\0\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\350\216\0\0\350\236\0\0\350\236\0\0\f\1\0\0\f\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\17\0\0\0\22\0\0\0\2\0\0\0\6\0\0\0\4\311\240, \4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\22\0\0\0\23\0\0\0\24\0\0\0\0\0\0\0\25\0\0\0\26\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\30\0\0\0\31\0\0\0\0\0\0\0k\31Qj\233(\375B\233`\205\33\327\16?\17I->\333\235C\r\375\313\373_\22\325=l\366\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0o\0\0\0\0\0\0\0\35\0\0\0\22\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\37\0\0\0\0\0\0\0", 512) = 512
11213 15:06:07.167477 fstat64(7, {st_mode=S_IFREG|0644, st_size=38300, ...}) = 0
11213 15:06:07.167559 mmap2(NULL, 201052, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7d17000
11213 15:06:07.167658 mmap2(0xb7d20000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x8) = 0xb7d20000
11213 15:06:07.167728 mmap2(0xb7d22000, 155996, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7d22000
11213 15:06:07.167794 close(7)          = 0
11213 15:06:07.167850 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
11213 15:06:07.167914 open("/lib/libselinux.so.1", O_RDONLY) = 7
11213 15:06:07.167969 read(7, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\300@\0\0004\0\0\0\224r\1\0\0\0\0\0004\0 \0\6\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\230f\1\0\230f\1\0\5\0\0\0\0\20\0\0\1\0\0\0\240n\1\0\240~\1\0\240~\1\0\20\3\0\0\234\f\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320n\1\0\320~\1\0\320~\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\7\0\0\0\240n\1\0\240~\1\0\240~\1\0\0\0\0\0\\\0\0\0\4\0\0\0 \0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\240n\1\0\240~\1\0\240~\1\0T\1\0\0T\1\0\0\4\0\0\0\1\0\0\0\7\1\0\0#\1\0\0\0\0\0\0\24\0\0\0\v\1\0\0\306\0\0\0\0\0\0\0\36\1\0\0\330\0\0\0 \1\0\0001\0\0\0\345\0\0\0\34\0\0\0\206\0\0\0\212\0\0\0\234\0\0\0\0\0\0\0*\0\0\0\0\0\0\0\0\0\0\0\370\0\0\0004\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\224\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\244\0\0\0\347\0\0\0\373\0\0\0\0\0\0\0\304\0\0\0\257\0\0\0\0\0\0\0!\1\0\0\0\0\0\0\307\0\0\0\235\0\0\0\25\1\0\0`\0\0\0\0\0\0\0\256\0\0\0\374\0\0\0O\0\0\0i\0\0\0^\0\0\0\337\0\0\0-\0\0\0m\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\260\0\0\0\314\0\0\0\6\0\0\0\276\0\0\0{\0\0\0\226\0\0\0\0\0\0\0E\0\0\0\33\0\0\0\371\0\0\0", 512) = 512
11213 15:06:07.168349 fstat64(7, {st_mode=S_IFREG|0644, st_size=95948, ...}) = 0
11213 15:06:07.168425 mmap2(NULL, 101180, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 7, 0) = 0xb7cfe000
11213 15:06:07.168476 mmap2(0xb7d15000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x16) = 0xb7d15000
11213 15:06:07.168583 close(7)          = 0
11213 15:06:07.169013 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11213 15:06:07.169127 statfs64("/selinux", 84, 0xbfe5c8fc) = -1 ENOENT (No such file or directory)
11213 15:06:07.169183 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11213 15:06:07.169280 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11213 15:06:07.169355 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1a000
11213 15:06:07.169405 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11213 15:06:07.169706 read(7, "", 1024) = 0
11213 15:06:07.169730 close(7)          = 0
11213 15:06:07.169752 munmap(0xb7f1a000, 4096) = 0
11213 15:06:07.169784 munmap(0xb7d49000, 29913) = 0
11213 15:06:07.169813 read(6, "", 4096) = 0
11213 15:06:07.169836 close(6)          = 0
11213 15:06:07.169855 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.169878 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.169928 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.169956 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11213 15:06:07.169989 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.170012 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11213 15:06:07.170071 read(6, "", 4096) = 0
11213 15:06:07.170071 close(6)          = 0
11213 15:06:07.170071 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.170071 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.170071 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.170081 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11213 15:06:07.170115 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.170137 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11213 15:06:07.170249 read(6, "", 4096) = 0
11213 15:06:07.170272 close(6)          = 0
11213 15:06:07.170292 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.170314 read(5, "", 4096) = 0
11213 15:06:07.170333 close(5)          = 0
11213 15:06:07.170352 munmap(0xb7f21000, 4096) = 0
11213 15:06:07.170374 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11213 15:06:07.170408 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11213 15:06:07.170435 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
11213 15:06:07.170453 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11213 15:06:07.170527 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.170558 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.170578 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11213 15:06:07.170604 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.170622 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11213 15:06:07.170698 read(6, "", 4096) = 0
11213 15:06:07.170714 close(6)          = 0
11213 15:06:07.170730 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.170748 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.170778 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.170800 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11213 15:06:07.170832 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.170850 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11213 15:06:07.170914 read(6, "", 4096) = 0
11213 15:06:07.170930 close(6)          = 0
11213 15:06:07.170946 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.170963 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.170993 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.171015 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11213 15:06:07.171041 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.171058 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11213 15:06:07.171297 read(6, "", 4096) = 0
11213 15:06:07.171319 close(6)          = 0
11213 15:06:07.171335 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.171355 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11213 15:06:07.171387 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11213 15:06:07.171409 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11213 15:06:07.171436 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
11213 15:06:07.171454 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11213 15:06:07.171518 read(6, "", 4096) = 0
11213 15:06:07.171534 close(6)          = 0
11213 15:06:07.171550 munmap(0xb7f1b000, 4096) = 0
11213 15:06:07.171567 read(5, "", 4096) = 0
11213 15:06:07.171582 close(5)          = 0
11213 15:06:07.171598 munmap(0xb7f21000, 4096) = 0
11213 15:06:07.171619 time(NULL)        = 1495652767
11213 15:06:07.171640 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11213 15:06:07.171657 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11213 15:06:07.171658 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11213 15:06:07.171658 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
11213 15:06:07.171658 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11213 15:06:07.171658 read(5, "", 4096) = 0
11213 15:06:07.171658 close(5)          = 0
11213 15:06:07.171664 munmap(0xb7f21000, 4096) = 0
11213 15:06:07.171693 getuid32()        = 0
11213 15:06:07.171721 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.171746 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.171765 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11213 15:06:07.171826 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.171847 _llseek(5, 1624, [1624], SEEK_SET) = 0
11213 15:06:07.171881 munmap(0xb7f21000, 1624) = 0
11213 15:06:07.171899 close(5)          = 0
11213 15:06:07.171942 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.171972 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.171990 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11213 15:06:07.172016 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.172034 _llseek(5, 1233, [1233], SEEK_SET) = 0
11213 15:06:07.172067 munmap(0xb7f21000, 1233) = 0
11213 15:06:07.172083 close(5)          = 0
11213 15:06:07.172115 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.172136 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.172153 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11213 15:06:07.172180 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.172197 _llseek(5, 1624, [1624], SEEK_SET) = 0
11213 15:06:07.172224 munmap(0xb7f21000, 1624) = 0
11213 15:06:07.172239 close(5)          = 0
11213 15:06:07.172260 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.172281 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.172298 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11213 15:06:07.172324 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.172341 _llseek(5, 1233, [1233], SEEK_SET) = 0
11213 15:06:07.172368 munmap(0xb7f21000, 1233) = 0
11213 15:06:07.172383 close(5)          = 0
11213 15:06:07.172780 getuid32()        = 0
11213 15:06:07.172802 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.172823 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.172841 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11213 15:06:07.172867 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.172885 _llseek(5, 1624, [1624], SEEK_SET) = 0
11213 15:06:07.172911 munmap(0xb7f21000, 1624) = 0
11213 15:06:07.172927 close(5)          = 0
11213 15:06:07.172949 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11213 15:06:07.172969 _llseek(5, 0, [0], SEEK_CUR) = 0
11213 15:06:07.172986 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11213 15:06:07.173012 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
11213 15:06:07.173029 _llseek(5, 1233, [1233], SEEK_SET) = 0
11213 15:06:07.173056 munmap(0xb7f21000, 1233) = 0
11213 15:06:07.173072 close(5)          = 0
11213 15:06:07.173091 time(NULL)        = 1495652767
11213 15:06:07.173117 munmap(0xb7f1e000, 12164) = 0
11213 15:06:07.173139 munmap(0xb7f1c000, 7136) = 0
11213 15:06:07.173163 munmap(0xb7d51000, 95428) = 0
11213 15:06:07.173181 munmap(0xb7d17000, 201052) = 0
11213 15:06:07.173200 munmap(0xb7cfe000, 101180) = 0
11213 15:06:07.173227 gettimeofday({1495652767, 173234}, NULL) = 0
11213 15:06:07.173246 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfe5e7d4) = -1 ENOENT (No such file or directory)
11213 15:06:07.173271 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11213 15:06:07.173316 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe5e924) = 0
11213 15:06:07.173344 write(3, "Wed May 24 15:06:07 2017 [pid 11213] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11213 15:06:07.173379 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfe5e92c) = 0
11213 15:06:07.173402 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11213 15:06:07.173426 write(4, "\1", 1 <unfinished ...>
11214 15:06:07.173443 <... read resumed> "\1", 1) = 1
11213 15:06:07.173452 <... write resumed> ) = 1
11214 15:06:07.173466 exit_group(0)     = ?
11213 15:06:07.173524 --- SIGCHLD (Child exited) @ 0 (0) ---
11213 15:06:07.173537 sigreturn()       = ? (mask now [])
