10684 15:00:35.656384 read(6, "", 4096) = 0
10684 15:00:35.656401 close(6)          = 0
10684 15:00:35.656417 munmap(0xb7f1b000, 4096) = 0
10684 15:00:35.656436 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10684 15:00:35.656467 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
10684 15:00:35.656489 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
10684 15:00:35.656517 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
10684 15:00:35.656535 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
10684 15:00:35.656727 read(6, "", 4096) = 0
10684 15:00:35.656793 close(6)          = 0
10684 15:00:35.656811 munmap(0xb7f1b000, 4096) = 0
10684 15:00:35.656831 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
10684 15:00:35.656864 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
10684 15:00:35.656888 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
10684 15:00:35.656916 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1b000
10684 15:00:35.656934 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
10684 15:00:35.657017 read(6, "", 4096) = 0
10684 15:00:35.657036 close(6)          = 0
10684 15:00:35.657053 munmap(0xb7f1b000, 4096) = 0
10684 15:00:35.657072 read(5, "", 4096) = 0
10684 15:00:35.657088 close(5)          = 0
10684 15:00:35.657104 munmap(0xb7f21000, 4096) = 0
10684 15:00:35.657128 time(NULL)        = 1495652435
10684 15:00:35.657148 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10684 15:00:35.657181 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
10684 15:00:35.657202 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
10684 15:00:35.657236 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f21000
10684 15:00:35.657256 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
10684 15:00:35.657291 read(5, "", 4096) = 0
10684 15:00:35.657308 close(5)          = 0
10684 15:00:35.657324 munmap(0xb7f21000, 4096) = 0
10684 15:00:35.657351 getuid32()        = 0
10684 15:00:35.657381 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.657407 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.657427 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10684 15:00:35.657455 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.657475 _llseek(5, 1624, [1624], SEEK_SET) = 0
10684 15:00:35.657509 munmap(0xb7f21000, 1624) = 0
10684 15:00:35.657528 close(5)          = 0
10684 15:00:35.657572 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.657602 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.657621 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10684 15:00:35.657648 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.657667 _llseek(5, 1233, [1233], SEEK_SET) = 0
10684 15:00:35.657701 munmap(0xb7f21000, 1233) = 0
10684 15:00:35.657718 close(5)          = 0
10684 15:00:35.657751 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.657773 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.657791 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10684 15:00:35.657819 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.657837 _llseek(5, 1624, [1624], SEEK_SET) = 0
10684 15:00:35.657865 munmap(0xb7f21000, 1624) = 0
10684 15:00:35.657881 close(5)          = 0
10684 15:00:35.657903 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.657935 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.657955 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10684 15:00:35.657983 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.658002 _llseek(5, 1233, [1233], SEEK_SET) = 0
10684 15:00:35.658031 munmap(0xb7f21000, 1233) = 0
10684 15:00:35.658049 close(5)          = 0
10684 15:00:35.658439 getuid32()        = 0
10684 15:00:35.658459 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.658482 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.658500 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10684 15:00:35.658528 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.658546 _llseek(5, 1624, [1624], SEEK_SET) = 0
10684 15:00:35.658573 munmap(0xb7f21000, 1624) = 0
10684 15:00:35.658590 close(5)          = 0
10684 15:00:35.658612 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.658634 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.658652 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
10684 15:00:35.658683 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.658701 _llseek(5, 1233, [1233], SEEK_SET) = 0
10684 15:00:35.658730 munmap(0xb7f21000, 1233) = 0
10684 15:00:35.658747 close(5)          = 0
10684 15:00:35.658767 time(NULL)        = 1495652435
10684 15:00:35.658794 munmap(0xb7f1e000, 12164) = 0
10684 15:00:35.658817 munmap(0xb7f1c000, 7136) = 0
10684 15:00:35.658841 munmap(0xb7d51000, 95428) = 0
10684 15:00:35.658861 munmap(0xb7d17000, 201052) = 0
10684 15:00:35.658880 munmap(0xb7cfe000, 101180) = 0
10684 15:00:35.658922 gettimeofday({1495652435, 658929}, NULL) = 0
10684 15:00:35.658943 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf8cda44) = -1 ENOENT (No such file or directory)
10684 15:00:35.658970 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
10684 15:00:35.659018 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cdb94) = 0
10684 15:00:35.659048 write(3, "Wed May 24 15:00:35 2017 [pid 10684] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
10684 15:00:35.659084 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cdb9c) = 0
10684 15:00:35.659109 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10684 15:00:35.659134 write(4, "\1", 1 <unfinished ...>
10685 15:00:35.659154 <... read resumed> "\1", 1) = 1
10684 15:00:35.659163 <... write resumed> ) = 1
10685 15:00:35.659178 exit_group(0)     = ?
10684 15:00:35.659240 --- SIGCHLD (Child exited) @ 0 (0) ---
10684 15:00:35.659252 sigreturn()       = ? (mask now [])
10684 15:00:35.659284 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10685
10684 15:00:35.659306 close(4)          = 0
10684 15:00:35.659327 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
10684 15:00:35.659352 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10684 15:00:35.659376 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10684 15:00:35.659400 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d876f8) = 10686
10686 15:00:35.659488 prctl(0x1, 0x9, 0, 0, 0) = 0
10686 15:00:35.659512 close(4)          = 0
10686 15:00:35.659559 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10686 15:00:35.659588 _llseek(4, 0, [0], SEEK_CUR) = 0
10686 15:00:35.659615 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10686 15:00:35.659693 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f21000
10686 15:00:35.659717 _llseek(4, 1624, [1624], SEEK_SET) = 0
10686 15:00:35.659757 munmap(0xb7f21000, 1624) = 0
10686 15:00:35.659777 close(4)          = 0
10686 15:00:35.659801 getuid32()        = 0
10686 15:00:35.659819 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
10686 15:00:35.659860 _llseek(4, 0, [0], SEEK_CUR) = 0
10686 15:00:35.659880 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10686 15:00:35.659908 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f21000
10686 15:00:35.659927 _llseek(4, 1624, [1624], SEEK_SET) = 0
10686 15:00:35.659955 munmap(0xb7f21000, 1624) = 0
10686 15:00:35.659973 close(4)          = 0
10686 15:00:35.660019 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
10686 15:00:35.660054 read(4, "65536\n", 31) = 6
10686 15:00:35.660075 close(4)          = 0
10686 15:00:35.660099 socket(PF_FILE, SOCK_STREAM, 0) = 4
10686 15:00:35.660121 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10686 15:00:35.660140 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10686 15:00:35.660177 close(4)          = 0
10686 15:00:35.660197 socket(PF_FILE, SOCK_STREAM, 0) = 4
10686 15:00:35.660215 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10686 15:00:35.660233 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
10686 15:00:35.660264 close(4)          = 0
10686 15:00:35.660304 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
10686 15:00:35.660329 _llseek(4, 0, [0], SEEK_CUR) = 0
10686 15:00:35.660348 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10686 15:00:35.660377 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f21000
10686 15:00:35.660396 _llseek(4, 886, [886], SEEK_SET) = 0
10686 15:00:35.660438 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
10686 15:00:35.660467 munmap(0xb7f21000, 886) = 0
10686 15:00:35.660485 close(4)          = 0
10686 15:00:35.660502 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
10686 15:00:35.660531 geteuid32()       = 0
10686 15:00:35.660550 getegid32()       = 0
10686 15:00:35.660569 setregid32(-1, 1000) = 0
10686 15:00:35.660587 setreuid32(-1, 1000) = 0
10686 15:00:35.660606 chdir("/home/msfadmin") = 0
10686 15:00:35.660627 setreuid32(-1, 0) = 0
10686 15:00:35.660642 setregid32(-1, 0) = 0
10686 15:00:35.660661 setgid32(1000)    = 0
10686 15:00:35.660678 setuid32(1000)    = 0
10686 15:00:35.660696 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
10686 15:00:35.660719 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1f000
10686 15:00:35.660739 mprotect(0xb7f21000, 4096, PROT_NONE) = 0
10686 15:00:35.660766 mprotect(0xb7f1f000, 4096, PROT_NONE) = 0
10686 15:00:35.660785 getcwd("/home/msfadmin", 4096) = 15
10686 15:00:35.660815 umask(022)        = 077
10686 15:00:35.660837 getcwd("/home/msfadmin", 4096) = 15
10686 15:00:35.660862 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
10686 15:00:35.660902 write(0, "230 Login successful.\r\n", 23) = 23
10686 15:00:35.661072 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.661103 alarm(300)        = 0
10686 15:00:35.661123 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f1c000
10686 15:00:35.661143 mprotect(0xb7f1e000, 4096, PROT_NONE) = 0
10686 15:00:35.661163 mprotect(0xb7f1c000, 4096, PROT_NONE) = 0
10686 15:00:35.661186 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
10686 15:00:35.661209 read(0, "TYPE I\r\n", 8) = 8
10686 15:00:35.661238 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
10686 15:00:35.661304 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.661329 alarm(300)        = 300
10686 15:00:35.661349 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
10686 15:00:35.661369 read(0, "PASV\r\n", 6) = 6
10686 15:00:35.661390 write(5, "\n", 1) = 1
10686 15:00:35.661409 read(5,  <unfinished ...>
10684 15:00:35.661431 close(5)          = 0
10684 15:00:35.661453 getuid32()        = 0
10684 15:00:35.661479 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
10684 15:00:35.661505 _llseek(5, 0, [0], SEEK_CUR) = 0
10684 15:00:35.661527 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
10684 15:00:35.661557 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f21000
10684 15:00:35.661577 _llseek(5, 1624, [1624], SEEK_SET) = 0
10684 15:00:35.661607 munmap(0xb7f21000, 1624) = 0
10684 15:00:35.661628 close(5)          = 0
10684 15:00:35.661655 setgroups32(0, []) = 0
10684 15:00:35.661675 chdir("/usr/share/empty") = 0
10684 15:00:35.661696 chroot(".")       = 0
10684 15:00:35.661715 capset(NULL, NULL) = -1 EFAULT (Bad address)
10684 15:00:35.661738 prctl(0x8, 0, 0xbf8cdb78, 0x80549a6, 0xbf8cdb60) = 0
10684 15:00:35.661758 prctl(0x8, 0x1, 0xbf8cdb78, 0x8054a49, 0xbf8cdb60) = 0
10684 15:00:35.661790 setgid32(65534)   = 0
10684 15:00:35.661813 setuid32(65534)   = 0
10684 15:00:35.661830 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
10684 15:00:35.661855 read(4, "\n", 1)  = 1
10684 15:00:35.661879 write(4, "\1", 1) = 1
10686 15:00:35.661898 <... read resumed> "\1", 1) = 1
10686 15:00:35.661912 write(5, "\f", 1) = 1
10686 15:00:35.661930 read(5,  <unfinished ...>
10684 15:00:35.661942 read(4, "\f", 1)  = 1
10684 15:00:35.661964 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
10684 15:00:35.661987 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
10684 15:00:35.662008 gettimeofday({1495652435, 662014}, NULL) = 0
10684 15:00:35.662036 bind(5, {sa_family=AF_INET, sin_port=htons(38902), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
10684 15:00:35.662064 listen(5, 1)      = 0
10684 15:00:35.662087 write(4, "\366\227\0\0", 4) = 4
10686 15:00:35.662106 <... read resumed> "\366\227\0\0", 4) = 4
10686 15:00:35.662130 write(0, "227 Entering Passive Mode (127,0,0,1,151,246).\r\n", 48) = 48
10686 15:00:35.662299 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.662329 alarm(300)        = 300
10686 15:00:35.662349 recv(0, "STOR myfile25\r\n", 4096, MSG_PEEK) = 15
10686 15:00:35.662371 read(0, "STOR myfile25\r\n", 15) = 15
10686 15:00:35.662397 write(5, "\v", 1) = 1
10686 15:00:35.662416 read(5,  <unfinished ...>
10684 15:00:35.662429 read(4, "\v", 1)  = 1
10684 15:00:35.662449 write(4, "\1\0\0\0", 4) = 4
10686 15:00:35.662468 <... read resumed> "\1\0\0\0", 4) = 4
10686 15:00:35.662483 gettimeofday({1495652435, 662489}, NULL) = 0
10686 15:00:35.662502 getcwd("/home/msfadmin", 4096) = 15
10686 15:00:35.662524 open("myfile25", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
10686 15:00:35.662548 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
10686 15:00:35.662578 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
10686 15:00:35.662604 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
10686 15:00:35.662621 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cdac4) = 0
10686 15:00:35.662648 ftruncate64(4, 0) = 0
10686 15:00:35.662678 _llseek(4, 0, [0], SEEK_SET) = 0
10686 15:00:35.662698 write(5, "\v", 1) = 1
10686 15:00:35.662717 read(5,  <unfinished ...>
10684 15:00:35.662729 read(4, "\v", 1)  = 1
10684 15:00:35.662767 write(4, "\1\0\0\0", 4) = 4
10686 15:00:35.662790 <... read resumed> "\1\0\0\0", 4) = 4
10686 15:00:35.662804 write(5, "\v", 1) = 1
10686 15:00:35.662822 read(5,  <unfinished ...>
10684 15:00:35.662834 read(4, "\v", 1)  = 1
10684 15:00:35.662853 write(4, "\1\0\0\0", 4) = 4
10686 15:00:35.662871 <... read resumed> "\1\0\0\0", 4) = 4
10686 15:00:35.662885 write(5, "\r", 1) = 1
10686 15:00:35.662902 read(5,  <unfinished ...>
10684 15:00:35.662914 read(4, "\r", 1)  = 1
10684 15:00:35.662936 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
10684 15:00:35.662967 accept(5, {sa_family=AF_INET, sin_port=htons(52703), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
10684 15:00:35.663005 write(4, "\1", 1) = 1
10686 15:00:35.663023 <... read resumed> "\1", 1) = 1
10686 15:00:35.663040 recvmsg(5,  <unfinished ...>
10684 15:00:35.663056 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10686 15:00:35.663086 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
10686 15:00:35.663109 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
10686 15:00:35.663131 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
10686 15:00:35.663152 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
10686 15:00:35.663172 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.663195 alarm(300)        = 300
10686 15:00:35.663218 write(0, "150 Ok to send data.\r\n", 22) = 22
10686 15:00:35.663322 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d56000
10686 15:00:35.663346 mprotect(0xb7d68000, 4096, PROT_NONE) = 0
10686 15:00:35.663367 mprotect(0xb7d56000, 4096, PROT_NONE) = 0
10686 15:00:35.663385 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
10686 15:00:35.663409 write(4, "assasaaa\na\na\na\na\n", 17) = 17
10686 15:00:35.663436 read(6, "", 65536) = 0
10686 15:00:35.663454 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.663478 alarm(300)        = 300
10686 15:00:35.663496 close(6)          = 0
10686 15:00:35.663512 alarm(0)          = 300
10686 15:00:35.663529 gettimeofday({1495652435, 663535}, NULL) = 0
10686 15:00:35.663560 getpid()          = 10686
10686 15:00:35.663581 gettimeofday({1495652435, 663588}, NULL) = 0
10686 15:00:35.663615 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cda64) = 0
10686 15:00:35.663643 write(3, "Wed May 24 15:00:35 2017 [pid 10686] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile25\", 17 bytes, 15.11Kbyte/sec\n", 131) = 131
10686 15:00:35.663678 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf8cda6c) = 0
10686 15:00:35.663703 write(0, "226 Transfer complete.\r\n", 24) = 24
10686 15:00:35.663793 write(5, "\n", 1) = 1
10686 15:00:35.663816 read(5,  <unfinished ...>
10684 15:00:35.663828 close(6)          = 0
10684 15:00:35.663859 read(4, "\n", 1)  = 1
10684 15:00:35.663880 close(5)          = 0
10684 15:00:35.663898 write(4, "\1", 1) = 1
10686 15:00:35.663917 <... read resumed> "\1", 1) = 1
10686 15:00:35.663930 close(4)          = 0
10686 15:00:35.663948 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
10686 15:00:35.663972 alarm(300)        = 0
10686 15:00:35.663992 recv(0,  <unfinished ...>
10684 15:00:35.664005 read(4,  <unfinished ...>
10686 15:00:36.177684 <... recv resumed> "QUIT\r\n", 4096, MSG_PEEK) = 6
10686 15:00:36.177879 read(0, "QUIT\r\n", 6) = 6
10686 15:00:36.178079 shutdown(0, 0 /* receive */) = 0
10686 15:00:36.178198 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
10686 15:00:36.178346 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
10686 15:00:36.178400 write(0, "221 Goodbye.\r\n", 14) = 14
10686 15:00:36.178626 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
10686 15:00:36.178679 fcntl64(0, F_SETFL, O_RDWR) = 0
10686 15:00:36.178727 shutdown(0, 2 /* send and receive */) = 0
10686 15:00:36.178807 exit_group(0)     = ?
10684 15:00:36.178971 <... read resumed> 0xbf8cdb77, 1) = ? ERESTARTSYS (To be restarted)
10684 15:00:36.179004 --- SIGCHLD (Child exited) @ 0 (0) ---
10684 15:00:36.179046 alarm(1)          = 0
10684 15:00:36.179095 sigreturn()       = ? (mask now [])
10684 15:00:36.179165 alarm(0)          = 1
10684 15:00:36.179212 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 10686
10684 15:00:36.179326 exit_group(0)     = ?
4439  15:00:36.179484 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:00:36.179514 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:00:36.179546 write(4, "\21", 1) = 1
4439  15:00:36.179608 sigreturn()       = ? (mask now [])
4439  15:00:36.179751 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:00:36.179761 ioctl(3, FIONREAD, [1]) = 0
4439  15:00:36.179825 read(3, "\21", 1) = 1
4439  15:00:36.179883 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 10684
4439  15:00:36.179955 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:00:36.180062 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:00:36.180115 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:00:36.707228 accept(5, {sa_family=AF_INET, sin_port=htons(47917), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:00:36.707460 time(NULL)        = 1495652436
4439  15:00:36.707593 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 10687
10687 15:00:36.707993 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
10687 15:00:36.708065 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
10687 15:00:36.708121 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
10687 15:00:36.708176 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
10687 15:00:36.708241 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
10687 15:00:36.708300 close(3)          = 0
10687 15:00:36.708344 close(4)          = 0
10687 15:00:36.708388 open("/dev/null", O_RDONLY) = 3
10687 15:00:36.708451 dup2(3, 0)        = 0
10687 15:00:36.708542 dup2(3, 1)        = 1
10687 15:00:36.708593 dup2(3, 2)        = 2
10687 15:00:36.708635 close(3)          = 0
10687 15:00:36.708689 setgid32(0)       = 0
10687 15:00:36.708744 setgroups32(0, []) = 0
10687 15:00:36.708791 setuid32(0)       = 0
10687 15:00:36.708842 getpriority(PRIO_PROCESS, 0) = 20
10687 15:00:36.708884 setpriority(PRIO_PROCESS, 0, 10) = 0
10687 15:00:36.708928 getpriority(PRIO_PROCESS, 0) = 10
10687 15:00:36.709084 getpeername(13, {sa_family=AF_INET, sin_port=htons(47917), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
10687 15:00:36.709185 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
10687 15:00:36.709300 open("/etc/hosts.allow", O_RDONLY) = 3
10687 15:00:36.709381 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
10687 15:00:36.709497 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
10687 15:00:36.709565 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
10687 15:00:36.709894 close(3)          = 0
10687 15:00:36.709944 munmap(0xb7f61000, 4096) = 0
10687 15:00:36.709974 fcntl64(13, F_SETFD, 0) = 0
10687 15:00:36.710117 close(7)          = 0
10687 15:00:36.710175 dup2(13, 0)       = 0
