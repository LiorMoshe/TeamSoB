12015 15:14:10.683222 read(7, "", 1024) = 0
12015 15:14:10.683274 close(7)          = 0
12015 15:14:10.683311 munmap(0xb7edd000, 4096) = 0
12015 15:14:10.683350 munmap(0xb7d0c000, 29913) = 0
12015 15:14:10.683387 read(6, "", 4096) = 0
12015 15:14:10.683414 close(6)          = 0
12015 15:14:10.683435 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.683462 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.683509 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.683551 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12015 15:14:10.683589 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.683615 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12015 15:14:10.683725 read(6, "", 4096) = 0
12015 15:14:10.683750 close(6)          = 0
12015 15:14:10.683772 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.683798 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.683843 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.683880 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12015 15:14:10.683938 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.683976 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12015 15:14:10.684152 read(6, "", 4096) = 0
12015 15:14:10.684193 close(6)          = 0
12015 15:14:10.684256 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.684298 read(5, "", 4096) = 0
12015 15:14:10.684329 close(5)          = 0
12015 15:14:10.684351 munmap(0xb7ee4000, 4096) = 0
12015 15:14:10.684382 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
12015 15:14:10.684423 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
12015 15:14:10.684462 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee4000
12015 15:14:10.684488 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
12015 15:14:10.684605 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.684650 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.684680 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
12015 15:14:10.684717 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.684744 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
12015 15:14:10.684865 read(6, "", 4096) = 0
12015 15:14:10.684901 close(6)          = 0
12015 15:14:10.684922 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.684948 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.684992 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.685023 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
12015 15:14:10.685060 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.685095 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
12015 15:14:10.685235 read(6, "", 4096) = 0
12015 15:14:10.685262 close(6)          = 0
12015 15:14:10.685284 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.685311 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.685356 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.685387 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
12015 15:14:10.685430 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.685455 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
12015 15:14:10.685689 read(6, "", 4096) = 0
12015 15:14:10.685690 close(6)          = 0
12015 15:14:10.685690 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.685690 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
12015 15:14:10.685690 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
12015 15:14:10.685691 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
12015 15:14:10.685691 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ede000
12015 15:14:10.685696 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
12015 15:14:10.685794 read(6, "", 4096) = 0
12015 15:14:10.685817 close(6)          = 0
12015 15:14:10.685839 munmap(0xb7ede000, 4096) = 0
12015 15:14:10.685864 read(5, "", 4096) = 0
12015 15:14:10.685886 close(5)          = 0
12015 15:14:10.685907 munmap(0xb7ee4000, 4096) = 0
12015 15:14:10.685939 time(NULL)        = 1495653250
12015 15:14:10.685967 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12015 15:14:10.686010 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
12015 15:14:10.686037 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
12015 15:14:10.686088 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee4000
12015 15:14:10.686113 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
12015 15:14:10.686162 read(5, "", 4096) = 0
12015 15:14:10.686184 close(5)          = 0
12015 15:14:10.686205 munmap(0xb7ee4000, 4096) = 0
12015 15:14:10.686241 getuid32()        = 0
12015 15:14:10.686282 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.686317 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.686343 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12015 15:14:10.686380 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.686406 _llseek(5, 1624, [1624], SEEK_SET) = 0
12015 15:14:10.686451 munmap(0xb7ee4000, 1624) = 0
12015 15:14:10.686481 close(5)          = 0
12015 15:14:10.686541 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.686582 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.686606 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12015 15:14:10.686657 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.686688 _llseek(5, 1233, [1233], SEEK_SET) = 0
12015 15:14:10.686736 munmap(0xb7ee4000, 1233) = 0
12015 15:14:10.686760 close(5)          = 0
12015 15:14:10.686809 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.686841 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.686865 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12015 15:14:10.686902 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.686926 _llseek(5, 1624, [1624], SEEK_SET) = 0
12015 15:14:10.686964 munmap(0xb7ee4000, 1624) = 0
12015 15:14:10.686987 close(5)          = 0
12015 15:14:10.687017 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.687049 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.687073 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12015 15:14:10.687110 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.687134 _llseek(5, 1233, [1233], SEEK_SET) = 0
12015 15:14:10.687172 munmap(0xb7ee4000, 1233) = 0
12015 15:14:10.687195 close(5)          = 0
12015 15:14:10.687758 getuid32()        = 0
12015 15:14:10.687789 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.687820 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.687844 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12015 15:14:10.687882 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.687907 _llseek(5, 1624, [1624], SEEK_SET) = 0
12015 15:14:10.687944 munmap(0xb7ee4000, 1624) = 0
12015 15:14:10.687967 close(5)          = 0
12015 15:14:10.687997 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.688028 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.688056 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
12015 15:14:10.688093 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.688118 _llseek(5, 1233, [1233], SEEK_SET) = 0
12015 15:14:10.688156 munmap(0xb7ee4000, 1233) = 0
12015 15:14:10.688179 close(5)          = 0
12015 15:14:10.688206 time(NULL)        = 1495653250
12015 15:14:10.688242 munmap(0xb7ee1000, 12164) = 0
12015 15:14:10.688274 munmap(0xb7edf000, 7136) = 0
12015 15:14:10.688308 munmap(0xb7d14000, 95428) = 0
12015 15:14:10.688335 munmap(0xb7cda000, 201052) = 0
12015 15:14:10.688361 munmap(0xb7cc1000, 101180) = 0
12015 15:14:10.688401 gettimeofday({1495653250, 688410}, NULL) = 0
12015 15:14:10.688429 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfb29c94) = -1 ENOENT (No such file or directory)
12015 15:14:10.688469 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
12015 15:14:10.688532 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb29de4) = 0
12015 15:14:10.688570 write(3, "Wed May 24 15:14:10 2017 [pid 12015] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
12015 15:14:10.688640 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfb29dec) = 0
12015 15:14:10.688674 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12015 15:14:10.688708 write(4, "\1", 1 <unfinished ...>
12016 15:14:10.688733 <... read resumed> "\1", 1) = 1
12015 15:14:10.688750 <... write resumed> ) = 1
12016 15:14:10.688770 exit_group(0)     = ?
12015 15:14:10.688850 --- SIGCHLD (Child exited) @ 0 (0) ---
12015 15:14:10.688868 sigreturn()       = ? (mask now [])
12015 15:14:10.688911 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 12016
12015 15:14:10.688941 close(4)          = 0
12015 15:14:10.688969 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
12015 15:14:10.689001 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12015 15:14:10.689033 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12015 15:14:10.689065 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d4a6f8) = 12017
12017 15:14:10.689189 prctl(0x1, 0x9, 0, 0, 0) = 0
12017 15:14:10.689221 close(4)          = 0
12017 15:14:10.689289 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12017 15:14:10.689328 _llseek(4, 0, [0], SEEK_CUR) = 0
12017 15:14:10.689363 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12017 15:14:10.689406 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee4000
12017 15:14:10.689433 _llseek(4, 1624, [1624], SEEK_SET) = 0
12017 15:14:10.689485 munmap(0xb7ee4000, 1624) = 0
12017 15:14:10.689516 close(4)          = 0
12017 15:14:10.689566 getuid32()        = 0
12017 15:14:10.689594 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
12017 15:14:10.689625 _llseek(4, 0, [0], SEEK_CUR) = 0
12017 15:14:10.689650 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12017 15:14:10.689687 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee4000
12017 15:14:10.689712 _llseek(4, 1624, [1624], SEEK_SET) = 0
12017 15:14:10.689748 munmap(0xb7ee4000, 1624) = 0
12017 15:14:10.689772 close(4)          = 0
12017 15:14:10.689833 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
12017 15:14:10.689880 read(4, "65536\n", 31) = 6
12017 15:14:10.689908 close(4)          = 0
12017 15:14:10.689944 socket(PF_FILE, SOCK_STREAM, 0) = 4
12017 15:14:10.689972 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12017 15:14:10.689998 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12017 15:14:10.690048 close(4)          = 0
12017 15:14:10.690074 socket(PF_FILE, SOCK_STREAM, 0) = 4
12017 15:14:10.690097 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12017 15:14:10.690120 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
12017 15:14:10.690161 close(4)          = 0
12017 15:14:10.690216 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
12017 15:14:10.690249 _llseek(4, 0, [0], SEEK_CUR) = 0
12017 15:14:10.690273 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12017 15:14:10.690311 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7ee4000
12017 15:14:10.690336 _llseek(4, 886, [886], SEEK_SET) = 0
12017 15:14:10.690392 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
12017 15:14:10.690431 munmap(0xb7ee4000, 886) = 0
12017 15:14:10.690455 close(4)          = 0
12017 15:14:10.690478 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
12017 15:14:10.690656 geteuid32()       = 0
12017 15:14:10.690688 getegid32()       = 0
12017 15:14:10.690713 setregid32(-1, 1000) = 0
12017 15:14:10.690737 setreuid32(-1, 1000) = 0
12017 15:14:10.690762 chdir("/home/msfadmin") = 0
12017 15:14:10.690789 setreuid32(-1, 0) = 0
12017 15:14:10.690810 setregid32(-1, 0) = 0
12017 15:14:10.690835 setgid32(1000)    = 0
12017 15:14:10.690857 setuid32(1000)    = 0
12017 15:14:10.690881 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
12017 15:14:10.690912 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee2000
12017 15:14:10.690939 mprotect(0xb7ee4000, 4096, PROT_NONE) = 0
12017 15:14:10.690974 mprotect(0xb7ee2000, 4096, PROT_NONE) = 0
12017 15:14:10.691000 getcwd("/home/msfadmin", 4096) = 15
12017 15:14:10.691032 umask(022)        = 077
12017 15:14:10.691054 getcwd("/home/msfadmin", 4096) = 15
12017 15:14:10.691086 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
12017 15:14:10.691138 write(0, "230 Login successful.\r\n", 23) = 23
12017 15:14:10.691306 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
12017 15:14:10.691345 alarm(300)        = 0
12017 15:14:10.691371 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7edf000
12017 15:14:10.691397 mprotect(0xb7ee1000, 4096, PROT_NONE) = 0
12017 15:14:10.691423 mprotect(0xb7edf000, 4096, PROT_NONE) = 0
12017 15:14:10.691453 recv(0, "QUIT\r\n", 4096, MSG_PEEK) = 6
12017 15:14:10.691483 read(0, "QUIT\r\n", 6) = 6
12017 15:14:10.691517 shutdown(0, 0 /* receive */) = 0
12017 15:14:10.691545 fcntl64(0, F_GETFL) = 0x2 (flags O_RDWR)
12017 15:14:10.691569 fcntl64(0, F_SETFL, O_RDWR|O_NONBLOCK) = 0
12017 15:14:10.691615 write(0, "221 Goodbye.\r\n", 14) = 14
12017 15:14:10.691747 fcntl64(0, F_GETFL) = 0x802 (flags O_RDWR|O_NONBLOCK)
12017 15:14:10.691775 fcntl64(0, F_SETFL, O_RDWR) = 0
12017 15:14:10.691799 shutdown(0, 2 /* send and receive */) = 0
12017 15:14:10.691840 exit_group(0)     = ?
12015 15:14:10.691902 --- SIGCHLD (Child exited) @ 0 (0) ---
12015 15:14:10.691933 alarm(1)          = 0
12015 15:14:10.691961 sigreturn()       = ? (mask now [])
12015 15:14:10.692006 close(5)          = 0
12015 15:14:10.692039 getuid32()        = 0
12015 15:14:10.692074 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
12015 15:14:10.692456 _llseek(5, 0, [0], SEEK_CUR) = 0
12015 15:14:10.692637 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
12015 15:14:10.692749 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7ee4000
12015 15:14:10.692816 _llseek(5, 1624, [1624], SEEK_SET) = 0
12015 15:14:10.692884 munmap(0xb7ee4000, 1624) = 0
12015 15:14:10.692928 close(5)          = 0
12015 15:14:10.692959 setgroups32(0, []) = 0
12015 15:14:10.692990 chdir("/usr/share/empty") = 0
12015 15:14:10.693018 chroot(".")       = 0
12015 15:14:10.693073 capset(NULL, NULL) = -1 EFAULT (Bad address)
12015 15:14:10.693102 prctl(0x8, 0, 0xbfb29dc8, 0x80549a6, 0xbfb29db0) = 0
12015 15:14:10.693126 prctl(0x8, 0x1, 0xbfb29dc8, 0x8054a49, 0xbfb29db0) = 0
12015 15:14:10.693149 setgid32(65534)   = 0
12015 15:14:10.693172 setuid32(65534)   = 0
12015 15:14:10.693193 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
12015 15:14:10.693225 read(4, "", 1)    = 0
12015 15:14:10.693250 alarm(0)          = 1
12015 15:14:10.693273 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 12017
12015 15:14:10.693308 exit_group(0)     = ?
4439  15:14:10.693389 <... select resumed> ) = ? ERESTARTNOHAND (To be restarted)
4439  15:14:10.693406 --- SIGCHLD (Child exited) @ 0 (0) ---
4439  15:14:10.693423 write(4, "\21", 1) = 1
4439  15:14:10.693455 sigreturn()       = ? (mask now [])
4439  15:14:10.693535 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [3])
4439  15:14:10.693576 ioctl(3, FIONREAD, [1]) = 0
4439  15:14:10.693606 read(3, "\21", 1) = 1
4439  15:14:10.693636 waitpid(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], WNOHANG) = 12015
4439  15:14:10.693671 close(-1)         = -1 EBADF (Bad file descriptor)
4439  15:14:10.693702 waitpid(-1, 0xbff6282c, WNOHANG) = 0
4439  15:14:10.693727 select(13, [3 5 6 8 9 10 11 12], NULL, NULL, NULL) = 1 (in [5])
4439  15:14:11.226670 accept(5, {sa_family=AF_INET, sin_port=htons(41088), sin_addr=inet_addr("127.0.0.1")}, [16]) = 13
4439  15:14:11.227142 time(NULL)        = 1495653251
4439  15:14:11.227259 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d926f8) = 12018
12018 15:14:11.227655 rt_sigaction(SIGPIPE, {SIG_DFL}, {SIG_IGN}, 8) = 0
12018 15:14:11.227724 rt_sigaction(SIGTSTP, {SIG_DFL}, {SIG_IGN}, 8) = 0
12018 15:14:11.227777 rt_sigaction(SIGTTIN, {SIG_DFL}, {SIG_IGN}, 8) = 0
12018 15:14:11.227851 rt_sigaction(SIGTTOU, {SIG_DFL}, {SIG_IGN}, 8) = 0
12018 15:14:11.227914 rt_sigprocmask(SIG_SETMASK, [], NULL, 8) = 0
12018 15:14:11.227971 close(3)          = 0
12018 15:14:11.228011 close(4)          = 0
12018 15:14:11.228132 open("/dev/null", O_RDONLY) = 3
12018 15:14:11.228222 dup2(3, 0)        = 0
12018 15:14:11.228280 dup2(3, 1)        = 1
12018 15:14:11.228318 dup2(3, 2)        = 2
12018 15:14:11.228356 close(3)          = 0
12018 15:14:11.228406 setgid32(0)       = 0
12018 15:14:11.228468 setgroups32(0, []) = 0
12018 15:14:11.228512 setuid32(0)       = 0
12018 15:14:11.228560 getpriority(PRIO_PROCESS, 0) = 20
12018 15:14:11.228601 setpriority(PRIO_PROCESS, 0, 10) = 0
12018 15:14:11.228642 getpriority(PRIO_PROCESS, 0) = 10
12018 15:14:11.228793 getpeername(13, {sa_family=AF_INET, sin_port=htons(41088), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
12018 15:14:11.228917 getsockname(13, {sa_family=AF_INET, sin_port=htons(21), sin_addr=inet_addr("127.0.0.1")}, [16]) = 0
12018 15:14:11.229198 open("/etc/hosts.allow", O_RDONLY) = 3
12018 15:14:11.229280 fstat64(3, {st_mode=S_IFREG|0644, st_size=588, ...}) = 0
12018 15:14:11.229359 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
12018 15:14:11.229414 read(3, "# /etc/hosts.allow: list of hosts that are allowed to access the system.\n#                   See the manual pages hosts_access(5) and hosts_options(5).\n#\n# Example:    ALL: LOCAL @some_netgroup\n#             ALL: .foobar.edu EXCEPT terminalserver.foobar.edu\n#\n# If you\'re going to protect the portmapper use the name \"portmap\" for the\n# daemon name. Remember that you can only use the keyword \"ALL\" and IP\n# addresses (NOT host or domain names) for the portmapper, as well as for\n# rpc.mountd (the NFS mount daemon). See portmap(8) and rpc.mountd(8)\n# for further information.\n#\n\nALL:ALL\n", 4096) = 588
12018 15:14:11.229899 close(3)          = 0
12018 15:14:11.229976 munmap(0xb7f61000, 4096) = 0
12018 15:14:11.230157 fcntl64(13, F_SETFD, 0) = 0
12018 15:14:11.230228 close(7)          = 0
12018 15:14:11.230294 dup2(13, 0)       = 0
12018 15:14:11.230337 dup2(13, 1)       = 1
12018 15:14:11.230375 dup2(13, 2)       = 2
12018 15:14:11.230416 setrlimit(RLIMIT_NOFILE, {rlim_cur=1024, rlim_max=1024}) = 0
12018 15:14:11.230467 close(13)         = 0
12018 15:14:11.230508 setsid()          = 12018
12018 15:14:11.230553 execve("/usr/sbin/vsftpd", ["vsftpd"], [/* 15 vars */]) = 0
12018 15:14:11.230930 brk(0)            = 0x8064000
12018 15:14:11.231013 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.231139 mmap2(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f78000
12018 15:14:11.231204 access("/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.231268 open("/etc/ld.so.cache", O_RDONLY) = 3
12018 15:14:11.231321 fstat64(3, {st_mode=S_IFREG|0644, st_size=29913, ...}) = 0
12018 15:14:11.231396 mmap2(NULL, 29913, PROT_READ, MAP_PRIVATE, 3, 0) = 0xb7f70000
12018 15:14:11.231440 close(3)          = 0
12018 15:14:11.231497 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.231576 open("/lib/libpam.so.0", O_RDONLY) = 3
12018 15:14:11.231632 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0\320\30\0\0004\0\0\0\f\220\0\0\0\0\0\0004\0 \0\4\0(\0\33\0\32\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0t\214\0\0t\214\0\0\5\0\0\0\0\20\0\0\1\0\0\0t\214\0\0t\234\0\0t\234\0\0\250\2\0\0\254\2\0\0\6\0\0\0\0\20\0\0\2\0\0\0D\215\0\0D\235\0\0D\235\0\0\350\0\0\0\350\0\0\0\6\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0\254\0\0\0X\0\0\0D\0\0\0\0\0\0\0G\0\0\0\7\0\0\0*\0\0\0\v\0\0\0\36\0\0\0\0\0\0\0K\0\0\0L\0\0\0\34\0\0\0\0\0\0\0\0\0\0\0V\0\0\0\0\0\0\0\0\0\0\0\21\0\0\0\33\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0>\0\0\0O\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\2\0\0\0\0\0\0\0\0\0\0\0P\0\0\0R\0\0\0\0\0\0\0A\0\0\0?\0\0\0\0\0\0\0\0\0\0\0;\0\0\0\r\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0006\0\0\0(\0\0\0\0\0\0\0.\0\0\0\16\0\0\0,\0\0\0\0\0\0\0!\0\0\0\30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0<\0\0\0W\0\0\0+\0\0\0M\0\0\0\0\0\0\0\0\0\0\0&\0\0\0\0\0\0\0N\0\0\0\0\0\0\0\0\0\0\0\27\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0001\0\0\0%\0\0\0\35\0\0\0\0\0\0\0/\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0B\0\0\0", 512) = 512
12018 15:14:11.232283 fstat64(3, {st_mode=S_IFREG|0644, st_size=37956, ...}) = 0
12018 15:14:11.232416 mmap2(NULL, 40736, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f66000
12018 15:14:11.232511 mmap2(0xb7f6f000, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8) = 0xb7f6f000
12018 15:14:11.232581 close(3)          = 0
12018 15:14:11.232677 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.232754 open("/lib/tls/i686/cmov/libdl.so.2", O_RDONLY) = 3
12018 15:14:11.232817 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\0p\n\0\0004\0\0\0L!\0\0\0\0\0\0004\0 \0\10\0(\0\35\0\34\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0003\33\0\0003\33\0\0003\33\0\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\374\34\0\0\374\34\0\0\5\0\0\0\0\20\0\0\1\0\0\0\264\36\0\0\264.\0\0\264.\0\0\230\1\0\0\310\1\0\0\6\0\0\0\0\20\0\0\2\0\0\0\320\36\0\0\320.\0\0\320.\0\0\370\0\0\0\370\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\264\36\0\0\264.\0\0\264.\0\0@\1\0\0@\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\26\0\0\0\31\0\0\0\4\0\0\0\7\0\0\0\230\0\21\0\0B\0\0\202\0`\10\223(\10\336\31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\32\0\0\0\0\0\0\0\33\0\0\0\34\0\0\0\0\0\0\0\36\0\0\0\0\0\0\0\0\0\0\0\37\0\0\0!\0\0\0\"\0\0\0\0\0\0\0\0\0\0\0#\0\0\0%\0\0\0&\0\0\0\0\0\0\0(\0\0\0\221!\374\370\225\263_\31\5\350\7\371\6\2\4\371\7\2\4\371\301S\200\30\256\304M\17a\242\222\6\325=l\366\327=l\366\370\31sB\353\26\251\30\373\31sB", 512) = 512
12018 15:14:11.233419 fstat64(3, {st_mode=S_IFREG|0644, st_size=9684, ...}) = 0
12018 15:14:11.233555 mmap2(NULL, 12412, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f62000
12018 15:14:11.233610 mmap2(0xb7f64000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1) = 0xb7f64000
12018 15:14:11.233718 close(3)          = 0
12018 15:14:11.233773 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.233865 open("/lib/tls/i686/cmov/libnsl.so.1", O_RDONLY) = 3
12018 15:14:11.234016 read(3, "\177ELF\1\1\1\0\0\0\0\0\0\0\0\0\3\0\3\0\1\0\0\00001\0\0004\0\0\0\234B\1\0\0\0\0\0004\0 \0\10\0(\0\34\0\33\0\6\0\0\0004\0\0\0004\0\0\0004\0\0\0\0\1\0\0\0\1\0\0\5\0\0\0\4\0\0\0\3\0\0\0\340,\1\0\340,\1\0\340,\1\0\23\0\0\0\23\0\0\0\4\0\0\0\1\0\0\0\1\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\3407\1\0\3407\1\0\5\0\0\0\0\20\0\0\1\0\0\0\300>\1\0\300N\1\0\300N\1\0\350\2\0\0()\0\0\6\0\0\0\0\20\0\0\2\0\0\0\324>\1\0\324N\1\0\324N\1\0\340\0\0\0\340\0\0\0\6\0\0\0\4\0\0\0\4\0\0\0004\1\0\0004\1\0\0004\1\0\0 \0\0\0 \0\0\0\4\0\0\0\4\0\0\0Q\345td\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\6\0\0\0\4\0\0\0R\345td\300>\1\0\300N\1\0\300N\1\0004\1\0\0004\1\0\0\4\0\0\0\1\0\0\0\4\0\0\0\20\0\0\0\1\0\0\0GNU\0\0\0\0\0\2\0\0\0\6\0\0\0\10\0\0\0\374\0\0\0q\0\0\0 \0\0\0\n\0\0\0\1\1$\232 \'Q\0@ \0\0\f\1\1\n\1\n\0\0\240:X\0@\1\16$\10\4\200\n`\260\23 @\24\21\20@\3442\324\4H\346\0\1`\3@\260\272\2019\30\235\340\0\0\332\200\0044\2\201J\20{\203+\200\22 d\21\1\0\2\200\306 d`A\n\4\4\4\v\4PD@\200\20\0\22 \4\340@\1\32 \4\2\20\10\0\0\204\260\200\0\340\23\0\212$\0\206\210\0\2`@q\0\0\0\0\0\0\0\0\0\0\0r\0\0\0\0\0\0\0t\0\0\0\0\0\0\0", 512) = 512
12018 15:14:11.234696 fstat64(3, {st_mode=S_IFREG|0644, st_size=83708, ...}) = 0
12018 15:14:11.234896 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f61000
12018 15:14:11.235036 mmap2(NULL, 96232, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0xb7f49000
12018 15:14:11.235160 mmap2(0xb7f5d000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x13) = 0xb7f5d000
12018 15:14:11.235270 mmap2(0xb7f5f000, 6120, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xb7f5f000
12018 15:14:11.235372 close(3)          = 0
12018 15:14:11.235429 access("/etc/ld.so.nohwcap", F_OK) = -1 ENOENT (No such file or directory)
12018 15:14:11.235494 open("/lib/tls/i686/cmov/libresolv.so.2", O_RDONLY) = 3
