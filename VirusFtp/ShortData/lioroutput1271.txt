11917 15:13:10.430986 open("/etc/selinux/config", O_RDONLY|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11917 15:13:10.431056 statfs64("/selinux", 84, 0xbf9a6c3c) = -1 ENOENT (No such file or directory)
11917 15:13:10.431088 open("/proc/mounts", O_RDONLY|O_LARGEFILE) = 7
11917 15:13:10.431144 fstat64(7, {st_mode=S_IFREG|0444, st_size=0, ...}) = 0
11917 15:13:10.431187 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5b000
11917 15:13:10.431218 read(7, "rootfs / rootfs rw 0 0\nnone /sys sysfs rw,nosuid,nodev,noexec 0 0\nnone /proc proc rw,nosuid,nodev,noexec 0 0\nudev /dev tmpfs rw,relatime 0 0\nfusectl /sys/fs/fuse/connections fusectl rw,relatime 0 0\n/dev/mapper/metasploitable-root / ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\n/dev/mapper/metasploitable-root /dev/.static/dev ext3 rw,relatime,errors=remount-ro,data=ordered 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /dev/shm tmpfs rw,relatime 0 0\ndevpts /dev/pts devpts rw,relatime 0 0\ntmpfs /var/run tmpfs rw,nosuid,nodev,noexec 0 0\ntmpfs /var/lock tmpfs rw,nosuid,nodev,noexec 0 0\n/dev/sda1 /boot ext3 rw,relatime,data=ordered 0 0\nsecurityfs /sys/kernel/security securityfs rw,relatime 0 0\nrpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0\nnfsd /proc/fs/nfsd nfsd rw,relatime 0 0\n", 1024) = 866
11917 15:13:10.431420 read(7, "", 1024) = 0
11917 15:13:10.431447 close(7)          = 0
11917 15:13:10.431473 munmap(0xb7f5b000, 4096) = 0
11917 15:13:10.431534 munmap(0xb7d8a000, 29913) = 0
11917 15:13:10.431572 read(6, "", 4096) = 0
11917 15:13:10.431602 close(6)          = 0
11917 15:13:10.431627 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.431654 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.431704 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.431741 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11917 15:13:10.431793 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.431824 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11917 15:13:10.431928 read(6, "", 4096) = 0
11917 15:13:10.431954 close(6)          = 0
11917 15:13:10.431979 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.432008 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.432058 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.432094 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11917 15:13:10.432135 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.432163 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11917 15:13:10.432265 read(6, "", 4096) = 0
11917 15:13:10.432291 close(6)          = 0
11917 15:13:10.432315 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.432343 read(5, "", 4096) = 0
11917 15:13:10.432369 close(5)          = 0
11917 15:13:10.432391 munmap(0xb7f62000, 4096) = 0
11917 15:13:10.432417 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
11917 15:13:10.432451 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
11917 15:13:10.432518 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f62000
11917 15:13:10.432549 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
11917 15:13:10.432665 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.432714 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.432746 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
11917 15:13:10.432786 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.432815 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
11917 15:13:10.432933 read(6, "", 4096) = 0
11917 15:13:10.432960 close(6)          = 0
11917 15:13:10.432984 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.433013 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.433061 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.433097 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
11917 15:13:10.433138 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.433166 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
11917 15:13:10.433280 read(6, "", 4096) = 0
11917 15:13:10.433309 close(6)          = 0
11917 15:13:10.433332 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.433362 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.433412 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.433464 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
11917 15:13:10.433507 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.433534 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
11917 15:13:10.433831 read(6, "", 4096) = 0
11917 15:13:10.433860 close(6)          = 0
11917 15:13:10.433885 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.433913 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
11917 15:13:10.433920 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
11917 15:13:10.433921 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
11917 15:13:10.433921 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5c000
11917 15:13:10.433921 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
11917 15:13:10.433921 read(6, "", 4096) = 0
11917 15:13:10.433922 close(6)          = 0
11917 15:13:10.433943 munmap(0xb7f5c000, 4096) = 0
11917 15:13:10.433972 read(5, "", 4096) = 0
11917 15:13:10.433997 close(5)          = 0
11917 15:13:10.434022 munmap(0xb7f62000, 4096) = 0
11917 15:13:10.434055 time(NULL)        = 1495653190
11917 15:13:10.434086 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11917 15:13:10.434135 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
11917 15:13:10.434164 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
11917 15:13:10.434206 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f62000
11917 15:13:10.434245 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
11917 15:13:10.434301 read(5, "", 4096) = 0
11917 15:13:10.434327 close(5)          = 0
11917 15:13:10.434352 munmap(0xb7f62000, 4096) = 0
11917 15:13:10.434392 getuid32()        = 0
11917 15:13:10.434434 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.434472 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.434498 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11917 15:13:10.434540 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.434570 _llseek(5, 1624, [1624], SEEK_SET) = 0
11917 15:13:10.434620 munmap(0xb7f62000, 1624) = 0
11917 15:13:10.434647 close(5)          = 0
11917 15:13:10.434706 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.434751 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.434779 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11917 15:13:10.434822 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.434851 _llseek(5, 1233, [1233], SEEK_SET) = 0
11917 15:13:10.435031 munmap(0xb7f62000, 1233) = 0
11917 15:13:10.435063 close(5)          = 0
11917 15:13:10.435111 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.435146 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.435173 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11917 15:13:10.435216 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.435242 _llseek(5, 1624, [1624], SEEK_SET) = 0
11917 15:13:10.435285 munmap(0xb7f62000, 1624) = 0
11917 15:13:10.435310 close(5)          = 0
11917 15:13:10.435341 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.435374 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.435400 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11917 15:13:10.435441 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.435467 _llseek(5, 1233, [1233], SEEK_SET) = 0
11917 15:13:10.435510 munmap(0xb7f62000, 1233) = 0
11917 15:13:10.435536 close(5)          = 0
11917 15:13:10.436043 getuid32()        = 0
11917 15:13:10.436079 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.436112 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.436138 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11917 15:13:10.436181 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.436210 _llseek(5, 1624, [1624], SEEK_SET) = 0
11917 15:13:10.436255 munmap(0xb7f62000, 1624) = 0
11917 15:13:10.436280 close(5)          = 0
11917 15:13:10.436313 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.436347 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.436374 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
11917 15:13:10.436416 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.436445 _llseek(5, 1233, [1233], SEEK_SET) = 0
11917 15:13:10.436490 munmap(0xb7f62000, 1233) = 0
11917 15:13:10.436517 close(5)          = 0
11917 15:13:10.436547 time(NULL)        = 1495653190
11917 15:13:10.436585 munmap(0xb7f5f000, 12164) = 0
11917 15:13:10.436618 munmap(0xb7f5d000, 7136) = 0
11917 15:13:10.436653 munmap(0xb7d92000, 95428) = 0
11917 15:13:10.436684 munmap(0xb7d58000, 201052) = 0
11917 15:13:10.436713 munmap(0xb7d3f000, 101180) = 0
11917 15:13:10.436755 gettimeofday({1495653190, 436765}, NULL) = 0
11917 15:13:10.436784 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbf9a8b14) = -1 ENOENT (No such file or directory)
11917 15:13:10.436821 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
11917 15:13:10.436884 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9a8c64) = 0
11917 15:13:10.436926 write(3, "Wed May 24 15:13:10 2017 [pid 11917] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
11917 15:13:10.437013 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9a8c6c) = 0
11917 15:13:10.437064 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11917 15:13:10.437100 write(4, "\1", 1 <unfinished ...>
11918 15:13:10.437123 <... read resumed> "\1", 1) = 1
11917 15:13:10.437131 <... write resumed> ) = 1
11918 15:13:10.437147 exit_group(0)     = ?
11917 15:13:10.437208 --- SIGCHLD (Child exited) @ 0 (0) ---
11917 15:13:10.437227 sigreturn()       = ? (mask now [])
11917 15:13:10.437256 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 11918
11917 15:13:10.437277 close(4)          = 0
11917 15:13:10.437296 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
11917 15:13:10.437318 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11917 15:13:10.437340 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11917 15:13:10.437361 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7dc86f8) = 11919
11919 15:13:10.437450 prctl(0x1, 0x9, 0, 0, 0) = 0
11919 15:13:10.437471 close(4)          = 0
11919 15:13:10.437515 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11919 15:13:10.437542 _llseek(4, 0, [0], SEEK_CUR) = 0
11919 15:13:10.437567 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11919 15:13:10.437596 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f62000
11919 15:13:10.437616 _llseek(4, 1624, [1624], SEEK_SET) = 0
11919 15:13:10.437652 munmap(0xb7f62000, 1624) = 0
11919 15:13:10.437670 close(4)          = 0
11919 15:13:10.437692 getuid32()        = 0
11919 15:13:10.437707 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
11919 15:13:10.437727 _llseek(4, 0, [0], SEEK_CUR) = 0
11919 15:13:10.437743 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11919 15:13:10.437769 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f62000
11919 15:13:10.437785 _llseek(4, 1624, [1624], SEEK_SET) = 0
11919 15:13:10.437810 munmap(0xb7f62000, 1624) = 0
11919 15:13:10.437825 close(4)          = 0
11919 15:13:10.437867 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
11919 15:13:10.437930 read(4, "65536\n", 31) = 6
11919 15:13:10.437953 close(4)          = 0
11919 15:13:10.437976 socket(PF_FILE, SOCK_STREAM, 0) = 4
11919 15:13:10.437994 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11919 15:13:10.438011 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11919 15:13:10.438046 close(4)          = 0
11919 15:13:10.438064 socket(PF_FILE, SOCK_STREAM, 0) = 4
11919 15:13:10.438080 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
11919 15:13:10.438096 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
11919 15:13:10.438123 close(4)          = 0
11919 15:13:10.438163 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
11919 15:13:10.438185 _llseek(4, 0, [0], SEEK_CUR) = 0
11919 15:13:10.438202 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11919 15:13:10.438227 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7f62000
11919 15:13:10.438245 _llseek(4, 886, [886], SEEK_SET) = 0
11919 15:13:10.438283 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
11919 15:13:10.438309 munmap(0xb7f62000, 886) = 0
11919 15:13:10.438325 close(4)          = 0
11919 15:13:10.438340 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
11919 15:13:10.438366 geteuid32()       = 0
11919 15:13:10.438383 getegid32()       = 0
11919 15:13:10.438400 setregid32(-1, 1000) = 0
11919 15:13:10.438416 setreuid32(-1, 1000) = 0
11919 15:13:10.438432 chdir("/home/msfadmin") = 0
11919 15:13:10.438451 setreuid32(-1, 0) = 0
11919 15:13:10.438465 setregid32(-1, 0) = 0
11919 15:13:10.438481 setgid32(1000)    = 0
11919 15:13:10.438497 setuid32(1000)    = 0
11919 15:13:10.438512 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
11919 15:13:10.438533 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f60000
11919 15:13:10.438551 mprotect(0xb7f62000, 4096, PROT_NONE) = 0
11919 15:13:10.438570 mprotect(0xb7f60000, 4096, PROT_NONE) = 0
11919 15:13:10.438587 getcwd("/home/msfadmin", 4096) = 15
11919 15:13:10.438618 umask(022)        = 077
11919 15:13:10.438634 getcwd("/home/msfadmin", 4096) = 15
11919 15:13:10.438655 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
11919 15:13:10.438691 write(0, "230 Login successful.\r\n", 23) = 23
11919 15:13:10.438855 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11919 15:13:10.438903 alarm(300)        = 0
11919 15:13:10.438929 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7f5d000
11919 15:13:10.438952 mprotect(0xb7f5f000, 4096, PROT_NONE) = 0
11919 15:13:10.438970 mprotect(0xb7f5d000, 4096, PROT_NONE) = 0
11919 15:13:10.438991 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
11919 15:13:10.439011 read(0, "TYPE I\r\n", 8) = 8
11919 15:13:10.439038 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
11919 15:13:10.439103 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11919 15:13:10.439126 alarm(300)        = 300
11919 15:13:10.439144 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
11919 15:13:10.439161 read(0, "PASV\r\n", 6) = 6
11919 15:13:10.439180 write(5, "\n", 1) = 1
11919 15:13:10.439197 read(5,  <unfinished ...>
11917 15:13:10.439218 close(5)          = 0
11917 15:13:10.439237 getuid32()        = 0
11917 15:13:10.439261 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
11917 15:13:10.439284 _llseek(5, 0, [0], SEEK_CUR) = 0
11917 15:13:10.439303 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
11917 15:13:10.439331 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7f62000
11917 15:13:10.439349 _llseek(5, 1624, [1624], SEEK_SET) = 0
11917 15:13:10.439651 munmap(0xb7f62000, 1624) = 0
11917 15:13:10.439848 close(5)          = 0
11917 15:13:10.439961 setgroups32(0, []) = 0
11917 15:13:10.440017 chdir("/usr/share/empty") = 0
11917 15:13:10.440059 chroot(".")       = 0
11917 15:13:10.440092 capset(NULL, NULL) = -1 EFAULT (Bad address)
11917 15:13:10.440121 prctl(0x8, 0, 0xbf9a8c48, 0x80549a6, 0xbf9a8c30) = 0
11917 15:13:10.440140 prctl(0x8, 0x1, 0xbf9a8c48, 0x8054a49, 0xbf9a8c30) = 0
11917 15:13:10.440156 setgid32(65534)   = 0
11917 15:13:10.440171 setuid32(65534)   = 0
11917 15:13:10.440186 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
11917 15:13:10.440207 read(4, "\n", 1)  = 1
11917 15:13:10.440229 write(4, "\1", 1) = 1
11919 15:13:10.440246 <... read resumed> "\1", 1) = 1
11919 15:13:10.440258 write(5, "\f", 1) = 1
11919 15:13:10.440273 read(5,  <unfinished ...>
11917 15:13:10.440285 read(4, "\f", 1)  = 1
11917 15:13:10.440327 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
11917 15:13:10.440349 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
11917 15:13:10.440367 gettimeofday({1495653190, 440373}, NULL) = 0
11917 15:13:10.440393 bind(5, {sa_family=AF_INET, sin_port=htons(6961), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
11917 15:13:10.440418 listen(5, 1)      = 0
11917 15:13:10.440438 write(4, "1\33\0\0", 4) = 4
11919 15:13:10.440456 <... read resumed> "1\33\0\0", 4) = 4
11919 15:13:10.440478 write(0, "227 Entering Passive Mode (127,0,0,1,27,49).\r\n", 46) = 46
11919 15:13:10.440654 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11919 15:13:10.440681 alarm(300)        = 300
11919 15:13:10.440700 recv(0, "STOR myfile39\r\n", 4096, MSG_PEEK) = 15
11919 15:13:10.440719 read(0, "STOR myfile39\r\n", 15) = 15
11919 15:13:10.440742 write(5, "\v", 1) = 1
11919 15:13:10.440759 read(5,  <unfinished ...>
11917 15:13:10.440770 read(4, "\v", 1)  = 1
11917 15:13:10.440787 write(4, "\1\0\0\0", 4) = 4
11919 15:13:10.440804 <... read resumed> "\1\0\0\0", 4) = 4
11919 15:13:10.440817 gettimeofday({1495653190, 440823}, NULL) = 0
11919 15:13:10.440834 getcwd("/home/msfadmin", 4096) = 15
11919 15:13:10.440853 open("myfile39", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
11919 15:13:10.440874 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
11919 15:13:10.440900 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
11919 15:13:10.440917 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
11919 15:13:10.440940 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9a8b94) = 0
11919 15:13:10.440966 ftruncate64(4, 0) = 0
11919 15:13:10.440995 _llseek(4, 0, [0], SEEK_SET) = 0
11919 15:13:10.441012 write(5, "\v", 1) = 1
11919 15:13:10.441028 read(5,  <unfinished ...>
11917 15:13:10.441039 read(4, "\v", 1)  = 1
11917 15:13:10.441056 write(4, "\1\0\0\0", 4) = 4
11919 15:13:10.441073 <... read resumed> "\1\0\0\0", 4) = 4
11919 15:13:10.441084 write(5, "\v", 1) = 1
11919 15:13:10.441099 read(5,  <unfinished ...>
11917 15:13:10.441110 read(4, "\v", 1)  = 1
11917 15:13:10.441126 write(4, "\1\0\0\0", 4) = 4
11919 15:13:10.441142 <... read resumed> "\1\0\0\0", 4) = 4
11919 15:13:10.441154 write(5, "\r", 1) = 1
11919 15:13:10.441169 read(5,  <unfinished ...>
11917 15:13:10.441180 read(4, "\r", 1)  = 1
11917 15:13:10.441199 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
11917 15:13:10.441226 accept(5, {sa_family=AF_INET, sin_port=htons(44340), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
11917 15:13:10.441261 write(4, "\1", 1) = 1
11919 15:13:10.441296 <... read resumed> "\1", 1) = 1
11919 15:13:10.441311 recvmsg(5,  <unfinished ...>
11917 15:13:10.441326 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11919 15:13:10.441354 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
11919 15:13:10.441374 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
11919 15:13:10.441394 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
11919 15:13:10.441412 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
11919 15:13:10.441429 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11919 15:13:10.441450 alarm(300)        = 300
11919 15:13:10.441470 write(0, "150 Ok to send data.\r\n", 22) = 22
11919 15:13:10.441579 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d97000
11919 15:13:10.441602 mprotect(0xb7da9000, 4096, PROT_NONE) = 0
11919 15:13:10.441620 mprotect(0xb7d97000, 4096, PROT_NONE) = 0
11919 15:13:10.441635 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
11919 15:13:10.441656 write(4, "assasaaa\na\na\na\na\n", 17) = 17
11919 15:13:10.441681 read(6, "", 65536) = 0
11919 15:13:10.441697 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
11919 15:13:10.441718 alarm(300)        = 300
11919 15:13:10.441734 close(6)          = 0
11919 15:13:10.441747 alarm(0)          = 300
11919 15:13:10.441762 gettimeofday({1495653190, 441768}, NULL) = 0
11919 15:13:10.441792 getpid()          = 11919
11919 15:13:10.441811 gettimeofday({1495653190, 441817}, NULL) = 0
11919 15:13:10.441838 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9a8b34) = 0
11919 15:13:10.441861 write(3, "Wed May 24 15:13:10 2017 [pid 11919] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile39\", 17 bytes, 16.70Kbyte/sec\n", 131) = 131
11919 15:13:10.441892 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbf9a8b3c) = 0
11919 15:13:10.441914 write(0, "226 Transfer complete.\r\n", 24) = 24
11919 15:13:10.441979 write(5, "\n", 1) = 1
11919 15:13:10.441997 read(5,  <unfinished ...>
11917 15:13:10.442008 close(6)          = 0
11917 15:13:10.442035 read(4, "\n", 1)  = 1
11917 15:13:10.442054 close(5)          = 0
