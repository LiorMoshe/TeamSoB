15632 15:52:00.160659 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.160659 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15632 15:52:00.160659 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.160659 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15632 15:52:00.160659 read(6, "", 4096) = 0
15632 15:52:00.160659 close(6)          = 0
15632 15:52:00.160659 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.160659 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15632 15:52:00.160659 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.160659 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15632 15:52:00.160659 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.166347 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15632 15:52:00.166463 read(6, "", 4096) = 0
15632 15:52:00.166498 close(6)          = 0
15632 15:52:00.166527 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.166559 read(5, "", 4096) = 0
15632 15:52:00.166588 close(5)          = 0
15632 15:52:00.166617 munmap(0xb7eed000, 4096) = 0
15632 15:52:00.166649 open("/etc/pam.d/other", O_RDONLY|O_LARGEFILE) = 5
15632 15:52:00.166685 fstat64(5, {st_mode=S_IFREG|0644, st_size=520, ...}) = 0
15632 15:52:00.166727 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7eed000
15632 15:52:00.166759 read(5, "#\n# /etc/pam.d/other - specify the PAM fallback behaviour\n#\n# Note that this file is used for any unspecified service; for example\n#if /etc/pam.d/cron  specifies no session modules but cron calls\n#pam_open_session, the session module out of /etc/pam.d/other is\n#used.  If you really want nothing to happen then use pam_permit.so or\n#pam_deny.so as appropriate.\n\n# We fall back to the system default in /etc/pam.d/common-*\n# \n\n@include common-auth\n@include common-account\n@include common-password\n@include common-session\n", 4096) = 520
15632 15:52:00.166855 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15632 15:52:00.166901 open("/etc/pam.d/common-auth", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.166936 fstat64(6, {st_mode=S_IFREG|0644, st_size=476, ...}) = 0
15632 15:52:00.166977 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.167009 read(6, "#\n# /etc/pam.d/common-auth - authentication settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authentication modules that define\n# the central authentication scheme for use on the system\n# (e.g., /etc/shadow, LDAP, Kerberos, etc.).  The default is to use the\n# traditional Unix authentication mechanisms.\n#\nauth\trequisite\tpam_unix.so nullok_secure\n# auth\toptional\tpam_smbpass.so migrate\n", 4096) = 476
15632 15:52:00.167107 read(6, "", 4096) = 0
15632 15:52:00.167138 close(6)          = 0
15632 15:52:00.167166 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.167198 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15632 15:52:00.167244 open("/etc/pam.d/common-account", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.167280 fstat64(6, {st_mode=S_IFREG|0644, st_size=392, ...}) = 0
15632 15:52:00.167322 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.167353 read(6, "#\n# /etc/pam.d/common-account - authorization settings common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of the authorization modules that define\n# the central access policy for use on the system.  The default is to\n# only deny service to users whose accounts are expired in /etc/shadow.\n#\naccount\trequired\tpam_unix.so\n", 4096) = 392
15632 15:52:00.167466 read(6, "", 4096) = 0
15632 15:52:00.167500 close(6)          = 0
15632 15:52:00.167529 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.167562 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15632 15:52:00.167609 open("/etc/pam.d/common-password", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.167645 fstat64(6, {st_mode=S_IFREG|0644, st_size=1563, ...}) = 0
15632 15:52:00.167686 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.167717 read(6, "#\n# /etc/pam.d/common-password - password-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define the services to be\n# used to change user passwords.  The default is pam_unix.\n\n# Explanation of pam_unix options:\n#\n# The \"nullok\" option allows users to change an empty password, else\n# empty passwords are treated as locked accounts.\n#\n# The \"md5\" option enables MD5 passwords.  Without this option, the\n# default is Unix crypt.\n#\n# The \"obscure\" option replaces the old `OBSCURE_CHECKS_ENAB\' option in\n# login.defs.\n#\n# You can also use the \"min\" option to enforce the length of the new\n# password.\n#\n# See the pam_unix manpage for other options.\n\npassword   requisite   pam_unix.so nullok obscure md5\n\n# Alternate strength checking for password. Note that this\n# requires the libpam-cracklib package to be installed.\n# You will need to comment out the password line above and\n# uncomment the next two in order to use this.\n# (Replaces the `OBSCURE_CHECKS_ENAB\', `CRACKLIB_DICTPATH\')\n#\n# password required\t  pam_cracklib.so retry=3 minlen=6 difok=3\n# password required\t  pam_unix.so use_authtok nullok md5\n\n# minimally-intrusive inclusion of smbpass in the stack for\n# synchronization.  If the module is absent or the passwords don\'t\n# match, this module will be ignored without prompting; and if the \n# passwords do match, the NTLM hash for the user will be updated\n# automatically.\n# password   optional   pam_smbpass.so nullok use_authtok use_first_pass\n", 4096) = 1563
15632 15:52:00.167942 read(6, "", 4096) = 0
15632 15:52:00.167973 close(6)          = 0
15632 15:52:00.168002 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.168033 stat64("/etc/pam.d", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0
15632 15:52:00.168103 open("/etc/pam.d/common-session", O_RDONLY|O_LARGEFILE) = 6
15632 15:52:00.168140 fstat64(6, {st_mode=S_IFREG|0644, st_size=372, ...}) = 0
15632 15:52:00.168181 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee7000
15632 15:52:00.168212 read(6, "#\n# /etc/pam.d/common-session - session-related modules common to all services\n#\n# This file is included from other service-specific PAM config files,\n# and should contain a list of modules that define tasks to be performed\n# at the start and end of sessions of *any* kind (both interactive and\n# non-interactive).  The default is pam_unix.\n#\nsession\trequired\tpam_unix.so\n", 4096) = 372
15632 15:52:00.168295 read(6, "", 4096) = 0
15632 15:52:00.168326 close(6)          = 0
15632 15:52:00.168355 munmap(0xb7ee7000, 4096) = 0
15632 15:52:00.168386 read(5, "", 4096) = 0
15632 15:52:00.168445 close(5)          = 0
15632 15:52:00.168474 munmap(0xb7eed000, 4096) = 0
15632 15:52:00.168511 time(NULL)        = 1495655520
15632 15:52:00.168543 lstat64("/etc/ftpusers", {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15632 15:52:00.168590 open("/etc/ftpusers", O_RDONLY|O_LARGEFILE) = 5
15632 15:52:00.168625 fstat64(5, {st_mode=S_IFREG|0644, st_size=132, ...}) = 0
15632 15:52:00.168666 mmap2(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7eed000
15632 15:52:00.168704 read(5, "# /etc/ftpusers: list of users disallowed FTP access. See ftpusers(5).\n\nroot\ndaemon\nbin\nsys\nsync\ngames\nman\nlp\nmail\nnews\nuucp\nnobody\n", 4096) = 132
15632 15:52:00.168756 read(5, "", 4096) = 0
15632 15:52:00.168785 close(5)          = 0
15632 15:52:00.168814 munmap(0xb7eed000, 4096) = 0
15632 15:52:00.168854 getuid32()        = 0
15632 15:52:00.168897 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.168937 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.168969 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15632 15:52:00.169011 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.169043 _llseek(5, 1624, [1624], SEEK_SET) = 0
15632 15:52:00.169091 munmap(0xb7eed000, 1624) = 0
15632 15:52:00.169123 close(5)          = 0
15632 15:52:00.169180 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.169226 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.169257 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15632 15:52:00.169299 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.169330 _llseek(5, 1233, [1233], SEEK_SET) = 0
15632 15:52:00.169423 munmap(0xb7eed000, 1233) = 0
15632 15:52:00.169461 close(5)          = 0
15632 15:52:00.169511 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.169548 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.169579 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15632 15:52:00.169621 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.169653 _llseek(5, 1624, [1624], SEEK_SET) = 0
15632 15:52:00.169694 munmap(0xb7eed000, 1624) = 0
15632 15:52:00.169724 close(5)          = 0
15632 15:52:00.169760 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.169795 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.169826 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15632 15:52:00.169867 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.169898 _llseek(5, 1233, [1233], SEEK_SET) = 0
15632 15:52:00.169940 munmap(0xb7eed000, 1233) = 0
15632 15:52:00.169969 close(5)          = 0
15632 15:52:00.170428 getuid32()        = 0
15632 15:52:00.170465 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.170502 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.170533 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15632 15:52:00.170574 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.170606 _llseek(5, 1624, [1624], SEEK_SET) = 0
15632 15:52:00.170647 munmap(0xb7eed000, 1624) = 0
15632 15:52:00.170659 close(5)          = 0
15632 15:52:00.170659 open("/etc/shadow", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.170659 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.170659 fstat64(5, {st_mode=S_IFREG|0640, st_size=1233, ...}) = 0
15632 15:52:00.170659 mmap2(NULL, 1233, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.170659 _llseek(5, 1233, [1233], SEEK_SET) = 0
15632 15:52:00.170659 munmap(0xb7eed000, 1233) = 0
15632 15:52:00.170659 close(5)          = 0
15632 15:52:00.170659 time(NULL)        = 1495655520
15632 15:52:00.170659 munmap(0xb7eea000, 12164) = 0
15632 15:52:00.170659 munmap(0xb7ee8000, 7136) = 0
15632 15:52:00.170659 munmap(0xb7d1d000, 95428) = 0
15632 15:52:00.170659 munmap(0xb7ce3000, 201052) = 0
15632 15:52:00.170659 munmap(0xb7cca000, 101180) = 0
15632 15:52:00.170659 gettimeofday({1495655520, 170659}, NULL) = 0
15632 15:52:00.170659 stat64("/usr/share/zoneinfo/UTC+04:00", 0xbfc8adf4) = -1 ENOENT (No such file or directory)
15632 15:52:00.170659 open("/usr/share/zoneinfo/UTC+04:00", O_RDONLY) = -1 ENOENT (No such file or directory)
15632 15:52:00.170659 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc8af44) = 0
15632 15:52:00.170659 write(3, "Wed May 24 15:52:00 2017 [pid 15632] [msfadmin] OK LOGIN: Client \"127.0.0.1\"\n", 77) = 77
15632 15:52:00.170659 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc8af4c) = 0
15632 15:52:00.170659 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15632 15:52:00.170659 write(4, "\1", 1 <unfinished ...>
15633 15:52:00.170659 <... read resumed> "\1", 1) = 1
15632 15:52:00.170659 <... write resumed> ) = 1
15633 15:52:00.170659 exit_group(0)     = ?
15632 15:52:00.170659 --- SIGCHLD (Child exited) @ 0 (0) ---
15632 15:52:00.170659 sigreturn()       = ? (mask now [])
15632 15:52:00.170659 wait4(-1, [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 15633
15632 15:52:00.170659 close(4)          = 0
15632 15:52:00.170659 socketpair(PF_FILE, SOCK_STREAM, 0, [4, 5]) = 0
15632 15:52:00.170659 rt_sigaction(SIGCHLD, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15632 15:52:00.170659 rt_sigaction(SIGALRM, {0x805cb10, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15632 15:52:00.170659 clone(child_stack=0, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0xb7d536f8) = 15634
15634 15:52:00.170659 prctl(0x1, 0x9, 0, 0, 0) = 0
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15634 15:52:00.170659 _llseek(4, 0, [0], SEEK_CUR) = 0
15634 15:52:00.170659 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15634 15:52:00.170659 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7eed000
15634 15:52:00.170659 _llseek(4, 1624, [1624], SEEK_SET) = 0
15634 15:52:00.170659 munmap(0xb7eed000, 1624) = 0
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 getuid32()        = 0
15634 15:52:00.170659 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 4
15634 15:52:00.170659 _llseek(4, 0, [0], SEEK_CUR) = 0
15634 15:52:00.170659 fstat64(4, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15634 15:52:00.170659 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 4, 0) = 0xb7eed000
15634 15:52:00.170659 _llseek(4, 1624, [1624], SEEK_SET) = 0
15634 15:52:00.170659 munmap(0xb7eed000, 1624) = 0
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 open("/proc/sys/kernel/ngroups_max", O_RDONLY) = 4
15634 15:52:00.170659 read(4, "65536\n", 31) = 6
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 socket(PF_FILE, SOCK_STREAM, 0) = 4
15634 15:52:00.170659 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15634 15:52:00.170659 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 socket(PF_FILE, SOCK_STREAM, 0) = 4
15634 15:52:00.170659 fcntl64(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
15634 15:52:00.170659 connect(4, {sa_family=AF_FILE, path="/var/run/nscd/socket"}, 110) = -1 ENOENT (No such file or directory)
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 open("/etc/group", O_RDONLY|0x80000 /* O_??? */) = 4
15634 15:52:00.170659 _llseek(4, 0, [0], SEEK_CUR) = 0
15634 15:52:00.170659 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15634 15:52:00.170659 mmap2(NULL, 886, PROT_READ, MAP_SHARED, 4, 0) = 0xb7eed000
15634 15:52:00.170659 _llseek(4, 886, [886], SEEK_SET) = 0
15634 15:52:00.170659 fstat64(4, {st_mode=S_IFREG|0644, st_size=886, ...}) = 0
15634 15:52:00.170659 munmap(0xb7eed000, 886) = 0
15634 15:52:00.170659 close(4)          = 0
15634 15:52:00.170659 setgroups32(13, [1000, 4, 20, 24, 25, 29, 30, 44, 46, 107, 111, 112, 119]) = 0
15634 15:52:00.170659 geteuid32()       = 0
15634 15:52:00.170659 getegid32()       = 0
15634 15:52:00.170659 setregid32(-1, 1000) = 0
15634 15:52:00.170659 setreuid32(-1, 1000) = 0
15634 15:52:00.170659 chdir("/home/msfadmin") = 0
15634 15:52:00.170659 setreuid32(-1, 0) = 0
15634 15:52:00.170659 setregid32(-1, 0) = 0
15634 15:52:00.170659 setgid32(1000)    = 0
15634 15:52:00.170659 setuid32(1000)    = 0
15634 15:52:00.170659 setrlimit(RLIMIT_NPROC, {rlim_cur=0, rlim_max=0}) = 0
15634 15:52:00.170659 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7eeb000
15634 15:52:00.170659 mprotect(0xb7eed000, 4096, PROT_NONE) = 0
15634 15:52:00.170659 mprotect(0xb7eeb000, 4096, PROT_NONE) = 0
15634 15:52:00.170659 getcwd("/home/msfadmin", 4096) = 15
15634 15:52:00.170659 umask(022)        = 077
15634 15:52:00.170659 getcwd("/home/msfadmin", 4096) = 15
15634 15:52:00.170659 open(".message", O_RDONLY|O_NONBLOCK|O_LARGEFILE) = -1 ENOENT (No such file or directory)
15634 15:52:00.170659 write(0, "230 Login successful.\r\n", 23) = 23
15634 15:52:00.170659 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.170659 alarm(300)        = 0
15634 15:52:00.170659 mmap2(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7ee8000
15634 15:52:00.170659 mprotect(0xb7eea000, 4096, PROT_NONE) = 0
15634 15:52:00.170659 mprotect(0xb7ee8000, 4096, PROT_NONE) = 0
15634 15:52:00.170659 recv(0, "TYPE I\r\n", 4096, MSG_PEEK) = 8
15634 15:52:00.170659 read(0, "TYPE I\r\n", 8) = 8
15634 15:52:00.170659 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15634 15:52:00.170659 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.170659 alarm(300)        = 300
15634 15:52:00.170659 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15634 15:52:00.170659 read(0, "PASV\r\n", 6) = 6
15634 15:52:00.170659 write(5, "\n", 1) = 1
15634 15:52:00.170659 read(5,  <unfinished ...>
15632 15:52:00.170659 close(5)          = 0
15632 15:52:00.170659 getuid32()        = 0
15632 15:52:00.170659 open("/etc/passwd", O_RDONLY|0x80000 /* O_??? */) = 5
15632 15:52:00.170659 _llseek(5, 0, [0], SEEK_CUR) = 0
15632 15:52:00.170659 fstat64(5, {st_mode=S_IFREG|0644, st_size=1624, ...}) = 0
15632 15:52:00.170659 mmap2(NULL, 1624, PROT_READ, MAP_SHARED, 5, 0) = 0xb7eed000
15632 15:52:00.170659 _llseek(5, 1624, [1624], SEEK_SET) = 0
15632 15:52:00.170659 munmap(0xb7eed000, 1624) = 0
15632 15:52:00.170659 close(5)          = 0
15632 15:52:00.170659 setgroups32(0, []) = 0
15632 15:52:00.170659 chdir("/usr/share/empty") = 0
15632 15:52:00.170659 chroot(".")       = 0
15632 15:52:00.170659 capset(NULL, NULL) = -1 EFAULT (Bad address)
15632 15:52:00.170659 prctl(0x8, 0, 0xbfc8af28, 0x80549a6, 0xbfc8af10) = 0
15632 15:52:00.170659 prctl(0x8, 0x1, 0xbfc8af28, 0x8054a49, 0xbfc8af10) = 0
15632 15:52:00.170659 setgid32(65534)   = 0
15632 15:52:00.170659 setuid32(65534)   = 0
15632 15:52:00.170659 capset(0x19980330, 0, {CAP_NET_BIND_SERVICE, CAP_NET_BIND_SERVICE, 0}) = 0
15632 15:52:00.170659 read(4, "\n", 1)  = 1
15632 15:52:00.170659 write(4, "\1", 1) = 1
15634 15:52:00.170659 <... read resumed> "\1", 1) = 1
15634 15:52:00.170659 write(5, "\f", 1) = 1
15634 15:52:00.170659 read(5,  <unfinished ...>
15632 15:52:00.170659 read(4, "\f", 1)  = 1
15632 15:52:00.170659 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15632 15:52:00.170659 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15632 15:52:00.170659 gettimeofday({1495655520, 170659}, NULL) = 0
15632 15:52:00.170659 bind(5, {sa_family=AF_INET, sin_port=htons(35137), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15632 15:52:00.170659 listen(5, 1)      = 0
15632 15:52:00.176347 write(4, "A\211\0\0", 4) = 4
15634 15:52:00.176390 <... read resumed> "A\211\0\0", 4) = 4
15634 15:52:00.176430 write(0, "227 Entering Passive Mode (127,0,0,1,137,65).\r\n", 47) = 47
15634 15:52:00.176714 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.176758 alarm(300)        = 300
15634 15:52:00.176814 recv(0, "STOR myfile6\r\n", 4096, MSG_PEEK) = 14
15634 15:52:00.176849 read(0, "STOR myfile6\r\n", 14) = 14
15634 15:52:00.176889 write(5, "\v", 1) = 1
15634 15:52:00.176921 read(5,  <unfinished ...>
15632 15:52:00.176946 read(4, "\v", 1)  = 1
15632 15:52:00.176979 write(4, "\1\0\0\0", 4) = 4
15634 15:52:00.177011 <... read resumed> "\1\0\0\0", 4) = 4
15634 15:52:00.177039 gettimeofday({1495655520, 177058}, NULL) = 0
15634 15:52:00.177083 getcwd("/home/msfadmin", 4096) = 15
15634 15:52:00.177118 open("myfile6", O_WRONLY|O_CREAT|O_NONBLOCK|O_LARGEFILE, 0666) = 4
15634 15:52:00.177154 fstat64(4, {st_mode=S_IFREG|0644, st_size=17, ...}) = 0
15634 15:52:00.177225 fcntl64(4, F_GETFL) = 0x8801 (flags O_WRONLY|O_NONBLOCK|O_LARGEFILE)
15634 15:52:00.177260 fcntl64(4, F_SETFL, O_WRONLY|O_LARGEFILE) = 0
15634 15:52:00.177298 fcntl64(4, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc8ae74) = 0
15634 15:52:00.177339 ftruncate64(4, 0) = 0
15634 15:52:00.177387 _llseek(4, 0, [0], SEEK_SET) = 0
15634 15:52:00.177420 write(5, "\v", 1) = 1
15634 15:52:00.177452 read(5,  <unfinished ...>
15632 15:52:00.177478 read(4, "\v", 1)  = 1
15632 15:52:00.177510 write(4, "\1\0\0\0", 4) = 4
15634 15:52:00.177541 <... read resumed> "\1\0\0\0", 4) = 4
15634 15:52:00.177567 write(5, "\v", 1) = 1
15634 15:52:00.177597 read(5,  <unfinished ...>
15632 15:52:00.177621 read(4, "\v", 1)  = 1
15632 15:52:00.177652 write(4, "\1\0\0\0", 4) = 4
15634 15:52:00.177683 <... read resumed> "\1\0\0\0", 4) = 4
15634 15:52:00.177708 write(5, "\r", 1) = 1
15634 15:52:00.177738 read(5,  <unfinished ...>
15632 15:52:00.177762 read(4, "\r", 1)  = 1
15632 15:52:00.177797 select(6, [5], NULL, NULL, {60, 0}) = 1 (in [5], left {60, 0})
15632 15:52:00.177841 accept(5, {sa_family=AF_INET, sin_port=htons(57154), sin_addr=inet_addr("127.0.0.1")}, [16]) = 6
15632 15:52:00.177894 write(4, "\1", 1) = 1
15634 15:52:00.177925 <... read resumed> "\1", 1) = 1
15634 15:52:00.177955 recvmsg(5,  <unfinished ...>
15632 15:52:00.177984 sendmsg(4, {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15634 15:52:00.178028 <... recvmsg resumed> {msg_name(0)=NULL, msg_iov(1)=[{"\0", 1}], msg_controllen=16, {cmsg_len=16, cmsg_level=SOL_SOCKET, cmsg_type=SCM_RIGHTS, {6}}, msg_flags=0}, 0) = 1
15634 15:52:00.178064 setsockopt(6, SOL_SOCKET, SO_KEEPALIVE, [1], 4) = 0
15634 15:52:00.178126 setsockopt(6, SOL_IP, IP_TOS, [8], 4) = 0
15634 15:52:00.178183 setsockopt(6, SOL_SOCKET, SO_LINGER, {onoff=1, linger=32767}, 8) = 0
15634 15:52:00.178217 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.178254 alarm(300)        = 300
15634 15:52:00.178313 write(0, "150 Ok to send data.\r\n", 22) = 22
15634 15:52:00.178496 mmap2(NULL, 77824, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xb7d22000
15634 15:52:00.178535 mprotect(0xb7d34000, 4096, PROT_NONE) = 0
15634 15:52:00.178568 mprotect(0xb7d22000, 4096, PROT_NONE) = 0
15634 15:52:00.178599 read(6, "assasaaa\na\na\na\na\n", 65536) = 17
15634 15:52:00.178636 write(4, "assasaaa\na\na\na\na\n", 17) = 17
15634 15:52:00.178676 read(6, "", 65536) = 0
15634 15:52:00.178707 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.178744 alarm(300)        = 300
15634 15:52:00.178799 close(6)          = 0
15634 15:52:00.178827 alarm(0)          = 300
15634 15:52:00.178869 gettimeofday({1495655520, 178887}, NULL) = 0
15634 15:52:00.178926 getpid()          = 15634
15634 15:52:00.178960 gettimeofday({1495655520, 178980}, NULL) = 0
15634 15:52:00.179016 fcntl64(3, F_SETLKW64, {type=F_WRLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc8ae14) = 0
15634 15:52:00.179055 write(3, "Wed May 24 15:52:00 2017 [pid 15634] [msfadmin] OK UPLOAD: Client \"127.0.0.1\", \"/home/msfadmin/myfile6\", 17 bytes, 8.64Kbyte/sec\n", 129) = 129
15634 15:52:00.179109 fcntl64(3, F_SETLK64, {type=F_UNLCK, whence=SEEK_SET, start=0, len=0}, 0xbfc8ae1c) = 0
15634 15:52:00.179157 write(0, "226 Transfer complete.\r\n", 24) = 24
15634 15:52:00.179271 write(5, "\n", 1) = 1
15634 15:52:00.179306 read(5,  <unfinished ...>
15632 15:52:00.179332 close(6)          = 0
15632 15:52:00.179402 read(4, "\n", 1)  = 1
15632 15:52:00.179435 close(5)          = 0
15632 15:52:00.179467 write(4, "\1", 1) = 1
15634 15:52:00.179498 <... read resumed> "\1", 1) = 1
15634 15:52:00.179524 close(4)          = 0
15634 15:52:00.179555 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.179592 alarm(300)        = 0
15634 15:52:00.179648 recv(0,  <unfinished ...>
15632 15:52:00.179674 read(4,  <unfinished ...>
15634 15:52:00.707453 <... recv resumed> "TYPE I\r\n", 4096, MSG_PEEK) = 8
15634 15:52:00.707734 read(0, "TYPE I\r\n", 8) = 8
15634 15:52:00.708021 write(0, "200 Switching to Binary mode.\r\n", 31) = 31
15634 15:52:00.708386 rt_sigaction(SIGALRM, {0x805cad0, ~[RTMIN RT_1], 0}, NULL, 8) = 0
15634 15:52:00.708521 alarm(300)        = 299
15634 15:52:00.708660 recv(0, "PASV\r\n", 4096, MSG_PEEK) = 6
15634 15:52:00.708741 read(0, "PASV\r\n", 6) = 6
15634 15:52:00.708824 write(5, "\n", 1) = 1
15634 15:52:00.708903 read(5,  <unfinished ...>
15632 15:52:00.709017 <... read resumed> "\n", 1) = 1
15632 15:52:00.709094 write(4, "\1", 1) = 1
15634 15:52:00.709171 <... read resumed> "\1", 1) = 1
15634 15:52:00.709231 write(5, "\f", 1) = 1
15634 15:52:00.709304 read(5,  <unfinished ...>
15632 15:52:00.709363 read(4, "\f", 1)  = 1
15632 15:52:00.709552 socket(PF_INET, SOCK_STREAM, IPPROTO_TCP) = 5
15632 15:52:00.709668 setsockopt(5, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
15632 15:52:00.709757 bind(5, {sa_family=AF_INET, sin_port=htons(65343), sin_addr=inet_addr("127.0.0.1")}, 16) = 0
15632 15:52:00.709852 listen(5, 1)      = 0
15632 15:52:00.709982 write(4, "?\377\0\0", 4) = 4
15634 15:52:00.710071 <... read resumed> "?\377\0\0", 4) = 4
